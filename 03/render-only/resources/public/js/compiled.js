if(typeof Math.imul == "undefined" || (Math.imul(0xffffffff,5) == 0)) {
    Math.imul = function (a, b) {
        var ah  = (a >>> 16) & 0xffff;
        var al = a & 0xffff;
        var bh  = (b >>> 16) & 0xffff;
        var bl = b & 0xffff;
        // the shift by 0 fixes the sign on the high part
        // the final |0 converts the unsigned value into a signed value
        return ((al * bl) + (((ah * bl + al * bh) << 16) >>> 0)|0);
    }
}


var CLOSURE_NO_DEPS = true;
var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.global.CLOSURE_UNCOMPILED_DEFINES;
goog.global.CLOSURE_DEFINES;
goog.isDef = function(val) {
  return val !== void 0;
};
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if (!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0]);
  }
  for (var part;parts.length && (part = parts.shift());) {
    if (!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object;
    } else {
      if (cur[part]) {
        cur = cur[part];
      } else {
        cur = cur[part] = {};
      }
    }
  }
};
goog.define = function(name, defaultValue) {
  var value = defaultValue;
  if (!COMPILED) {
    if (goog.global.CLOSURE_UNCOMPILED_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_UNCOMPILED_DEFINES, name)) {
      value = goog.global.CLOSURE_UNCOMPILED_DEFINES[name];
    } else {
      if (goog.global.CLOSURE_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_DEFINES, name)) {
        value = goog.global.CLOSURE_DEFINES[name];
      }
    }
  }
  goog.exportPath_(name, value);
};
goog.DEBUG = true;
goog.define("goog.LOCALE", "en");
goog.define("goog.TRUSTED_SITE", true);
goog.define("goog.STRICT_MODE_COMPATIBLE", false);
goog.provide = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];
    var namespace = name;
    while (namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      if (goog.getObjectByName(namespace)) {
        break;
      }
      goog.implicitNamespaces_[namespace] = true;
    }
  }
  goog.exportPath_(name);
};
goog.setTestOnly = function(opt_message) {
  if (COMPILED && !goog.DEBUG) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + (opt_message ? ": " + opt_message : "."));
  }
};
goog.forwardDeclare = function(name) {
};
if (!COMPILED) {
  goog.isProvided_ = function(name) {
    return!goog.implicitNamespaces_[name] && goog.isDefAndNotNull(goog.getObjectByName(name));
  };
  goog.implicitNamespaces_ = {};
}
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for (var part;part = parts.shift();) {
    if (goog.isDefAndNotNull(cur[part])) {
      cur = cur[part];
    } else {
      return null;
    }
  }
  return cur;
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for (var x in obj) {
    global[x] = obj[x];
  }
};
goog.addDependency = function(relPath, provides, requires) {
  if (goog.DEPENDENCIES_ENABLED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    for (var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      if (!(path in deps.pathToNames)) {
        deps.pathToNames[path] = {};
      }
      deps.pathToNames[path][provide] = true;
    }
    for (var j = 0;require = requires[j];j++) {
      if (!(path in deps.requires)) {
        deps.requires[path] = {};
      }
      deps.requires[path][require] = true;
    }
  }
};
goog.define("goog.ENABLE_DEBUG_LOADER", true);
goog.require = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      return;
    }
    if (goog.ENABLE_DEBUG_LOADER) {
      var path = goog.getPathFromDeps_(name);
      if (path) {
        goog.included_[path] = true;
        goog.writeScripts_();
        return;
      }
    }
    var errorMessage = "goog.require could not find: " + name;
    if (goog.global.console) {
      goog.global.console["error"](errorMessage);
    }
    throw Error(errorMessage);
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.identityFunction = function(opt_returnValue, var_args) {
  return opt_returnValue;
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    if (ctor.instance_) {
      return ctor.instance_;
    }
    if (goog.DEBUG) {
      goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor;
    }
    return ctor.instance_ = new ctor;
  };
};
goog.instantiatedSingletons_ = [];
goog.DEPENDENCIES_ENABLED = !COMPILED && goog.ENABLE_DEBUG_LOADER;
if (goog.DEPENDENCIES_ENABLED) {
  goog.included_ = {};
  goog.dependencies_ = {pathToNames:{}, nameToPath:{}, requires:{}, visited:{}, written:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return typeof doc != "undefined" && "write" in doc;
  };
  goog.findBasePath_ = function() {
    if (goog.global.CLOSURE_BASE_PATH) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return;
    } else {
      if (!goog.inHtmlDocument_()) {
        return;
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("script");
    for (var i = scripts.length - 1;i >= 0;--i) {
      var src = scripts[i].src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if (src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return;
      }
    }
  };
  goog.importScript_ = function(src) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if (!goog.dependencies_.written[src] && importScript(src)) {
      goog.dependencies_.written[src] = true;
    }
  };
  goog.writeScriptTag_ = function(src) {
    if (goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      if (doc.readyState == "complete") {
        var isDeps = /\bdeps.js$/.test(src);
        if (isDeps) {
          return false;
        } else {
          throw Error('Cannot write "' + src + '" after document load');
        }
      }
      doc.write('\x3cscript type\x3d"text/javascript" src\x3d"' + src + '"\x3e\x3c/' + "script\x3e");
      return true;
    } else {
      return false;
    }
  };
  goog.writeScripts_ = function() {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if (path in deps.written) {
        return;
      }
      if (path in deps.visited) {
        if (!(path in seenScript)) {
          seenScript[path] = true;
          scripts.push(path);
        }
        return;
      }
      deps.visited[path] = true;
      if (path in deps.requires) {
        for (var requireName in deps.requires[path]) {
          if (!goog.isProvided_(requireName)) {
            if (requireName in deps.nameToPath) {
              visitNode(deps.nameToPath[requireName]);
            } else {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if (!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path);
      }
    }
    for (var path in goog.included_) {
      if (!deps.written[path]) {
        visitNode(path);
      }
    }
    for (var i = 0;i < scripts.length;i++) {
      if (scripts[i]) {
        goog.importScript_(goog.basePath + scripts[i]);
      } else {
        throw Error("Undefined script input");
      }
    }
  };
  goog.getPathFromDeps_ = function(rule) {
    if (rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule];
    } else {
      return null;
    }
  };
  goog.findBasePath_();
  if (!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js");
  }
}
goog.typeOf = function(value) {
  var s = typeof value;
  if (s == "object") {
    if (value) {
      if (value instanceof Array) {
        return "array";
      } else {
        if (value instanceof Object) {
          return s;
        }
      }
      var className = Object.prototype.toString.call((value));
      if (className == "[object Window]") {
        return "object";
      }
      if (className == "[object Array]" || typeof value.length == "number" && typeof value.splice != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")) {
        return "array";
      }
      if (className == "[object Function]" || typeof value.call != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call")) {
        return "function";
      }
    } else {
      return "null";
    }
  } else {
    if (s == "function" && typeof value.call == "undefined") {
      return "object";
    }
  }
  return s;
};
goog.isNull = function(val) {
  return val === null;
};
goog.isDefAndNotNull = function(val) {
  return val != null;
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array";
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number";
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function";
};
goog.isString = function(val) {
  return typeof val == "string";
};
goog.isBoolean = function(val) {
  return typeof val == "boolean";
};
goog.isNumber = function(val) {
  return typeof val == "number";
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function";
};
goog.isObject = function(val) {
  var type = typeof val;
  return type == "object" && val != null || type == "function";
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_);
};
goog.hasUid = function(obj) {
  return!!obj[goog.UID_PROPERTY_];
};
goog.removeUid = function(obj) {
  if ("removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_);
  }
  try {
    delete obj[goog.UID_PROPERTY_];
  } catch (ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + (Math.random() * 1E9 >>> 0);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.cloneObject(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.bindNative_ = function(fn, selfObj, var_args) {
  return(fn.call.apply(fn.bind, arguments));
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if (!fn) {
    throw new Error;
  }
  if (arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs);
    };
  } else {
    return function() {
      return fn.apply(selfObj, arguments);
    };
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if (Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_;
  } else {
    goog.bind = goog.bindJs_;
  }
  return goog.bind.apply(null, arguments);
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = args.slice();
    newArgs.push.apply(newArgs, arguments);
    return fn.apply(this, newArgs);
  };
};
goog.mixin = function(target, source) {
  for (var x in source) {
    target[x] = source[x];
  }
};
goog.now = goog.TRUSTED_SITE && Date.now || function() {
  return+new Date;
};
goog.globalEval = function(script) {
  if (goog.global.execScript) {
    goog.global.execScript(script, "JavaScript");
  } else {
    if (goog.global.eval) {
      if (goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _et_ \x3d 1;");
        if (typeof goog.global["_et_"] != "undefined") {
          delete goog.global["_et_"];
          goog.evalWorksForGlobals_ = true;
        } else {
          goog.evalWorksForGlobals_ = false;
        }
      }
      if (goog.evalWorksForGlobals_) {
        goog.global.eval(script);
      } else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("script");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt);
      }
    } else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName;
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for (var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]));
    }
    return mapped.join("-");
  };
  var rename;
  if (goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts;
  } else {
    rename = function(a) {
      return a;
    };
  }
  if (opt_modifier) {
    return className + "-" + rename(opt_modifier);
  } else {
    return rename(className);
  }
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style;
};
goog.global.CLOSURE_CSS_NAME_MAPPING;
if (!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING;
}
goog.getMsg = function(str, opt_values) {
  if (opt_values) {
    str = str.replace(/\{\$([^}]+)}/g, function(match, key) {
      return key in opt_values ? opt_values[key] : match;
    });
  }
  return str;
};
goog.getMsgWithFallback = function(a, b) {
  return a;
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo);
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol;
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor;
  childCtor.base = function(me, methodName, var_args) {
    var args = Array.prototype.slice.call(arguments, 2);
    return parentCtor.prototype[methodName].apply(me, args);
  };
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if (goog.STRICT_MODE_COMPATIBLE || goog.DEBUG && !caller) {
    throw Error("arguments.caller not defined.  goog.base() cannot be used " + "with strict mode code. See " + "http://www.ecma-international.org/ecma-262/5.1/#sec-C");
  }
  if (caller.superClass_) {
    return caller.superClass_.constructor.apply(me, Array.prototype.slice.call(arguments, 1));
  }
  var args = Array.prototype.slice.call(arguments, 2);
  var foundCaller = false;
  for (var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if (ctor.prototype[opt_methodName] === caller) {
      foundCaller = true;
    } else {
      if (foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args);
      }
    }
  }
  if (me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args);
  } else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  fn.call(goog.global);
};
if (!COMPILED) {
  goog.global["COMPILED"] = COMPILED;
}
goog.defineClass = function(superClass, def) {
  var constructor = def.constructor;
  var statics = def.statics;
  if (!constructor || constructor == Object.prototype.constructor) {
    constructor = function() {
      throw Error("cannot instantiate an interface (no constructor defined).");
    };
  }
  var cls = goog.defineClass.createSealingConstructor_(constructor, superClass);
  if (superClass) {
    goog.inherits(cls, superClass);
  }
  delete def.constructor;
  delete def.statics;
  goog.defineClass.applyProperties_(cls.prototype, def);
  if (statics != null) {
    if (statics instanceof Function) {
      statics(cls);
    } else {
      goog.defineClass.applyProperties_(cls, statics);
    }
  }
  return cls;
};
goog.defineClass.ClassDescriptor;
goog.define("goog.defineClass.SEAL_CLASS_INSTANCES", goog.DEBUG);
goog.defineClass.createSealingConstructor_ = function(ctr, superClass) {
  if (goog.defineClass.SEAL_CLASS_INSTANCES && Object.seal instanceof Function) {
    if (superClass && superClass.prototype && superClass.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_]) {
      return ctr;
    }
    var wrappedCtr = function() {
      var instance = ctr.apply(this, arguments) || this;
      if (this.constructor === wrappedCtr) {
        Object.seal(instance);
      }
      return instance;
    };
    return wrappedCtr;
  }
  return ctr;
};
goog.defineClass.OBJECT_PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.defineClass.applyProperties_ = function(target, source) {
  var key;
  for (key in source) {
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
  for (var i = 0;i < goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length;i++) {
    key = goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[i];
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
};
goog.tagUnsealableClass = function(ctr) {
  if (!COMPILED && goog.defineClass.SEAL_CLASS_INSTANCES) {
    ctr.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_] = true;
  }
};
goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_ = "goog_defineClass_legacy_unsealable";
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, goog.debug.Error);
  } else {
    var stack = (new Error).stack;
    if (stack) {
      this.stack = stack;
    }
  }
  if (opt_msg) {
    this.message = String(opt_msg);
  }
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.dom.NodeType");
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.define("goog.string.DETECT_DOUBLE_ESCAPING", false);
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0;
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l;
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0;
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0;
};
goog.string.caseInsensitiveEquals = function(str1, str2) {
  return str1.toLowerCase() == str2.toLowerCase();
};
goog.string.subs = function(str, var_args) {
  var splitParts = str.split("%s");
  var returnString = "";
  var subsArguments = Array.prototype.slice.call(arguments, 1);
  while (subsArguments.length && splitParts.length > 1) {
    returnString += splitParts.shift() + subsArguments.shift();
  }
  return returnString + splitParts.join("%s");
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "");
};
goog.string.isEmpty = function(str) {
  return/^[\s\xa0]*$/.test(str);
};
goog.string.isEmptySafe = function(str) {
  return goog.string.isEmpty(goog.string.makeSafe(str));
};
goog.string.isBreakingWhitespace = function(str) {
  return!/[^\t\n\r ]/.test(str);
};
goog.string.isAlpha = function(str) {
  return!/[^a-zA-Z]/.test(str);
};
goog.string.isNumeric = function(str) {
  return!/[^0-9]/.test(str);
};
goog.string.isAlphaNumeric = function(str) {
  return!/[^a-zA-Z0-9]/.test(str);
};
goog.string.isSpace = function(ch) {
  return ch == " ";
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && ch >= " " && ch <= "~" || ch >= "\u0080" && ch <= "\ufffd";
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ");
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n");
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ");
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ");
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "");
};
goog.string.trim = function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "");
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "");
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "");
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if (test1 < test2) {
    return-1;
  } else {
    if (test1 == test2) {
      return 0;
    } else {
      return 1;
    }
  }
};
goog.string.numerateCompareRegExp_ = /(\.\d+)|(\d+)|(\D+)/g;
goog.string.numerateCompare = function(str1, str2) {
  if (str1 == str2) {
    return 0;
  }
  if (!str1) {
    return-1;
  }
  if (!str2) {
    return 1;
  }
  var tokens1 = str1.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var tokens2 = str2.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var count = Math.min(tokens1.length, tokens2.length);
  for (var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if (a != b) {
      var num1 = parseInt(a, 10);
      if (!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if (!isNaN(num2) && num1 - num2) {
          return num1 - num2;
        }
      }
      return a < b ? -1 : 1;
    }
  }
  if (tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length;
  }
  return str1 < str2 ? -1 : 1;
};
goog.string.urlEncode = function(str) {
  return encodeURIComponent(String(str));
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "));
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "\x3cbr /\x3e" : "\x3cbr\x3e");
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if (opt_isLikelyToContainHtmlChars) {
    str = str.replace(goog.string.AMP_RE_, "\x26amp;").replace(goog.string.LT_RE_, "\x26lt;").replace(goog.string.GT_RE_, "\x26gt;").replace(goog.string.QUOT_RE_, "\x26quot;").replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;").replace(goog.string.NULL_RE_, "\x26#0;");
    if (goog.string.DETECT_DOUBLE_ESCAPING) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  } else {
    if (!goog.string.ALL_RE_.test(str)) {
      return str;
    }
    if (str.indexOf("\x26") != -1) {
      str = str.replace(goog.string.AMP_RE_, "\x26amp;");
    }
    if (str.indexOf("\x3c") != -1) {
      str = str.replace(goog.string.LT_RE_, "\x26lt;");
    }
    if (str.indexOf("\x3e") != -1) {
      str = str.replace(goog.string.GT_RE_, "\x26gt;");
    }
    if (str.indexOf('"') != -1) {
      str = str.replace(goog.string.QUOT_RE_, "\x26quot;");
    }
    if (str.indexOf("'") != -1) {
      str = str.replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;");
    }
    if (str.indexOf("\x00") != -1) {
      str = str.replace(goog.string.NULL_RE_, "\x26#0;");
    }
    if (goog.string.DETECT_DOUBLE_ESCAPING && str.indexOf("e") != -1) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  }
};
goog.string.AMP_RE_ = /&/g;
goog.string.LT_RE_ = /</g;
goog.string.GT_RE_ = />/g;
goog.string.QUOT_RE_ = /"/g;
goog.string.SINGLE_QUOTE_RE_ = /'/g;
goog.string.NULL_RE_ = /\x00/g;
goog.string.E_RE_ = /e/g;
goog.string.ALL_RE_ = goog.string.DETECT_DOUBLE_ESCAPING ? /[\x00&<>"'e]/ : /[\x00&<>"']/;
goog.string.unescapeEntities = function(str) {
  if (goog.string.contains(str, "\x26")) {
    if ("document" in goog.global) {
      return goog.string.unescapeEntitiesUsingDom_(str);
    } else {
      return goog.string.unescapePureXmlEntities_(str);
    }
  }
  return str;
};
goog.string.unescapeEntitiesWithDocument = function(str, document) {
  if (goog.string.contains(str, "\x26")) {
    return goog.string.unescapeEntitiesUsingDom_(str, document);
  }
  return str;
};
goog.string.unescapeEntitiesUsingDom_ = function(str, opt_document) {
  var seen = {"\x26amp;":"\x26", "\x26lt;":"\x3c", "\x26gt;":"\x3e", "\x26quot;":'"'};
  var div;
  if (opt_document) {
    div = opt_document.createElement("div");
  } else {
    div = goog.global.document.createElement("div");
  }
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    var value = seen[s];
    if (value) {
      return value;
    }
    if (entity.charAt(0) == "#") {
      var n = Number("0" + entity.substr(1));
      if (!isNaN(n)) {
        value = String.fromCharCode(n);
      }
    }
    if (!value) {
      div.innerHTML = s + " ";
      value = div.firstChild.nodeValue.slice(0, -1);
    }
    return seen[s] = value;
  });
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return "\x26";
      case "lt":
        return "\x3c";
      case "gt":
        return "\x3e";
      case "quot":
        return'"';
      default:
        if (entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if (!isNaN(n)) {
            return String.fromCharCode(n);
          }
        }
        return s;
    }
  });
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " \x26#160;"), opt_xml);
};
goog.string.preserveSpaces = function(str) {
  return str.replace(/(^|[\n ]) /g, "$1" + goog.string.Unicode.NBSP);
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for (var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if (str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1);
    }
  }
  return str;
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (str.length > chars) {
    str = str.substring(0, chars - 3) + "...";
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (opt_trailingChars && str.length > chars) {
    if (opt_trailingChars > chars) {
      opt_trailingChars = chars;
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint);
  } else {
    if (str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos);
    }
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  if (s.quote) {
    return s.quote();
  } else {
    var sb = ['"'];
    for (var i = 0;i < s.length;i++) {
      var ch = s.charAt(i);
      var cc = ch.charCodeAt(0);
      sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch));
    }
    sb.push('"');
    return sb.join("");
  }
};
goog.string.escapeString = function(str) {
  var sb = [];
  for (var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i));
  }
  return sb.join("");
};
goog.string.escapeChar = function(c) {
  if (c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c];
  }
  if (c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c];
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if (cc > 31 && cc < 127) {
    rv = c;
  } else {
    if (cc < 256) {
      rv = "\\x";
      if (cc < 16 || cc > 256) {
        rv += "0";
      }
    } else {
      rv = "\\u";
      if (cc < 4096) {
        rv += "0";
      }
    }
    rv += cc.toString(16).toUpperCase();
  }
  return goog.string.jsEscapeCache_[c] = rv;
};
goog.string.toMap = function(s) {
  var rv = {};
  for (var i = 0;i < s.length;i++) {
    rv[s.charAt(i)] = true;
  }
  return rv;
};
goog.string.contains = function(str, subString) {
  return str.indexOf(subString) != -1;
};
goog.string.caseInsensitiveContains = function(str, subString) {
  return goog.string.contains(str.toLowerCase(), subString.toLowerCase());
};
goog.string.countOf = function(s, ss) {
  return s && ss ? s.split(ss).length - 1 : 0;
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if (index >= 0 && index < s.length && stringLength > 0) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength);
  }
  return resultStr;
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "");
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "");
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08");
};
goog.string.repeat = function(string, length) {
  return(new Array(length + 1)).join(string);
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if (index == -1) {
    index = s.length;
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s;
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj);
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "");
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36);
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for (var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if (v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break;
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2]);
    } while (order == 0);
  }
  return order;
};
goog.string.compareElements_ = function(left, right) {
  if (left < right) {
    return-1;
  } else {
    if (left > right) {
      return 1;
    }
  }
  return 0;
};
goog.string.HASHCODE_MAX_ = 4294967296;
goog.string.hashCode = function(str) {
  var result = 0;
  for (var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i);
    result %= goog.string.HASHCODE_MAX_;
  }
  return result;
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return "goog_" + goog.string.uniqueStringCounter_++;
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if (num == 0 && goog.string.isEmpty(str)) {
    return NaN;
  }
  return num;
};
goog.string.isLowerCamelCase = function(str) {
  return/^[a-z]+([A-Z][a-z]*)*$/.test(str);
};
goog.string.isUpperCamelCase = function(str) {
  return/^([A-Z][a-z]*)+$/.test(str);
};
goog.string.toCamelCase = function(str) {
  return String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase();
  });
};
goog.string.toSelectorCase = function(str) {
  return String(str).replace(/([A-Z])/g, "-$1").toLowerCase();
};
goog.string.toTitleCase = function(str, opt_delimiters) {
  var delimiters = goog.isString(opt_delimiters) ? goog.string.regExpEscape(opt_delimiters) : "\\s";
  delimiters = delimiters ? "|[" + delimiters + "]+" : "";
  var regexp = new RegExp("(^" + delimiters + ")([a-z])", "g");
  return str.replace(regexp, function(all, p1, p2) {
    return p1 + p2.toUpperCase();
  });
};
goog.string.parseInt = function(value) {
  if (isFinite(value)) {
    value = String(value);
  }
  if (goog.isString(value)) {
    return/^\s*-?0x/i.test(value) ? parseInt(value, 16) : parseInt(value, 10);
  }
  return NaN;
};
goog.string.splitLimit = function(str, separator, limit) {
  var parts = str.split(separator);
  var returnVal = [];
  while (limit > 0 && parts.length) {
    returnVal.push(parts.shift());
    limit--;
  }
  if (parts.length) {
    returnVal.push(parts.join(separator));
  }
  return returnVal;
};
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.dom.NodeType");
goog.require("goog.string");
goog.define("goog.asserts.ENABLE_ASSERTS", goog.DEBUG);
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern;
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.DEFAULT_ERROR_HANDLER = function(e) {
  throw e;
};
goog.asserts.errorHandler_ = goog.asserts.DEFAULT_ERROR_HANDLER;
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if (givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs;
  } else {
    if (defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs;
    }
  }
  var e = new goog.asserts.AssertionError("" + message, args || []);
  goog.asserts.errorHandler_(e);
};
goog.asserts.setErrorHandler = function(errorHandler) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_ = errorHandler;
  }
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return condition;
};
goog.asserts.fail = function(opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_(new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1)));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertElement = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && (!goog.isObject(value) || value.nodeType != goog.dom.NodeType.ELEMENT)) {
    goog.asserts.doAssertFailure_("Expected Element but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("instanceof check failed.", null, opt_message, Array.prototype.slice.call(arguments, 3));
  }
  return value;
};
goog.asserts.assertObjectPrototypeIsIntact = function() {
  for (var key in Object.prototype) {
    goog.asserts.fail(key + " should not be enumerable in Object.prototype.");
  }
};
goog.provide("goog.array");
goog.provide("goog.array.ArrayLike");
goog.require("goog.asserts");
goog.define("goog.NATIVE_ARRAY_PROTOTYPES", goog.TRUSTED_SITE);
goog.define("goog.array.ASSUME_NATIVE_FUNCTIONS", false);
goog.array.ArrayLike;
goog.array.peek = function(array) {
  return array[array.length - 1];
};
goog.array.last = goog.array.peek;
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.indexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return-1;
    }
    return arr.indexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i < arr.length;i++) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return-1;
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.lastIndexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if (fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex);
  }
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return-1;
    }
    return arr.lastIndexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i >= 0;i--) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return-1;
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.forEach) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;--i) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.filter) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      var val = arr2[i];
      if (f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val;
      }
    }
  }
  return res;
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.map) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr);
    }
  }
  return res;
};
goog.array.reduce = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduce) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduce.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.reduceRight = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduceRight) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduceRight.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.some) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true;
    }
  }
  return false;
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.every) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false;
    }
  }
  return true;
};
goog.array.count = function(arr, f, opt_obj) {
  var count = 0;
  goog.array.forEach(arr, function(element, index, arr) {
    if (f.call(opt_obj, element, index, arr)) {
      ++count;
    }
  }, opt_obj);
  return count;
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return-1;
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;i--) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return-1;
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0;
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0;
};
goog.array.clear = function(arr) {
  if (!goog.isArray(arr)) {
    for (var i = arr.length - 1;i >= 0;i--) {
      delete arr[i];
    }
  }
  arr.length = 0;
};
goog.array.insert = function(arr, obj) {
  if (!goog.array.contains(arr, obj)) {
    arr.push(obj);
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj);
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd);
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if (arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj);
  } else {
    goog.array.insertAt(arr, obj, i);
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if (rv = i >= 0) {
    goog.array.removeAt(arr, i);
  }
  return rv;
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length == 1;
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if (i >= 0) {
    goog.array.removeAt(arr, i);
    return true;
  }
  return false;
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.join = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.toArray = function(object) {
  var length = object.length;
  if (length > 0) {
    var rv = new Array(length);
    for (var i = 0;i < length;i++) {
      rv[i] = object[i];
    }
    return rv;
  }
  return[];
};
goog.array.clone = goog.array.toArray;
goog.array.extend = function(arr1, var_args) {
  for (var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    var isArrayLike;
    if (goog.isArray(arr2) || (isArrayLike = goog.isArrayLike(arr2)) && Object.prototype.hasOwnProperty.call(arr2, "callee")) {
      arr1.push.apply(arr1, arr2);
    } else {
      if (isArrayLike) {
        var len1 = arr1.length;
        var len2 = arr2.length;
        for (var j = 0;j < len2;j++) {
          arr1[len1 + j] = arr2[j];
        }
      } else {
        arr1.push(arr2);
      }
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1));
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if (arguments.length <= 2) {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start);
  } else {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end);
  }
};
goog.array.removeDuplicates = function(arr, opt_rv, opt_hashFn) {
  var returnArray = opt_rv || arr;
  var defaultHashFn = function(item) {
    return goog.isObject(current) ? "o" + goog.getUid(current) : (typeof current).charAt(0) + current;
  };
  var hashFn = opt_hashFn || defaultHashFn;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while (cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = hashFn(current);
    if (!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current;
    }
  }
  returnArray.length = cursorInsert;
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target);
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj);
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while (left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if (isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr);
    } else {
      compareResult = compareFn(opt_target, arr[middle]);
    }
    if (compareResult > 0) {
      left = middle + 1;
    } else {
      right = middle;
      found = !compareResult;
    }
  }
  return found ? left : ~left;
};
goog.array.sort = function(arr, opt_compareFn) {
  arr.sort(opt_compareFn || goog.array.defaultCompare);
};
goog.array.stableSort = function(arr, opt_compareFn) {
  for (var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]};
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index;
  }
  goog.array.sort(arr, stableCompareFn);
  for (var i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value;
  }
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return compare(a[key], b[key]);
  });
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for (var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if (compareResult > 0 || compareResult == 0 && opt_strict) {
      return false;
    }
  }
  return true;
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if (!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {
    return false;
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for (var i = 0;i < l;i++) {
    if (!equalsFn(arr1[i], arr2[i])) {
      return false;
    }
  }
  return true;
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  var l = Math.min(arr1.length, arr2.length);
  for (var i = 0;i < l;i++) {
    var result = compare(arr1[i], arr2[i]);
    if (result != 0) {
      return result;
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length);
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0;
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b;
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if (index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true;
  }
  return false;
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false;
};
goog.array.bucket = function(array, sorter, opt_obj) {
  var buckets = {};
  for (var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter.call(opt_obj, value, i, array);
    if (goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value);
    }
  }
  return buckets;
};
goog.array.toObject = function(arr, keyFunc, opt_obj) {
  var ret = {};
  goog.array.forEach(arr, function(element, index) {
    ret[keyFunc.call(opt_obj, element, index, arr)] = element;
  });
  return ret;
};
goog.array.range = function(startOrEnd, opt_end, opt_step) {
  var array = [];
  var start = 0;
  var end = startOrEnd;
  var step = opt_step || 1;
  if (opt_end !== undefined) {
    start = startOrEnd;
    end = opt_end;
  }
  if (step * (end - start) < 0) {
    return[];
  }
  if (step > 0) {
    for (var i = start;i < end;i += step) {
      array.push(i);
    }
  } else {
    for (var i = start;i > end;i += step) {
      array.push(i);
    }
  }
  return array;
};
goog.array.repeat = function(value, n) {
  var array = [];
  for (var i = 0;i < n;i++) {
    array[i] = value;
  }
  return array;
};
goog.array.flatten = function(var_args) {
  var result = [];
  for (var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if (goog.isArray(element)) {
      result.push.apply(result, goog.array.flatten.apply(null, element));
    } else {
      result.push(element);
    }
  }
  return result;
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if (array.length) {
    n %= array.length;
    if (n > 0) {
      goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n));
    } else {
      if (n < 0) {
        goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n));
      }
    }
  }
  return array;
};
goog.array.moveItem = function(arr, fromIndex, toIndex) {
  goog.asserts.assert(fromIndex >= 0 && fromIndex < arr.length);
  goog.asserts.assert(toIndex >= 0 && toIndex < arr.length);
  var removedItems = goog.array.ARRAY_PROTOTYPE_.splice.call(arr, fromIndex, 1);
  goog.array.ARRAY_PROTOTYPE_.splice.call(arr, toIndex, 0, removedItems[0]);
};
goog.array.zip = function(var_args) {
  if (!arguments.length) {
    return[];
  }
  var result = [];
  for (var i = 0;true;i++) {
    var value = [];
    for (var j = 0;j < arguments.length;j++) {
      var arr = arguments[j];
      if (i >= arr.length) {
        return result;
      }
      value.push(arr[i]);
    }
    result.push(value);
  }
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for (var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp;
  }
};
goog.provide("goog.object");
goog.object.forEach = function(obj, f, opt_obj) {
  for (var key in obj) {
    f.call(opt_obj, obj[key], key, obj);
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key];
    }
  }
  return res;
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj);
  }
  return res;
};
goog.object.some = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      return true;
    }
  }
  return false;
};
goog.object.every = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (!f.call(opt_obj, obj[key], key, obj)) {
      return false;
    }
  }
  return true;
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for (var key in obj) {
    rv++;
  }
  return rv;
};
goog.object.getAnyKey = function(obj) {
  for (var key in obj) {
    return key;
  }
};
goog.object.getAnyValue = function(obj) {
  for (var key in obj) {
    return obj[key];
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val);
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = obj[key];
  }
  return res;
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = key;
  }
  return res;
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for (var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if (!goog.isDef(obj)) {
      break;
    }
  }
  return obj;
};
goog.object.containsKey = function(obj, key) {
  return key in obj;
};
goog.object.containsValue = function(obj, val) {
  for (var key in obj) {
    if (obj[key] == val) {
      return true;
    }
  }
  return false;
};
goog.object.findKey = function(obj, f, opt_this) {
  for (var key in obj) {
    if (f.call(opt_this, obj[key], key, obj)) {
      return key;
    }
  }
  return undefined;
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key];
};
goog.object.isEmpty = function(obj) {
  for (var key in obj) {
    return false;
  }
  return true;
};
goog.object.clear = function(obj) {
  for (var i in obj) {
    delete obj[i];
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if (rv = key in obj) {
    delete obj[key];
  }
  return rv;
};
goog.object.add = function(obj, key, val) {
  if (key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val);
};
goog.object.get = function(obj, key, opt_val) {
  if (key in obj) {
    return obj[key];
  }
  return opt_val;
};
goog.object.set = function(obj, key, value) {
  obj[key] = value;
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value;
};
goog.object.clone = function(obj) {
  var res = {};
  for (var key in obj) {
    res[key] = obj[key];
  }
  return res;
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for (var key in obj) {
    transposed[obj[key]] = key;
  }
  return transposed;
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for (var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for (key in source) {
      target[key] = source[key];
    }
    for (var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0]);
  }
  if (argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for (var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1];
  }
  return rv;
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0]);
  }
  var rv = {};
  for (var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true;
  }
  return rv;
};
goog.object.createImmutableView = function(obj) {
  var result = obj;
  if (Object.isFrozen && !Object.isFrozen(obj)) {
    result = Object.create(obj);
    Object.freeze(result);
  }
  return result;
};
goog.object.isImmutableView = function(obj) {
  return!!Object.isFrozen && Object.isFrozen(obj);
};
goog.provide("goog.structs");
goog.require("goog.array");
goog.require("goog.object");
goog.structs.getCount = function(col) {
  if (typeof col.getCount == "function") {
    return col.getCount();
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return col.length;
  }
  return goog.object.getCount(col);
};
goog.structs.getValues = function(col) {
  if (typeof col.getValues == "function") {
    return col.getValues();
  }
  if (goog.isString(col)) {
    return col.split("");
  }
  if (goog.isArrayLike(col)) {
    var rv = [];
    var l = col.length;
    for (var i = 0;i < l;i++) {
      rv.push(col[i]);
    }
    return rv;
  }
  return goog.object.getValues(col);
};
goog.structs.getKeys = function(col) {
  if (typeof col.getKeys == "function") {
    return col.getKeys();
  }
  if (typeof col.getValues == "function") {
    return undefined;
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    var rv = [];
    var l = col.length;
    for (var i = 0;i < l;i++) {
      rv.push(i);
    }
    return rv;
  }
  return goog.object.getKeys(col);
};
goog.structs.contains = function(col, val) {
  if (typeof col.contains == "function") {
    return col.contains(val);
  }
  if (typeof col.containsValue == "function") {
    return col.containsValue(val);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.contains((col), val);
  }
  return goog.object.containsValue(col, val);
};
goog.structs.isEmpty = function(col) {
  if (typeof col.isEmpty == "function") {
    return col.isEmpty();
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.isEmpty((col));
  }
  return goog.object.isEmpty(col);
};
goog.structs.clear = function(col) {
  if (typeof col.clear == "function") {
    col.clear();
  } else {
    if (goog.isArrayLike(col)) {
      goog.array.clear((col));
    } else {
      goog.object.clear(col);
    }
  }
};
goog.structs.forEach = function(col, f, opt_obj) {
  if (typeof col.forEach == "function") {
    col.forEach(f, opt_obj);
  } else {
    if (goog.isArrayLike(col) || goog.isString(col)) {
      goog.array.forEach((col), f, opt_obj);
    } else {
      var keys = goog.structs.getKeys(col);
      var values = goog.structs.getValues(col);
      var l = values.length;
      for (var i = 0;i < l;i++) {
        f.call(opt_obj, values[i], keys && keys[i], col);
      }
    }
  }
};
goog.structs.filter = function(col, f, opt_obj) {
  if (typeof col.filter == "function") {
    return col.filter(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.filter((col), f, opt_obj);
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if (keys) {
    rv = {};
    for (var i = 0;i < l;i++) {
      if (f.call(opt_obj, values[i], keys[i], col)) {
        rv[keys[i]] = values[i];
      }
    }
  } else {
    rv = [];
    for (var i = 0;i < l;i++) {
      if (f.call(opt_obj, values[i], undefined, col)) {
        rv.push(values[i]);
      }
    }
  }
  return rv;
};
goog.structs.map = function(col, f, opt_obj) {
  if (typeof col.map == "function") {
    return col.map(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.map((col), f, opt_obj);
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if (keys) {
    rv = {};
    for (var i = 0;i < l;i++) {
      rv[keys[i]] = f.call(opt_obj, values[i], keys[i], col);
    }
  } else {
    rv = [];
    for (var i = 0;i < l;i++) {
      rv[i] = f.call(opt_obj, values[i], undefined, col);
    }
  }
  return rv;
};
goog.structs.some = function(col, f, opt_obj) {
  if (typeof col.some == "function") {
    return col.some(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.some((col), f, opt_obj);
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0;i < l;i++) {
    if (f.call(opt_obj, values[i], keys && keys[i], col)) {
      return true;
    }
  }
  return false;
};
goog.structs.every = function(col, f, opt_obj) {
  if (typeof col.every == "function") {
    return col.every(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.every((col), f, opt_obj);
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0;i < l;i++) {
    if (!f.call(opt_obj, values[i], keys && keys[i], col)) {
      return false;
    }
  }
  return true;
};
goog.provide("goog.functions");
goog.functions.constant = function(retValue) {
  return function() {
    return retValue;
  };
};
goog.functions.FALSE = goog.functions.constant(false);
goog.functions.TRUE = goog.functions.constant(true);
goog.functions.NULL = goog.functions.constant(null);
goog.functions.identity = function(opt_returnValue, var_args) {
  return opt_returnValue;
};
goog.functions.error = function(message) {
  return function() {
    throw Error(message);
  };
};
goog.functions.fail = function(err) {
  return function() {
    throw err;
  };
};
goog.functions.lock = function(f, opt_numArgs) {
  opt_numArgs = opt_numArgs || 0;
  return function() {
    return f.apply(this, Array.prototype.slice.call(arguments, 0, opt_numArgs));
  };
};
goog.functions.nth = function(n) {
  return function() {
    return arguments[n];
  };
};
goog.functions.withReturnValue = function(f, retValue) {
  return goog.functions.sequence(f, goog.functions.constant(retValue));
};
goog.functions.compose = function(fn, var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    var result;
    if (length) {
      result = functions[length - 1].apply(this, arguments);
    }
    for (var i = length - 2;i >= 0;i--) {
      result = functions[i].call(this, result);
    }
    return result;
  };
};
goog.functions.sequence = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    var result;
    for (var i = 0;i < length;i++) {
      result = functions[i].apply(this, arguments);
    }
    return result;
  };
};
goog.functions.and = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    for (var i = 0;i < length;i++) {
      if (!functions[i].apply(this, arguments)) {
        return false;
      }
    }
    return true;
  };
};
goog.functions.or = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    for (var i = 0;i < length;i++) {
      if (functions[i].apply(this, arguments)) {
        return true;
      }
    }
    return false;
  };
};
goog.functions.not = function(f) {
  return function() {
    return!f.apply(this, arguments);
  };
};
goog.functions.create = function(constructor, var_args) {
  var temp = function() {
  };
  temp.prototype = constructor.prototype;
  var obj = new temp;
  constructor.apply(obj, Array.prototype.slice.call(arguments, 1));
  return obj;
};
goog.define("goog.functions.CACHE_RETURN_VALUE", true);
goog.functions.cacheReturnValue = function(fn) {
  var called = false;
  var value;
  return function() {
    if (!goog.functions.CACHE_RETURN_VALUE) {
      return fn();
    }
    if (!called) {
      value = fn();
      called = true;
    }
    return value;
  };
};
goog.provide("goog.math");
goog.require("goog.array");
goog.require("goog.asserts");
goog.math.randomInt = function(a) {
  return Math.floor(Math.random() * a);
};
goog.math.uniformRandom = function(a, b) {
  return a + Math.random() * (b - a);
};
goog.math.clamp = function(value, min, max) {
  return Math.min(Math.max(value, min), max);
};
goog.math.modulo = function(a, b) {
  var r = a % b;
  return r * b < 0 ? r + b : r;
};
goog.math.lerp = function(a, b, x) {
  return a + x * (b - a);
};
goog.math.nearlyEquals = function(a, b, opt_tolerance) {
  return Math.abs(a - b) <= (opt_tolerance || 1E-6);
};
goog.math.standardAngle = function(angle) {
  return goog.math.modulo(angle, 360);
};
goog.math.standardAngleInRadians = function(angle) {
  return goog.math.modulo(angle, 2 * Math.PI);
};
goog.math.toRadians = function(angleDegrees) {
  return angleDegrees * Math.PI / 180;
};
goog.math.toDegrees = function(angleRadians) {
  return angleRadians * 180 / Math.PI;
};
goog.math.angleDx = function(degrees, radius) {
  return radius * Math.cos(goog.math.toRadians(degrees));
};
goog.math.angleDy = function(degrees, radius) {
  return radius * Math.sin(goog.math.toRadians(degrees));
};
goog.math.angle = function(x1, y1, x2, y2) {
  return goog.math.standardAngle(goog.math.toDegrees(Math.atan2(y2 - y1, x2 - x1)));
};
goog.math.angleDifference = function(startAngle, endAngle) {
  var d = goog.math.standardAngle(endAngle) - goog.math.standardAngle(startAngle);
  if (d > 180) {
    d = d - 360;
  } else {
    if (d <= -180) {
      d = 360 + d;
    }
  }
  return d;
};
goog.math.sign = function(x) {
  return x == 0 ? 0 : x < 0 ? -1 : 1;
};
goog.math.longestCommonSubsequence = function(array1, array2, opt_compareFn, opt_collectorFn) {
  var compare = opt_compareFn || function(a, b) {
    return a == b;
  };
  var collect = opt_collectorFn || function(i1, i2) {
    return array1[i1];
  };
  var length1 = array1.length;
  var length2 = array2.length;
  var arr = [];
  for (var i = 0;i < length1 + 1;i++) {
    arr[i] = [];
    arr[i][0] = 0;
  }
  for (var j = 0;j < length2 + 1;j++) {
    arr[0][j] = 0;
  }
  for (i = 1;i <= length1;i++) {
    for (j = 1;j <= length2;j++) {
      if (compare(array1[i - 1], array2[j - 1])) {
        arr[i][j] = arr[i - 1][j - 1] + 1;
      } else {
        arr[i][j] = Math.max(arr[i - 1][j], arr[i][j - 1]);
      }
    }
  }
  var result = [];
  var i = length1, j = length2;
  while (i > 0 && j > 0) {
    if (compare(array1[i - 1], array2[j - 1])) {
      result.unshift(collect(i - 1, j - 1));
      i--;
      j--;
    } else {
      if (arr[i - 1][j] > arr[i][j - 1]) {
        i--;
      } else {
        j--;
      }
    }
  }
  return result;
};
goog.math.sum = function(var_args) {
  return(goog.array.reduce(arguments, function(sum, value) {
    return sum + value;
  }, 0));
};
goog.math.average = function(var_args) {
  return goog.math.sum.apply(null, arguments) / arguments.length;
};
goog.math.sampleVariance = function(var_args) {
  var sampleSize = arguments.length;
  if (sampleSize < 2) {
    return 0;
  }
  var mean = goog.math.average.apply(null, arguments);
  var variance = goog.math.sum.apply(null, goog.array.map(arguments, function(val) {
    return Math.pow(val - mean, 2);
  })) / (sampleSize - 1);
  return variance;
};
goog.math.standardDeviation = function(var_args) {
  return Math.sqrt(goog.math.sampleVariance.apply(null, arguments));
};
goog.math.isInt = function(num) {
  return isFinite(num) && num % 1 == 0;
};
goog.math.isFiniteNumber = function(num) {
  return isFinite(num) && !isNaN(num);
};
goog.math.log10Floor = function(num) {
  if (num > 0) {
    var x = Math.round(Math.log(num) * Math.LOG10E);
    return x - (parseFloat("1e" + x) > num);
  }
  return num == 0 ? -Infinity : NaN;
};
goog.math.safeFloor = function(num, opt_epsilon) {
  goog.asserts.assert(!goog.isDef(opt_epsilon) || opt_epsilon > 0);
  return Math.floor(num + (opt_epsilon || 2E-15));
};
goog.math.safeCeil = function(num, opt_epsilon) {
  goog.asserts.assert(!goog.isDef(opt_epsilon) || opt_epsilon > 0);
  return Math.ceil(num - (opt_epsilon || 2E-15));
};
goog.provide("goog.iter");
goog.provide("goog.iter.Iterable");
goog.provide("goog.iter.Iterator");
goog.provide("goog.iter.StopIteration");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.functions");
goog.require("goog.math");
goog.iter.Iterable;
if ("StopIteration" in goog.global) {
  goog.iter.StopIteration = goog.global["StopIteration"];
} else {
  goog.iter.StopIteration = Error("StopIteration");
}
goog.iter.Iterator = function() {
};
goog.iter.Iterator.prototype.next = function() {
  throw goog.iter.StopIteration;
};
goog.iter.Iterator.prototype.__iterator__ = function(opt_keys) {
  return this;
};
goog.iter.toIterator = function(iterable) {
  if (iterable instanceof goog.iter.Iterator) {
    return iterable;
  }
  if (typeof iterable.__iterator__ == "function") {
    return iterable.__iterator__(false);
  }
  if (goog.isArrayLike(iterable)) {
    var i = 0;
    var newIter = new goog.iter.Iterator;
    newIter.next = function() {
      while (true) {
        if (i >= iterable.length) {
          throw goog.iter.StopIteration;
        }
        if (!(i in iterable)) {
          i++;
          continue;
        }
        return iterable[i++];
      }
    };
    return newIter;
  }
  throw Error("Not implemented");
};
goog.iter.forEach = function(iterable, f, opt_obj) {
  if (goog.isArrayLike(iterable)) {
    try {
      goog.array.forEach((iterable), f, opt_obj);
    } catch (ex) {
      if (ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  } else {
    iterable = goog.iter.toIterator(iterable);
    try {
      while (true) {
        f.call(opt_obj, iterable.next(), undefined, iterable);
      }
    } catch (ex) {
      if (ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  }
};
goog.iter.filter = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while (true) {
      var val = iterator.next();
      if (f.call(opt_obj, val, undefined, iterator)) {
        return val;
      }
    }
  };
  return newIter;
};
goog.iter.filterFalse = function(iterable, f, opt_obj) {
  return goog.iter.filter(iterable, goog.functions.not(f), opt_obj);
};
goog.iter.range = function(startOrStop, opt_stop, opt_step) {
  var start = 0;
  var stop = startOrStop;
  var step = opt_step || 1;
  if (arguments.length > 1) {
    start = startOrStop;
    stop = opt_stop;
  }
  if (step == 0) {
    throw Error("Range step argument must not be zero");
  }
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    if (step > 0 && start >= stop || step < 0 && start <= stop) {
      throw goog.iter.StopIteration;
    }
    var rv = start;
    start += step;
    return rv;
  };
  return newIter;
};
goog.iter.join = function(iterable, deliminator) {
  return goog.iter.toArray(iterable).join(deliminator);
};
goog.iter.map = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    var val = iterator.next();
    return f.call(opt_obj, val, undefined, iterator);
  };
  return newIter;
};
goog.iter.reduce = function(iterable, f, val, opt_obj) {
  var rval = val;
  goog.iter.forEach(iterable, function(val) {
    rval = f.call(opt_obj, rval, val);
  });
  return rval;
};
goog.iter.some = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while (true) {
      if (f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return true;
      }
    }
  } catch (ex) {
    if (ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return false;
};
goog.iter.every = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while (true) {
      if (!f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return false;
      }
    }
  } catch (ex) {
    if (ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return true;
};
goog.iter.chain = function(var_args) {
  var iterator = goog.iter.toIterator(arguments);
  var iter = new goog.iter.Iterator;
  var current = null;
  iter.next = function() {
    while (true) {
      if (current == null) {
        var it = iterator.next();
        current = goog.iter.toIterator(it);
      }
      try {
        return current.next();
      } catch (ex) {
        if (ex !== goog.iter.StopIteration) {
          throw ex;
        }
        current = null;
      }
    }
  };
  return iter;
};
goog.iter.chainFromIterable = function(iterable) {
  return goog.iter.chain.apply(undefined, iterable);
};
goog.iter.dropWhile = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var dropping = true;
  newIter.next = function() {
    while (true) {
      var val = iterator.next();
      if (dropping && f.call(opt_obj, val, undefined, iterator)) {
        continue;
      } else {
        dropping = false;
      }
      return val;
    }
  };
  return newIter;
};
goog.iter.takeWhile = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var taking = true;
  newIter.next = function() {
    while (true) {
      if (taking) {
        var val = iterator.next();
        if (f.call(opt_obj, val, undefined, iterator)) {
          return val;
        } else {
          taking = false;
        }
      } else {
        throw goog.iter.StopIteration;
      }
    }
  };
  return newIter;
};
goog.iter.toArray = function(iterable) {
  if (goog.isArrayLike(iterable)) {
    return goog.array.toArray((iterable));
  }
  iterable = goog.iter.toIterator(iterable);
  var array = [];
  goog.iter.forEach(iterable, function(val) {
    array.push(val);
  });
  return array;
};
goog.iter.equals = function(iterable1, iterable2) {
  var fillValue = {};
  var pairs = goog.iter.zipLongest(fillValue, iterable1, iterable2);
  return goog.iter.every(pairs, function(pair) {
    return pair[0] == pair[1];
  });
};
goog.iter.nextOrValue = function(iterable, defaultValue) {
  try {
    return goog.iter.toIterator(iterable).next();
  } catch (e) {
    if (e != goog.iter.StopIteration) {
      throw e;
    }
    return defaultValue;
  }
};
goog.iter.product = function(var_args) {
  var someArrayEmpty = goog.array.some(arguments, function(arr) {
    return!arr.length;
  });
  if (someArrayEmpty || !arguments.length) {
    return new goog.iter.Iterator;
  }
  var iter = new goog.iter.Iterator;
  var arrays = arguments;
  var indicies = goog.array.repeat(0, arrays.length);
  iter.next = function() {
    if (indicies) {
      var retVal = goog.array.map(indicies, function(valueIndex, arrayIndex) {
        return arrays[arrayIndex][valueIndex];
      });
      for (var i = indicies.length - 1;i >= 0;i--) {
        goog.asserts.assert(indicies);
        if (indicies[i] < arrays[i].length - 1) {
          indicies[i]++;
          break;
        }
        if (i == 0) {
          indicies = null;
          break;
        }
        indicies[i] = 0;
      }
      return retVal;
    }
    throw goog.iter.StopIteration;
  };
  return iter;
};
goog.iter.cycle = function(iterable) {
  var baseIterator = goog.iter.toIterator(iterable);
  var cache = [];
  var cacheIndex = 0;
  var iter = new goog.iter.Iterator;
  var useCache = false;
  iter.next = function() {
    var returnElement = null;
    if (!useCache) {
      try {
        returnElement = baseIterator.next();
        cache.push(returnElement);
        return returnElement;
      } catch (e) {
        if (e != goog.iter.StopIteration || goog.array.isEmpty(cache)) {
          throw e;
        }
        useCache = true;
      }
    }
    returnElement = cache[cacheIndex];
    cacheIndex = (cacheIndex + 1) % cache.length;
    return returnElement;
  };
  return iter;
};
goog.iter.count = function(opt_start, opt_step) {
  var counter = opt_start || 0;
  var step = goog.isDef(opt_step) ? opt_step : 1;
  var iter = new goog.iter.Iterator;
  iter.next = function() {
    var returnValue = counter;
    counter += step;
    return returnValue;
  };
  return iter;
};
goog.iter.repeat = function(value) {
  var iter = new goog.iter.Iterator;
  iter.next = goog.functions.constant(value);
  return iter;
};
goog.iter.accumulate = function(iterable) {
  var iterator = goog.iter.toIterator(iterable);
  var total = 0;
  var iter = new goog.iter.Iterator;
  iter.next = function() {
    total += iterator.next();
    return total;
  };
  return iter;
};
goog.iter.zip = function(var_args) {
  var args = arguments;
  var iter = new goog.iter.Iterator;
  if (args.length > 0) {
    var iterators = goog.array.map(args, goog.iter.toIterator);
    iter.next = function() {
      var arr = goog.array.map(iterators, function(it) {
        return it.next();
      });
      return arr;
    };
  }
  return iter;
};
goog.iter.zipLongest = function(fillValue, var_args) {
  var args = goog.array.slice(arguments, 1);
  var iter = new goog.iter.Iterator;
  if (args.length > 0) {
    var iterators = goog.array.map(args, goog.iter.toIterator);
    iter.next = function() {
      var iteratorsHaveValues = false;
      var arr = goog.array.map(iterators, function(it) {
        var returnValue;
        try {
          returnValue = it.next();
          iteratorsHaveValues = true;
        } catch (ex) {
          if (ex !== goog.iter.StopIteration) {
            throw ex;
          }
          returnValue = fillValue;
        }
        return returnValue;
      });
      if (!iteratorsHaveValues) {
        throw goog.iter.StopIteration;
      }
      return arr;
    };
  }
  return iter;
};
goog.iter.compress = function(iterable, selectors) {
  var selectorIterator = goog.iter.toIterator(selectors);
  return goog.iter.filter(iterable, function() {
    return!!selectorIterator.next();
  });
};
goog.iter.GroupByIterator_ = function(iterable, opt_keyFunc) {
  this.iterator = goog.iter.toIterator(iterable);
  this.keyFunc = opt_keyFunc || goog.functions.identity;
  this.targetKey;
  this.currentKey;
  this.currentValue;
};
goog.inherits(goog.iter.GroupByIterator_, goog.iter.Iterator);
goog.iter.GroupByIterator_.prototype.next = function() {
  while (this.currentKey == this.targetKey) {
    this.currentValue = this.iterator.next();
    this.currentKey = this.keyFunc(this.currentValue);
  }
  this.targetKey = this.currentKey;
  return[this.currentKey, this.groupItems_(this.targetKey)];
};
goog.iter.GroupByIterator_.prototype.groupItems_ = function(targetKey) {
  var arr = [];
  while (this.currentKey == targetKey) {
    arr.push(this.currentValue);
    try {
      this.currentValue = this.iterator.next();
    } catch (ex) {
      if (ex !== goog.iter.StopIteration) {
        throw ex;
      }
      break;
    }
    this.currentKey = this.keyFunc(this.currentValue);
  }
  return arr;
};
goog.iter.groupBy = function(iterable, opt_keyFunc) {
  return new goog.iter.GroupByIterator_(iterable, opt_keyFunc);
};
goog.iter.starMap = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var iter = new goog.iter.Iterator;
  iter.next = function() {
    var args = goog.iter.toArray(iterator.next());
    return f.apply(opt_obj, goog.array.concat(args, undefined, iterator));
  };
  return iter;
};
goog.iter.tee = function(iterable, opt_num) {
  var iterator = goog.iter.toIterator(iterable);
  var num = goog.isNumber(opt_num) ? opt_num : 2;
  var buffers = goog.array.map(goog.array.range(num), function() {
    return[];
  });
  var addNextIteratorValueToBuffers = function() {
    var val = iterator.next();
    goog.array.forEach(buffers, function(buffer) {
      buffer.push(val);
    });
  };
  var createIterator = function(buffer) {
    var iter = new goog.iter.Iterator;
    iter.next = function() {
      if (goog.array.isEmpty(buffer)) {
        addNextIteratorValueToBuffers();
      }
      goog.asserts.assert(!goog.array.isEmpty(buffer));
      return buffer.shift();
    };
    return iter;
  };
  return goog.array.map(buffers, createIterator);
};
goog.iter.enumerate = function(iterable, opt_start) {
  return goog.iter.zip(goog.iter.count(opt_start), iterable);
};
goog.iter.limit = function(iterable, limitSize) {
  goog.asserts.assert(goog.math.isInt(limitSize) && limitSize >= 0);
  var iterator = goog.iter.toIterator(iterable);
  var iter = new goog.iter.Iterator;
  var remaining = limitSize;
  iter.next = function() {
    if (remaining-- > 0) {
      return iterator.next();
    }
    throw goog.iter.StopIteration;
  };
  return iter;
};
goog.iter.consume = function(iterable, count) {
  goog.asserts.assert(goog.math.isInt(count) && count >= 0);
  var iterator = goog.iter.toIterator(iterable);
  while (count-- > 0) {
    goog.iter.nextOrValue(iterator, null);
  }
  return iterator;
};
goog.iter.slice = function(iterable, start, opt_end) {
  goog.asserts.assert(goog.math.isInt(start) && start >= 0);
  var iterator = goog.iter.consume(iterable, start);
  if (goog.isNumber(opt_end)) {
    goog.asserts.assert(goog.math.isInt((opt_end)) && opt_end >= start);
    iterator = goog.iter.limit(iterator, opt_end - start);
  }
  return iterator;
};
goog.iter.hasDuplicates_ = function(arr) {
  var deduped = [];
  goog.array.removeDuplicates(arr, deduped);
  return arr.length != deduped.length;
};
goog.iter.permutations = function(iterable, opt_length) {
  var elements = goog.iter.toArray(iterable);
  var length = goog.isNumber(opt_length) ? opt_length : elements.length;
  var sets = goog.array.repeat(elements, length);
  var product = goog.iter.product.apply(undefined, sets);
  return goog.iter.filter(product, function(arr) {
    return!goog.iter.hasDuplicates_(arr);
  });
};
goog.iter.combinations = function(iterable, length) {
  var elements = goog.iter.toArray(iterable);
  var indexes = goog.iter.range(elements.length);
  var indexIterator = goog.iter.permutations(indexes, length);
  var sortedIndexIterator = goog.iter.filter(indexIterator, function(arr) {
    return goog.array.isSorted(arr);
  });
  var iter = new goog.iter.Iterator;
  function getIndexFromElements(index) {
    return elements[index];
  }
  iter.next = function() {
    return goog.array.map((sortedIndexIterator.next()), getIndexFromElements);
  };
  return iter;
};
goog.iter.combinationsWithReplacement = function(iterable, length) {
  var elements = goog.iter.toArray(iterable);
  var indexes = goog.array.range(elements.length);
  var sets = goog.array.repeat(indexes, length);
  var indexIterator = goog.iter.product.apply(undefined, sets);
  var sortedIndexIterator = goog.iter.filter(indexIterator, function(arr) {
    return goog.array.isSorted(arr);
  });
  var iter = new goog.iter.Iterator;
  function getIndexFromElements(index) {
    return elements[index];
  }
  iter.next = function() {
    return goog.array.map((sortedIndexIterator.next()), getIndexFromElements);
  };
  return iter;
};
goog.provide("goog.structs.Map");
goog.require("goog.iter.Iterator");
goog.require("goog.iter.StopIteration");
goog.require("goog.object");
goog.structs.Map = function(opt_map, var_args) {
  this.map_ = {};
  this.keys_ = [];
  this.count_ = 0;
  this.version_ = 0;
  var argLength = arguments.length;
  if (argLength > 1) {
    if (argLength % 2) {
      throw Error("Uneven number of arguments");
    }
    for (var i = 0;i < argLength;i += 2) {
      this.set(arguments[i], arguments[i + 1]);
    }
  } else {
    if (opt_map) {
      this.addAll((opt_map));
    }
  }
};
goog.structs.Map.prototype.getCount = function() {
  return this.count_;
};
goog.structs.Map.prototype.getValues = function() {
  this.cleanupKeysArray_();
  var rv = [];
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    rv.push(this.map_[key]);
  }
  return rv;
};
goog.structs.Map.prototype.getKeys = function() {
  this.cleanupKeysArray_();
  return(this.keys_.concat());
};
goog.structs.Map.prototype.containsKey = function(key) {
  return goog.structs.Map.hasKey_(this.map_, key);
};
goog.structs.Map.prototype.containsValue = function(val) {
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    if (goog.structs.Map.hasKey_(this.map_, key) && this.map_[key] == val) {
      return true;
    }
  }
  return false;
};
goog.structs.Map.prototype.equals = function(otherMap, opt_equalityFn) {
  if (this === otherMap) {
    return true;
  }
  if (this.count_ != otherMap.getCount()) {
    return false;
  }
  var equalityFn = opt_equalityFn || goog.structs.Map.defaultEquals;
  this.cleanupKeysArray_();
  for (var key, i = 0;key = this.keys_[i];i++) {
    if (!equalityFn(this.get(key), otherMap.get(key))) {
      return false;
    }
  }
  return true;
};
goog.structs.Map.defaultEquals = function(a, b) {
  return a === b;
};
goog.structs.Map.prototype.isEmpty = function() {
  return this.count_ == 0;
};
goog.structs.Map.prototype.clear = function() {
  this.map_ = {};
  this.keys_.length = 0;
  this.count_ = 0;
  this.version_ = 0;
};
goog.structs.Map.prototype.remove = function(key) {
  if (goog.structs.Map.hasKey_(this.map_, key)) {
    delete this.map_[key];
    this.count_--;
    this.version_++;
    if (this.keys_.length > 2 * this.count_) {
      this.cleanupKeysArray_();
    }
    return true;
  }
  return false;
};
goog.structs.Map.prototype.cleanupKeysArray_ = function() {
  if (this.count_ != this.keys_.length) {
    var srcIndex = 0;
    var destIndex = 0;
    while (srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if (goog.structs.Map.hasKey_(this.map_, key)) {
        this.keys_[destIndex++] = key;
      }
      srcIndex++;
    }
    this.keys_.length = destIndex;
  }
  if (this.count_ != this.keys_.length) {
    var seen = {};
    var srcIndex = 0;
    var destIndex = 0;
    while (srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if (!goog.structs.Map.hasKey_(seen, key)) {
        this.keys_[destIndex++] = key;
        seen[key] = 1;
      }
      srcIndex++;
    }
    this.keys_.length = destIndex;
  }
};
goog.structs.Map.prototype.get = function(key, opt_val) {
  if (goog.structs.Map.hasKey_(this.map_, key)) {
    return this.map_[key];
  }
  return opt_val;
};
goog.structs.Map.prototype.set = function(key, value) {
  if (!goog.structs.Map.hasKey_(this.map_, key)) {
    this.count_++;
    this.keys_.push(key);
    this.version_++;
  }
  this.map_[key] = value;
};
goog.structs.Map.prototype.addAll = function(map) {
  var keys, values;
  if (map instanceof goog.structs.Map) {
    keys = map.getKeys();
    values = map.getValues();
  } else {
    keys = goog.object.getKeys(map);
    values = goog.object.getValues(map);
  }
  for (var i = 0;i < keys.length;i++) {
    this.set(keys[i], values[i]);
  }
};
goog.structs.Map.prototype.forEach = function(f, opt_obj) {
  var keys = this.getKeys();
  for (var i = 0;i < keys.length;i++) {
    var key = keys[i];
    var value = this.get(key);
    f.call(opt_obj, value, key, this);
  }
};
goog.structs.Map.prototype.clone = function() {
  return new goog.structs.Map(this);
};
goog.structs.Map.prototype.transpose = function() {
  var transposed = new goog.structs.Map;
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    var value = this.map_[key];
    transposed.set(value, key);
  }
  return transposed;
};
goog.structs.Map.prototype.toObject = function() {
  this.cleanupKeysArray_();
  var obj = {};
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    obj[key] = this.map_[key];
  }
  return obj;
};
goog.structs.Map.prototype.getKeyIterator = function() {
  return this.__iterator__(true);
};
goog.structs.Map.prototype.getValueIterator = function() {
  return this.__iterator__(false);
};
goog.structs.Map.prototype.__iterator__ = function(opt_keys) {
  this.cleanupKeysArray_();
  var i = 0;
  var keys = this.keys_;
  var map = this.map_;
  var version = this.version_;
  var selfObj = this;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while (true) {
      if (version != selfObj.version_) {
        throw Error("The map has changed since the iterator was created");
      }
      if (i >= keys.length) {
        throw goog.iter.StopIteration;
      }
      var key = keys[i++];
      return opt_keys ? key : map[key];
    }
  };
  return newIter;
};
goog.structs.Map.hasKey_ = function(obj, key) {
  return Object.prototype.hasOwnProperty.call(obj, key);
};
goog.provide("goog.labs.userAgent.util");
goog.require("goog.string");
goog.labs.userAgent.util.getNativeUserAgentString_ = function() {
  var navigator = goog.labs.userAgent.util.getNavigator_();
  if (navigator) {
    var userAgent = navigator.userAgent;
    if (userAgent) {
      return userAgent;
    }
  }
  return "";
};
goog.labs.userAgent.util.getNavigator_ = function() {
  return goog.global.navigator;
};
goog.labs.userAgent.util.userAgent_ = goog.labs.userAgent.util.getNativeUserAgentString_();
goog.labs.userAgent.util.setUserAgent = function(opt_userAgent) {
  goog.labs.userAgent.util.userAgent_ = opt_userAgent || goog.labs.userAgent.util.getNativeUserAgentString_();
};
goog.labs.userAgent.util.getUserAgent = function() {
  return goog.labs.userAgent.util.userAgent_;
};
goog.labs.userAgent.util.matchUserAgent = function(str) {
  var userAgent = goog.labs.userAgent.util.getUserAgent();
  return goog.string.contains(userAgent, str);
};
goog.labs.userAgent.util.matchUserAgentIgnoreCase = function(str) {
  var userAgent = goog.labs.userAgent.util.getUserAgent();
  return goog.string.caseInsensitiveContains(userAgent, str);
};
goog.labs.userAgent.util.extractVersionTuples = function(userAgent) {
  var versionRegExp = new RegExp("(\\w[\\w ]+)" + "/" + "([^\\s]+)" + "\\s*" + "(?:\\((.*?)\\))?", "g");
  var data = [];
  var match;
  while (match = versionRegExp.exec(userAgent)) {
    data.push([match[1], match[2], match[3] || undefined]);
  }
  return data;
};
goog.provide("goog.labs.userAgent.browser");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.labs.userAgent.util");
goog.require("goog.string");
goog.labs.userAgent.browser.matchOpera_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Opera") || goog.labs.userAgent.util.matchUserAgent("OPR");
};
goog.labs.userAgent.browser.matchIE_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Trident") || goog.labs.userAgent.util.matchUserAgent("MSIE");
};
goog.labs.userAgent.browser.matchFirefox_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Firefox");
};
goog.labs.userAgent.browser.matchSafari_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Safari") && !goog.labs.userAgent.util.matchUserAgent("Chrome") && !goog.labs.userAgent.util.matchUserAgent("CriOS") && !goog.labs.userAgent.util.matchUserAgent("Android");
};
goog.labs.userAgent.browser.matchChrome_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Chrome") || goog.labs.userAgent.util.matchUserAgent("CriOS");
};
goog.labs.userAgent.browser.matchAndroidBrowser_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Android") && !goog.labs.userAgent.util.matchUserAgent("Chrome") && !goog.labs.userAgent.util.matchUserAgent("CriOS");
};
goog.labs.userAgent.browser.isOpera = goog.labs.userAgent.browser.matchOpera_;
goog.labs.userAgent.browser.isIE = goog.labs.userAgent.browser.matchIE_;
goog.labs.userAgent.browser.isFirefox = goog.labs.userAgent.browser.matchFirefox_;
goog.labs.userAgent.browser.isSafari = goog.labs.userAgent.browser.matchSafari_;
goog.labs.userAgent.browser.isChrome = goog.labs.userAgent.browser.matchChrome_;
goog.labs.userAgent.browser.isAndroidBrowser = goog.labs.userAgent.browser.matchAndroidBrowser_;
goog.labs.userAgent.browser.isSilk = function() {
  return goog.labs.userAgent.util.matchUserAgent("Silk");
};
goog.labs.userAgent.browser.getVersion = function() {
  var userAgentString = goog.labs.userAgent.util.getUserAgent();
  if (goog.labs.userAgent.browser.isIE()) {
    return goog.labs.userAgent.browser.getIEVersion_(userAgentString);
  }
  if (goog.labs.userAgent.browser.isOpera()) {
    return goog.labs.userAgent.browser.getOperaVersion_(userAgentString);
  }
  var versionTuples = goog.labs.userAgent.util.extractVersionTuples(userAgentString);
  return goog.labs.userAgent.browser.getVersionFromTuples_(versionTuples);
};
goog.labs.userAgent.browser.isVersionOrHigher = function(version) {
  return goog.string.compareVersions(goog.labs.userAgent.browser.getVersion(), version) >= 0;
};
goog.labs.userAgent.browser.getIEVersion_ = function(userAgent) {
  var rv = /rv: *([\d\.]*)/.exec(userAgent);
  if (rv && rv[1]) {
    return rv[1];
  }
  var version = "";
  var msie = /MSIE +([\d\.]+)/.exec(userAgent);
  if (msie && msie[1]) {
    var tridentVersion = /Trident\/(\d.\d)/.exec(userAgent);
    if (msie[1] == "7.0") {
      if (tridentVersion && tridentVersion[1]) {
        switch(tridentVersion[1]) {
          case "4.0":
            version = "8.0";
            break;
          case "5.0":
            version = "9.0";
            break;
          case "6.0":
            version = "10.0";
            break;
          case "7.0":
            version = "11.0";
            break;
        }
      } else {
        version = "7.0";
      }
    } else {
      version = msie[1];
    }
  }
  return version;
};
goog.labs.userAgent.browser.getOperaVersion_ = function(userAgent) {
  var versionTuples = goog.labs.userAgent.util.extractVersionTuples(userAgent);
  var lastTuple = goog.array.peek(versionTuples);
  if (lastTuple[0] == "OPR" && lastTuple[1]) {
    return lastTuple[1];
  }
  return goog.labs.userAgent.browser.getVersionFromTuples_(versionTuples);
};
goog.labs.userAgent.browser.getVersionFromTuples_ = function(versionTuples) {
  goog.asserts.assert(versionTuples.length > 2, "Couldn't extract version tuple from user agent string");
  return versionTuples[2] && versionTuples[2][1] ? versionTuples[2][1] : "";
};
goog.provide("goog.labs.userAgent.engine");
goog.require("goog.array");
goog.require("goog.labs.userAgent.util");
goog.require("goog.string");
goog.labs.userAgent.engine.isPresto = function() {
  return goog.labs.userAgent.util.matchUserAgent("Presto");
};
goog.labs.userAgent.engine.isTrident = function() {
  return goog.labs.userAgent.util.matchUserAgent("Trident") || goog.labs.userAgent.util.matchUserAgent("MSIE");
};
goog.labs.userAgent.engine.isWebKit = function() {
  return goog.labs.userAgent.util.matchUserAgentIgnoreCase("WebKit");
};
goog.labs.userAgent.engine.isGecko = function() {
  return goog.labs.userAgent.util.matchUserAgent("Gecko") && !goog.labs.userAgent.engine.isWebKit() && !goog.labs.userAgent.engine.isTrident();
};
goog.labs.userAgent.engine.getVersion = function() {
  var userAgentString = goog.labs.userAgent.util.getUserAgent();
  if (userAgentString) {
    var tuples = goog.labs.userAgent.util.extractVersionTuples(userAgentString);
    var engineTuple = tuples[1];
    if (engineTuple) {
      if (engineTuple[0] == "Gecko") {
        return goog.labs.userAgent.engine.getVersionForKey_(tuples, "Firefox");
      }
      return engineTuple[1];
    }
    var browserTuple = tuples[0];
    var info;
    if (browserTuple && (info = browserTuple[2])) {
      var match = /Trident\/([^\s;]+)/.exec(info);
      if (match) {
        return match[1];
      }
    }
  }
  return "";
};
goog.labs.userAgent.engine.isVersionOrHigher = function(version) {
  return goog.string.compareVersions(goog.labs.userAgent.engine.getVersion(), version) >= 0;
};
goog.labs.userAgent.engine.getVersionForKey_ = function(tuples, key) {
  var pair = goog.array.find(tuples, function(pair) {
    return key == pair[0];
  });
  return pair && pair[1] || "";
};
goog.provide("goog.userAgent");
goog.require("goog.labs.userAgent.browser");
goog.require("goog.labs.userAgent.engine");
goog.require("goog.labs.userAgent.util");
goog.require("goog.string");
goog.define("goog.userAgent.ASSUME_IE", false);
goog.define("goog.userAgent.ASSUME_GECKO", false);
goog.define("goog.userAgent.ASSUME_WEBKIT", false);
goog.define("goog.userAgent.ASSUME_MOBILE_WEBKIT", false);
goog.define("goog.userAgent.ASSUME_OPERA", false);
goog.define("goog.userAgent.ASSUME_ANY_VERSION", false);
goog.userAgent.BROWSER_KNOWN_ = goog.userAgent.ASSUME_IE || goog.userAgent.ASSUME_GECKO || goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_OPERA;
goog.userAgent.getUserAgentString = function() {
  return goog.labs.userAgent.util.getUserAgent();
};
goog.userAgent.getNavigator = function() {
  return goog.global["navigator"] || null;
};
goog.userAgent.OPERA = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_OPERA : goog.labs.userAgent.browser.isOpera();
goog.userAgent.IE = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_IE : goog.labs.userAgent.browser.isIE();
goog.userAgent.GECKO = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_GECKO : goog.labs.userAgent.engine.isGecko();
goog.userAgent.WEBKIT = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_MOBILE_WEBKIT : goog.labs.userAgent.engine.isWebKit();
goog.userAgent.isMobile_ = function() {
  return goog.userAgent.WEBKIT && goog.labs.userAgent.util.matchUserAgent("Mobile");
};
goog.userAgent.MOBILE = goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.isMobile_();
goog.userAgent.SAFARI = goog.userAgent.WEBKIT;
goog.userAgent.determinePlatform_ = function() {
  var navigator = goog.userAgent.getNavigator();
  return navigator && navigator.platform || "";
};
goog.userAgent.PLATFORM = goog.userAgent.determinePlatform_();
goog.define("goog.userAgent.ASSUME_MAC", false);
goog.define("goog.userAgent.ASSUME_WINDOWS", false);
goog.define("goog.userAgent.ASSUME_LINUX", false);
goog.define("goog.userAgent.ASSUME_X11", false);
goog.define("goog.userAgent.ASSUME_ANDROID", false);
goog.define("goog.userAgent.ASSUME_IPHONE", false);
goog.define("goog.userAgent.ASSUME_IPAD", false);
goog.userAgent.PLATFORM_KNOWN_ = goog.userAgent.ASSUME_MAC || goog.userAgent.ASSUME_WINDOWS || goog.userAgent.ASSUME_LINUX || goog.userAgent.ASSUME_X11 || goog.userAgent.ASSUME_ANDROID || goog.userAgent.ASSUME_IPHONE || goog.userAgent.ASSUME_IPAD;
goog.userAgent.initPlatform_ = function() {
  goog.userAgent.detectedMac_ = goog.string.contains(goog.userAgent.PLATFORM, "Mac");
  goog.userAgent.detectedWindows_ = goog.string.contains(goog.userAgent.PLATFORM, "Win");
  goog.userAgent.detectedLinux_ = goog.string.contains(goog.userAgent.PLATFORM, "Linux");
  goog.userAgent.detectedX11_ = !!goog.userAgent.getNavigator() && goog.string.contains(goog.userAgent.getNavigator()["appVersion"] || "", "X11");
  var ua = goog.userAgent.getUserAgentString();
  goog.userAgent.detectedAndroid_ = !!ua && goog.string.contains(ua, "Android");
  goog.userAgent.detectedIPhone_ = !!ua && goog.string.contains(ua, "iPhone");
  goog.userAgent.detectedIPad_ = !!ua && goog.string.contains(ua, "iPad");
};
if (!goog.userAgent.PLATFORM_KNOWN_) {
  goog.userAgent.initPlatform_();
}
goog.userAgent.MAC = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_MAC : goog.userAgent.detectedMac_;
goog.userAgent.WINDOWS = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_WINDOWS : goog.userAgent.detectedWindows_;
goog.userAgent.LINUX = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_LINUX : goog.userAgent.detectedLinux_;
goog.userAgent.X11 = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_X11 : goog.userAgent.detectedX11_;
goog.userAgent.ANDROID = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_ANDROID : goog.userAgent.detectedAndroid_;
goog.userAgent.IPHONE = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPHONE : goog.userAgent.detectedIPhone_;
goog.userAgent.IPAD = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPAD : goog.userAgent.detectedIPad_;
goog.userAgent.determineVersion_ = function() {
  var version = "", re;
  if (goog.userAgent.OPERA && goog.global["opera"]) {
    var operaVersion = goog.global["opera"].version;
    return goog.isFunction(operaVersion) ? operaVersion() : operaVersion;
  }
  if (goog.userAgent.GECKO) {
    re = /rv\:([^\);]+)(\)|;)/;
  } else {
    if (goog.userAgent.IE) {
      re = /\b(?:MSIE|rv)[: ]([^\);]+)(\)|;)/;
    } else {
      if (goog.userAgent.WEBKIT) {
        re = /WebKit\/(\S+)/;
      }
    }
  }
  if (re) {
    var arr = re.exec(goog.userAgent.getUserAgentString());
    version = arr ? arr[1] : "";
  }
  if (goog.userAgent.IE) {
    var docMode = goog.userAgent.getDocumentMode_();
    if (docMode > parseFloat(version)) {
      return String(docMode);
    }
  }
  return version;
};
goog.userAgent.getDocumentMode_ = function() {
  var doc = goog.global["document"];
  return doc ? doc["documentMode"] : undefined;
};
goog.userAgent.VERSION = goog.userAgent.determineVersion_();
goog.userAgent.compare = function(v1, v2) {
  return goog.string.compareVersions(v1, v2);
};
goog.userAgent.isVersionOrHigherCache_ = {};
goog.userAgent.isVersionOrHigher = function(version) {
  return goog.userAgent.ASSUME_ANY_VERSION || goog.userAgent.isVersionOrHigherCache_[version] || (goog.userAgent.isVersionOrHigherCache_[version] = goog.string.compareVersions(goog.userAgent.VERSION, version) >= 0);
};
goog.userAgent.isVersion = goog.userAgent.isVersionOrHigher;
goog.userAgent.isDocumentModeOrHigher = function(documentMode) {
  return goog.userAgent.IE && goog.userAgent.DOCUMENT_MODE >= documentMode;
};
goog.userAgent.isDocumentMode = goog.userAgent.isDocumentModeOrHigher;
goog.userAgent.DOCUMENT_MODE = function() {
  var doc = goog.global["document"];
  if (!doc || !goog.userAgent.IE) {
    return undefined;
  }
  var mode = goog.userAgent.getDocumentMode_();
  return mode || (doc["compatMode"] == "CSS1Compat" ? parseInt(goog.userAgent.VERSION, 10) : 5);
}();
goog.provide("goog.uri.utils");
goog.provide("goog.uri.utils.ComponentIndex");
goog.provide("goog.uri.utils.QueryArray");
goog.provide("goog.uri.utils.QueryValue");
goog.provide("goog.uri.utils.StandardQueryParam");
goog.require("goog.asserts");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.uri.utils.CharCode_ = {AMPERSAND:38, EQUAL:61, HASH:35, QUESTION:63};
goog.uri.utils.buildFromEncodedParts = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {
  var out = "";
  if (opt_scheme) {
    out += opt_scheme + ":";
  }
  if (opt_domain) {
    out += "//";
    if (opt_userInfo) {
      out += opt_userInfo + "@";
    }
    out += opt_domain;
    if (opt_port) {
      out += ":" + opt_port;
    }
  }
  if (opt_path) {
    out += opt_path;
  }
  if (opt_queryData) {
    out += "?" + opt_queryData;
  }
  if (opt_fragment) {
    out += "#" + opt_fragment;
  }
  return out;
};
goog.uri.utils.splitRe_ = new RegExp("^" + "(?:" + "([^:/?#.]+)" + ":)?" + "(?://" + "(?:([^/?#]*)@)?" + "([^/#?]*?)" + "(?::([0-9]+))?" + "(?\x3d[/#?]|$)" + ")?" + "([^?#]+)?" + "(?:\\?([^#]*))?" + "(?:#(.*))?" + "$");
goog.uri.utils.ComponentIndex = {SCHEME:1, USER_INFO:2, DOMAIN:3, PORT:4, PATH:5, QUERY_DATA:6, FRAGMENT:7};
goog.uri.utils.split = function(uri) {
  goog.uri.utils.phishingProtection_();
  return(uri.match(goog.uri.utils.splitRe_));
};
goog.uri.utils.needsPhishingProtection_ = goog.userAgent.WEBKIT;
goog.uri.utils.phishingProtection_ = function() {
  if (goog.uri.utils.needsPhishingProtection_) {
    goog.uri.utils.needsPhishingProtection_ = false;
    var location = goog.global["location"];
    if (location) {
      var href = location["href"];
      if (href) {
        var domain = goog.uri.utils.getDomain(href);
        if (domain && domain != location["hostname"]) {
          goog.uri.utils.needsPhishingProtection_ = true;
          throw Error();
        }
      }
    }
  }
};
goog.uri.utils.decodeIfPossible_ = function(uri) {
  return uri && decodeURIComponent(uri);
};
goog.uri.utils.getComponentByIndex_ = function(componentIndex, uri) {
  return goog.uri.utils.split(uri)[componentIndex] || null;
};
goog.uri.utils.getScheme = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.SCHEME, uri);
};
goog.uri.utils.getEffectiveScheme = function(uri) {
  var scheme = goog.uri.utils.getScheme(uri);
  if (!scheme && self.location) {
    var protocol = self.location.protocol;
    scheme = protocol.substr(0, protocol.length - 1);
  }
  return scheme ? scheme.toLowerCase() : "";
};
goog.uri.utils.getUserInfoEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.USER_INFO, uri);
};
goog.uri.utils.getUserInfo = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getUserInfoEncoded(uri));
};
goog.uri.utils.getDomainEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.DOMAIN, uri);
};
goog.uri.utils.getDomain = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getDomainEncoded(uri));
};
goog.uri.utils.getPort = function(uri) {
  return Number(goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PORT, uri)) || null;
};
goog.uri.utils.getPathEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PATH, uri);
};
goog.uri.utils.getPath = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getPathEncoded(uri));
};
goog.uri.utils.getQueryData = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.QUERY_DATA, uri);
};
goog.uri.utils.getFragmentEncoded = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? null : uri.substr(hashIndex + 1);
};
goog.uri.utils.setFragmentEncoded = function(uri, fragment) {
  return goog.uri.utils.removeFragment(uri) + (fragment ? "#" + fragment : "");
};
goog.uri.utils.getFragment = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getFragmentEncoded(uri));
};
goog.uri.utils.getHost = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(pieces[goog.uri.utils.ComponentIndex.SCHEME], pieces[goog.uri.utils.ComponentIndex.USER_INFO], pieces[goog.uri.utils.ComponentIndex.DOMAIN], pieces[goog.uri.utils.ComponentIndex.PORT]);
};
goog.uri.utils.getPathAndAfter = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(null, null, null, null, pieces[goog.uri.utils.ComponentIndex.PATH], pieces[goog.uri.utils.ComponentIndex.QUERY_DATA], pieces[goog.uri.utils.ComponentIndex.FRAGMENT]);
};
goog.uri.utils.removeFragment = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? uri : uri.substr(0, hashIndex);
};
goog.uri.utils.haveSameDomain = function(uri1, uri2) {
  var pieces1 = goog.uri.utils.split(uri1);
  var pieces2 = goog.uri.utils.split(uri2);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.SCHEME] == pieces2[goog.uri.utils.ComponentIndex.SCHEME] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT];
};
goog.uri.utils.assertNoFragmentsOrQueries_ = function(uri) {
  if (goog.DEBUG && (uri.indexOf("#") >= 0 || uri.indexOf("?") >= 0)) {
    throw Error("goog.uri.utils: Fragment or query identifiers are not " + "supported: [" + uri + "]");
  }
};
goog.uri.utils.QueryValue;
goog.uri.utils.QueryArray;
goog.uri.utils.appendQueryData_ = function(buffer) {
  if (buffer[1]) {
    var baseUri = (buffer[0]);
    var hashIndex = baseUri.indexOf("#");
    if (hashIndex >= 0) {
      buffer.push(baseUri.substr(hashIndex));
      buffer[0] = baseUri = baseUri.substr(0, hashIndex);
    }
    var questionIndex = baseUri.indexOf("?");
    if (questionIndex < 0) {
      buffer[1] = "?";
    } else {
      if (questionIndex == baseUri.length - 1) {
        buffer[1] = undefined;
      }
    }
  }
  return buffer.join("");
};
goog.uri.utils.appendKeyValuePairs_ = function(key, value, pairs) {
  if (goog.isArray(value)) {
    goog.asserts.assertArray(value);
    for (var j = 0;j < value.length;j++) {
      goog.uri.utils.appendKeyValuePairs_(key, String(value[j]), pairs);
    }
  } else {
    if (value != null) {
      pairs.push("\x26", key, value === "" ? "" : "\x3d", goog.string.urlEncode(value));
    }
  }
};
goog.uri.utils.buildQueryDataBuffer_ = function(buffer, keysAndValues, opt_startIndex) {
  goog.asserts.assert(Math.max(keysAndValues.length - (opt_startIndex || 0), 0) % 2 == 0, "goog.uri.utils: Key/value lists must be even in length.");
  for (var i = opt_startIndex || 0;i < keysAndValues.length;i += 2) {
    goog.uri.utils.appendKeyValuePairs_(keysAndValues[i], keysAndValues[i + 1], buffer);
  }
  return buffer;
};
goog.uri.utils.buildQueryData = function(keysAndValues, opt_startIndex) {
  var buffer = goog.uri.utils.buildQueryDataBuffer_([], keysAndValues, opt_startIndex);
  buffer[0] = "";
  return buffer.join("");
};
goog.uri.utils.buildQueryDataBufferFromMap_ = function(buffer, map) {
  for (var key in map) {
    goog.uri.utils.appendKeyValuePairs_(key, map[key], buffer);
  }
  return buffer;
};
goog.uri.utils.buildQueryDataFromMap = function(map) {
  var buffer = goog.uri.utils.buildQueryDataBufferFromMap_([], map);
  buffer[0] = "";
  return buffer.join("");
};
goog.uri.utils.appendParams = function(uri, var_args) {
  return goog.uri.utils.appendQueryData_(arguments.length == 2 ? goog.uri.utils.buildQueryDataBuffer_([uri], arguments[1], 0) : goog.uri.utils.buildQueryDataBuffer_([uri], arguments, 1));
};
goog.uri.utils.appendParamsFromMap = function(uri, map) {
  return goog.uri.utils.appendQueryData_(goog.uri.utils.buildQueryDataBufferFromMap_([uri], map));
};
goog.uri.utils.appendParam = function(uri, key, opt_value) {
  var paramArr = [uri, "\x26", key];
  if (goog.isDefAndNotNull(opt_value)) {
    paramArr.push("\x3d", goog.string.urlEncode(opt_value));
  }
  return goog.uri.utils.appendQueryData_(paramArr);
};
goog.uri.utils.findParam_ = function(uri, startIndex, keyEncoded, hashOrEndIndex) {
  var index = startIndex;
  var keyLength = keyEncoded.length;
  while ((index = uri.indexOf(keyEncoded, index)) >= 0 && index < hashOrEndIndex) {
    var precedingChar = uri.charCodeAt(index - 1);
    if (precedingChar == goog.uri.utils.CharCode_.AMPERSAND || precedingChar == goog.uri.utils.CharCode_.QUESTION) {
      var followingChar = uri.charCodeAt(index + keyLength);
      if (!followingChar || followingChar == goog.uri.utils.CharCode_.EQUAL || followingChar == goog.uri.utils.CharCode_.AMPERSAND || followingChar == goog.uri.utils.CharCode_.HASH) {
        return index;
      }
    }
    index += keyLength + 1;
  }
  return-1;
};
goog.uri.utils.hashOrEndRe_ = /#|$/;
goog.uri.utils.hasParam = function(uri, keyEncoded) {
  return goog.uri.utils.findParam_(uri, 0, keyEncoded, uri.search(goog.uri.utils.hashOrEndRe_)) >= 0;
};
goog.uri.utils.getParamValue = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var foundIndex = goog.uri.utils.findParam_(uri, 0, keyEncoded, hashOrEndIndex);
  if (foundIndex < 0) {
    return null;
  } else {
    var endPosition = uri.indexOf("\x26", foundIndex);
    if (endPosition < 0 || endPosition > hashOrEndIndex) {
      endPosition = hashOrEndIndex;
    }
    foundIndex += keyEncoded.length + 1;
    return goog.string.urlDecode(uri.substr(foundIndex, endPosition - foundIndex));
  }
};
goog.uri.utils.getParamValues = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var result = [];
  while ((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    position = uri.indexOf("\x26", foundIndex);
    if (position < 0 || position > hashOrEndIndex) {
      position = hashOrEndIndex;
    }
    foundIndex += keyEncoded.length + 1;
    result.push(goog.string.urlDecode(uri.substr(foundIndex, position - foundIndex)));
  }
  return result;
};
goog.uri.utils.trailingQueryPunctuationRe_ = /[?&]($|#)/;
goog.uri.utils.removeParam = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var buffer = [];
  while ((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    buffer.push(uri.substring(position, foundIndex));
    position = Math.min(uri.indexOf("\x26", foundIndex) + 1 || hashOrEndIndex, hashOrEndIndex);
  }
  buffer.push(uri.substr(position));
  return buffer.join("").replace(goog.uri.utils.trailingQueryPunctuationRe_, "$1");
};
goog.uri.utils.setParam = function(uri, keyEncoded, value) {
  return goog.uri.utils.appendParam(goog.uri.utils.removeParam(uri, keyEncoded), keyEncoded, value);
};
goog.uri.utils.appendPath = function(baseUri, path) {
  goog.uri.utils.assertNoFragmentsOrQueries_(baseUri);
  if (goog.string.endsWith(baseUri, "/")) {
    baseUri = baseUri.substr(0, baseUri.length - 1);
  }
  if (goog.string.startsWith(path, "/")) {
    path = path.substr(1);
  }
  return goog.string.buildString(baseUri, "/", path);
};
goog.uri.utils.setPath = function(uri, path) {
  if (!goog.string.startsWith(path, "/")) {
    path = "/" + path;
  }
  var parts = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(parts[goog.uri.utils.ComponentIndex.SCHEME], parts[goog.uri.utils.ComponentIndex.USER_INFO], parts[goog.uri.utils.ComponentIndex.DOMAIN], parts[goog.uri.utils.ComponentIndex.PORT], path, parts[goog.uri.utils.ComponentIndex.QUERY_DATA], parts[goog.uri.utils.ComponentIndex.FRAGMENT]);
};
goog.uri.utils.StandardQueryParam = {RANDOM:"zx"};
goog.uri.utils.makeUnique = function(uri) {
  return goog.uri.utils.setParam(uri, goog.uri.utils.StandardQueryParam.RANDOM, goog.string.getRandomString());
};
goog.provide("goog.Uri");
goog.provide("goog.Uri.QueryData");
goog.require("goog.array");
goog.require("goog.string");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.require("goog.uri.utils");
goog.require("goog.uri.utils.ComponentIndex");
goog.require("goog.uri.utils.StandardQueryParam");
goog.Uri = function(opt_uri, opt_ignoreCase) {
  var m;
  if (opt_uri instanceof goog.Uri) {
    this.ignoreCase_ = goog.isDef(opt_ignoreCase) ? opt_ignoreCase : opt_uri.getIgnoreCase();
    this.setScheme(opt_uri.getScheme());
    this.setUserInfo(opt_uri.getUserInfo());
    this.setDomain(opt_uri.getDomain());
    this.setPort(opt_uri.getPort());
    this.setPath(opt_uri.getPath());
    this.setQueryData(opt_uri.getQueryData().clone());
    this.setFragment(opt_uri.getFragment());
  } else {
    if (opt_uri && (m = goog.uri.utils.split(String(opt_uri)))) {
      this.ignoreCase_ = !!opt_ignoreCase;
      this.setScheme(m[goog.uri.utils.ComponentIndex.SCHEME] || "", true);
      this.setUserInfo(m[goog.uri.utils.ComponentIndex.USER_INFO] || "", true);
      this.setDomain(m[goog.uri.utils.ComponentIndex.DOMAIN] || "", true);
      this.setPort(m[goog.uri.utils.ComponentIndex.PORT]);
      this.setPath(m[goog.uri.utils.ComponentIndex.PATH] || "", true);
      this.setQueryData(m[goog.uri.utils.ComponentIndex.QUERY_DATA] || "", true);
      this.setFragment(m[goog.uri.utils.ComponentIndex.FRAGMENT] || "", true);
    } else {
      this.ignoreCase_ = !!opt_ignoreCase;
      this.queryData_ = new goog.Uri.QueryData(null, null, this.ignoreCase_);
    }
  }
};
goog.Uri.preserveParameterTypesCompatibilityFlag = false;
goog.Uri.RANDOM_PARAM = goog.uri.utils.StandardQueryParam.RANDOM;
goog.Uri.prototype.scheme_ = "";
goog.Uri.prototype.userInfo_ = "";
goog.Uri.prototype.domain_ = "";
goog.Uri.prototype.port_ = null;
goog.Uri.prototype.path_ = "";
goog.Uri.prototype.queryData_;
goog.Uri.prototype.fragment_ = "";
goog.Uri.prototype.isReadOnly_ = false;
goog.Uri.prototype.ignoreCase_ = false;
goog.Uri.prototype.toString = function() {
  var out = [];
  var scheme = this.getScheme();
  if (scheme) {
    out.push(goog.Uri.encodeSpecialChars_(scheme, goog.Uri.reDisallowedInSchemeOrUserInfo_), ":");
  }
  var domain = this.getDomain();
  if (domain) {
    out.push("//");
    var userInfo = this.getUserInfo();
    if (userInfo) {
      out.push(goog.Uri.encodeSpecialChars_(userInfo, goog.Uri.reDisallowedInSchemeOrUserInfo_), "@");
    }
    out.push(goog.string.urlEncode(domain));
    var port = this.getPort();
    if (port != null) {
      out.push(":", String(port));
    }
  }
  var path = this.getPath();
  if (path) {
    if (this.hasDomain() && path.charAt(0) != "/") {
      out.push("/");
    }
    out.push(goog.Uri.encodeSpecialChars_(path, path.charAt(0) == "/" ? goog.Uri.reDisallowedInAbsolutePath_ : goog.Uri.reDisallowedInRelativePath_));
  }
  var query = this.getEncodedQuery();
  if (query) {
    out.push("?", query);
  }
  var fragment = this.getFragment();
  if (fragment) {
    out.push("#", goog.Uri.encodeSpecialChars_(fragment, goog.Uri.reDisallowedInFragment_));
  }
  return out.join("");
};
goog.Uri.prototype.resolve = function(relativeUri) {
  var absoluteUri = this.clone();
  var overridden = relativeUri.hasScheme();
  if (overridden) {
    absoluteUri.setScheme(relativeUri.getScheme());
  } else {
    overridden = relativeUri.hasUserInfo();
  }
  if (overridden) {
    absoluteUri.setUserInfo(relativeUri.getUserInfo());
  } else {
    overridden = relativeUri.hasDomain();
  }
  if (overridden) {
    absoluteUri.setDomain(relativeUri.getDomain());
  } else {
    overridden = relativeUri.hasPort();
  }
  var path = relativeUri.getPath();
  if (overridden) {
    absoluteUri.setPort(relativeUri.getPort());
  } else {
    overridden = relativeUri.hasPath();
    if (overridden) {
      if (path.charAt(0) != "/") {
        if (this.hasDomain() && !this.hasPath()) {
          path = "/" + path;
        } else {
          var lastSlashIndex = absoluteUri.getPath().lastIndexOf("/");
          if (lastSlashIndex != -1) {
            path = absoluteUri.getPath().substr(0, lastSlashIndex + 1) + path;
          }
        }
      }
      path = goog.Uri.removeDotSegments(path);
    }
  }
  if (overridden) {
    absoluteUri.setPath(path);
  } else {
    overridden = relativeUri.hasQuery();
  }
  if (overridden) {
    absoluteUri.setQueryData(relativeUri.getDecodedQuery());
  } else {
    overridden = relativeUri.hasFragment();
  }
  if (overridden) {
    absoluteUri.setFragment(relativeUri.getFragment());
  }
  return absoluteUri;
};
goog.Uri.prototype.clone = function() {
  return new goog.Uri(this);
};
goog.Uri.prototype.getScheme = function() {
  return this.scheme_;
};
goog.Uri.prototype.setScheme = function(newScheme, opt_decode) {
  this.enforceReadOnly();
  this.scheme_ = opt_decode ? goog.Uri.decodeOrEmpty_(newScheme) : newScheme;
  if (this.scheme_) {
    this.scheme_ = this.scheme_.replace(/:$/, "");
  }
  return this;
};
goog.Uri.prototype.hasScheme = function() {
  return!!this.scheme_;
};
goog.Uri.prototype.getUserInfo = function() {
  return this.userInfo_;
};
goog.Uri.prototype.setUserInfo = function(newUserInfo, opt_decode) {
  this.enforceReadOnly();
  this.userInfo_ = opt_decode ? goog.Uri.decodeOrEmpty_(newUserInfo) : newUserInfo;
  return this;
};
goog.Uri.prototype.hasUserInfo = function() {
  return!!this.userInfo_;
};
goog.Uri.prototype.getDomain = function() {
  return this.domain_;
};
goog.Uri.prototype.setDomain = function(newDomain, opt_decode) {
  this.enforceReadOnly();
  this.domain_ = opt_decode ? goog.Uri.decodeOrEmpty_(newDomain) : newDomain;
  return this;
};
goog.Uri.prototype.hasDomain = function() {
  return!!this.domain_;
};
goog.Uri.prototype.getPort = function() {
  return this.port_;
};
goog.Uri.prototype.setPort = function(newPort) {
  this.enforceReadOnly();
  if (newPort) {
    newPort = Number(newPort);
    if (isNaN(newPort) || newPort < 0) {
      throw Error("Bad port number " + newPort);
    }
    this.port_ = newPort;
  } else {
    this.port_ = null;
  }
  return this;
};
goog.Uri.prototype.hasPort = function() {
  return this.port_ != null;
};
goog.Uri.prototype.getPath = function() {
  return this.path_;
};
goog.Uri.prototype.setPath = function(newPath, opt_decode) {
  this.enforceReadOnly();
  this.path_ = opt_decode ? goog.Uri.decodeOrEmpty_(newPath) : newPath;
  return this;
};
goog.Uri.prototype.hasPath = function() {
  return!!this.path_;
};
goog.Uri.prototype.hasQuery = function() {
  return this.queryData_.toString() !== "";
};
goog.Uri.prototype.setQueryData = function(queryData, opt_decode) {
  this.enforceReadOnly();
  if (queryData instanceof goog.Uri.QueryData) {
    this.queryData_ = queryData;
    this.queryData_.setIgnoreCase(this.ignoreCase_);
  } else {
    if (!opt_decode) {
      queryData = goog.Uri.encodeSpecialChars_(queryData, goog.Uri.reDisallowedInQuery_);
    }
    this.queryData_ = new goog.Uri.QueryData(queryData, null, this.ignoreCase_);
  }
  return this;
};
goog.Uri.prototype.setQuery = function(newQuery, opt_decode) {
  return this.setQueryData(newQuery, opt_decode);
};
goog.Uri.prototype.getEncodedQuery = function() {
  return this.queryData_.toString();
};
goog.Uri.prototype.getDecodedQuery = function() {
  return this.queryData_.toDecodedString();
};
goog.Uri.prototype.getQueryData = function() {
  return this.queryData_;
};
goog.Uri.prototype.getQuery = function() {
  return this.getEncodedQuery();
};
goog.Uri.prototype.setParameterValue = function(key, value) {
  this.enforceReadOnly();
  this.queryData_.set(key, value);
  return this;
};
goog.Uri.prototype.setParameterValues = function(key, values) {
  this.enforceReadOnly();
  if (!goog.isArray(values)) {
    values = [String(values)];
  }
  this.queryData_.setValues(key, (values));
  return this;
};
goog.Uri.prototype.getParameterValues = function(name) {
  return this.queryData_.getValues(name);
};
goog.Uri.prototype.getParameterValue = function(paramName) {
  return(this.queryData_.get(paramName));
};
goog.Uri.prototype.getFragment = function() {
  return this.fragment_;
};
goog.Uri.prototype.setFragment = function(newFragment, opt_decode) {
  this.enforceReadOnly();
  this.fragment_ = opt_decode ? goog.Uri.decodeOrEmpty_(newFragment) : newFragment;
  return this;
};
goog.Uri.prototype.hasFragment = function() {
  return!!this.fragment_;
};
goog.Uri.prototype.hasSameDomainAs = function(uri2) {
  return(!this.hasDomain() && !uri2.hasDomain() || this.getDomain() == uri2.getDomain()) && (!this.hasPort() && !uri2.hasPort() || this.getPort() == uri2.getPort());
};
goog.Uri.prototype.makeUnique = function() {
  this.enforceReadOnly();
  this.setParameterValue(goog.Uri.RANDOM_PARAM, goog.string.getRandomString());
  return this;
};
goog.Uri.prototype.removeParameter = function(key) {
  this.enforceReadOnly();
  this.queryData_.remove(key);
  return this;
};
goog.Uri.prototype.setReadOnly = function(isReadOnly) {
  this.isReadOnly_ = isReadOnly;
  return this;
};
goog.Uri.prototype.isReadOnly = function() {
  return this.isReadOnly_;
};
goog.Uri.prototype.enforceReadOnly = function() {
  if (this.isReadOnly_) {
    throw Error("Tried to modify a read-only Uri");
  }
};
goog.Uri.prototype.setIgnoreCase = function(ignoreCase) {
  this.ignoreCase_ = ignoreCase;
  if (this.queryData_) {
    this.queryData_.setIgnoreCase(ignoreCase);
  }
  return this;
};
goog.Uri.prototype.getIgnoreCase = function() {
  return this.ignoreCase_;
};
goog.Uri.parse = function(uri, opt_ignoreCase) {
  return uri instanceof goog.Uri ? uri.clone() : new goog.Uri(uri, opt_ignoreCase);
};
goog.Uri.create = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_query, opt_fragment, opt_ignoreCase) {
  var uri = new goog.Uri(null, opt_ignoreCase);
  opt_scheme && uri.setScheme(opt_scheme);
  opt_userInfo && uri.setUserInfo(opt_userInfo);
  opt_domain && uri.setDomain(opt_domain);
  opt_port && uri.setPort(opt_port);
  opt_path && uri.setPath(opt_path);
  opt_query && uri.setQueryData(opt_query);
  opt_fragment && uri.setFragment(opt_fragment);
  return uri;
};
goog.Uri.resolve = function(base, rel) {
  if (!(base instanceof goog.Uri)) {
    base = goog.Uri.parse(base);
  }
  if (!(rel instanceof goog.Uri)) {
    rel = goog.Uri.parse(rel);
  }
  return base.resolve(rel);
};
goog.Uri.removeDotSegments = function(path) {
  if (path == ".." || path == ".") {
    return "";
  } else {
    if (!goog.string.contains(path, "./") && !goog.string.contains(path, "/.")) {
      return path;
    } else {
      var leadingSlash = goog.string.startsWith(path, "/");
      var segments = path.split("/");
      var out = [];
      for (var pos = 0;pos < segments.length;) {
        var segment = segments[pos++];
        if (segment == ".") {
          if (leadingSlash && pos == segments.length) {
            out.push("");
          }
        } else {
          if (segment == "..") {
            if (out.length > 1 || out.length == 1 && out[0] != "") {
              out.pop();
            }
            if (leadingSlash && pos == segments.length) {
              out.push("");
            }
          } else {
            out.push(segment);
            leadingSlash = true;
          }
        }
      }
      return out.join("/");
    }
  }
};
goog.Uri.decodeOrEmpty_ = function(val) {
  return val ? decodeURIComponent(val) : "";
};
goog.Uri.encodeSpecialChars_ = function(unescapedPart, extra) {
  if (goog.isString(unescapedPart)) {
    return encodeURI(unescapedPart).replace(extra, goog.Uri.encodeChar_);
  }
  return null;
};
goog.Uri.encodeChar_ = function(ch) {
  var n = ch.charCodeAt(0);
  return "%" + (n >> 4 & 15).toString(16) + (n & 15).toString(16);
};
goog.Uri.reDisallowedInSchemeOrUserInfo_ = /[#\/\?@]/g;
goog.Uri.reDisallowedInRelativePath_ = /[\#\?:]/g;
goog.Uri.reDisallowedInAbsolutePath_ = /[\#\?]/g;
goog.Uri.reDisallowedInQuery_ = /[\#\?@]/g;
goog.Uri.reDisallowedInFragment_ = /#/g;
goog.Uri.haveSameDomain = function(uri1String, uri2String) {
  var pieces1 = goog.uri.utils.split(uri1String);
  var pieces2 = goog.uri.utils.split(uri2String);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT];
};
goog.Uri.QueryData = function(opt_query, opt_uri, opt_ignoreCase) {
  this.encodedQuery_ = opt_query || null;
  this.ignoreCase_ = !!opt_ignoreCase;
};
goog.Uri.QueryData.prototype.ensureKeyMapInitialized_ = function() {
  if (!this.keyMap_) {
    this.keyMap_ = new goog.structs.Map;
    this.count_ = 0;
    if (this.encodedQuery_) {
      var pairs = this.encodedQuery_.split("\x26");
      for (var i = 0;i < pairs.length;i++) {
        var indexOfEquals = pairs[i].indexOf("\x3d");
        var name = null;
        var value = null;
        if (indexOfEquals >= 0) {
          name = pairs[i].substring(0, indexOfEquals);
          value = pairs[i].substring(indexOfEquals + 1);
        } else {
          name = pairs[i];
        }
        name = goog.string.urlDecode(name);
        name = this.getKeyName_(name);
        this.add(name, value ? goog.string.urlDecode(value) : "");
      }
    }
  }
};
goog.Uri.QueryData.createFromMap = function(map, opt_uri, opt_ignoreCase) {
  var keys = goog.structs.getKeys(map);
  if (typeof keys == "undefined") {
    throw Error("Keys are undefined");
  }
  var queryData = new goog.Uri.QueryData(null, null, opt_ignoreCase);
  var values = goog.structs.getValues(map);
  for (var i = 0;i < keys.length;i++) {
    var key = keys[i];
    var value = values[i];
    if (!goog.isArray(value)) {
      queryData.add(key, value);
    } else {
      queryData.setValues(key, value);
    }
  }
  return queryData;
};
goog.Uri.QueryData.createFromKeysValues = function(keys, values, opt_uri, opt_ignoreCase) {
  if (keys.length != values.length) {
    throw Error("Mismatched lengths for keys/values");
  }
  var queryData = new goog.Uri.QueryData(null, null, opt_ignoreCase);
  for (var i = 0;i < keys.length;i++) {
    queryData.add(keys[i], values[i]);
  }
  return queryData;
};
goog.Uri.QueryData.prototype.keyMap_ = null;
goog.Uri.QueryData.prototype.count_ = null;
goog.Uri.QueryData.prototype.getCount = function() {
  this.ensureKeyMapInitialized_();
  return this.count_;
};
goog.Uri.QueryData.prototype.add = function(key, value) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  var values = this.keyMap_.get(key);
  if (!values) {
    this.keyMap_.set(key, values = []);
  }
  values.push(value);
  this.count_++;
  return this;
};
goog.Uri.QueryData.prototype.remove = function(key) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  if (this.keyMap_.containsKey(key)) {
    this.invalidateCache_();
    this.count_ -= this.keyMap_.get(key).length;
    return this.keyMap_.remove(key);
  }
  return false;
};
goog.Uri.QueryData.prototype.clear = function() {
  this.invalidateCache_();
  this.keyMap_ = null;
  this.count_ = 0;
};
goog.Uri.QueryData.prototype.isEmpty = function() {
  this.ensureKeyMapInitialized_();
  return this.count_ == 0;
};
goog.Uri.QueryData.prototype.containsKey = function(key) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  return this.keyMap_.containsKey(key);
};
goog.Uri.QueryData.prototype.containsValue = function(value) {
  var vals = this.getValues();
  return goog.array.contains(vals, value);
};
goog.Uri.QueryData.prototype.getKeys = function() {
  this.ensureKeyMapInitialized_();
  var vals = (this.keyMap_.getValues());
  var keys = this.keyMap_.getKeys();
  var rv = [];
  for (var i = 0;i < keys.length;i++) {
    var val = vals[i];
    for (var j = 0;j < val.length;j++) {
      rv.push(keys[i]);
    }
  }
  return rv;
};
goog.Uri.QueryData.prototype.getValues = function(opt_key) {
  this.ensureKeyMapInitialized_();
  var rv = [];
  if (goog.isString(opt_key)) {
    if (this.containsKey(opt_key)) {
      rv = goog.array.concat(rv, this.keyMap_.get(this.getKeyName_(opt_key)));
    }
  } else {
    var values = (this.keyMap_.getValues());
    for (var i = 0;i < values.length;i++) {
      rv = goog.array.concat(rv, values[i]);
    }
  }
  return rv;
};
goog.Uri.QueryData.prototype.set = function(key, value) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  if (this.containsKey(key)) {
    this.count_ -= this.keyMap_.get(key).length;
  }
  this.keyMap_.set(key, [value]);
  this.count_++;
  return this;
};
goog.Uri.QueryData.prototype.get = function(key, opt_default) {
  var values = key ? this.getValues(key) : [];
  if (goog.Uri.preserveParameterTypesCompatibilityFlag) {
    return values.length > 0 ? values[0] : opt_default;
  } else {
    return values.length > 0 ? String(values[0]) : opt_default;
  }
};
goog.Uri.QueryData.prototype.setValues = function(key, values) {
  this.remove(key);
  if (values.length > 0) {
    this.invalidateCache_();
    this.keyMap_.set(this.getKeyName_(key), goog.array.clone(values));
    this.count_ += values.length;
  }
};
goog.Uri.QueryData.prototype.toString = function() {
  if (this.encodedQuery_) {
    return this.encodedQuery_;
  }
  if (!this.keyMap_) {
    return "";
  }
  var sb = [];
  var keys = this.keyMap_.getKeys();
  for (var i = 0;i < keys.length;i++) {
    var key = keys[i];
    var encodedKey = goog.string.urlEncode(key);
    var val = this.getValues(key);
    for (var j = 0;j < val.length;j++) {
      var param = encodedKey;
      if (val[j] !== "") {
        param += "\x3d" + goog.string.urlEncode(val[j]);
      }
      sb.push(param);
    }
  }
  return this.encodedQuery_ = sb.join("\x26");
};
goog.Uri.QueryData.prototype.toDecodedString = function() {
  return goog.Uri.decodeOrEmpty_(this.toString());
};
goog.Uri.QueryData.prototype.invalidateCache_ = function() {
  this.encodedQuery_ = null;
};
goog.Uri.QueryData.prototype.filterKeys = function(keys) {
  this.ensureKeyMapInitialized_();
  this.keyMap_.forEach(function(value, key) {
    if (!goog.array.contains(keys, key)) {
      this.remove(key);
    }
  }, this);
  return this;
};
goog.Uri.QueryData.prototype.clone = function() {
  var rv = new goog.Uri.QueryData;
  rv.encodedQuery_ = this.encodedQuery_;
  if (this.keyMap_) {
    rv.keyMap_ = this.keyMap_.clone();
    rv.count_ = this.count_;
  }
  return rv;
};
goog.Uri.QueryData.prototype.getKeyName_ = function(arg) {
  var keyName = String(arg);
  if (this.ignoreCase_) {
    keyName = keyName.toLowerCase();
  }
  return keyName;
};
goog.Uri.QueryData.prototype.setIgnoreCase = function(ignoreCase) {
  var resetKeys = ignoreCase && !this.ignoreCase_;
  if (resetKeys) {
    this.ensureKeyMapInitialized_();
    this.invalidateCache_();
    this.keyMap_.forEach(function(value, key) {
      var lowerCase = key.toLowerCase();
      if (key != lowerCase) {
        this.remove(key);
        this.setValues(lowerCase, value);
      }
    }, this);
  }
  this.ignoreCase_ = ignoreCase;
};
goog.Uri.QueryData.prototype.extend = function(var_args) {
  for (var i = 0;i < arguments.length;i++) {
    var data = arguments[i];
    goog.structs.forEach(data, function(value, key) {
      this.add(key, value);
    }, this);
  }
};
goog.provide("goog.Thenable");
goog.Thenable = function() {
};
goog.Thenable.prototype.then = function(opt_onFulfilled, opt_onRejected, opt_context) {
};
goog.Thenable.IMPLEMENTED_BY_PROP = "$goog_Thenable";
goog.Thenable.addImplementation = function(ctor) {
  goog.exportProperty(ctor.prototype, "then", ctor.prototype.then);
  if (COMPILED) {
    ctor.prototype[goog.Thenable.IMPLEMENTED_BY_PROP] = true;
  } else {
    ctor.prototype.$goog_Thenable = true;
  }
};
goog.Thenable.isImplementedBy = function(object) {
  if (!object) {
    return false;
  }
  try {
    if (COMPILED) {
      return!!object[goog.Thenable.IMPLEMENTED_BY_PROP];
    }
    return!!object.$goog_Thenable;
  } catch (e) {
    return false;
  }
};
goog.provide("goog.debug.EntryPointMonitor");
goog.provide("goog.debug.entryPointRegistry");
goog.require("goog.asserts");
goog.debug.EntryPointMonitor = function() {
};
goog.debug.EntryPointMonitor.prototype.wrap;
goog.debug.EntryPointMonitor.prototype.unwrap;
goog.debug.entryPointRegistry.refList_ = [];
goog.debug.entryPointRegistry.monitors_ = [];
goog.debug.entryPointRegistry.monitorsMayExist_ = false;
goog.debug.entryPointRegistry.register = function(callback) {
  goog.debug.entryPointRegistry.refList_[goog.debug.entryPointRegistry.refList_.length] = callback;
  if (goog.debug.entryPointRegistry.monitorsMayExist_) {
    var monitors = goog.debug.entryPointRegistry.monitors_;
    for (var i = 0;i < monitors.length;i++) {
      callback(goog.bind(monitors[i].wrap, monitors[i]));
    }
  }
};
goog.debug.entryPointRegistry.monitorAll = function(monitor) {
  goog.debug.entryPointRegistry.monitorsMayExist_ = true;
  var transformer = goog.bind(monitor.wrap, monitor);
  for (var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer);
  }
  goog.debug.entryPointRegistry.monitors_.push(monitor);
};
goog.debug.entryPointRegistry.unmonitorAllIfPossible = function(monitor) {
  var monitors = goog.debug.entryPointRegistry.monitors_;
  goog.asserts.assert(monitor == monitors[monitors.length - 1], "Only the most recent monitor can be unwrapped.");
  var transformer = goog.bind(monitor.unwrap, monitor);
  for (var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer);
  }
  monitors.length--;
};
goog.provide("goog.async.nextTick");
goog.provide("goog.async.throwException");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.functions");
goog.async.throwException = function(exception) {
  goog.global.setTimeout(function() {
    throw exception;
  }, 0);
};
goog.async.nextTick = function(callback, opt_context) {
  var cb = callback;
  if (opt_context) {
    cb = goog.bind(callback, opt_context);
  }
  cb = goog.async.nextTick.wrapCallback_(cb);
  if (goog.isFunction(goog.global.setImmediate)) {
    goog.global.setImmediate(cb);
    return;
  }
  if (!goog.async.nextTick.setImmediate_) {
    goog.async.nextTick.setImmediate_ = goog.async.nextTick.getSetImmediateEmulator_();
  }
  goog.async.nextTick.setImmediate_(cb);
};
goog.async.nextTick.setImmediate_;
goog.async.nextTick.getSetImmediateEmulator_ = function() {
  var Channel = goog.global["MessageChannel"];
  if (typeof Channel === "undefined" && typeof window !== "undefined" && window.postMessage && window.addEventListener) {
    Channel = function() {
      var iframe = document.createElement("iframe");
      iframe.style.display = "none";
      iframe.src = "";
      document.documentElement.appendChild(iframe);
      var win = iframe.contentWindow;
      var doc = win.document;
      doc.open();
      doc.write("");
      doc.close();
      var message = "callImmediate" + Math.random();
      var origin = win.location.protocol == "file:" ? "*" : win.location.protocol + "//" + win.location.host;
      var onmessage = goog.bind(function(e) {
        if (e.origin != origin && e.data != message) {
          return;
        }
        this["port1"].onmessage();
      }, this);
      win.addEventListener("message", onmessage, false);
      this["port1"] = {};
      this["port2"] = {postMessage:function() {
        win.postMessage(message, origin);
      }};
    };
  }
  if (typeof Channel !== "undefined") {
    var channel = new Channel;
    var head = {};
    var tail = head;
    channel["port1"].onmessage = function() {
      head = head.next;
      var cb = head.cb;
      head.cb = null;
      cb();
    };
    return function(cb) {
      tail.next = {cb:cb};
      tail = tail.next;
      channel["port2"].postMessage(0);
    };
  }
  if (typeof document !== "undefined" && "onreadystatechange" in document.createElement("script")) {
    return function(cb) {
      var script = document.createElement("script");
      script.onreadystatechange = function() {
        script.onreadystatechange = null;
        script.parentNode.removeChild(script);
        script = null;
        cb();
        cb = null;
      };
      document.documentElement.appendChild(script);
    };
  }
  return function(cb) {
    goog.global.setTimeout(cb, 0);
  };
};
goog.async.nextTick.wrapCallback_ = goog.functions.identity;
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.async.nextTick.wrapCallback_ = transformer;
});
goog.provide("goog.testing.watchers");
goog.testing.watchers.resetWatchers_ = [];
goog.testing.watchers.signalClockReset = function() {
  var watchers = goog.testing.watchers.resetWatchers_;
  for (var i = 0;i < watchers.length;i++) {
    goog.testing.watchers.resetWatchers_[i]();
  }
};
goog.testing.watchers.watchClockReset = function(fn) {
  goog.testing.watchers.resetWatchers_.push(fn);
};
goog.provide("goog.async.run");
goog.require("goog.async.nextTick");
goog.require("goog.async.throwException");
goog.require("goog.testing.watchers");
goog.async.run = function(callback, opt_context) {
  if (!goog.async.run.schedule_) {
    goog.async.run.initializeRunner_();
  }
  if (!goog.async.run.workQueueScheduled_) {
    goog.async.run.schedule_();
    goog.async.run.workQueueScheduled_ = true;
  }
  goog.async.run.workQueue_.push(new goog.async.run.WorkItem_(callback, opt_context));
};
goog.async.run.initializeRunner_ = function() {
  if (goog.global.Promise && goog.global.Promise.resolve) {
    var promise = goog.global.Promise.resolve();
    goog.async.run.schedule_ = function() {
      promise.then(goog.async.run.processWorkQueue);
    };
  } else {
    goog.async.run.schedule_ = function() {
      goog.async.nextTick(goog.async.run.processWorkQueue);
    };
  }
};
goog.async.run.forceNextTick = function() {
  goog.async.run.schedule_ = function() {
    goog.async.nextTick(goog.async.run.processWorkQueue);
  };
};
goog.async.run.schedule_;
goog.async.run.workQueueScheduled_ = false;
goog.async.run.workQueue_ = [];
if (goog.DEBUG) {
  goog.async.run.resetQueue_ = function() {
    goog.async.run.workQueueScheduled_ = false;
    goog.async.run.workQueue_ = [];
  };
  goog.testing.watchers.watchClockReset(goog.async.run.resetQueue_);
}
goog.async.run.processWorkQueue = function() {
  while (goog.async.run.workQueue_.length) {
    var workItems = goog.async.run.workQueue_;
    goog.async.run.workQueue_ = [];
    for (var i = 0;i < workItems.length;i++) {
      var workItem = workItems[i];
      try {
        workItem.fn.call(workItem.scope);
      } catch (e) {
        goog.async.throwException(e);
      }
    }
  }
  goog.async.run.workQueueScheduled_ = false;
};
goog.async.run.WorkItem_ = function(fn, scope) {
  this.fn = fn;
  this.scope = scope;
};
goog.provide("goog.promise.Resolver");
goog.promise.Resolver = function() {
};
goog.promise.Resolver.prototype.promise;
goog.promise.Resolver.prototype.resolve;
goog.promise.Resolver.prototype.reject;
goog.provide("goog.Promise");
goog.require("goog.Thenable");
goog.require("goog.asserts");
goog.require("goog.async.run");
goog.require("goog.async.throwException");
goog.require("goog.debug.Error");
goog.require("goog.promise.Resolver");
goog.Promise = function(resolver, opt_context) {
  this.state_ = goog.Promise.State_.PENDING;
  this.result_ = undefined;
  this.parent_ = null;
  this.callbackEntries_ = null;
  this.executing_ = false;
  if (goog.Promise.UNHANDLED_REJECTION_DELAY > 0) {
    this.unhandledRejectionId_ = 0;
  } else {
    if (goog.Promise.UNHANDLED_REJECTION_DELAY == 0) {
      this.hadUnhandledRejection_ = false;
    }
  }
  if (goog.Promise.LONG_STACK_TRACES) {
    this.stack_ = [];
    this.addStackTrace_(new Error("created"));
    this.currentStep_ = 0;
  }
  try {
    var self = this;
    resolver.call(opt_context, function(value) {
      self.resolve_(goog.Promise.State_.FULFILLED, value);
    }, function(reason) {
      self.resolve_(goog.Promise.State_.REJECTED, reason);
    });
  } catch (e) {
    this.resolve_(goog.Promise.State_.REJECTED, e);
  }
};
goog.define("goog.Promise.LONG_STACK_TRACES", false);
goog.define("goog.Promise.UNHANDLED_REJECTION_DELAY", 0);
goog.Promise.State_ = {PENDING:0, BLOCKED:1, FULFILLED:2, REJECTED:3};
goog.Promise.CallbackEntry_;
goog.Promise.resolve = function(opt_value) {
  return new goog.Promise(function(resolve, reject) {
    resolve(opt_value);
  });
};
goog.Promise.reject = function(opt_reason) {
  return new goog.Promise(function(resolve, reject) {
    reject(opt_reason);
  });
};
goog.Promise.race = function(promises) {
  return new goog.Promise(function(resolve, reject) {
    if (!promises.length) {
      resolve(undefined);
    }
    for (var i = 0, promise;promise = promises[i];i++) {
      promise.then(resolve, reject);
    }
  });
};
goog.Promise.all = function(promises) {
  return new goog.Promise(function(resolve, reject) {
    var toFulfill = promises.length;
    var values = [];
    if (!toFulfill) {
      resolve(values);
      return;
    }
    var onFulfill = function(index, value) {
      toFulfill--;
      values[index] = value;
      if (toFulfill == 0) {
        resolve(values);
      }
    };
    var onReject = function(reason) {
      reject(reason);
    };
    for (var i = 0, promise;promise = promises[i];i++) {
      promise.then(goog.partial(onFulfill, i), onReject);
    }
  });
};
goog.Promise.firstFulfilled = function(promises) {
  return new goog.Promise(function(resolve, reject) {
    var toReject = promises.length;
    var reasons = [];
    if (!toReject) {
      resolve(undefined);
      return;
    }
    var onFulfill = function(value) {
      resolve(value);
    };
    var onReject = function(index, reason) {
      toReject--;
      reasons[index] = reason;
      if (toReject == 0) {
        reject(reasons);
      }
    };
    for (var i = 0, promise;promise = promises[i];i++) {
      promise.then(onFulfill, goog.partial(onReject, i));
    }
  });
};
goog.Promise.withResolver = function() {
  var resolve, reject;
  var promise = new goog.Promise(function(rs, rj) {
    resolve = rs;
    reject = rj;
  });
  return new goog.Promise.Resolver_(promise, resolve, reject);
};
goog.Promise.prototype.then = function(opt_onFulfilled, opt_onRejected, opt_context) {
  if (opt_onFulfilled != null) {
    goog.asserts.assertFunction(opt_onFulfilled, "opt_onFulfilled should be a function.");
  }
  if (opt_onRejected != null) {
    goog.asserts.assertFunction(opt_onRejected, "opt_onRejected should be a function. Did you pass opt_context " + "as the second argument instead of the third?");
  }
  if (goog.Promise.LONG_STACK_TRACES) {
    this.addStackTrace_(new Error("then"));
  }
  return this.addChildPromise_(goog.isFunction(opt_onFulfilled) ? opt_onFulfilled : null, goog.isFunction(opt_onRejected) ? opt_onRejected : null, opt_context);
};
goog.Thenable.addImplementation(goog.Promise);
goog.Promise.prototype.thenAlways = function(onResolved, opt_context) {
  if (goog.Promise.LONG_STACK_TRACES) {
    this.addStackTrace_(new Error("thenAlways"));
  }
  var callback = function() {
    try {
      onResolved.call(opt_context);
    } catch (err) {
      goog.Promise.handleRejection_.call(null, err);
    }
  };
  this.addCallbackEntry_({child:null, onRejected:callback, onFulfilled:callback});
  return this;
};
goog.Promise.prototype.thenCatch = function(onRejected, opt_context) {
  if (goog.Promise.LONG_STACK_TRACES) {
    this.addStackTrace_(new Error("thenCatch"));
  }
  return this.addChildPromise_(null, onRejected, opt_context);
};
goog.Promise.prototype.cancel = function(opt_message) {
  if (this.state_ == goog.Promise.State_.PENDING) {
    goog.async.run(function() {
      var err = new goog.Promise.CancellationError(opt_message);
      this.cancelInternal_(err);
    }, this);
  }
};
goog.Promise.prototype.cancelInternal_ = function(err) {
  if (this.state_ == goog.Promise.State_.PENDING) {
    if (this.parent_) {
      this.parent_.cancelChild_(this, err);
    } else {
      this.resolve_(goog.Promise.State_.REJECTED, err);
    }
  }
};
goog.Promise.prototype.cancelChild_ = function(childPromise, err) {
  if (!this.callbackEntries_) {
    return;
  }
  var childCount = 0;
  var childIndex = -1;
  for (var i = 0, entry;entry = this.callbackEntries_[i];i++) {
    var child = entry.child;
    if (child) {
      childCount++;
      if (child == childPromise) {
        childIndex = i;
      }
      if (childIndex >= 0 && childCount > 1) {
        break;
      }
    }
  }
  if (childIndex >= 0) {
    if (this.state_ == goog.Promise.State_.PENDING && childCount == 1) {
      this.cancelInternal_(err);
    } else {
      var callbackEntry = this.callbackEntries_.splice(childIndex, 1)[0];
      this.executeCallback_(callbackEntry, goog.Promise.State_.REJECTED, err);
    }
  }
};
goog.Promise.prototype.addCallbackEntry_ = function(callbackEntry) {
  if ((!this.callbackEntries_ || !this.callbackEntries_.length) && (this.state_ == goog.Promise.State_.FULFILLED || this.state_ == goog.Promise.State_.REJECTED)) {
    this.scheduleCallbacks_();
  }
  if (!this.callbackEntries_) {
    this.callbackEntries_ = [];
  }
  this.callbackEntries_.push(callbackEntry);
};
goog.Promise.prototype.addChildPromise_ = function(onFulfilled, onRejected, opt_context) {
  var callbackEntry = {child:null, onFulfilled:null, onRejected:null};
  callbackEntry.child = new goog.Promise(function(resolve, reject) {
    callbackEntry.onFulfilled = onFulfilled ? function(value) {
      try {
        var result = onFulfilled.call(opt_context, value);
        resolve(result);
      } catch (err) {
        reject(err);
      }
    } : resolve;
    callbackEntry.onRejected = onRejected ? function(reason) {
      try {
        var result = onRejected.call(opt_context, reason);
        if (!goog.isDef(result) && reason instanceof goog.Promise.CancellationError) {
          reject(reason);
        } else {
          resolve(result);
        }
      } catch (err) {
        reject(err);
      }
    } : reject;
  });
  callbackEntry.child.parent_ = this;
  this.addCallbackEntry_((callbackEntry));
  return callbackEntry.child;
};
goog.Promise.prototype.unblockAndFulfill_ = function(value) {
  goog.asserts.assert(this.state_ == goog.Promise.State_.BLOCKED);
  this.state_ = goog.Promise.State_.PENDING;
  this.resolve_(goog.Promise.State_.FULFILLED, value);
};
goog.Promise.prototype.unblockAndReject_ = function(reason) {
  goog.asserts.assert(this.state_ == goog.Promise.State_.BLOCKED);
  this.state_ = goog.Promise.State_.PENDING;
  this.resolve_(goog.Promise.State_.REJECTED, reason);
};
goog.Promise.prototype.resolve_ = function(state, x) {
  if (this.state_ != goog.Promise.State_.PENDING) {
    return;
  }
  if (this == x) {
    state = goog.Promise.State_.REJECTED;
    x = new TypeError("Promise cannot resolve to itself");
  } else {
    if (goog.Thenable.isImplementedBy(x)) {
      x = (x);
      this.state_ = goog.Promise.State_.BLOCKED;
      x.then(this.unblockAndFulfill_, this.unblockAndReject_, this);
      return;
    } else {
      if (goog.isObject(x)) {
        try {
          var then = x["then"];
          if (goog.isFunction(then)) {
            this.tryThen_(x, then);
            return;
          }
        } catch (e) {
          state = goog.Promise.State_.REJECTED;
          x = e;
        }
      }
    }
  }
  this.result_ = x;
  this.state_ = state;
  this.scheduleCallbacks_();
  if (state == goog.Promise.State_.REJECTED && !(x instanceof goog.Promise.CancellationError)) {
    goog.Promise.addUnhandledRejection_(this, x);
  }
};
goog.Promise.prototype.tryThen_ = function(thenable, then) {
  this.state_ = goog.Promise.State_.BLOCKED;
  var promise = this;
  var called = false;
  var resolve = function(value) {
    if (!called) {
      called = true;
      promise.unblockAndFulfill_(value);
    }
  };
  var reject = function(reason) {
    if (!called) {
      called = true;
      promise.unblockAndReject_(reason);
    }
  };
  try {
    then.call(thenable, resolve, reject);
  } catch (e) {
    reject(e);
  }
};
goog.Promise.prototype.scheduleCallbacks_ = function() {
  if (!this.executing_) {
    this.executing_ = true;
    goog.async.run(this.executeCallbacks_, this);
  }
};
goog.Promise.prototype.executeCallbacks_ = function() {
  while (this.callbackEntries_ && this.callbackEntries_.length) {
    var entries = this.callbackEntries_;
    this.callbackEntries_ = [];
    for (var i = 0;i < entries.length;i++) {
      if (goog.Promise.LONG_STACK_TRACES) {
        this.currentStep_++;
      }
      this.executeCallback_(entries[i], this.state_, this.result_);
    }
  }
  this.executing_ = false;
};
goog.Promise.prototype.executeCallback_ = function(callbackEntry, state, result) {
  if (state == goog.Promise.State_.FULFILLED) {
    callbackEntry.onFulfilled(result);
  } else {
    this.removeUnhandledRejection_();
    callbackEntry.onRejected(result);
  }
};
goog.Promise.prototype.addStackTrace_ = function(err) {
  if (goog.Promise.LONG_STACK_TRACES && goog.isString(err.stack)) {
    var trace = err.stack.split("\n", 4)[3];
    var message = err.message;
    message += Array(11 - message.length).join(" ");
    this.stack_.push(message + trace);
  }
};
goog.Promise.prototype.appendLongStack_ = function(err) {
  if (goog.Promise.LONG_STACK_TRACES && err && goog.isString(err.stack) && this.stack_.length) {
    var longTrace = ["Promise trace:"];
    for (var promise = this;promise;promise = promise.parent_) {
      for (var i = this.currentStep_;i >= 0;i--) {
        longTrace.push(promise.stack_[i]);
      }
      longTrace.push("Value: " + "[" + (promise.state_ == goog.Promise.State_.REJECTED ? "REJECTED" : "FULFILLED") + "] " + "\x3c" + String(promise.result_) + "\x3e");
    }
    err.stack += "\n\n" + longTrace.join("\n");
  }
};
goog.Promise.prototype.removeUnhandledRejection_ = function() {
  if (goog.Promise.UNHANDLED_REJECTION_DELAY > 0) {
    for (var p = this;p && p.unhandledRejectionId_;p = p.parent_) {
      goog.global.clearTimeout(p.unhandledRejectionId_);
      p.unhandledRejectionId_ = 0;
    }
  } else {
    if (goog.Promise.UNHANDLED_REJECTION_DELAY == 0) {
      for (var p = this;p && p.hadUnhandledRejection_;p = p.parent_) {
        p.hadUnhandledRejection_ = false;
      }
    }
  }
};
goog.Promise.addUnhandledRejection_ = function(promise, reason) {
  if (goog.Promise.UNHANDLED_REJECTION_DELAY > 0) {
    promise.unhandledRejectionId_ = goog.global.setTimeout(function() {
      promise.appendLongStack_(reason);
      goog.Promise.handleRejection_.call(null, reason);
    }, goog.Promise.UNHANDLED_REJECTION_DELAY);
  } else {
    if (goog.Promise.UNHANDLED_REJECTION_DELAY == 0) {
      promise.hadUnhandledRejection_ = true;
      goog.async.run(function() {
        if (promise.hadUnhandledRejection_) {
          promise.appendLongStack_(reason);
          goog.Promise.handleRejection_.call(null, reason);
        }
      });
    }
  }
};
goog.Promise.handleRejection_ = goog.async.throwException;
goog.Promise.setUnhandledRejectionHandler = function(handler) {
  goog.Promise.handleRejection_ = handler;
};
goog.Promise.CancellationError = function(opt_message) {
  goog.Promise.CancellationError.base(this, "constructor", opt_message);
};
goog.inherits(goog.Promise.CancellationError, goog.debug.Error);
goog.Promise.CancellationError.prototype.name = "cancel";
goog.Promise.Resolver_ = function(promise, resolve, reject) {
  this.promise = promise;
  this.resolve = resolve;
  this.reject = reject;
};
/*
 Portions of this code are from MochiKit, received by
 The Closure Authors under the MIT license. All other code is Copyright
 2005-2009 The Closure Authors. All Rights Reserved.
*/
goog.provide("goog.async.Deferred");
goog.provide("goog.async.Deferred.AlreadyCalledError");
goog.provide("goog.async.Deferred.CanceledError");
goog.require("goog.Promise");
goog.require("goog.Thenable");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.debug.Error");
goog.async.Deferred = function(opt_onCancelFunction, opt_defaultScope) {
  this.sequence_ = [];
  this.onCancelFunction_ = opt_onCancelFunction;
  this.defaultScope_ = opt_defaultScope || null;
  this.fired_ = false;
  this.hadError_ = false;
  this.result_ = undefined;
  this.blocked_ = false;
  this.blocking_ = false;
  this.silentlyCanceled_ = false;
  this.unhandledErrorId_ = 0;
  this.parent_ = null;
  this.branches_ = 0;
  if (goog.async.Deferred.LONG_STACK_TRACES) {
    this.constructorStack_ = null;
    if (Error.captureStackTrace) {
      var target = {stack:""};
      Error.captureStackTrace(target, goog.async.Deferred);
      if (typeof target.stack == "string") {
        this.constructorStack_ = target.stack.replace(/^[^\n]*\n/, "");
      }
    }
  }
};
goog.define("goog.async.Deferred.STRICT_ERRORS", false);
goog.define("goog.async.Deferred.LONG_STACK_TRACES", false);
goog.async.Deferred.prototype.cancel = function(opt_deepCancel) {
  if (!this.hasFired()) {
    if (this.parent_) {
      var parent = this.parent_;
      delete this.parent_;
      if (opt_deepCancel) {
        parent.cancel(opt_deepCancel);
      } else {
        parent.branchCancel_();
      }
    }
    if (this.onCancelFunction_) {
      this.onCancelFunction_.call(this.defaultScope_, this);
    } else {
      this.silentlyCanceled_ = true;
    }
    if (!this.hasFired()) {
      this.errback(new goog.async.Deferred.CanceledError(this));
    }
  } else {
    if (this.result_ instanceof goog.async.Deferred) {
      this.result_.cancel();
    }
  }
};
goog.async.Deferred.prototype.branchCancel_ = function() {
  this.branches_--;
  if (this.branches_ <= 0) {
    this.cancel();
  }
};
goog.async.Deferred.prototype.continue_ = function(isSuccess, res) {
  this.blocked_ = false;
  this.updateResult_(isSuccess, res);
};
goog.async.Deferred.prototype.updateResult_ = function(isSuccess, res) {
  this.fired_ = true;
  this.result_ = res;
  this.hadError_ = !isSuccess;
  this.fire_();
};
goog.async.Deferred.prototype.check_ = function() {
  if (this.hasFired()) {
    if (!this.silentlyCanceled_) {
      throw new goog.async.Deferred.AlreadyCalledError(this);
    }
    this.silentlyCanceled_ = false;
  }
};
goog.async.Deferred.prototype.callback = function(opt_result) {
  this.check_();
  this.assertNotDeferred_(opt_result);
  this.updateResult_(true, opt_result);
};
goog.async.Deferred.prototype.errback = function(opt_result) {
  this.check_();
  this.assertNotDeferred_(opt_result);
  this.makeStackTraceLong_(opt_result);
  this.updateResult_(false, opt_result);
};
goog.async.Deferred.prototype.makeStackTraceLong_ = function(error) {
  if (!goog.async.Deferred.LONG_STACK_TRACES) {
    return;
  }
  if (this.constructorStack_ && goog.isObject(error) && error.stack && /^[^\n]+(\n   [^\n]+)+/.test(error.stack)) {
    error.stack = error.stack + "\nDEFERRED OPERATION:\n" + this.constructorStack_;
  }
};
goog.async.Deferred.prototype.assertNotDeferred_ = function(obj) {
  goog.asserts.assert(!(obj instanceof goog.async.Deferred), "An execution sequence may not be initiated with a blocking Deferred.");
};
goog.async.Deferred.prototype.addCallback = function(cb, opt_scope) {
  return this.addCallbacks(cb, null, opt_scope);
};
goog.async.Deferred.prototype.addErrback = function(eb, opt_scope) {
  return this.addCallbacks(null, eb, opt_scope);
};
goog.async.Deferred.prototype.addBoth = function(f, opt_scope) {
  return this.addCallbacks(f, f, opt_scope);
};
goog.async.Deferred.prototype.addCallbacks = function(cb, eb, opt_scope) {
  goog.asserts.assert(!this.blocking_, "Blocking Deferreds can not be re-used");
  this.sequence_.push([cb, eb, opt_scope]);
  if (this.hasFired()) {
    this.fire_();
  }
  return this;
};
goog.async.Deferred.prototype.then = function(opt_onFulfilled, opt_onRejected, opt_context) {
  var resolve, reject;
  var promise = new goog.Promise(function(res, rej) {
    resolve = res;
    reject = rej;
  });
  this.addCallbacks(resolve, function(reason) {
    if (reason instanceof goog.async.Deferred.CanceledError) {
      promise.cancel();
    } else {
      reject(reason);
    }
  });
  return promise.then(opt_onFulfilled, opt_onRejected, opt_context);
};
goog.Thenable.addImplementation(goog.async.Deferred);
goog.async.Deferred.prototype.chainDeferred = function(otherDeferred) {
  this.addCallbacks(otherDeferred.callback, otherDeferred.errback, otherDeferred);
  return this;
};
goog.async.Deferred.prototype.awaitDeferred = function(otherDeferred) {
  if (!(otherDeferred instanceof goog.async.Deferred)) {
    return this.addCallback(function() {
      return otherDeferred;
    });
  }
  return this.addCallback(goog.bind(otherDeferred.branch, otherDeferred));
};
goog.async.Deferred.prototype.branch = function(opt_propagateCancel) {
  var d = new goog.async.Deferred;
  this.chainDeferred(d);
  if (opt_propagateCancel) {
    d.parent_ = this;
    this.branches_++;
  }
  return d;
};
goog.async.Deferred.prototype.hasFired = function() {
  return this.fired_;
};
goog.async.Deferred.prototype.isError = function(res) {
  return res instanceof Error;
};
goog.async.Deferred.prototype.hasErrback_ = function() {
  return goog.array.some(this.sequence_, function(sequenceRow) {
    return goog.isFunction(sequenceRow[1]);
  });
};
goog.async.Deferred.prototype.fire_ = function() {
  if (this.unhandledErrorId_ && this.hasFired() && this.hasErrback_()) {
    goog.async.Deferred.unscheduleError_(this.unhandledErrorId_);
    this.unhandledErrorId_ = 0;
  }
  if (this.parent_) {
    this.parent_.branches_--;
    delete this.parent_;
  }
  var res = this.result_;
  var unhandledException = false;
  var isNewlyBlocked = false;
  while (this.sequence_.length && !this.blocked_) {
    var sequenceEntry = this.sequence_.shift();
    var callback = sequenceEntry[0];
    var errback = sequenceEntry[1];
    var scope = sequenceEntry[2];
    var f = this.hadError_ ? errback : callback;
    if (f) {
      try {
        var ret = f.call(scope || this.defaultScope_, res);
        if (goog.isDef(ret)) {
          this.hadError_ = this.hadError_ && (ret == res || this.isError(ret));
          this.result_ = res = ret;
        }
        if (goog.Thenable.isImplementedBy(res)) {
          isNewlyBlocked = true;
          this.blocked_ = true;
        }
      } catch (ex) {
        res = ex;
        this.hadError_ = true;
        this.makeStackTraceLong_(res);
        if (!this.hasErrback_()) {
          unhandledException = true;
        }
      }
    }
  }
  this.result_ = res;
  if (isNewlyBlocked) {
    var onCallback = goog.bind(this.continue_, this, true);
    var onErrback = goog.bind(this.continue_, this, false);
    if (res instanceof goog.async.Deferred) {
      res.addCallbacks(onCallback, onErrback);
      res.blocking_ = true;
    } else {
      res.then(onCallback, onErrback);
    }
  } else {
    if (goog.async.Deferred.STRICT_ERRORS && this.isError(res) && !(res instanceof goog.async.Deferred.CanceledError)) {
      this.hadError_ = true;
      unhandledException = true;
    }
  }
  if (unhandledException) {
    this.unhandledErrorId_ = goog.async.Deferred.scheduleError_(res);
  }
};
goog.async.Deferred.succeed = function(opt_result) {
  var d = new goog.async.Deferred;
  d.callback(opt_result);
  return d;
};
goog.async.Deferred.fromPromise = function(promise) {
  var d = new goog.async.Deferred;
  d.callback();
  d.addCallback(function() {
    return promise;
  });
  return d;
};
goog.async.Deferred.fail = function(res) {
  var d = new goog.async.Deferred;
  d.errback(res);
  return d;
};
goog.async.Deferred.canceled = function() {
  var d = new goog.async.Deferred;
  d.cancel();
  return d;
};
goog.async.Deferred.when = function(value, callback, opt_scope) {
  if (value instanceof goog.async.Deferred) {
    return value.branch(true).addCallback(callback, opt_scope);
  } else {
    return goog.async.Deferred.succeed(value).addCallback(callback, opt_scope);
  }
};
goog.async.Deferred.AlreadyCalledError = function(deferred) {
  goog.debug.Error.call(this);
  this.deferred = deferred;
};
goog.inherits(goog.async.Deferred.AlreadyCalledError, goog.debug.Error);
goog.async.Deferred.AlreadyCalledError.prototype.message = "Deferred has already fired";
goog.async.Deferred.AlreadyCalledError.prototype.name = "AlreadyCalledError";
goog.async.Deferred.CanceledError = function(deferred) {
  goog.debug.Error.call(this);
  this.deferred = deferred;
};
goog.inherits(goog.async.Deferred.CanceledError, goog.debug.Error);
goog.async.Deferred.CanceledError.prototype.message = "Deferred was canceled";
goog.async.Deferred.CanceledError.prototype.name = "CanceledError";
goog.async.Deferred.Error_ = function(error) {
  this.id_ = goog.global.setTimeout(goog.bind(this.throwError, this), 0);
  this.error_ = error;
};
goog.async.Deferred.Error_.prototype.throwError = function() {
  goog.asserts.assert(goog.async.Deferred.errorMap_[this.id_], "Cannot throw an error that is not scheduled.");
  delete goog.async.Deferred.errorMap_[this.id_];
  throw this.error_;
};
goog.async.Deferred.Error_.prototype.resetTimer = function() {
  goog.global.clearTimeout(this.id_);
};
goog.async.Deferred.errorMap_ = {};
goog.async.Deferred.scheduleError_ = function(error) {
  var deferredError = new goog.async.Deferred.Error_(error);
  goog.async.Deferred.errorMap_[deferredError.id_] = deferredError;
  return deferredError.id_;
};
goog.async.Deferred.unscheduleError_ = function(id) {
  var error = goog.async.Deferred.errorMap_[id];
  if (error) {
    error.resetTimer();
    delete goog.async.Deferred.errorMap_[id];
  }
};
goog.async.Deferred.assertNoErrors = function() {
  var map = goog.async.Deferred.errorMap_;
  for (var key in map) {
    var error = map[key];
    error.resetTimer();
    error.throwError();
  }
};
goog.provide("goog.dom.BrowserFeature");
goog.require("goog.userAgent");
goog.dom.BrowserFeature = {CAN_ADD_NAME_OR_TYPE_ATTRIBUTES:!goog.userAgent.IE || goog.userAgent.isDocumentModeOrHigher(9), CAN_USE_CHILDREN_ATTRIBUTE:!goog.userAgent.GECKO && !goog.userAgent.IE || goog.userAgent.IE && goog.userAgent.isDocumentModeOrHigher(9) || goog.userAgent.GECKO && goog.userAgent.isVersionOrHigher("1.9.1"), CAN_USE_INNER_TEXT:goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("9"), CAN_USE_PARENT_ELEMENT_PROPERTY:goog.userAgent.IE || goog.userAgent.OPERA || goog.userAgent.WEBKIT, 
INNER_HTML_NEEDS_SCOPED_ELEMENT:goog.userAgent.IE, LEGACY_IE_RANGES:goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(9)};
goog.provide("goog.dom.TagName");
goog.dom.TagName = {A:"A", ABBR:"ABBR", ACRONYM:"ACRONYM", ADDRESS:"ADDRESS", APPLET:"APPLET", AREA:"AREA", ARTICLE:"ARTICLE", ASIDE:"ASIDE", AUDIO:"AUDIO", B:"B", BASE:"BASE", BASEFONT:"BASEFONT", BDI:"BDI", BDO:"BDO", BIG:"BIG", BLOCKQUOTE:"BLOCKQUOTE", BODY:"BODY", BR:"BR", BUTTON:"BUTTON", CANVAS:"CANVAS", CAPTION:"CAPTION", CENTER:"CENTER", CITE:"CITE", CODE:"CODE", COL:"COL", COLGROUP:"COLGROUP", COMMAND:"COMMAND", DATA:"DATA", DATALIST:"DATALIST", DD:"DD", DEL:"DEL", DETAILS:"DETAILS", DFN:"DFN", 
DIALOG:"DIALOG", DIR:"DIR", DIV:"DIV", DL:"DL", DT:"DT", EM:"EM", EMBED:"EMBED", FIELDSET:"FIELDSET", FIGCAPTION:"FIGCAPTION", FIGURE:"FIGURE", FONT:"FONT", FOOTER:"FOOTER", FORM:"FORM", FRAME:"FRAME", FRAMESET:"FRAMESET", H1:"H1", H2:"H2", H3:"H3", H4:"H4", H5:"H5", H6:"H6", HEAD:"HEAD", HEADER:"HEADER", HGROUP:"HGROUP", HR:"HR", HTML:"HTML", I:"I", IFRAME:"IFRAME", IMG:"IMG", INPUT:"INPUT", INS:"INS", ISINDEX:"ISINDEX", KBD:"KBD", KEYGEN:"KEYGEN", LABEL:"LABEL", LEGEND:"LEGEND", LI:"LI", LINK:"LINK", 
MAP:"MAP", MARK:"MARK", MATH:"MATH", MENU:"MENU", META:"META", METER:"METER", NAV:"NAV", NOFRAMES:"NOFRAMES", NOSCRIPT:"NOSCRIPT", OBJECT:"OBJECT", OL:"OL", OPTGROUP:"OPTGROUP", OPTION:"OPTION", OUTPUT:"OUTPUT", P:"P", PARAM:"PARAM", PRE:"PRE", PROGRESS:"PROGRESS", Q:"Q", RP:"RP", RT:"RT", RUBY:"RUBY", S:"S", SAMP:"SAMP", SCRIPT:"SCRIPT", SECTION:"SECTION", SELECT:"SELECT", SMALL:"SMALL", SOURCE:"SOURCE", SPAN:"SPAN", STRIKE:"STRIKE", STRONG:"STRONG", STYLE:"STYLE", SUB:"SUB", SUMMARY:"SUMMARY", 
SUP:"SUP", SVG:"SVG", TABLE:"TABLE", TBODY:"TBODY", TD:"TD", TEXTAREA:"TEXTAREA", TFOOT:"TFOOT", TH:"TH", THEAD:"THEAD", TIME:"TIME", TITLE:"TITLE", TR:"TR", TRACK:"TRACK", TT:"TT", U:"U", UL:"UL", VAR:"VAR", VIDEO:"VIDEO", WBR:"WBR"};
goog.provide("goog.math.Coordinate");
goog.require("goog.math");
goog.math.Coordinate = function(opt_x, opt_y) {
  this.x = goog.isDef(opt_x) ? opt_x : 0;
  this.y = goog.isDef(opt_y) ? opt_y : 0;
};
goog.math.Coordinate.prototype.clone = function() {
  return new goog.math.Coordinate(this.x, this.y);
};
if (goog.DEBUG) {
  goog.math.Coordinate.prototype.toString = function() {
    return "(" + this.x + ", " + this.y + ")";
  };
}
goog.math.Coordinate.equals = function(a, b) {
  if (a == b) {
    return true;
  }
  if (!a || !b) {
    return false;
  }
  return a.x == b.x && a.y == b.y;
};
goog.math.Coordinate.distance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return Math.sqrt(dx * dx + dy * dy);
};
goog.math.Coordinate.magnitude = function(a) {
  return Math.sqrt(a.x * a.x + a.y * a.y);
};
goog.math.Coordinate.azimuth = function(a) {
  return goog.math.angle(0, 0, a.x, a.y);
};
goog.math.Coordinate.squaredDistance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return dx * dx + dy * dy;
};
goog.math.Coordinate.difference = function(a, b) {
  return new goog.math.Coordinate(a.x - b.x, a.y - b.y);
};
goog.math.Coordinate.sum = function(a, b) {
  return new goog.math.Coordinate(a.x + b.x, a.y + b.y);
};
goog.math.Coordinate.prototype.ceil = function() {
  this.x = Math.ceil(this.x);
  this.y = Math.ceil(this.y);
  return this;
};
goog.math.Coordinate.prototype.floor = function() {
  this.x = Math.floor(this.x);
  this.y = Math.floor(this.y);
  return this;
};
goog.math.Coordinate.prototype.round = function() {
  this.x = Math.round(this.x);
  this.y = Math.round(this.y);
  return this;
};
goog.math.Coordinate.prototype.translate = function(tx, opt_ty) {
  if (tx instanceof goog.math.Coordinate) {
    this.x += tx.x;
    this.y += tx.y;
  } else {
    this.x += tx;
    if (goog.isNumber(opt_ty)) {
      this.y += opt_ty;
    }
  }
  return this;
};
goog.math.Coordinate.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.x *= sx;
  this.y *= sy;
  return this;
};
goog.math.Coordinate.prototype.rotateRadians = function(radians, opt_center) {
  var center = opt_center || new goog.math.Coordinate(0, 0);
  var x = this.x;
  var y = this.y;
  var cos = Math.cos(radians);
  var sin = Math.sin(radians);
  this.x = (x - center.x) * cos - (y - center.y) * sin + center.x;
  this.y = (x - center.x) * sin + (y - center.y) * cos + center.y;
};
goog.math.Coordinate.prototype.rotateDegrees = function(degrees, opt_center) {
  this.rotateRadians(goog.math.toRadians(degrees), opt_center);
};
goog.provide("goog.math.Size");
goog.math.Size = function(width, height) {
  this.width = width;
  this.height = height;
};
goog.math.Size.equals = function(a, b) {
  if (a == b) {
    return true;
  }
  if (!a || !b) {
    return false;
  }
  return a.width == b.width && a.height == b.height;
};
goog.math.Size.prototype.clone = function() {
  return new goog.math.Size(this.width, this.height);
};
if (goog.DEBUG) {
  goog.math.Size.prototype.toString = function() {
    return "(" + this.width + " x " + this.height + ")";
  };
}
goog.math.Size.prototype.getLongest = function() {
  return Math.max(this.width, this.height);
};
goog.math.Size.prototype.getShortest = function() {
  return Math.min(this.width, this.height);
};
goog.math.Size.prototype.area = function() {
  return this.width * this.height;
};
goog.math.Size.prototype.perimeter = function() {
  return(this.width + this.height) * 2;
};
goog.math.Size.prototype.aspectRatio = function() {
  return this.width / this.height;
};
goog.math.Size.prototype.isEmpty = function() {
  return!this.area();
};
goog.math.Size.prototype.ceil = function() {
  this.width = Math.ceil(this.width);
  this.height = Math.ceil(this.height);
  return this;
};
goog.math.Size.prototype.fitsInside = function(target) {
  return this.width <= target.width && this.height <= target.height;
};
goog.math.Size.prototype.floor = function() {
  this.width = Math.floor(this.width);
  this.height = Math.floor(this.height);
  return this;
};
goog.math.Size.prototype.round = function() {
  this.width = Math.round(this.width);
  this.height = Math.round(this.height);
  return this;
};
goog.math.Size.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.width *= sx;
  this.height *= sy;
  return this;
};
goog.math.Size.prototype.scaleToFit = function(target) {
  var s = this.aspectRatio() > target.aspectRatio() ? target.width / this.width : target.height / this.height;
  return this.scale(s);
};
goog.provide("goog.dom");
goog.provide("goog.dom.Appendable");
goog.provide("goog.dom.DomHelper");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.dom.BrowserFeature");
goog.require("goog.dom.NodeType");
goog.require("goog.dom.TagName");
goog.require("goog.functions");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Size");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.define("goog.dom.ASSUME_QUIRKS_MODE", false);
goog.define("goog.dom.ASSUME_STANDARDS_MODE", false);
goog.dom.COMPAT_MODE_KNOWN_ = goog.dom.ASSUME_QUIRKS_MODE || goog.dom.ASSUME_STANDARDS_MODE;
goog.dom.getDomHelper = function(opt_element) {
  return opt_element ? new goog.dom.DomHelper(goog.dom.getOwnerDocument(opt_element)) : goog.dom.defaultDomHelper_ || (goog.dom.defaultDomHelper_ = new goog.dom.DomHelper);
};
goog.dom.defaultDomHelper_;
goog.dom.getDocument = function() {
  return document;
};
goog.dom.getElement = function(element) {
  return goog.dom.getElementHelper_(document, element);
};
goog.dom.getElementHelper_ = function(doc, element) {
  return goog.isString(element) ? doc.getElementById(element) : element;
};
goog.dom.getRequiredElement = function(id) {
  return goog.dom.getRequiredElementHelper_(document, id);
};
goog.dom.getRequiredElementHelper_ = function(doc, id) {
  goog.asserts.assertString(id);
  var element = goog.dom.getElementHelper_(doc, id);
  element = goog.asserts.assertElement(element, "No element found with id: " + id);
  return element;
};
goog.dom.$ = goog.dom.getElement;
goog.dom.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(document, opt_tag, opt_class, opt_el);
};
goog.dom.getElementsByClass = function(className, opt_el) {
  var parent = opt_el || document;
  if (goog.dom.canUseQuerySelector_(parent)) {
    return parent.querySelectorAll("." + className);
  }
  return goog.dom.getElementsByTagNameAndClass_(document, "*", className, opt_el);
};
goog.dom.getElementByClass = function(className, opt_el) {
  var parent = opt_el || document;
  var retVal = null;
  if (goog.dom.canUseQuerySelector_(parent)) {
    retVal = parent.querySelector("." + className);
  } else {
    retVal = goog.dom.getElementsByTagNameAndClass_(document, "*", className, opt_el)[0];
  }
  return retVal || null;
};
goog.dom.getRequiredElementByClass = function(className, opt_root) {
  var retValue = goog.dom.getElementByClass(className, opt_root);
  return goog.asserts.assert(retValue, "No element found with className: " + className);
};
goog.dom.canUseQuerySelector_ = function(parent) {
  return!!(parent.querySelectorAll && parent.querySelector);
};
goog.dom.getElementsByTagNameAndClass_ = function(doc, opt_tag, opt_class, opt_el) {
  var parent = opt_el || doc;
  var tagName = opt_tag && opt_tag != "*" ? opt_tag.toUpperCase() : "";
  if (goog.dom.canUseQuerySelector_(parent) && (tagName || opt_class)) {
    var query = tagName + (opt_class ? "." + opt_class : "");
    return parent.querySelectorAll(query);
  }
  if (opt_class && parent.getElementsByClassName) {
    var els = parent.getElementsByClassName(opt_class);
    if (tagName) {
      var arrayLike = {};
      var len = 0;
      for (var i = 0, el;el = els[i];i++) {
        if (tagName == el.nodeName) {
          arrayLike[len++] = el;
        }
      }
      arrayLike.length = len;
      return arrayLike;
    } else {
      return els;
    }
  }
  var els = parent.getElementsByTagName(tagName || "*");
  if (opt_class) {
    var arrayLike = {};
    var len = 0;
    for (var i = 0, el;el = els[i];i++) {
      var className = el.className;
      if (typeof className.split == "function" && goog.array.contains(className.split(/\s+/), opt_class)) {
        arrayLike[len++] = el;
      }
    }
    arrayLike.length = len;
    return arrayLike;
  } else {
    return els;
  }
};
goog.dom.$$ = goog.dom.getElementsByTagNameAndClass;
goog.dom.setProperties = function(element, properties) {
  goog.object.forEach(properties, function(val, key) {
    if (key == "style") {
      element.style.cssText = val;
    } else {
      if (key == "class") {
        element.className = val;
      } else {
        if (key == "for") {
          element.htmlFor = val;
        } else {
          if (key in goog.dom.DIRECT_ATTRIBUTE_MAP_) {
            element.setAttribute(goog.dom.DIRECT_ATTRIBUTE_MAP_[key], val);
          } else {
            if (goog.string.startsWith(key, "aria-") || goog.string.startsWith(key, "data-")) {
              element.setAttribute(key, val);
            } else {
              element[key] = val;
            }
          }
        }
      }
    }
  });
};
goog.dom.DIRECT_ATTRIBUTE_MAP_ = {"cellpadding":"cellPadding", "cellspacing":"cellSpacing", "colspan":"colSpan", "frameborder":"frameBorder", "height":"height", "maxlength":"maxLength", "role":"role", "rowspan":"rowSpan", "type":"type", "usemap":"useMap", "valign":"vAlign", "width":"width"};
goog.dom.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize_(opt_window || window);
};
goog.dom.getViewportSize_ = function(win) {
  var doc = win.document;
  var el = goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body;
  return new goog.math.Size(el.clientWidth, el.clientHeight);
};
goog.dom.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(window);
};
goog.dom.getDocumentHeight_ = function(win) {
  var doc = win.document;
  var height = 0;
  if (doc) {
    var body = doc.body;
    var docEl = doc.documentElement;
    if (!body && !docEl) {
      return 0;
    }
    var vh = goog.dom.getViewportSize_(win).height;
    if (goog.dom.isCss1CompatMode_(doc) && docEl.scrollHeight) {
      height = docEl.scrollHeight != vh ? docEl.scrollHeight : docEl.offsetHeight;
    } else {
      var sh = docEl.scrollHeight;
      var oh = docEl.offsetHeight;
      if (docEl.clientHeight != oh) {
        sh = body.scrollHeight;
        oh = body.offsetHeight;
      }
      if (sh > vh) {
        height = sh > oh ? sh : oh;
      } else {
        height = sh < oh ? sh : oh;
      }
    }
  }
  return height;
};
goog.dom.getPageScroll = function(opt_window) {
  var win = opt_window || goog.global || window;
  return goog.dom.getDomHelper(win.document).getDocumentScroll();
};
goog.dom.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(document);
};
goog.dom.getDocumentScroll_ = function(doc) {
  var el = goog.dom.getDocumentScrollElement_(doc);
  var win = goog.dom.getWindow_(doc);
  if (goog.userAgent.IE && goog.userAgent.isVersionOrHigher("10") && win.pageYOffset != el.scrollTop) {
    return new goog.math.Coordinate(el.scrollLeft, el.scrollTop);
  }
  return new goog.math.Coordinate(win.pageXOffset || el.scrollLeft, win.pageYOffset || el.scrollTop);
};
goog.dom.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(document);
};
goog.dom.getDocumentScrollElement_ = function(doc) {
  if (!goog.userAgent.WEBKIT && goog.dom.isCss1CompatMode_(doc)) {
    return doc.documentElement;
  }
  return doc.body || doc.documentElement;
};
goog.dom.getWindow = function(opt_doc) {
  return opt_doc ? goog.dom.getWindow_(opt_doc) : window;
};
goog.dom.getWindow_ = function(doc) {
  return doc.parentWindow || doc.defaultView;
};
goog.dom.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(document, arguments);
};
goog.dom.createDom_ = function(doc, args) {
  var tagName = args[0];
  var attributes = args[1];
  if (!goog.dom.BrowserFeature.CAN_ADD_NAME_OR_TYPE_ATTRIBUTES && attributes && (attributes.name || attributes.type)) {
    var tagNameArr = ["\x3c", tagName];
    if (attributes.name) {
      tagNameArr.push(' name\x3d"', goog.string.htmlEscape(attributes.name), '"');
    }
    if (attributes.type) {
      tagNameArr.push(' type\x3d"', goog.string.htmlEscape(attributes.type), '"');
      var clone = {};
      goog.object.extend(clone, attributes);
      delete clone["type"];
      attributes = clone;
    }
    tagNameArr.push("\x3e");
    tagName = tagNameArr.join("");
  }
  var element = doc.createElement(tagName);
  if (attributes) {
    if (goog.isString(attributes)) {
      element.className = attributes;
    } else {
      if (goog.isArray(attributes)) {
        element.className = attributes.join(" ");
      } else {
        goog.dom.setProperties(element, attributes);
      }
    }
  }
  if (args.length > 2) {
    goog.dom.append_(doc, element, args, 2);
  }
  return element;
};
goog.dom.append_ = function(doc, parent, args, startIndex) {
  function childHandler(child) {
    if (child) {
      parent.appendChild(goog.isString(child) ? doc.createTextNode(child) : child);
    }
  }
  for (var i = startIndex;i < args.length;i++) {
    var arg = args[i];
    if (goog.isArrayLike(arg) && !goog.dom.isNodeLike(arg)) {
      goog.array.forEach(goog.dom.isNodeList(arg) ? goog.array.toArray(arg) : arg, childHandler);
    } else {
      childHandler(arg);
    }
  }
};
goog.dom.$dom = goog.dom.createDom;
goog.dom.createElement = function(name) {
  return document.createElement(name);
};
goog.dom.createTextNode = function(content) {
  return document.createTextNode(String(content));
};
goog.dom.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(document, rows, columns, !!opt_fillWithNbsp);
};
goog.dom.createTable_ = function(doc, rows, columns, fillWithNbsp) {
  var rowHtml = ["\x3ctr\x3e"];
  for (var i = 0;i < columns;i++) {
    rowHtml.push(fillWithNbsp ? "\x3ctd\x3e\x26nbsp;\x3c/td\x3e" : "\x3ctd\x3e\x3c/td\x3e");
  }
  rowHtml.push("\x3c/tr\x3e");
  rowHtml = rowHtml.join("");
  var totalHtml = ["\x3ctable\x3e"];
  for (i = 0;i < rows;i++) {
    totalHtml.push(rowHtml);
  }
  totalHtml.push("\x3c/table\x3e");
  var elem = doc.createElement(goog.dom.TagName.DIV);
  elem.innerHTML = totalHtml.join("");
  return(elem.removeChild(elem.firstChild));
};
goog.dom.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(document, htmlString);
};
goog.dom.htmlToDocumentFragment_ = function(doc, htmlString) {
  var tempDiv = doc.createElement("div");
  if (goog.dom.BrowserFeature.INNER_HTML_NEEDS_SCOPED_ELEMENT) {
    tempDiv.innerHTML = "\x3cbr\x3e" + htmlString;
    tempDiv.removeChild(tempDiv.firstChild);
  } else {
    tempDiv.innerHTML = htmlString;
  }
  if (tempDiv.childNodes.length == 1) {
    return(tempDiv.removeChild(tempDiv.firstChild));
  } else {
    var fragment = doc.createDocumentFragment();
    while (tempDiv.firstChild) {
      fragment.appendChild(tempDiv.firstChild);
    }
    return fragment;
  }
};
goog.dom.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(document);
};
goog.dom.isCss1CompatMode_ = function(doc) {
  if (goog.dom.COMPAT_MODE_KNOWN_) {
    return goog.dom.ASSUME_STANDARDS_MODE;
  }
  return doc.compatMode == "CSS1Compat";
};
goog.dom.canHaveChildren = function(node) {
  if (node.nodeType != goog.dom.NodeType.ELEMENT) {
    return false;
  }
  switch(node.tagName) {
    case goog.dom.TagName.APPLET:
    ;
    case goog.dom.TagName.AREA:
    ;
    case goog.dom.TagName.BASE:
    ;
    case goog.dom.TagName.BR:
    ;
    case goog.dom.TagName.COL:
    ;
    case goog.dom.TagName.COMMAND:
    ;
    case goog.dom.TagName.EMBED:
    ;
    case goog.dom.TagName.FRAME:
    ;
    case goog.dom.TagName.HR:
    ;
    case goog.dom.TagName.IMG:
    ;
    case goog.dom.TagName.INPUT:
    ;
    case goog.dom.TagName.IFRAME:
    ;
    case goog.dom.TagName.ISINDEX:
    ;
    case goog.dom.TagName.KEYGEN:
    ;
    case goog.dom.TagName.LINK:
    ;
    case goog.dom.TagName.NOFRAMES:
    ;
    case goog.dom.TagName.NOSCRIPT:
    ;
    case goog.dom.TagName.META:
    ;
    case goog.dom.TagName.OBJECT:
    ;
    case goog.dom.TagName.PARAM:
    ;
    case goog.dom.TagName.SCRIPT:
    ;
    case goog.dom.TagName.SOURCE:
    ;
    case goog.dom.TagName.STYLE:
    ;
    case goog.dom.TagName.TRACK:
    ;
    case goog.dom.TagName.WBR:
      return false;
  }
  return true;
};
goog.dom.appendChild = function(parent, child) {
  parent.appendChild(child);
};
goog.dom.append = function(parent, var_args) {
  goog.dom.append_(goog.dom.getOwnerDocument(parent), parent, arguments, 1);
};
goog.dom.removeChildren = function(node) {
  var child;
  while (child = node.firstChild) {
    node.removeChild(child);
  }
};
goog.dom.insertSiblingBefore = function(newNode, refNode) {
  if (refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode);
  }
};
goog.dom.insertSiblingAfter = function(newNode, refNode) {
  if (refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode.nextSibling);
  }
};
goog.dom.insertChildAt = function(parent, child, index) {
  parent.insertBefore(child, parent.childNodes[index] || null);
};
goog.dom.removeNode = function(node) {
  return node && node.parentNode ? node.parentNode.removeChild(node) : null;
};
goog.dom.replaceNode = function(newNode, oldNode) {
  var parent = oldNode.parentNode;
  if (parent) {
    parent.replaceChild(newNode, oldNode);
  }
};
goog.dom.flattenElement = function(element) {
  var child, parent = element.parentNode;
  if (parent && parent.nodeType != goog.dom.NodeType.DOCUMENT_FRAGMENT) {
    if (element.removeNode) {
      return(element.removeNode(false));
    } else {
      while (child = element.firstChild) {
        parent.insertBefore(child, element);
      }
      return(goog.dom.removeNode(element));
    }
  }
};
goog.dom.getChildren = function(element) {
  if (goog.dom.BrowserFeature.CAN_USE_CHILDREN_ATTRIBUTE && element.children != undefined) {
    return element.children;
  }
  return goog.array.filter(element.childNodes, function(node) {
    return node.nodeType == goog.dom.NodeType.ELEMENT;
  });
};
goog.dom.getFirstElementChild = function(node) {
  if (node.firstElementChild != undefined) {
    return(node).firstElementChild;
  }
  return goog.dom.getNextElementNode_(node.firstChild, true);
};
goog.dom.getLastElementChild = function(node) {
  if (node.lastElementChild != undefined) {
    return(node).lastElementChild;
  }
  return goog.dom.getNextElementNode_(node.lastChild, false);
};
goog.dom.getNextElementSibling = function(node) {
  if (node.nextElementSibling != undefined) {
    return(node).nextElementSibling;
  }
  return goog.dom.getNextElementNode_(node.nextSibling, true);
};
goog.dom.getPreviousElementSibling = function(node) {
  if (node.previousElementSibling != undefined) {
    return(node).previousElementSibling;
  }
  return goog.dom.getNextElementNode_(node.previousSibling, false);
};
goog.dom.getNextElementNode_ = function(node, forward) {
  while (node && node.nodeType != goog.dom.NodeType.ELEMENT) {
    node = forward ? node.nextSibling : node.previousSibling;
  }
  return(node);
};
goog.dom.getNextNode = function(node) {
  if (!node) {
    return null;
  }
  if (node.firstChild) {
    return node.firstChild;
  }
  while (node && !node.nextSibling) {
    node = node.parentNode;
  }
  return node ? node.nextSibling : null;
};
goog.dom.getPreviousNode = function(node) {
  if (!node) {
    return null;
  }
  if (!node.previousSibling) {
    return node.parentNode;
  }
  node = node.previousSibling;
  while (node && node.lastChild) {
    node = node.lastChild;
  }
  return node;
};
goog.dom.isNodeLike = function(obj) {
  return goog.isObject(obj) && obj.nodeType > 0;
};
goog.dom.isElement = function(obj) {
  return goog.isObject(obj) && obj.nodeType == goog.dom.NodeType.ELEMENT;
};
goog.dom.isWindow = function(obj) {
  return goog.isObject(obj) && obj["window"] == obj;
};
goog.dom.getParentElement = function(element) {
  var parent;
  if (goog.dom.BrowserFeature.CAN_USE_PARENT_ELEMENT_PROPERTY) {
    var isIe9 = goog.userAgent.IE && goog.userAgent.isVersionOrHigher("9") && !goog.userAgent.isVersionOrHigher("10");
    if (!(isIe9 && goog.global["SVGElement"] && element instanceof goog.global["SVGElement"])) {
      parent = element.parentElement;
      if (parent) {
        return parent;
      }
    }
  }
  parent = element.parentNode;
  return goog.dom.isElement(parent) ? (parent) : null;
};
goog.dom.contains = function(parent, descendant) {
  if (parent.contains && descendant.nodeType == goog.dom.NodeType.ELEMENT) {
    return parent == descendant || parent.contains(descendant);
  }
  if (typeof parent.compareDocumentPosition != "undefined") {
    return parent == descendant || Boolean(parent.compareDocumentPosition(descendant) & 16);
  }
  while (descendant && parent != descendant) {
    descendant = descendant.parentNode;
  }
  return descendant == parent;
};
goog.dom.compareNodeOrder = function(node1, node2) {
  if (node1 == node2) {
    return 0;
  }
  if (node1.compareDocumentPosition) {
    return node1.compareDocumentPosition(node2) & 2 ? 1 : -1;
  }
  if (goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(9)) {
    if (node1.nodeType == goog.dom.NodeType.DOCUMENT) {
      return-1;
    }
    if (node2.nodeType == goog.dom.NodeType.DOCUMENT) {
      return 1;
    }
  }
  if ("sourceIndex" in node1 || node1.parentNode && "sourceIndex" in node1.parentNode) {
    var isElement1 = node1.nodeType == goog.dom.NodeType.ELEMENT;
    var isElement2 = node2.nodeType == goog.dom.NodeType.ELEMENT;
    if (isElement1 && isElement2) {
      return node1.sourceIndex - node2.sourceIndex;
    } else {
      var parent1 = node1.parentNode;
      var parent2 = node2.parentNode;
      if (parent1 == parent2) {
        return goog.dom.compareSiblingOrder_(node1, node2);
      }
      if (!isElement1 && goog.dom.contains(parent1, node2)) {
        return-1 * goog.dom.compareParentsDescendantNodeIe_(node1, node2);
      }
      if (!isElement2 && goog.dom.contains(parent2, node1)) {
        return goog.dom.compareParentsDescendantNodeIe_(node2, node1);
      }
      return(isElement1 ? node1.sourceIndex : parent1.sourceIndex) - (isElement2 ? node2.sourceIndex : parent2.sourceIndex);
    }
  }
  var doc = goog.dom.getOwnerDocument(node1);
  var range1, range2;
  range1 = doc.createRange();
  range1.selectNode(node1);
  range1.collapse(true);
  range2 = doc.createRange();
  range2.selectNode(node2);
  range2.collapse(true);
  return range1.compareBoundaryPoints(goog.global["Range"].START_TO_END, range2);
};
goog.dom.compareParentsDescendantNodeIe_ = function(textNode, node) {
  var parent = textNode.parentNode;
  if (parent == node) {
    return-1;
  }
  var sibling = node;
  while (sibling.parentNode != parent) {
    sibling = sibling.parentNode;
  }
  return goog.dom.compareSiblingOrder_(sibling, textNode);
};
goog.dom.compareSiblingOrder_ = function(node1, node2) {
  var s = node2;
  while (s = s.previousSibling) {
    if (s == node1) {
      return-1;
    }
  }
  return 1;
};
goog.dom.findCommonAncestor = function(var_args) {
  var i, count = arguments.length;
  if (!count) {
    return null;
  } else {
    if (count == 1) {
      return arguments[0];
    }
  }
  var paths = [];
  var minLength = Infinity;
  for (i = 0;i < count;i++) {
    var ancestors = [];
    var node = arguments[i];
    while (node) {
      ancestors.unshift(node);
      node = node.parentNode;
    }
    paths.push(ancestors);
    minLength = Math.min(minLength, ancestors.length);
  }
  var output = null;
  for (i = 0;i < minLength;i++) {
    var first = paths[0][i];
    for (var j = 1;j < count;j++) {
      if (first != paths[j][i]) {
        return output;
      }
    }
    output = first;
  }
  return output;
};
goog.dom.getOwnerDocument = function(node) {
  goog.asserts.assert(node, "Node cannot be null or undefined.");
  return(node.nodeType == goog.dom.NodeType.DOCUMENT ? node : node.ownerDocument || node.document);
};
goog.dom.getFrameContentDocument = function(frame) {
  var doc = frame.contentDocument || frame.contentWindow.document;
  return doc;
};
goog.dom.getFrameContentWindow = function(frame) {
  return frame.contentWindow || goog.dom.getWindow(goog.dom.getFrameContentDocument(frame));
};
goog.dom.setTextContent = function(node, text) {
  goog.asserts.assert(node != null, "goog.dom.setTextContent expects a non-null value for node");
  if ("textContent" in node) {
    node.textContent = text;
  } else {
    if (node.nodeType == goog.dom.NodeType.TEXT) {
      node.data = text;
    } else {
      if (node.firstChild && node.firstChild.nodeType == goog.dom.NodeType.TEXT) {
        while (node.lastChild != node.firstChild) {
          node.removeChild(node.lastChild);
        }
        node.firstChild.data = text;
      } else {
        goog.dom.removeChildren(node);
        var doc = goog.dom.getOwnerDocument(node);
        node.appendChild(doc.createTextNode(String(text)));
      }
    }
  }
};
goog.dom.getOuterHtml = function(element) {
  if ("outerHTML" in element) {
    return element.outerHTML;
  } else {
    var doc = goog.dom.getOwnerDocument(element);
    var div = doc.createElement("div");
    div.appendChild(element.cloneNode(true));
    return div.innerHTML;
  }
};
goog.dom.findNode = function(root, p) {
  var rv = [];
  var found = goog.dom.findNodes_(root, p, rv, true);
  return found ? rv[0] : undefined;
};
goog.dom.findNodes = function(root, p) {
  var rv = [];
  goog.dom.findNodes_(root, p, rv, false);
  return rv;
};
goog.dom.findNodes_ = function(root, p, rv, findOne) {
  if (root != null) {
    var child = root.firstChild;
    while (child) {
      if (p(child)) {
        rv.push(child);
        if (findOne) {
          return true;
        }
      }
      if (goog.dom.findNodes_(child, p, rv, findOne)) {
        return true;
      }
      child = child.nextSibling;
    }
  }
  return false;
};
goog.dom.TAGS_TO_IGNORE_ = {"SCRIPT":1, "STYLE":1, "HEAD":1, "IFRAME":1, "OBJECT":1};
goog.dom.PREDEFINED_TAG_VALUES_ = {"IMG":" ", "BR":"\n"};
goog.dom.isFocusableTabIndex = function(element) {
  return goog.dom.hasSpecifiedTabIndex_(element) && goog.dom.isTabIndexFocusable_(element);
};
goog.dom.setFocusableTabIndex = function(element, enable) {
  if (enable) {
    element.tabIndex = 0;
  } else {
    element.tabIndex = -1;
    element.removeAttribute("tabIndex");
  }
};
goog.dom.isFocusable = function(element) {
  var focusable;
  if (goog.dom.nativelySupportsFocus_(element)) {
    focusable = !element.disabled && (!goog.dom.hasSpecifiedTabIndex_(element) || goog.dom.isTabIndexFocusable_(element));
  } else {
    focusable = goog.dom.isFocusableTabIndex(element);
  }
  return focusable && goog.userAgent.IE ? goog.dom.hasNonZeroBoundingRect_(element) : focusable;
};
goog.dom.hasSpecifiedTabIndex_ = function(element) {
  var attrNode = element.getAttributeNode("tabindex");
  return goog.isDefAndNotNull(attrNode) && attrNode.specified;
};
goog.dom.isTabIndexFocusable_ = function(element) {
  var index = element.tabIndex;
  return goog.isNumber(index) && index >= 0 && index < 32768;
};
goog.dom.nativelySupportsFocus_ = function(element) {
  return element.tagName == goog.dom.TagName.A || element.tagName == goog.dom.TagName.INPUT || element.tagName == goog.dom.TagName.TEXTAREA || element.tagName == goog.dom.TagName.SELECT || element.tagName == goog.dom.TagName.BUTTON;
};
goog.dom.hasNonZeroBoundingRect_ = function(element) {
  var rect = goog.isFunction(element["getBoundingClientRect"]) ? element.getBoundingClientRect() : {"height":element.offsetHeight, "width":element.offsetWidth};
  return goog.isDefAndNotNull(rect) && rect.height > 0 && rect.width > 0;
};
goog.dom.getTextContent = function(node) {
  var textContent;
  if (goog.dom.BrowserFeature.CAN_USE_INNER_TEXT && "innerText" in node) {
    textContent = goog.string.canonicalizeNewlines(node.innerText);
  } else {
    var buf = [];
    goog.dom.getTextContent_(node, buf, true);
    textContent = buf.join("");
  }
  textContent = textContent.replace(/ \xAD /g, " ").replace(/\xAD/g, "");
  textContent = textContent.replace(/\u200B/g, "");
  if (!goog.dom.BrowserFeature.CAN_USE_INNER_TEXT) {
    textContent = textContent.replace(/ +/g, " ");
  }
  if (textContent != " ") {
    textContent = textContent.replace(/^\s*/, "");
  }
  return textContent;
};
goog.dom.getRawTextContent = function(node) {
  var buf = [];
  goog.dom.getTextContent_(node, buf, false);
  return buf.join("");
};
goog.dom.getTextContent_ = function(node, buf, normalizeWhitespace) {
  if (node.nodeName in goog.dom.TAGS_TO_IGNORE_) {
  } else {
    if (node.nodeType == goog.dom.NodeType.TEXT) {
      if (normalizeWhitespace) {
        buf.push(String(node.nodeValue).replace(/(\r\n|\r|\n)/g, ""));
      } else {
        buf.push(node.nodeValue);
      }
    } else {
      if (node.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
        buf.push(goog.dom.PREDEFINED_TAG_VALUES_[node.nodeName]);
      } else {
        var child = node.firstChild;
        while (child) {
          goog.dom.getTextContent_(child, buf, normalizeWhitespace);
          child = child.nextSibling;
        }
      }
    }
  }
};
goog.dom.getNodeTextLength = function(node) {
  return goog.dom.getTextContent(node).length;
};
goog.dom.getNodeTextOffset = function(node, opt_offsetParent) {
  var root = opt_offsetParent || goog.dom.getOwnerDocument(node).body;
  var buf = [];
  while (node && node != root) {
    var cur = node;
    while (cur = cur.previousSibling) {
      buf.unshift(goog.dom.getTextContent(cur));
    }
    node = node.parentNode;
  }
  return goog.string.trimLeft(buf.join("")).replace(/ +/g, " ").length;
};
goog.dom.getNodeAtOffset = function(parent, offset, opt_result) {
  var stack = [parent], pos = 0, cur = null;
  while (stack.length > 0 && pos < offset) {
    cur = stack.pop();
    if (cur.nodeName in goog.dom.TAGS_TO_IGNORE_) {
    } else {
      if (cur.nodeType == goog.dom.NodeType.TEXT) {
        var text = cur.nodeValue.replace(/(\r\n|\r|\n)/g, "").replace(/ +/g, " ");
        pos += text.length;
      } else {
        if (cur.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
          pos += goog.dom.PREDEFINED_TAG_VALUES_[cur.nodeName].length;
        } else {
          for (var i = cur.childNodes.length - 1;i >= 0;i--) {
            stack.push(cur.childNodes[i]);
          }
        }
      }
    }
  }
  if (goog.isObject(opt_result)) {
    opt_result.remainder = cur ? cur.nodeValue.length + offset - pos - 1 : 0;
    opt_result.node = cur;
  }
  return cur;
};
goog.dom.isNodeList = function(val) {
  if (val && typeof val.length == "number") {
    if (goog.isObject(val)) {
      return typeof val.item == "function" || typeof val.item == "string";
    } else {
      if (goog.isFunction(val)) {
        return typeof val.item == "function";
      }
    }
  }
  return false;
};
goog.dom.getAncestorByTagNameAndClass = function(element, opt_tag, opt_class) {
  if (!opt_tag && !opt_class) {
    return null;
  }
  var tagName = opt_tag ? opt_tag.toUpperCase() : null;
  return(goog.dom.getAncestor(element, function(node) {
    return(!tagName || node.nodeName == tagName) && (!opt_class || goog.isString(node.className) && goog.array.contains(node.className.split(/\s+/), opt_class));
  }, true));
};
goog.dom.getAncestorByClass = function(element, className) {
  return goog.dom.getAncestorByTagNameAndClass(element, null, className);
};
goog.dom.getAncestor = function(element, matcher, opt_includeNode, opt_maxSearchSteps) {
  if (!opt_includeNode) {
    element = element.parentNode;
  }
  var ignoreSearchSteps = opt_maxSearchSteps == null;
  var steps = 0;
  while (element && (ignoreSearchSteps || steps <= opt_maxSearchSteps)) {
    if (matcher(element)) {
      return element;
    }
    element = element.parentNode;
    steps++;
  }
  return null;
};
goog.dom.getActiveElement = function(doc) {
  try {
    return doc && doc.activeElement;
  } catch (e) {
  }
  return null;
};
goog.dom.devicePixelRatio_;
goog.dom.getPixelRatio = goog.functions.cacheReturnValue(function() {
  var win = goog.dom.getWindow();
  var isFirefoxMobile = goog.userAgent.GECKO && goog.userAgent.MOBILE;
  if (goog.isDef(win.devicePixelRatio) && !isFirefoxMobile) {
    return win.devicePixelRatio;
  } else {
    if (win.matchMedia) {
      return goog.dom.matchesPixelRatio_(.75) || goog.dom.matchesPixelRatio_(1.5) || goog.dom.matchesPixelRatio_(2) || goog.dom.matchesPixelRatio_(3) || 1;
    }
  }
  return 1;
});
goog.dom.matchesPixelRatio_ = function(pixelRatio) {
  var win = goog.dom.getWindow();
  var query = "(-webkit-min-device-pixel-ratio: " + pixelRatio + ")," + "(min--moz-device-pixel-ratio: " + pixelRatio + ")," + "(min-resolution: " + pixelRatio + "dppx)";
  return win.matchMedia(query).matches ? pixelRatio : 0;
};
goog.dom.DomHelper = function(opt_document) {
  this.document_ = opt_document || goog.global.document || document;
};
goog.dom.DomHelper.prototype.getDomHelper = goog.dom.getDomHelper;
goog.dom.DomHelper.prototype.setDocument = function(document) {
  this.document_ = document;
};
goog.dom.DomHelper.prototype.getDocument = function() {
  return this.document_;
};
goog.dom.DomHelper.prototype.getElement = function(element) {
  return goog.dom.getElementHelper_(this.document_, element);
};
goog.dom.DomHelper.prototype.getRequiredElement = function(id) {
  return goog.dom.getRequiredElementHelper_(this.document_, id);
};
goog.dom.DomHelper.prototype.$ = goog.dom.DomHelper.prototype.getElement;
goog.dom.DomHelper.prototype.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(this.document_, opt_tag, opt_class, opt_el);
};
goog.dom.DomHelper.prototype.getElementsByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementsByClass(className, doc);
};
goog.dom.DomHelper.prototype.getElementByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementByClass(className, doc);
};
goog.dom.DomHelper.prototype.getRequiredElementByClass = function(className, opt_root) {
  var root = opt_root || this.document_;
  return goog.dom.getRequiredElementByClass(className, root);
};
goog.dom.DomHelper.prototype.$$ = goog.dom.DomHelper.prototype.getElementsByTagNameAndClass;
goog.dom.DomHelper.prototype.setProperties = goog.dom.setProperties;
goog.dom.DomHelper.prototype.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize(opt_window || this.getWindow());
};
goog.dom.DomHelper.prototype.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(this.getWindow());
};
goog.dom.Appendable;
goog.dom.DomHelper.prototype.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(this.document_, arguments);
};
goog.dom.DomHelper.prototype.$dom = goog.dom.DomHelper.prototype.createDom;
goog.dom.DomHelper.prototype.createElement = function(name) {
  return this.document_.createElement(name);
};
goog.dom.DomHelper.prototype.createTextNode = function(content) {
  return this.document_.createTextNode(String(content));
};
goog.dom.DomHelper.prototype.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(this.document_, rows, columns, !!opt_fillWithNbsp);
};
goog.dom.DomHelper.prototype.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(this.document_, htmlString);
};
goog.dom.DomHelper.prototype.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(this.document_);
};
goog.dom.DomHelper.prototype.getWindow = function() {
  return goog.dom.getWindow_(this.document_);
};
goog.dom.DomHelper.prototype.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(this.document_);
};
goog.dom.DomHelper.prototype.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(this.document_);
};
goog.dom.DomHelper.prototype.getActiveElement = function(opt_doc) {
  return goog.dom.getActiveElement(opt_doc || this.document_);
};
goog.dom.DomHelper.prototype.appendChild = goog.dom.appendChild;
goog.dom.DomHelper.prototype.append = goog.dom.append;
goog.dom.DomHelper.prototype.canHaveChildren = goog.dom.canHaveChildren;
goog.dom.DomHelper.prototype.removeChildren = goog.dom.removeChildren;
goog.dom.DomHelper.prototype.insertSiblingBefore = goog.dom.insertSiblingBefore;
goog.dom.DomHelper.prototype.insertSiblingAfter = goog.dom.insertSiblingAfter;
goog.dom.DomHelper.prototype.insertChildAt = goog.dom.insertChildAt;
goog.dom.DomHelper.prototype.removeNode = goog.dom.removeNode;
goog.dom.DomHelper.prototype.replaceNode = goog.dom.replaceNode;
goog.dom.DomHelper.prototype.flattenElement = goog.dom.flattenElement;
goog.dom.DomHelper.prototype.getChildren = goog.dom.getChildren;
goog.dom.DomHelper.prototype.getFirstElementChild = goog.dom.getFirstElementChild;
goog.dom.DomHelper.prototype.getLastElementChild = goog.dom.getLastElementChild;
goog.dom.DomHelper.prototype.getNextElementSibling = goog.dom.getNextElementSibling;
goog.dom.DomHelper.prototype.getPreviousElementSibling = goog.dom.getPreviousElementSibling;
goog.dom.DomHelper.prototype.getNextNode = goog.dom.getNextNode;
goog.dom.DomHelper.prototype.getPreviousNode = goog.dom.getPreviousNode;
goog.dom.DomHelper.prototype.isNodeLike = goog.dom.isNodeLike;
goog.dom.DomHelper.prototype.isElement = goog.dom.isElement;
goog.dom.DomHelper.prototype.isWindow = goog.dom.isWindow;
goog.dom.DomHelper.prototype.getParentElement = goog.dom.getParentElement;
goog.dom.DomHelper.prototype.contains = goog.dom.contains;
goog.dom.DomHelper.prototype.compareNodeOrder = goog.dom.compareNodeOrder;
goog.dom.DomHelper.prototype.findCommonAncestor = goog.dom.findCommonAncestor;
goog.dom.DomHelper.prototype.getOwnerDocument = goog.dom.getOwnerDocument;
goog.dom.DomHelper.prototype.getFrameContentDocument = goog.dom.getFrameContentDocument;
goog.dom.DomHelper.prototype.getFrameContentWindow = goog.dom.getFrameContentWindow;
goog.dom.DomHelper.prototype.setTextContent = goog.dom.setTextContent;
goog.dom.DomHelper.prototype.getOuterHtml = goog.dom.getOuterHtml;
goog.dom.DomHelper.prototype.findNode = goog.dom.findNode;
goog.dom.DomHelper.prototype.findNodes = goog.dom.findNodes;
goog.dom.DomHelper.prototype.isFocusableTabIndex = goog.dom.isFocusableTabIndex;
goog.dom.DomHelper.prototype.setFocusableTabIndex = goog.dom.setFocusableTabIndex;
goog.dom.DomHelper.prototype.isFocusable = goog.dom.isFocusable;
goog.dom.DomHelper.prototype.getTextContent = goog.dom.getTextContent;
goog.dom.DomHelper.prototype.getNodeTextLength = goog.dom.getNodeTextLength;
goog.dom.DomHelper.prototype.getNodeTextOffset = goog.dom.getNodeTextOffset;
goog.dom.DomHelper.prototype.getNodeAtOffset = goog.dom.getNodeAtOffset;
goog.dom.DomHelper.prototype.isNodeList = goog.dom.isNodeList;
goog.dom.DomHelper.prototype.getAncestorByTagNameAndClass = goog.dom.getAncestorByTagNameAndClass;
goog.dom.DomHelper.prototype.getAncestorByClass = goog.dom.getAncestorByClass;
goog.dom.DomHelper.prototype.getAncestor = goog.dom.getAncestor;
goog.provide("goog.net.jsloader");
goog.provide("goog.net.jsloader.Error");
goog.provide("goog.net.jsloader.ErrorCode");
goog.provide("goog.net.jsloader.Options");
goog.require("goog.array");
goog.require("goog.async.Deferred");
goog.require("goog.debug.Error");
goog.require("goog.dom");
goog.require("goog.dom.TagName");
goog.net.jsloader.GLOBAL_VERIFY_OBJS_ = "closure_verification";
goog.net.jsloader.DEFAULT_TIMEOUT = 5E3;
goog.net.jsloader.Options;
goog.net.jsloader.scriptsToLoad_ = [];
goog.net.jsloader.loadMany = function(uris, opt_options) {
  if (!uris.length) {
    return;
  }
  var isAnotherModuleLoading = goog.net.jsloader.scriptsToLoad_.length;
  goog.array.extend(goog.net.jsloader.scriptsToLoad_, uris);
  if (isAnotherModuleLoading) {
    return;
  }
  uris = goog.net.jsloader.scriptsToLoad_;
  var popAndLoadNextScript = function() {
    var uri = uris.shift();
    var deferred = goog.net.jsloader.load(uri, opt_options);
    if (uris.length) {
      deferred.addBoth(popAndLoadNextScript);
    }
  };
  popAndLoadNextScript();
};
goog.net.jsloader.load = function(uri, opt_options) {
  var options = opt_options || {};
  var doc = options.document || document;
  var script = goog.dom.createElement(goog.dom.TagName.SCRIPT);
  var request = {script_:script, timeout_:undefined};
  var deferred = new goog.async.Deferred(goog.net.jsloader.cancel_, request);
  var timeout = null;
  var timeoutDuration = goog.isDefAndNotNull(options.timeout) ? options.timeout : goog.net.jsloader.DEFAULT_TIMEOUT;
  if (timeoutDuration > 0) {
    timeout = window.setTimeout(function() {
      goog.net.jsloader.cleanup_(script, true);
      deferred.errback(new goog.net.jsloader.Error(goog.net.jsloader.ErrorCode.TIMEOUT, "Timeout reached for loading script " + uri));
    }, timeoutDuration);
    request.timeout_ = timeout;
  }
  script.onload = script.onreadystatechange = function() {
    if (!script.readyState || script.readyState == "loaded" || script.readyState == "complete") {
      var removeScriptNode = options.cleanupWhenDone || false;
      goog.net.jsloader.cleanup_(script, removeScriptNode, timeout);
      deferred.callback(null);
    }
  };
  script.onerror = function() {
    goog.net.jsloader.cleanup_(script, true, timeout);
    deferred.errback(new goog.net.jsloader.Error(goog.net.jsloader.ErrorCode.LOAD_ERROR, "Error while loading script " + uri));
  };
  goog.dom.setProperties(script, {"type":"text/javascript", "charset":"UTF-8", "src":uri});
  var scriptParent = goog.net.jsloader.getScriptParentElement_(doc);
  scriptParent.appendChild(script);
  return deferred;
};
goog.net.jsloader.loadAndVerify = function(uri, verificationObjName, options) {
  if (!goog.global[goog.net.jsloader.GLOBAL_VERIFY_OBJS_]) {
    goog.global[goog.net.jsloader.GLOBAL_VERIFY_OBJS_] = {};
  }
  var verifyObjs = goog.global[goog.net.jsloader.GLOBAL_VERIFY_OBJS_];
  if (goog.isDef(verifyObjs[verificationObjName])) {
    return goog.async.Deferred.fail(new goog.net.jsloader.Error(goog.net.jsloader.ErrorCode.VERIFY_OBJECT_ALREADY_EXISTS, "Verification object " + verificationObjName + " already defined."));
  }
  var sendDeferred = goog.net.jsloader.load(uri, options);
  var deferred = new goog.async.Deferred(goog.bind(sendDeferred.cancel, sendDeferred));
  sendDeferred.addCallback(function() {
    var result = verifyObjs[verificationObjName];
    if (goog.isDef(result)) {
      deferred.callback(result);
      delete verifyObjs[verificationObjName];
    } else {
      deferred.errback(new goog.net.jsloader.Error(goog.net.jsloader.ErrorCode.VERIFY_ERROR, "Script " + uri + " loaded, but verification object " + verificationObjName + " was not defined."));
    }
  });
  sendDeferred.addErrback(function(error) {
    if (goog.isDef(verifyObjs[verificationObjName])) {
      delete verifyObjs[verificationObjName];
    }
    deferred.errback(error);
  });
  return deferred;
};
goog.net.jsloader.getScriptParentElement_ = function(doc) {
  var headElements = doc.getElementsByTagName(goog.dom.TagName.HEAD);
  if (!headElements || goog.array.isEmpty(headElements)) {
    return doc.documentElement;
  } else {
    return headElements[0];
  }
};
goog.net.jsloader.cancel_ = function() {
  var request = this;
  if (request && request.script_) {
    var scriptNode = request.script_;
    if (scriptNode && scriptNode.tagName == "SCRIPT") {
      goog.net.jsloader.cleanup_(scriptNode, true, request.timeout_);
    }
  }
};
goog.net.jsloader.cleanup_ = function(scriptNode, removeScriptNode, opt_timeout) {
  if (goog.isDefAndNotNull(opt_timeout)) {
    goog.global.clearTimeout(opt_timeout);
  }
  scriptNode.onload = goog.nullFunction;
  scriptNode.onerror = goog.nullFunction;
  scriptNode.onreadystatechange = goog.nullFunction;
  if (removeScriptNode) {
    window.setTimeout(function() {
      goog.dom.removeNode(scriptNode);
    }, 0);
  }
};
goog.net.jsloader.ErrorCode = {LOAD_ERROR:0, TIMEOUT:1, VERIFY_ERROR:2, VERIFY_OBJECT_ALREADY_EXISTS:3};
goog.net.jsloader.Error = function(code, opt_message) {
  var msg = "Jsloader error (code #" + code + ")";
  if (opt_message) {
    msg += ": " + opt_message;
  }
  goog.net.jsloader.Error.base(this, "constructor", msg);
  this.code = code;
};
goog.inherits(goog.net.jsloader.Error, goog.debug.Error);
goog.provide("goog.net.Jsonp");
goog.require("goog.Uri");
goog.require("goog.net.jsloader");
goog.net.Jsonp = function(uri, opt_callbackParamName) {
  this.uri_ = new goog.Uri(uri);
  this.callbackParamName_ = opt_callbackParamName ? opt_callbackParamName : "callback";
  this.timeout_ = 5E3;
};
goog.net.Jsonp.CALLBACKS = "_callbacks_";
goog.net.Jsonp.scriptCounter_ = 0;
goog.net.Jsonp.prototype.setRequestTimeout = function(timeout) {
  this.timeout_ = timeout;
};
goog.net.Jsonp.prototype.getRequestTimeout = function() {
  return this.timeout_;
};
goog.net.Jsonp.prototype.send = function(opt_payload, opt_replyCallback, opt_errorCallback, opt_callbackParamValue) {
  var payload = opt_payload || null;
  var id = opt_callbackParamValue || "_" + (goog.net.Jsonp.scriptCounter_++).toString(36) + goog.now().toString(36);
  if (!goog.global[goog.net.Jsonp.CALLBACKS]) {
    goog.global[goog.net.Jsonp.CALLBACKS] = {};
  }
  var uri = this.uri_.clone();
  if (payload) {
    goog.net.Jsonp.addPayloadToUri_(payload, uri);
  }
  if (opt_replyCallback) {
    var reply = goog.net.Jsonp.newReplyHandler_(id, opt_replyCallback);
    goog.global[goog.net.Jsonp.CALLBACKS][id] = reply;
    uri.setParameterValues(this.callbackParamName_, goog.net.Jsonp.CALLBACKS + "." + id);
  }
  var deferred = goog.net.jsloader.load(uri.toString(), {timeout:this.timeout_, cleanupWhenDone:true});
  var error = goog.net.Jsonp.newErrorHandler_(id, payload, opt_errorCallback);
  deferred.addErrback(error);
  return{id_:id, deferred_:deferred};
};
goog.net.Jsonp.prototype.cancel = function(request) {
  if (request) {
    if (request.deferred_) {
      request.deferred_.cancel();
    }
    if (request.id_) {
      goog.net.Jsonp.cleanup_(request.id_, false);
    }
  }
};
goog.net.Jsonp.newErrorHandler_ = function(id, payload, opt_errorCallback) {
  return function() {
    goog.net.Jsonp.cleanup_(id, false);
    if (opt_errorCallback) {
      opt_errorCallback(payload);
    }
  };
};
goog.net.Jsonp.newReplyHandler_ = function(id, replyCallback) {
  return function(var_args) {
    goog.net.Jsonp.cleanup_(id, true);
    replyCallback.apply(undefined, arguments);
  };
};
goog.net.Jsonp.cleanup_ = function(id, deleteReplyHandler) {
  if (goog.global[goog.net.Jsonp.CALLBACKS][id]) {
    if (deleteReplyHandler) {
      delete goog.global[goog.net.Jsonp.CALLBACKS][id];
    } else {
      goog.global[goog.net.Jsonp.CALLBACKS][id] = goog.nullFunction;
    }
  }
};
goog.net.Jsonp.addPayloadToUri_ = function(payload, uri) {
  for (var name in payload) {
    if (!payload.hasOwnProperty || payload.hasOwnProperty(name)) {
      uri.setParameterValues(name, payload[name]);
    }
  }
  return uri;
};
goog.provide("goog.string.StringBuffer");
goog.string.StringBuffer = function(opt_a1, var_args) {
  if (opt_a1 != null) {
    this.append.apply(this, arguments);
  }
};
goog.string.StringBuffer.prototype.buffer_ = "";
goog.string.StringBuffer.prototype.set = function(s) {
  this.buffer_ = "" + s;
};
goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
  this.buffer_ += a1;
  if (opt_a2 != null) {
    for (var i = 1;i < arguments.length;i++) {
      this.buffer_ += arguments[i];
    }
  }
  return this;
};
goog.string.StringBuffer.prototype.clear = function() {
  this.buffer_ = "";
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.buffer_.length;
};
goog.string.StringBuffer.prototype.toString = function() {
  return this.buffer_;
};
goog.provide("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.array");
goog.require("goog.object");
goog.require("goog.string");
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2913";
cljs.core._STAR_unchecked_if_STAR_ = false;
if (typeof cljs.core._STAR_print_fn_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_print_fn_STAR_ = function _STAR_print_fn_STAR_(_) {
    throw new Error("No *print-fn* fn set for evaluation environment");
  };
}
cljs.core.set_print_fn_BANG_ = function set_print_fn_BANG_(f) {
  return cljs.core._STAR_print_fn_STAR_ = f;
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if (typeof cljs.core._STAR_loaded_libs_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = function pr_opts() {
  return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939), cljs.core._STAR_flush_on_newline_STAR_, new cljs.core.Keyword(null, "readably", "readably", 1129599760), cljs.core._STAR_print_readably_STAR_, new cljs.core.Keyword(null, "meta", "meta", 1499536964), cljs.core._STAR_print_meta_STAR_, new cljs.core.Keyword(null, "dup", "dup", 556298533), cljs.core._STAR_print_dup_STAR_, new cljs.core.Keyword(null, "print-length", "print-length", 
  1931866356), cljs.core._STAR_print_length_STAR_], null);
};
cljs.core.enable_console_print_BANG_ = function enable_console_print_BANG_() {
  cljs.core._STAR_print_newline_STAR_ = false;
  return cljs.core._STAR_print_fn_STAR_ = function() {
    var G__9842__delegate = function(args) {
      return console.log.apply(console, function() {
        var G__9841 = args;
        return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__9841) : cljs.core.into_array.call(null, G__9841);
      }());
    };
    var G__9842 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__9843__i = 0, G__9843__a = new Array(arguments.length - 0);
        while (G__9843__i < G__9843__a.length) {
          G__9843__a[G__9843__i] = arguments[G__9843__i + 0];
          ++G__9843__i;
        }
        args = new cljs.core.IndexedSeq(G__9843__a, 0);
      }
      return G__9842__delegate.call(this, args);
    };
    G__9842.cljs$lang$maxFixedArity = 0;
    G__9842.cljs$lang$applyTo = function(arglist__9844) {
      var args = cljs.core.seq(arglist__9844);
      return G__9842__delegate(args);
    };
    G__9842.cljs$core$IFn$_invoke$arity$variadic = G__9842__delegate;
    return G__9842;
  }();
};
cljs.core.truth_ = function truth_(x) {
  return x != null && x !== false;
};
cljs.core.not_native = null;
cljs.core.identical_QMARK_ = function identical_QMARK_(x, y) {
  return x === y;
};
cljs.core.nil_QMARK_ = function nil_QMARK_(x) {
  return x == null;
};
cljs.core.array_QMARK_ = function array_QMARK_(x) {
  return x instanceof Array;
};
cljs.core.number_QMARK_ = function number_QMARK_(n) {
  return typeof n === "number";
};
cljs.core.not = function not(x) {
  if (cljs.core.truth_(x)) {
    return false;
  } else {
    return true;
  }
};
cljs.core.some_QMARK_ = function some_QMARK_(x) {
  return!(x == null);
};
cljs.core.object_QMARK_ = function object_QMARK_(x) {
  if (!(x == null)) {
    return x.constructor === Object;
  } else {
    return false;
  }
};
cljs.core.string_QMARK_ = function string_QMARK_(x) {
  var G__9846 = x;
  return goog.isString(G__9846);
};
cljs.core.native_satisfies_QMARK_ = function native_satisfies_QMARK_(p, x) {
  var x__$1 = x == null ? null : x;
  if (p[function() {
    var G__9848 = x__$1;
    return goog.typeOf(G__9848);
  }()]) {
    return true;
  } else {
    if (p["_"]) {
      return true;
    } else {
      return false;
    }
  }
};
cljs.core.is_proto_ = function is_proto_(x) {
  return x.constructor.prototype === x;
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = function type(x) {
  if (x == null) {
    return null;
  } else {
    return x.constructor;
  }
};
cljs.core.missing_protocol = function missing_protocol(proto, obj) {
  var ty = cljs.core.type(obj);
  var ty__$1 = cljs.core.truth_(function() {
    var and__3913__auto__ = ty;
    if (cljs.core.truth_(and__3913__auto__)) {
      return ty.cljs$lang$type;
    } else {
      return and__3913__auto__;
    }
  }()) ? ty.cljs$lang$ctorStr : function() {
    var G__9850 = obj;
    return goog.typeOf(G__9850);
  }();
  return new Error(["No protocol method ", proto, " defined for type ", ty__$1, ": ", obj].join(""));
};
cljs.core.type__GT_str = function type__GT_str(ty) {
  var temp__4124__auto__ = ty.cljs$lang$ctorStr;
  if (cljs.core.truth_(temp__4124__auto__)) {
    var s = temp__4124__auto__;
    return s;
  } else {
    return[cljs.core.str(ty)].join("");
  }
};
cljs.core.load_file = function load_file(file) {
  if (cljs.core.truth_(COMPILED)) {
    return null;
  } else {
    return goog.importScript_(file);
  }
};
if (typeof Symbol !== "undefined" && function() {
  var G__9852 = Symbol;
  return goog.typeOf(G__9852);
}() === "function") {
  cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
  cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = function() {
  var make_array = null;
  var make_array__1 = function(size) {
    return new Array(size);
  };
  var make_array__2 = function(type, size) {
    return make_array.cljs$core$IFn$_invoke$arity$1(size);
  };
  make_array = function(type, size) {
    switch(arguments.length) {
      case 1:
        return make_array__1.call(this, type);
      case 2:
        return make_array__2.call(this, type, size);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
  make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
  return make_array;
}();
cljs.core.aclone = function aclone(arr) {
  var len = arr.length;
  var new_arr = new Array(len);
  var n__4812__auto___9854 = len;
  var i_9855 = 0;
  while (true) {
    if (i_9855 < n__4812__auto___9854) {
      new_arr[i_9855] = arr[i_9855];
      var G__9856 = i_9855 + 1;
      i_9855 = G__9856;
      continue;
    } else {
    }
    break;
  }
  return new_arr;
};
cljs.core.array = function array(var_args) {
  var a = new Array(arguments.length);
  var i = 0;
  while (true) {
    if (i < a.length) {
      a[i] = arguments[i];
      var G__9857 = i + 1;
      i = G__9857;
      continue;
    } else {
      return a;
    }
    break;
  }
};
cljs.core.aget = function() {
  var aget = null;
  var aget__2 = function(array, i) {
    return array[i];
  };
  var aget__3 = function() {
    var G__9866__delegate = function(array, i, idxs) {
      var G__9863 = aget;
      var G__9864 = aget.cljs$core$IFn$_invoke$arity$2(array, i);
      var G__9865 = idxs;
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__9863, G__9864, G__9865) : cljs.core.apply.call(null, G__9863, G__9864, G__9865);
    };
    var G__9866 = function(array, i, var_args) {
      var idxs = null;
      if (arguments.length > 2) {
        var G__9867__i = 0, G__9867__a = new Array(arguments.length - 2);
        while (G__9867__i < G__9867__a.length) {
          G__9867__a[G__9867__i] = arguments[G__9867__i + 2];
          ++G__9867__i;
        }
        idxs = new cljs.core.IndexedSeq(G__9867__a, 0);
      }
      return G__9866__delegate.call(this, array, i, idxs);
    };
    G__9866.cljs$lang$maxFixedArity = 2;
    G__9866.cljs$lang$applyTo = function(arglist__9868) {
      var array = cljs.core.first(arglist__9868);
      arglist__9868 = cljs.core.next(arglist__9868);
      var i = cljs.core.first(arglist__9868);
      var idxs = cljs.core.rest(arglist__9868);
      return G__9866__delegate(array, i, idxs);
    };
    G__9866.cljs$core$IFn$_invoke$arity$variadic = G__9866__delegate;
    return G__9866;
  }();
  aget = function(array, i, var_args) {
    var idxs = var_args;
    switch(arguments.length) {
      case 2:
        return aget__2.call(this, array, i);
      default:
        var G__9869 = null;
        if (arguments.length > 2) {
          var G__9870__i = 0, G__9870__a = new Array(arguments.length - 2);
          while (G__9870__i < G__9870__a.length) {
            G__9870__a[G__9870__i] = arguments[G__9870__i + 2];
            ++G__9870__i;
          }
          G__9869 = new cljs.core.IndexedSeq(G__9870__a, 0);
        }
        return aget__3.cljs$core$IFn$_invoke$arity$variadic(array, i, G__9869);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aget.cljs$lang$maxFixedArity = 2;
  aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
  aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
  aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
  return aget;
}();
cljs.core.aset = function() {
  var aset = null;
  var aset__3 = function(array, i, val) {
    return array[i] = val;
  };
  var aset__4 = function() {
    var G__9879__delegate = function(array, idx, idx2, idxv) {
      var G__9875 = aset;
      var G__9876 = array[idx];
      var G__9877 = idx2;
      var G__9878 = idxv;
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__9875, G__9876, G__9877, G__9878) : cljs.core.apply.call(null, G__9875, G__9876, G__9877, G__9878);
    };
    var G__9879 = function(array, idx, idx2, var_args) {
      var idxv = null;
      if (arguments.length > 3) {
        var G__9880__i = 0, G__9880__a = new Array(arguments.length - 3);
        while (G__9880__i < G__9880__a.length) {
          G__9880__a[G__9880__i] = arguments[G__9880__i + 3];
          ++G__9880__i;
        }
        idxv = new cljs.core.IndexedSeq(G__9880__a, 0);
      }
      return G__9879__delegate.call(this, array, idx, idx2, idxv);
    };
    G__9879.cljs$lang$maxFixedArity = 3;
    G__9879.cljs$lang$applyTo = function(arglist__9881) {
      var array = cljs.core.first(arglist__9881);
      arglist__9881 = cljs.core.next(arglist__9881);
      var idx = cljs.core.first(arglist__9881);
      arglist__9881 = cljs.core.next(arglist__9881);
      var idx2 = cljs.core.first(arglist__9881);
      var idxv = cljs.core.rest(arglist__9881);
      return G__9879__delegate(array, idx, idx2, idxv);
    };
    G__9879.cljs$core$IFn$_invoke$arity$variadic = G__9879__delegate;
    return G__9879;
  }();
  aset = function(array, idx, idx2, var_args) {
    var idxv = var_args;
    switch(arguments.length) {
      case 3:
        return aset__3.call(this, array, idx, idx2);
      default:
        var G__9882 = null;
        if (arguments.length > 3) {
          var G__9883__i = 0, G__9883__a = new Array(arguments.length - 3);
          while (G__9883__i < G__9883__a.length) {
            G__9883__a[G__9883__i] = arguments[G__9883__i + 3];
            ++G__9883__i;
          }
          G__9882 = new cljs.core.IndexedSeq(G__9883__a, 0);
        }
        return aset__4.cljs$core$IFn$_invoke$arity$variadic(array, idx, idx2, G__9882);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aset.cljs$lang$maxFixedArity = 3;
  aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
  aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
  aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
  return aset;
}();
cljs.core.alength = function alength(array) {
  return array.length;
};
cljs.core.into_array = function() {
  var into_array = null;
  var into_array__1 = function(aseq) {
    return into_array.cljs$core$IFn$_invoke$arity$2(null, aseq);
  };
  var into_array__2 = function(type, aseq) {
    var G__9889 = function(a, x) {
      a.push(x);
      return a;
    };
    var G__9890 = [];
    var G__9891 = aseq;
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__9889, G__9890, G__9891) : cljs.core.reduce.call(null, G__9889, G__9890, G__9891);
  };
  into_array = function(type, aseq) {
    switch(arguments.length) {
      case 1:
        return into_array__1.call(this, type);
      case 2:
        return into_array__2.call(this, type, aseq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
  into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
  return into_array;
}();
cljs.core.js_invoke = function() {
  var js_invoke__delegate = function(obj, s, args) {
    return obj[s].apply(obj, cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
  };
  var js_invoke = function(obj, s, var_args) {
    var args = null;
    if (arguments.length > 2) {
      var G__9892__i = 0, G__9892__a = new Array(arguments.length - 2);
      while (G__9892__i < G__9892__a.length) {
        G__9892__a[G__9892__i] = arguments[G__9892__i + 2];
        ++G__9892__i;
      }
      args = new cljs.core.IndexedSeq(G__9892__a, 0);
    }
    return js_invoke__delegate.call(this, obj, s, args);
  };
  js_invoke.cljs$lang$maxFixedArity = 2;
  js_invoke.cljs$lang$applyTo = function(arglist__9893) {
    var obj = cljs.core.first(arglist__9893);
    arglist__9893 = cljs.core.next(arglist__9893);
    var s = cljs.core.first(arglist__9893);
    var args = cljs.core.rest(arglist__9893);
    return js_invoke__delegate(obj, s, args);
  };
  js_invoke.cljs$core$IFn$_invoke$arity$variadic = js_invoke__delegate;
  return js_invoke;
}();
cljs.core.Fn = function() {
  var obj9895 = {};
  return obj9895;
}();
cljs.core.IFn = function() {
  var obj9897 = {};
  return obj9897;
}();
cljs.core._invoke = function() {
  var _invoke = null;
  var _invoke__1 = function(this$) {
    if (function() {
      var and__3913__auto__ = this$;
      if (and__3913__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$1;
      } else {
        return and__3913__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$1(this$);
    } else {
      var x__4569__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3925__auto__ = cljs.core._invoke[function() {
          var G__9943 = x__4569__auto__;
          return goog.typeOf(G__9943);
        }()];
        if (or__3925__auto__) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = cljs.core._invoke["_"];
          if (or__3925__auto____$1) {
            return or__3925__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$);
    }
  };
  var _invoke__2 = function(this$, a) {
    if (function() {
      var and__3913__auto__ = this$;
      if (and__3913__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$2;
      } else {
        return and__3913__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$2(this$, a);
    } else {
      var x__4569__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3925__auto__ = cljs.core._invoke[function() {
          var G__9945 = x__4569__auto__;
          return goog.typeOf(G__9945);
        }()];
        if (or__3925__auto__) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = cljs.core._invoke["_"];
          if (or__3925__auto____$1) {
            return or__3925__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a);
    }
  };
  var _invoke__3 = function(this$, a, b) {
    if (function() {
      var and__3913__auto__ = this$;
      if (and__3913__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$3;
      } else {
        return and__3913__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b);
    } else {
      var x__4569__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3925__auto__ = cljs.core._invoke[function() {
          var G__9947 = x__4569__auto__;
          return goog.typeOf(G__9947);
        }()];
        if (or__3925__auto__) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = cljs.core._invoke["_"];
          if (or__3925__auto____$1) {
            return or__3925__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b);
    }
  };
  var _invoke__4 = function(this$, a, b, c) {
    if (function() {
      var and__3913__auto__ = this$;
      if (and__3913__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$4;
      } else {
        return and__3913__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c);
    } else {
      var x__4569__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3925__auto__ = cljs.core._invoke[function() {
          var G__9949 = x__4569__auto__;
          return goog.typeOf(G__9949);
        }()];
        if (or__3925__auto__) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = cljs.core._invoke["_"];
          if (or__3925__auto____$1) {
            return or__3925__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c);
    }
  };
  var _invoke__5 = function(this$, a, b, c, d) {
    if (function() {
      var and__3913__auto__ = this$;
      if (and__3913__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$5;
      } else {
        return and__3913__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d);
    } else {
      var x__4569__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3925__auto__ = cljs.core._invoke[function() {
          var G__9951 = x__4569__auto__;
          return goog.typeOf(G__9951);
        }()];
        if (or__3925__auto__) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = cljs.core._invoke["_"];
          if (or__3925__auto____$1) {
            return or__3925__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d);
    }
  };
  var _invoke__6 = function(this$, a, b, c, d, e) {
    if (function() {
      var and__3913__auto__ = this$;
      if (and__3913__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$6;
      } else {
        return and__3913__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e);
    } else {
      var x__4569__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3925__auto__ = cljs.core._invoke[function() {
          var G__9953 = x__4569__auto__;
          return goog.typeOf(G__9953);
        }()];
        if (or__3925__auto__) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = cljs.core._invoke["_"];
          if (or__3925__auto____$1) {
            return or__3925__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e);
    }
  };
  var _invoke__7 = function(this$, a, b, c, d, e, f) {
    if (function() {
      var and__3913__auto__ = this$;
      if (and__3913__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$7;
      } else {
        return and__3913__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f);
    } else {
      var x__4569__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3925__auto__ = cljs.core._invoke[function() {
          var G__9955 = x__4569__auto__;
          return goog.typeOf(G__9955);
        }()];
        if (or__3925__auto__) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = cljs.core._invoke["_"];
          if (or__3925__auto____$1) {
            return or__3925__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f);
    }
  };
  var _invoke__8 = function(this$, a, b, c, d, e, f, g) {
    if (function() {
      var and__3913__auto__ = this$;
      if (and__3913__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$8;
      } else {
        return and__3913__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g);
    } else {
      var x__4569__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3925__auto__ = cljs.core._invoke[function() {
          var G__9957 = x__4569__auto__;
          return goog.typeOf(G__9957);
        }()];
        if (or__3925__auto__) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = cljs.core._invoke["_"];
          if (or__3925__auto____$1) {
            return or__3925__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g);
    }
  };
  var _invoke__9 = function(this$, a, b, c, d, e, f, g, h) {
    if (function() {
      var and__3913__auto__ = this$;
      if (and__3913__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$9;
      } else {
        return and__3913__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h);
    } else {
      var x__4569__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3925__auto__ = cljs.core._invoke[function() {
          var G__9959 = x__4569__auto__;
          return goog.typeOf(G__9959);
        }()];
        if (or__3925__auto__) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = cljs.core._invoke["_"];
          if (or__3925__auto____$1) {
            return or__3925__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h);
    }
  };
  var _invoke__10 = function(this$, a, b, c, d, e, f, g, h, i) {
    if (function() {
      var and__3913__auto__ = this$;
      if (and__3913__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$10;
      } else {
        return and__3913__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i);
    } else {
      var x__4569__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3925__auto__ = cljs.core._invoke[function() {
          var G__9961 = x__4569__auto__;
          return goog.typeOf(G__9961);
        }()];
        if (or__3925__auto__) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = cljs.core._invoke["_"];
          if (or__3925__auto____$1) {
            return or__3925__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i);
    }
  };
  var _invoke__11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
    if (function() {
      var and__3913__auto__ = this$;
      if (and__3913__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$11;
      } else {
        return and__3913__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j);
    } else {
      var x__4569__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3925__auto__ = cljs.core._invoke[function() {
          var G__9963 = x__4569__auto__;
          return goog.typeOf(G__9963);
        }()];
        if (or__3925__auto__) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = cljs.core._invoke["_"];
          if (or__3925__auto____$1) {
            return or__3925__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j);
    }
  };
  var _invoke__12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
    if (function() {
      var and__3913__auto__ = this$;
      if (and__3913__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$12;
      } else {
        return and__3913__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k);
    } else {
      var x__4569__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3925__auto__ = cljs.core._invoke[function() {
          var G__9965 = x__4569__auto__;
          return goog.typeOf(G__9965);
        }()];
        if (or__3925__auto__) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = cljs.core._invoke["_"];
          if (or__3925__auto____$1) {
            return or__3925__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k);
    }
  };
  var _invoke__13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
    if (function() {
      var and__3913__auto__ = this$;
      if (and__3913__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$13;
      } else {
        return and__3913__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l);
    } else {
      var x__4569__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3925__auto__ = cljs.core._invoke[function() {
          var G__9967 = x__4569__auto__;
          return goog.typeOf(G__9967);
        }()];
        if (or__3925__auto__) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = cljs.core._invoke["_"];
          if (or__3925__auto____$1) {
            return or__3925__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l);
    }
  };
  var _invoke__14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    if (function() {
      var and__3913__auto__ = this$;
      if (and__3913__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$14;
      } else {
        return and__3913__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    } else {
      var x__4569__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3925__auto__ = cljs.core._invoke[function() {
          var G__9969 = x__4569__auto__;
          return goog.typeOf(G__9969);
        }()];
        if (or__3925__auto__) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = cljs.core._invoke["_"];
          if (or__3925__auto____$1) {
            return or__3925__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    }
  };
  var _invoke__15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    if (function() {
      var and__3913__auto__ = this$;
      if (and__3913__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$15;
      } else {
        return and__3913__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    } else {
      var x__4569__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3925__auto__ = cljs.core._invoke[function() {
          var G__9971 = x__4569__auto__;
          return goog.typeOf(G__9971);
        }()];
        if (or__3925__auto__) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = cljs.core._invoke["_"];
          if (or__3925__auto____$1) {
            return or__3925__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    }
  };
  var _invoke__16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    if (function() {
      var and__3913__auto__ = this$;
      if (and__3913__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$16;
      } else {
        return and__3913__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    } else {
      var x__4569__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3925__auto__ = cljs.core._invoke[function() {
          var G__9973 = x__4569__auto__;
          return goog.typeOf(G__9973);
        }()];
        if (or__3925__auto__) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = cljs.core._invoke["_"];
          if (or__3925__auto____$1) {
            return or__3925__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    }
  };
  var _invoke__17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    if (function() {
      var and__3913__auto__ = this$;
      if (and__3913__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$17;
      } else {
        return and__3913__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    } else {
      var x__4569__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3925__auto__ = cljs.core._invoke[function() {
          var G__9975 = x__4569__auto__;
          return goog.typeOf(G__9975);
        }()];
        if (or__3925__auto__) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = cljs.core._invoke["_"];
          if (or__3925__auto____$1) {
            return or__3925__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    }
  };
  var _invoke__18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    if (function() {
      var and__3913__auto__ = this$;
      if (and__3913__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$18;
      } else {
        return and__3913__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    } else {
      var x__4569__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3925__auto__ = cljs.core._invoke[function() {
          var G__9977 = x__4569__auto__;
          return goog.typeOf(G__9977);
        }()];
        if (or__3925__auto__) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = cljs.core._invoke["_"];
          if (or__3925__auto____$1) {
            return or__3925__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    }
  };
  var _invoke__19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    if (function() {
      var and__3913__auto__ = this$;
      if (and__3913__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$19;
      } else {
        return and__3913__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    } else {
      var x__4569__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3925__auto__ = cljs.core._invoke[function() {
          var G__9979 = x__4569__auto__;
          return goog.typeOf(G__9979);
        }()];
        if (or__3925__auto__) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = cljs.core._invoke["_"];
          if (or__3925__auto____$1) {
            return or__3925__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    }
  };
  var _invoke__20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    if (function() {
      var and__3913__auto__ = this$;
      if (and__3913__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$20;
      } else {
        return and__3913__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    } else {
      var x__4569__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3925__auto__ = cljs.core._invoke[function() {
          var G__9981 = x__4569__auto__;
          return goog.typeOf(G__9981);
        }()];
        if (or__3925__auto__) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = cljs.core._invoke["_"];
          if (or__3925__auto____$1) {
            return or__3925__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    }
  };
  var _invoke__21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    if (function() {
      var and__3913__auto__ = this$;
      if (and__3913__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$21;
      } else {
        return and__3913__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    } else {
      var x__4569__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3925__auto__ = cljs.core._invoke[function() {
          var G__9983 = x__4569__auto__;
          return goog.typeOf(G__9983);
        }()];
        if (or__3925__auto__) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = cljs.core._invoke["_"];
          if (or__3925__auto____$1) {
            return or__3925__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    }
  };
  var _invoke__22 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    if (function() {
      var and__3913__auto__ = this$;
      if (and__3913__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$22;
      } else {
        return and__3913__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    } else {
      var x__4569__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3925__auto__ = cljs.core._invoke[function() {
          var G__9985 = x__4569__auto__;
          return goog.typeOf(G__9985);
        }()];
        if (or__3925__auto__) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = cljs.core._invoke["_"];
          if (or__3925__auto____$1) {
            return or__3925__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
  };
  _invoke = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return _invoke__1.call(this, this$);
      case 2:
        return _invoke__2.call(this, this$, a);
      case 3:
        return _invoke__3.call(this, this$, a, b);
      case 4:
        return _invoke__4.call(this, this$, a, b, c);
      case 5:
        return _invoke__5.call(this, this$, a, b, c, d);
      case 6:
        return _invoke__6.call(this, this$, a, b, c, d, e);
      case 7:
        return _invoke__7.call(this, this$, a, b, c, d, e, f);
      case 8:
        return _invoke__8.call(this, this$, a, b, c, d, e, f, g);
      case 9:
        return _invoke__9.call(this, this$, a, b, c, d, e, f, g, h);
      case 10:
        return _invoke__10.call(this, this$, a, b, c, d, e, f, g, h, i);
      case 11:
        return _invoke__11.call(this, this$, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return _invoke__12.call(this, this$, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return _invoke__13.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return _invoke__14.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return _invoke__15.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return _invoke__16.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return _invoke__17.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return _invoke__18.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return _invoke__19.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return _invoke__20.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return _invoke__21.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return _invoke__22.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
  _invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
  _invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
  _invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
  _invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
  _invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
  _invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
  _invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
  _invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
  _invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
  _invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
  _invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
  _invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
  _invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
  _invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
  _invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
  _invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
  _invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
  _invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
  _invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
  _invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
  _invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
  return _invoke;
}();
cljs.core.ICloneable = function() {
  var obj9987 = {};
  return obj9987;
}();
cljs.core._clone = function _clone(value) {
  if (function() {
    var and__3913__auto__ = value;
    if (and__3913__auto__) {
      return value.cljs$core$ICloneable$_clone$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return value.cljs$core$ICloneable$_clone$arity$1(value);
  } else {
    var x__4569__auto__ = value == null ? null : value;
    return function() {
      var or__3925__auto__ = cljs.core._clone[function() {
        var G__9991 = x__4569__auto__;
        return goog.typeOf(G__9991);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._clone["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ICloneable.-clone", value);
        }
      }
    }().call(null, value);
  }
};
cljs.core.ICounted = function() {
  var obj9993 = {};
  return obj9993;
}();
cljs.core._count = function _count(coll) {
  if (function() {
    var and__3913__auto__ = coll;
    if (and__3913__auto__) {
      return coll.cljs$core$ICounted$_count$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return coll.cljs$core$ICounted$_count$arity$1(coll);
  } else {
    var x__4569__auto__ = coll == null ? null : coll;
    return function() {
      var or__3925__auto__ = cljs.core._count[function() {
        var G__9997 = x__4569__auto__;
        return goog.typeOf(G__9997);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._count["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ICounted.-count", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IEmptyableCollection = function() {
  var obj9999 = {};
  return obj9999;
}();
cljs.core._empty = function _empty(coll) {
  if (function() {
    var and__3913__auto__ = coll;
    if (and__3913__auto__) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
  } else {
    var x__4569__auto__ = coll == null ? null : coll;
    return function() {
      var or__3925__auto__ = cljs.core._empty[function() {
        var G__10003 = x__4569__auto__;
        return goog.typeOf(G__10003);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._empty["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEmptyableCollection.-empty", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ICollection = function() {
  var obj10005 = {};
  return obj10005;
}();
cljs.core._conj = function _conj(coll, o) {
  if (function() {
    var and__3913__auto__ = coll;
    if (and__3913__auto__) {
      return coll.cljs$core$ICollection$_conj$arity$2;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o);
  } else {
    var x__4569__auto__ = coll == null ? null : coll;
    return function() {
      var or__3925__auto__ = cljs.core._conj[function() {
        var G__10009 = x__4569__auto__;
        return goog.typeOf(G__10009);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._conj["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ICollection.-conj", coll);
        }
      }
    }().call(null, coll, o);
  }
};
cljs.core.IIndexed = function() {
  var obj10011 = {};
  return obj10011;
}();
cljs.core._nth = function() {
  var _nth = null;
  var _nth__2 = function(coll, n) {
    if (function() {
      var and__3913__auto__ = coll;
      if (and__3913__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$2;
      } else {
        return and__3913__auto__;
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$2(coll, n);
    } else {
      var x__4569__auto__ = coll == null ? null : coll;
      return function() {
        var or__3925__auto__ = cljs.core._nth[function() {
          var G__10017 = x__4569__auto__;
          return goog.typeOf(G__10017);
        }()];
        if (or__3925__auto__) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = cljs.core._nth["_"];
          if (or__3925__auto____$1) {
            return or__3925__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n);
    }
  };
  var _nth__3 = function(coll, n, not_found) {
    if (function() {
      var and__3913__auto__ = coll;
      if (and__3913__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$3;
      } else {
        return and__3913__auto__;
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found);
    } else {
      var x__4569__auto__ = coll == null ? null : coll;
      return function() {
        var or__3925__auto__ = cljs.core._nth[function() {
          var G__10019 = x__4569__auto__;
          return goog.typeOf(G__10019);
        }()];
        if (or__3925__auto__) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = cljs.core._nth["_"];
          if (or__3925__auto____$1) {
            return or__3925__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n, not_found);
    }
  };
  _nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return _nth__2.call(this, coll, n);
      case 3:
        return _nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
  _nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
  return _nth;
}();
cljs.core.ASeq = function() {
  var obj10021 = {};
  return obj10021;
}();
cljs.core.ISeq = function() {
  var obj10023 = {};
  return obj10023;
}();
cljs.core._first = function _first(coll) {
  if (function() {
    var and__3913__auto__ = coll;
    if (and__3913__auto__) {
      return coll.cljs$core$ISeq$_first$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return coll.cljs$core$ISeq$_first$arity$1(coll);
  } else {
    var x__4569__auto__ = coll == null ? null : coll;
    return function() {
      var or__3925__auto__ = cljs.core._first[function() {
        var G__10027 = x__4569__auto__;
        return goog.typeOf(G__10027);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._first["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISeq.-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._rest = function _rest(coll) {
  if (function() {
    var and__3913__auto__ = coll;
    if (and__3913__auto__) {
      return coll.cljs$core$ISeq$_rest$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll);
  } else {
    var x__4569__auto__ = coll == null ? null : coll;
    return function() {
      var or__3925__auto__ = cljs.core._rest[function() {
        var G__10031 = x__4569__auto__;
        return goog.typeOf(G__10031);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._rest["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISeq.-rest", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.INext = function() {
  var obj10033 = {};
  return obj10033;
}();
cljs.core._next = function _next(coll) {
  if (function() {
    var and__3913__auto__ = coll;
    if (and__3913__auto__) {
      return coll.cljs$core$INext$_next$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return coll.cljs$core$INext$_next$arity$1(coll);
  } else {
    var x__4569__auto__ = coll == null ? null : coll;
    return function() {
      var or__3925__auto__ = cljs.core._next[function() {
        var G__10037 = x__4569__auto__;
        return goog.typeOf(G__10037);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._next["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("INext.-next", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ILookup = function() {
  var obj10039 = {};
  return obj10039;
}();
cljs.core._lookup = function() {
  var _lookup = null;
  var _lookup__2 = function(o, k) {
    if (function() {
      var and__3913__auto__ = o;
      if (and__3913__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$2;
      } else {
        return and__3913__auto__;
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$2(o, k);
    } else {
      var x__4569__auto__ = o == null ? null : o;
      return function() {
        var or__3925__auto__ = cljs.core._lookup[function() {
          var G__10045 = x__4569__auto__;
          return goog.typeOf(G__10045);
        }()];
        if (or__3925__auto__) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = cljs.core._lookup["_"];
          if (or__3925__auto____$1) {
            return or__3925__auto____$1;
          } else {
            throw cljs.core.missing_protocol("ILookup.-lookup", o);
          }
        }
      }().call(null, o, k);
    }
  };
  var _lookup__3 = function(o, k, not_found) {
    if (function() {
      var and__3913__auto__ = o;
      if (and__3913__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$3;
      } else {
        return and__3913__auto__;
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found);
    } else {
      var x__4569__auto__ = o == null ? null : o;
      return function() {
        var or__3925__auto__ = cljs.core._lookup[function() {
          var G__10047 = x__4569__auto__;
          return goog.typeOf(G__10047);
        }()];
        if (or__3925__auto__) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = cljs.core._lookup["_"];
          if (or__3925__auto____$1) {
            return or__3925__auto____$1;
          } else {
            throw cljs.core.missing_protocol("ILookup.-lookup", o);
          }
        }
      }().call(null, o, k, not_found);
    }
  };
  _lookup = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return _lookup__2.call(this, o, k);
      case 3:
        return _lookup__3.call(this, o, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
  _lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
  return _lookup;
}();
cljs.core.IAssociative = function() {
  var obj10049 = {};
  return obj10049;
}();
cljs.core._contains_key_QMARK_ = function _contains_key_QMARK_(coll, k) {
  if (function() {
    var and__3913__auto__ = coll;
    if (and__3913__auto__) {
      return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k);
  } else {
    var x__4569__auto__ = coll == null ? null : coll;
    return function() {
      var or__3925__auto__ = cljs.core._contains_key_QMARK_[function() {
        var G__10053 = x__4569__auto__;
        return goog.typeOf(G__10053);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._contains_key_QMARK_["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IAssociative.-contains-key?", coll);
        }
      }
    }().call(null, coll, k);
  }
};
cljs.core._assoc = function _assoc(coll, k, v) {
  if (function() {
    var and__3913__auto__ = coll;
    if (and__3913__auto__) {
      return coll.cljs$core$IAssociative$_assoc$arity$3;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v);
  } else {
    var x__4569__auto__ = coll == null ? null : coll;
    return function() {
      var or__3925__auto__ = cljs.core._assoc[function() {
        var G__10057 = x__4569__auto__;
        return goog.typeOf(G__10057);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._assoc["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IAssociative.-assoc", coll);
        }
      }
    }().call(null, coll, k, v);
  }
};
cljs.core.IMap = function() {
  var obj10059 = {};
  return obj10059;
}();
cljs.core._dissoc = function _dissoc(coll, k) {
  if (function() {
    var and__3913__auto__ = coll;
    if (and__3913__auto__) {
      return coll.cljs$core$IMap$_dissoc$arity$2;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k);
  } else {
    var x__4569__auto__ = coll == null ? null : coll;
    return function() {
      var or__3925__auto__ = cljs.core._dissoc[function() {
        var G__10063 = x__4569__auto__;
        return goog.typeOf(G__10063);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._dissoc["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMap.-dissoc", coll);
        }
      }
    }().call(null, coll, k);
  }
};
cljs.core.IMapEntry = function() {
  var obj10065 = {};
  return obj10065;
}();
cljs.core._key = function _key(coll) {
  if (function() {
    var and__3913__auto__ = coll;
    if (and__3913__auto__) {
      return coll.cljs$core$IMapEntry$_key$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll);
  } else {
    var x__4569__auto__ = coll == null ? null : coll;
    return function() {
      var or__3925__auto__ = cljs.core._key[function() {
        var G__10069 = x__4569__auto__;
        return goog.typeOf(G__10069);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._key["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMapEntry.-key", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._val = function _val(coll) {
  if (function() {
    var and__3913__auto__ = coll;
    if (and__3913__auto__) {
      return coll.cljs$core$IMapEntry$_val$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll);
  } else {
    var x__4569__auto__ = coll == null ? null : coll;
    return function() {
      var or__3925__auto__ = cljs.core._val[function() {
        var G__10073 = x__4569__auto__;
        return goog.typeOf(G__10073);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._val["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMapEntry.-val", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ISet = function() {
  var obj10075 = {};
  return obj10075;
}();
cljs.core._disjoin = function _disjoin(coll, v) {
  if (function() {
    var and__3913__auto__ = coll;
    if (and__3913__auto__) {
      return coll.cljs$core$ISet$_disjoin$arity$2;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v);
  } else {
    var x__4569__auto__ = coll == null ? null : coll;
    return function() {
      var or__3925__auto__ = cljs.core._disjoin[function() {
        var G__10079 = x__4569__auto__;
        return goog.typeOf(G__10079);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._disjoin["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISet.-disjoin", coll);
        }
      }
    }().call(null, coll, v);
  }
};
cljs.core.IStack = function() {
  var obj10081 = {};
  return obj10081;
}();
cljs.core._peek = function _peek(coll) {
  if (function() {
    var and__3913__auto__ = coll;
    if (and__3913__auto__) {
      return coll.cljs$core$IStack$_peek$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return coll.cljs$core$IStack$_peek$arity$1(coll);
  } else {
    var x__4569__auto__ = coll == null ? null : coll;
    return function() {
      var or__3925__auto__ = cljs.core._peek[function() {
        var G__10085 = x__4569__auto__;
        return goog.typeOf(G__10085);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._peek["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IStack.-peek", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._pop = function _pop(coll) {
  if (function() {
    var and__3913__auto__ = coll;
    if (and__3913__auto__) {
      return coll.cljs$core$IStack$_pop$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return coll.cljs$core$IStack$_pop$arity$1(coll);
  } else {
    var x__4569__auto__ = coll == null ? null : coll;
    return function() {
      var or__3925__auto__ = cljs.core._pop[function() {
        var G__10089 = x__4569__auto__;
        return goog.typeOf(G__10089);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._pop["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IStack.-pop", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IVector = function() {
  var obj10091 = {};
  return obj10091;
}();
cljs.core._assoc_n = function _assoc_n(coll, n, val) {
  if (function() {
    var and__3913__auto__ = coll;
    if (and__3913__auto__) {
      return coll.cljs$core$IVector$_assoc_n$arity$3;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val);
  } else {
    var x__4569__auto__ = coll == null ? null : coll;
    return function() {
      var or__3925__auto__ = cljs.core._assoc_n[function() {
        var G__10095 = x__4569__auto__;
        return goog.typeOf(G__10095);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._assoc_n["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IVector.-assoc-n", coll);
        }
      }
    }().call(null, coll, n, val);
  }
};
cljs.core.IDeref = function() {
  var obj10097 = {};
  return obj10097;
}();
cljs.core._deref = function _deref(o) {
  if (function() {
    var and__3913__auto__ = o;
    if (and__3913__auto__) {
      return o.cljs$core$IDeref$_deref$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return o.cljs$core$IDeref$_deref$arity$1(o);
  } else {
    var x__4569__auto__ = o == null ? null : o;
    return function() {
      var or__3925__auto__ = cljs.core._deref[function() {
        var G__10101 = x__4569__auto__;
        return goog.typeOf(G__10101);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._deref["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IDeref.-deref", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.IDerefWithTimeout = function() {
  var obj10103 = {};
  return obj10103;
}();
cljs.core._deref_with_timeout = function _deref_with_timeout(o, msec, timeout_val) {
  if (function() {
    var and__3913__auto__ = o;
    if (and__3913__auto__) {
      return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val);
  } else {
    var x__4569__auto__ = o == null ? null : o;
    return function() {
      var or__3925__auto__ = cljs.core._deref_with_timeout[function() {
        var G__10107 = x__4569__auto__;
        return goog.typeOf(G__10107);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._deref_with_timeout["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout", o);
        }
      }
    }().call(null, o, msec, timeout_val);
  }
};
cljs.core.IMeta = function() {
  var obj10109 = {};
  return obj10109;
}();
cljs.core._meta = function _meta(o) {
  if (function() {
    var and__3913__auto__ = o;
    if (and__3913__auto__) {
      return o.cljs$core$IMeta$_meta$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return o.cljs$core$IMeta$_meta$arity$1(o);
  } else {
    var x__4569__auto__ = o == null ? null : o;
    return function() {
      var or__3925__auto__ = cljs.core._meta[function() {
        var G__10113 = x__4569__auto__;
        return goog.typeOf(G__10113);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._meta["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMeta.-meta", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.IWithMeta = function() {
  var obj10115 = {};
  return obj10115;
}();
cljs.core._with_meta = function _with_meta(o, meta) {
  if (function() {
    var and__3913__auto__ = o;
    if (and__3913__auto__) {
      return o.cljs$core$IWithMeta$_with_meta$arity$2;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta);
  } else {
    var x__4569__auto__ = o == null ? null : o;
    return function() {
      var or__3925__auto__ = cljs.core._with_meta[function() {
        var G__10119 = x__4569__auto__;
        return goog.typeOf(G__10119);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._with_meta["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWithMeta.-with-meta", o);
        }
      }
    }().call(null, o, meta);
  }
};
cljs.core.IReduce = function() {
  var obj10121 = {};
  return obj10121;
}();
cljs.core._reduce = function() {
  var _reduce = null;
  var _reduce__2 = function(coll, f) {
    if (function() {
      var and__3913__auto__ = coll;
      if (and__3913__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$2;
      } else {
        return and__3913__auto__;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$2(coll, f);
    } else {
      var x__4569__auto__ = coll == null ? null : coll;
      return function() {
        var or__3925__auto__ = cljs.core._reduce[function() {
          var G__10127 = x__4569__auto__;
          return goog.typeOf(G__10127);
        }()];
        if (or__3925__auto__) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = cljs.core._reduce["_"];
          if (or__3925__auto____$1) {
            return or__3925__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f);
    }
  };
  var _reduce__3 = function(coll, f, start) {
    if (function() {
      var and__3913__auto__ = coll;
      if (and__3913__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$3;
      } else {
        return and__3913__auto__;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start);
    } else {
      var x__4569__auto__ = coll == null ? null : coll;
      return function() {
        var or__3925__auto__ = cljs.core._reduce[function() {
          var G__10129 = x__4569__auto__;
          return goog.typeOf(G__10129);
        }()];
        if (or__3925__auto__) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = cljs.core._reduce["_"];
          if (or__3925__auto____$1) {
            return or__3925__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f, start);
    }
  };
  _reduce = function(coll, f, start) {
    switch(arguments.length) {
      case 2:
        return _reduce__2.call(this, coll, f);
      case 3:
        return _reduce__3.call(this, coll, f, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
  _reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
  return _reduce;
}();
cljs.core.IKVReduce = function() {
  var obj10131 = {};
  return obj10131;
}();
cljs.core._kv_reduce = function _kv_reduce(coll, f, init) {
  if (function() {
    var and__3913__auto__ = coll;
    if (and__3913__auto__) {
      return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init);
  } else {
    var x__4569__auto__ = coll == null ? null : coll;
    return function() {
      var or__3925__auto__ = cljs.core._kv_reduce[function() {
        var G__10135 = x__4569__auto__;
        return goog.typeOf(G__10135);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._kv_reduce["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IKVReduce.-kv-reduce", coll);
        }
      }
    }().call(null, coll, f, init);
  }
};
cljs.core.IEquiv = function() {
  var obj10137 = {};
  return obj10137;
}();
cljs.core._equiv = function _equiv(o, other) {
  if (function() {
    var and__3913__auto__ = o;
    if (and__3913__auto__) {
      return o.cljs$core$IEquiv$_equiv$arity$2;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other);
  } else {
    var x__4569__auto__ = o == null ? null : o;
    return function() {
      var or__3925__auto__ = cljs.core._equiv[function() {
        var G__10141 = x__4569__auto__;
        return goog.typeOf(G__10141);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._equiv["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEquiv.-equiv", o);
        }
      }
    }().call(null, o, other);
  }
};
cljs.core.IHash = function() {
  var obj10143 = {};
  return obj10143;
}();
cljs.core._hash = function _hash(o) {
  if (function() {
    var and__3913__auto__ = o;
    if (and__3913__auto__) {
      return o.cljs$core$IHash$_hash$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(o);
  } else {
    var x__4569__auto__ = o == null ? null : o;
    return function() {
      var or__3925__auto__ = cljs.core._hash[function() {
        var G__10147 = x__4569__auto__;
        return goog.typeOf(G__10147);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._hash["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IHash.-hash", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.ISeqable = function() {
  var obj10149 = {};
  return obj10149;
}();
cljs.core._seq = function _seq(o) {
  if (function() {
    var and__3913__auto__ = o;
    if (and__3913__auto__) {
      return o.cljs$core$ISeqable$_seq$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return o.cljs$core$ISeqable$_seq$arity$1(o);
  } else {
    var x__4569__auto__ = o == null ? null : o;
    return function() {
      var or__3925__auto__ = cljs.core._seq[function() {
        var G__10153 = x__4569__auto__;
        return goog.typeOf(G__10153);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._seq["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISeqable.-seq", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.ISequential = function() {
  var obj10155 = {};
  return obj10155;
}();
cljs.core.IList = function() {
  var obj10157 = {};
  return obj10157;
}();
cljs.core.IRecord = function() {
  var obj10159 = {};
  return obj10159;
}();
cljs.core.IReversible = function() {
  var obj10161 = {};
  return obj10161;
}();
cljs.core._rseq = function _rseq(coll) {
  if (function() {
    var and__3913__auto__ = coll;
    if (and__3913__auto__) {
      return coll.cljs$core$IReversible$_rseq$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll);
  } else {
    var x__4569__auto__ = coll == null ? null : coll;
    return function() {
      var or__3925__auto__ = cljs.core._rseq[function() {
        var G__10165 = x__4569__auto__;
        return goog.typeOf(G__10165);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._rseq["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IReversible.-rseq", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ISorted = function() {
  var obj10167 = {};
  return obj10167;
}();
cljs.core._sorted_seq = function _sorted_seq(coll, ascending_QMARK_) {
  if (function() {
    var and__3913__auto__ = coll;
    if (and__3913__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq$arity$2;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_);
  } else {
    var x__4569__auto__ = coll == null ? null : coll;
    return function() {
      var or__3925__auto__ = cljs.core._sorted_seq[function() {
        var G__10171 = x__4569__auto__;
        return goog.typeOf(G__10171);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._sorted_seq["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISorted.-sorted-seq", coll);
        }
      }
    }().call(null, coll, ascending_QMARK_);
  }
};
cljs.core._sorted_seq_from = function _sorted_seq_from(coll, k, ascending_QMARK_) {
  if (function() {
    var and__3913__auto__ = coll;
    if (and__3913__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_);
  } else {
    var x__4569__auto__ = coll == null ? null : coll;
    return function() {
      var or__3925__auto__ = cljs.core._sorted_seq_from[function() {
        var G__10175 = x__4569__auto__;
        return goog.typeOf(G__10175);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._sorted_seq_from["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISorted.-sorted-seq-from", coll);
        }
      }
    }().call(null, coll, k, ascending_QMARK_);
  }
};
cljs.core._entry_key = function _entry_key(coll, entry) {
  if (function() {
    var and__3913__auto__ = coll;
    if (and__3913__auto__) {
      return coll.cljs$core$ISorted$_entry_key$arity$2;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry);
  } else {
    var x__4569__auto__ = coll == null ? null : coll;
    return function() {
      var or__3925__auto__ = cljs.core._entry_key[function() {
        var G__10179 = x__4569__auto__;
        return goog.typeOf(G__10179);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._entry_key["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISorted.-entry-key", coll);
        }
      }
    }().call(null, coll, entry);
  }
};
cljs.core._comparator = function _comparator(coll) {
  if (function() {
    var and__3913__auto__ = coll;
    if (and__3913__auto__) {
      return coll.cljs$core$ISorted$_comparator$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll);
  } else {
    var x__4569__auto__ = coll == null ? null : coll;
    return function() {
      var or__3925__auto__ = cljs.core._comparator[function() {
        var G__10183 = x__4569__auto__;
        return goog.typeOf(G__10183);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._comparator["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISorted.-comparator", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IWriter = function() {
  var obj10185 = {};
  return obj10185;
}();
cljs.core._write = function _write(writer, s) {
  if (function() {
    var and__3913__auto__ = writer;
    if (and__3913__auto__) {
      return writer.cljs$core$IWriter$_write$arity$2;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return writer.cljs$core$IWriter$_write$arity$2(writer, s);
  } else {
    var x__4569__auto__ = writer == null ? null : writer;
    return function() {
      var or__3925__auto__ = cljs.core._write[function() {
        var G__10189 = x__4569__auto__;
        return goog.typeOf(G__10189);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._write["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWriter.-write", writer);
        }
      }
    }().call(null, writer, s);
  }
};
cljs.core._flush = function _flush(writer) {
  if (function() {
    var and__3913__auto__ = writer;
    if (and__3913__auto__) {
      return writer.cljs$core$IWriter$_flush$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return writer.cljs$core$IWriter$_flush$arity$1(writer);
  } else {
    var x__4569__auto__ = writer == null ? null : writer;
    return function() {
      var or__3925__auto__ = cljs.core._flush[function() {
        var G__10193 = x__4569__auto__;
        return goog.typeOf(G__10193);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._flush["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWriter.-flush", writer);
        }
      }
    }().call(null, writer);
  }
};
cljs.core.IPrintWithWriter = function() {
  var obj10195 = {};
  return obj10195;
}();
cljs.core._pr_writer = function _pr_writer(o, writer, opts) {
  if (function() {
    var and__3913__auto__ = o;
    if (and__3913__auto__) {
      return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o, writer, opts);
  } else {
    var x__4569__auto__ = o == null ? null : o;
    return function() {
      var or__3925__auto__ = cljs.core._pr_writer[function() {
        var G__10199 = x__4569__auto__;
        return goog.typeOf(G__10199);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._pr_writer["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer", o);
        }
      }
    }().call(null, o, writer, opts);
  }
};
cljs.core.IPending = function() {
  var obj10201 = {};
  return obj10201;
}();
cljs.core._realized_QMARK_ = function _realized_QMARK_(d) {
  if (function() {
    var and__3913__auto__ = d;
    if (and__3913__auto__) {
      return d.cljs$core$IPending$_realized_QMARK_$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
  } else {
    var x__4569__auto__ = d == null ? null : d;
    return function() {
      var or__3925__auto__ = cljs.core._realized_QMARK_[function() {
        var G__10205 = x__4569__auto__;
        return goog.typeOf(G__10205);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._realized_QMARK_["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IPending.-realized?", d);
        }
      }
    }().call(null, d);
  }
};
cljs.core.IWatchable = function() {
  var obj10207 = {};
  return obj10207;
}();
cljs.core._notify_watches = function _notify_watches(this$, oldval, newval) {
  if (function() {
    var and__3913__auto__ = this$;
    if (and__3913__auto__) {
      return this$.cljs$core$IWatchable$_notify_watches$arity$3;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval);
  } else {
    var x__4569__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3925__auto__ = cljs.core._notify_watches[function() {
        var G__10211 = x__4569__auto__;
        return goog.typeOf(G__10211);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._notify_watches["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWatchable.-notify-watches", this$);
        }
      }
    }().call(null, this$, oldval, newval);
  }
};
cljs.core._add_watch = function _add_watch(this$, key, f) {
  if (function() {
    var and__3913__auto__ = this$;
    if (and__3913__auto__) {
      return this$.cljs$core$IWatchable$_add_watch$arity$3;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f);
  } else {
    var x__4569__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3925__auto__ = cljs.core._add_watch[function() {
        var G__10215 = x__4569__auto__;
        return goog.typeOf(G__10215);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._add_watch["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWatchable.-add-watch", this$);
        }
      }
    }().call(null, this$, key, f);
  }
};
cljs.core._remove_watch = function _remove_watch(this$, key) {
  if (function() {
    var and__3913__auto__ = this$;
    if (and__3913__auto__) {
      return this$.cljs$core$IWatchable$_remove_watch$arity$2;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key);
  } else {
    var x__4569__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3925__auto__ = cljs.core._remove_watch[function() {
        var G__10219 = x__4569__auto__;
        return goog.typeOf(G__10219);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._remove_watch["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWatchable.-remove-watch", this$);
        }
      }
    }().call(null, this$, key);
  }
};
cljs.core.IEditableCollection = function() {
  var obj10221 = {};
  return obj10221;
}();
cljs.core._as_transient = function _as_transient(coll) {
  if (function() {
    var and__3913__auto__ = coll;
    if (and__3913__auto__) {
      return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
  } else {
    var x__4569__auto__ = coll == null ? null : coll;
    return function() {
      var or__3925__auto__ = cljs.core._as_transient[function() {
        var G__10225 = x__4569__auto__;
        return goog.typeOf(G__10225);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._as_transient["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEditableCollection.-as-transient", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ITransientCollection = function() {
  var obj10227 = {};
  return obj10227;
}();
cljs.core._conj_BANG_ = function _conj_BANG_(tcoll, val) {
  if (function() {
    var and__3913__auto__ = tcoll;
    if (and__3913__auto__) {
      return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val);
  } else {
    var x__4569__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3925__auto__ = cljs.core._conj_BANG_[function() {
        var G__10231 = x__4569__auto__;
        return goog.typeOf(G__10231);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._conj_BANG_["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientCollection.-conj!", tcoll);
        }
      }
    }().call(null, tcoll, val);
  }
};
cljs.core._persistent_BANG_ = function _persistent_BANG_(tcoll) {
  if (function() {
    var and__3913__auto__ = tcoll;
    if (and__3913__auto__) {
      return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
  } else {
    var x__4569__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3925__auto__ = cljs.core._persistent_BANG_[function() {
        var G__10235 = x__4569__auto__;
        return goog.typeOf(G__10235);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._persistent_BANG_["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientCollection.-persistent!", tcoll);
        }
      }
    }().call(null, tcoll);
  }
};
cljs.core.ITransientAssociative = function() {
  var obj10237 = {};
  return obj10237;
}();
cljs.core._assoc_BANG_ = function _assoc_BANG_(tcoll, key, val) {
  if (function() {
    var and__3913__auto__ = tcoll;
    if (and__3913__auto__) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val);
  } else {
    var x__4569__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3925__auto__ = cljs.core._assoc_BANG_[function() {
        var G__10241 = x__4569__auto__;
        return goog.typeOf(G__10241);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._assoc_BANG_["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientAssociative.-assoc!", tcoll);
        }
      }
    }().call(null, tcoll, key, val);
  }
};
cljs.core.ITransientMap = function() {
  var obj10243 = {};
  return obj10243;
}();
cljs.core._dissoc_BANG_ = function _dissoc_BANG_(tcoll, key) {
  if (function() {
    var and__3913__auto__ = tcoll;
    if (and__3913__auto__) {
      return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key);
  } else {
    var x__4569__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3925__auto__ = cljs.core._dissoc_BANG_[function() {
        var G__10247 = x__4569__auto__;
        return goog.typeOf(G__10247);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._dissoc_BANG_["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientMap.-dissoc!", tcoll);
        }
      }
    }().call(null, tcoll, key);
  }
};
cljs.core.ITransientVector = function() {
  var obj10249 = {};
  return obj10249;
}();
cljs.core._assoc_n_BANG_ = function _assoc_n_BANG_(tcoll, n, val) {
  if (function() {
    var and__3913__auto__ = tcoll;
    if (and__3913__auto__) {
      return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val);
  } else {
    var x__4569__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3925__auto__ = cljs.core._assoc_n_BANG_[function() {
        var G__10253 = x__4569__auto__;
        return goog.typeOf(G__10253);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._assoc_n_BANG_["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientVector.-assoc-n!", tcoll);
        }
      }
    }().call(null, tcoll, n, val);
  }
};
cljs.core._pop_BANG_ = function _pop_BANG_(tcoll) {
  if (function() {
    var and__3913__auto__ = tcoll;
    if (and__3913__auto__) {
      return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
  } else {
    var x__4569__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3925__auto__ = cljs.core._pop_BANG_[function() {
        var G__10257 = x__4569__auto__;
        return goog.typeOf(G__10257);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._pop_BANG_["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientVector.-pop!", tcoll);
        }
      }
    }().call(null, tcoll);
  }
};
cljs.core.ITransientSet = function() {
  var obj10259 = {};
  return obj10259;
}();
cljs.core._disjoin_BANG_ = function _disjoin_BANG_(tcoll, v) {
  if (function() {
    var and__3913__auto__ = tcoll;
    if (and__3913__auto__) {
      return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v);
  } else {
    var x__4569__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3925__auto__ = cljs.core._disjoin_BANG_[function() {
        var G__10263 = x__4569__auto__;
        return goog.typeOf(G__10263);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._disjoin_BANG_["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientSet.-disjoin!", tcoll);
        }
      }
    }().call(null, tcoll, v);
  }
};
cljs.core.IComparable = function() {
  var obj10265 = {};
  return obj10265;
}();
cljs.core._compare = function _compare(x, y) {
  if (function() {
    var and__3913__auto__ = x;
    if (and__3913__auto__) {
      return x.cljs$core$IComparable$_compare$arity$2;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y);
  } else {
    var x__4569__auto__ = x == null ? null : x;
    return function() {
      var or__3925__auto__ = cljs.core._compare[function() {
        var G__10269 = x__4569__auto__;
        return goog.typeOf(G__10269);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._compare["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IComparable.-compare", x);
        }
      }
    }().call(null, x, y);
  }
};
cljs.core.IChunk = function() {
  var obj10271 = {};
  return obj10271;
}();
cljs.core._drop_first = function _drop_first(coll) {
  if (function() {
    var and__3913__auto__ = coll;
    if (and__3913__auto__) {
      return coll.cljs$core$IChunk$_drop_first$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
  } else {
    var x__4569__auto__ = coll == null ? null : coll;
    return function() {
      var or__3925__auto__ = cljs.core._drop_first[function() {
        var G__10275 = x__4569__auto__;
        return goog.typeOf(G__10275);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._drop_first["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IChunk.-drop-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IChunkedSeq = function() {
  var obj10277 = {};
  return obj10277;
}();
cljs.core._chunked_first = function _chunked_first(coll) {
  if (function() {
    var and__3913__auto__ = coll;
    if (and__3913__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
  } else {
    var x__4569__auto__ = coll == null ? null : coll;
    return function() {
      var or__3925__auto__ = cljs.core._chunked_first[function() {
        var G__10281 = x__4569__auto__;
        return goog.typeOf(G__10281);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._chunked_first["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._chunked_rest = function _chunked_rest(coll) {
  if (function() {
    var and__3913__auto__ = coll;
    if (and__3913__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
  } else {
    var x__4569__auto__ = coll == null ? null : coll;
    return function() {
      var or__3925__auto__ = cljs.core._chunked_rest[function() {
        var G__10285 = x__4569__auto__;
        return goog.typeOf(G__10285);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._chunked_rest["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IChunkedNext = function() {
  var obj10287 = {};
  return obj10287;
}();
cljs.core._chunked_next = function _chunked_next(coll) {
  if (function() {
    var and__3913__auto__ = coll;
    if (and__3913__auto__) {
      return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
  } else {
    var x__4569__auto__ = coll == null ? null : coll;
    return function() {
      var or__3925__auto__ = cljs.core._chunked_next[function() {
        var G__10291 = x__4569__auto__;
        return goog.typeOf(G__10291);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._chunked_next["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IChunkedNext.-chunked-next", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.INamed = function() {
  var obj10293 = {};
  return obj10293;
}();
cljs.core._name = function _name(x) {
  if (function() {
    var and__3913__auto__ = x;
    if (and__3913__auto__) {
      return x.cljs$core$INamed$_name$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return x.cljs$core$INamed$_name$arity$1(x);
  } else {
    var x__4569__auto__ = x == null ? null : x;
    return function() {
      var or__3925__auto__ = cljs.core._name[function() {
        var G__10297 = x__4569__auto__;
        return goog.typeOf(G__10297);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._name["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("INamed.-name", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core._namespace = function _namespace(x) {
  if (function() {
    var and__3913__auto__ = x;
    if (and__3913__auto__) {
      return x.cljs$core$INamed$_namespace$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return x.cljs$core$INamed$_namespace$arity$1(x);
  } else {
    var x__4569__auto__ = x == null ? null : x;
    return function() {
      var or__3925__auto__ = cljs.core._namespace[function() {
        var G__10301 = x__4569__auto__;
        return goog.typeOf(G__10301);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._namespace["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("INamed.-namespace", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core.IAtom = function() {
  var obj10303 = {};
  return obj10303;
}();
cljs.core.IReset = function() {
  var obj10305 = {};
  return obj10305;
}();
cljs.core._reset_BANG_ = function _reset_BANG_(o, new_value) {
  if (function() {
    var and__3913__auto__ = o;
    if (and__3913__auto__) {
      return o.cljs$core$IReset$_reset_BANG_$arity$2;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return o.cljs$core$IReset$_reset_BANG_$arity$2(o, new_value);
  } else {
    var x__4569__auto__ = o == null ? null : o;
    return function() {
      var or__3925__auto__ = cljs.core._reset_BANG_[function() {
        var G__10309 = x__4569__auto__;
        return goog.typeOf(G__10309);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._reset_BANG_["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IReset.-reset!", o);
        }
      }
    }().call(null, o, new_value);
  }
};
cljs.core.ISwap = function() {
  var obj10311 = {};
  return obj10311;
}();
cljs.core._swap_BANG_ = function() {
  var _swap_BANG_ = null;
  var _swap_BANG___2 = function(o, f) {
    if (function() {
      var and__3913__auto__ = o;
      if (and__3913__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$2;
      } else {
        return and__3913__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$2(o, f);
    } else {
      var x__4569__auto__ = o == null ? null : o;
      return function() {
        var or__3925__auto__ = cljs.core._swap_BANG_[function() {
          var G__10321 = x__4569__auto__;
          return goog.typeOf(G__10321);
        }()];
        if (or__3925__auto__) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3925__auto____$1) {
            return or__3925__auto____$1;
          } else {
            throw cljs.core.missing_protocol("ISwap.-swap!", o);
          }
        }
      }().call(null, o, f);
    }
  };
  var _swap_BANG___3 = function(o, f, a) {
    if (function() {
      var and__3913__auto__ = o;
      if (and__3913__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$3;
      } else {
        return and__3913__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$3(o, f, a);
    } else {
      var x__4569__auto__ = o == null ? null : o;
      return function() {
        var or__3925__auto__ = cljs.core._swap_BANG_[function() {
          var G__10323 = x__4569__auto__;
          return goog.typeOf(G__10323);
        }()];
        if (or__3925__auto__) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3925__auto____$1) {
            return or__3925__auto____$1;
          } else {
            throw cljs.core.missing_protocol("ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a);
    }
  };
  var _swap_BANG___4 = function(o, f, a, b) {
    if (function() {
      var and__3913__auto__ = o;
      if (and__3913__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$4;
      } else {
        return and__3913__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$4(o, f, a, b);
    } else {
      var x__4569__auto__ = o == null ? null : o;
      return function() {
        var or__3925__auto__ = cljs.core._swap_BANG_[function() {
          var G__10325 = x__4569__auto__;
          return goog.typeOf(G__10325);
        }()];
        if (or__3925__auto__) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3925__auto____$1) {
            return or__3925__auto____$1;
          } else {
            throw cljs.core.missing_protocol("ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a, b);
    }
  };
  var _swap_BANG___5 = function(o, f, a, b, xs) {
    if (function() {
      var and__3913__auto__ = o;
      if (and__3913__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$5;
      } else {
        return and__3913__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$5(o, f, a, b, xs);
    } else {
      var x__4569__auto__ = o == null ? null : o;
      return function() {
        var or__3925__auto__ = cljs.core._swap_BANG_[function() {
          var G__10327 = x__4569__auto__;
          return goog.typeOf(G__10327);
        }()];
        if (or__3925__auto__) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3925__auto____$1) {
            return or__3925__auto____$1;
          } else {
            throw cljs.core.missing_protocol("ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a, b, xs);
    }
  };
  _swap_BANG_ = function(o, f, a, b, xs) {
    switch(arguments.length) {
      case 2:
        return _swap_BANG___2.call(this, o, f);
      case 3:
        return _swap_BANG___3.call(this, o, f, a);
      case 4:
        return _swap_BANG___4.call(this, o, f, a, b);
      case 5:
        return _swap_BANG___5.call(this, o, f, a, b, xs);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
  return _swap_BANG_;
}();
cljs.core.IVolatile = function() {
  var obj10329 = {};
  return obj10329;
}();
cljs.core._vreset_BANG_ = function _vreset_BANG_(o, new_value) {
  if (function() {
    var and__3913__auto__ = o;
    if (and__3913__auto__) {
      return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o, new_value);
  } else {
    var x__4569__auto__ = o == null ? null : o;
    return function() {
      var or__3925__auto__ = cljs.core._vreset_BANG_[function() {
        var G__10333 = x__4569__auto__;
        return goog.typeOf(G__10333);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._vreset_BANG_["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IVolatile.-vreset!", o);
        }
      }
    }().call(null, o, new_value);
  }
};
cljs.core.IIterable = function() {
  var obj10335 = {};
  return obj10335;
}();
cljs.core._iterator = function _iterator(coll) {
  if (function() {
    var and__3913__auto__ = coll;
    if (and__3913__auto__) {
      return coll.cljs$core$IIterable$_iterator$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return coll.cljs$core$IIterable$_iterator$arity$1(coll);
  } else {
    var x__4569__auto__ = coll == null ? null : coll;
    return function() {
      var or__3925__auto__ = cljs.core._iterator[function() {
        var G__10339 = x__4569__auto__;
        return goog.typeOf(G__10339);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._iterator["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IIterable.-iterator", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.StringBufferWriter = function(sb) {
  this.sb = sb;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1073741824;
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = function(_, s) {
  var self__ = this;
  var ___$1 = this;
  return self__.sb.append(s);
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return null;
};
cljs.core.StringBufferWriter.cljs$lang$type = true;
cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";
cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/StringBufferWriter");
};
cljs.core.__GT_StringBufferWriter = function __GT_StringBufferWriter(sb) {
  return new cljs.core.StringBufferWriter(sb);
};
cljs.core.pr_str_STAR_ = function pr_str_STAR_(obj) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null, writer, cljs.core.pr_opts());
  writer.cljs$core$IWriter$_flush$arity$1(null);
  return[cljs.core.str(sb)].join("");
};
cljs.core.int_rotate_left = function int_rotate_left(x, n) {
  return x << n | x >>> -n;
};
if (typeof Math.imul !== "undefined" && !(function() {
  var G__10342 = 4294967295;
  var G__10343 = 5;
  return Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__10342, G__10343) : Math.imul.call(null, G__10342, G__10343);
}() === 0)) {
  cljs.core.imul = function imul(a, b) {
    var G__10346 = a;
    var G__10347 = b;
    return Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__10346, G__10347) : Math.imul.call(null, G__10346, G__10347);
  };
} else {
  cljs.core.imul = function imul(a, b) {
    var ah = a >>> 16 & 65535;
    var al = a & 65535;
    var bh = b >>> 16 & 65535;
    var bl = b & 65535;
    return al * bl + (ah * bl + al * bh << 16 >>> 0) | 0;
  };
}
cljs.core.m3_seed = 0;
cljs.core.m3_C1 = 3432918353;
cljs.core.m3_C2 = 461845907;
cljs.core.m3_mix_K1 = function m3_mix_K1(k1) {
  return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1, cljs.core.m3_C1), 15), cljs.core.m3_C2);
};
cljs.core.m3_mix_H1 = function m3_mix_H1(h1, k1) {
  return cljs.core.imul(cljs.core.int_rotate_left(h1 ^ k1, 13), 5) + 3864292196;
};
cljs.core.m3_fmix = function m3_fmix(h1, len) {
  var h1__$1 = h1;
  var h1__$2 = h1__$1 ^ len;
  var h1__$3 = h1__$2 ^ h1__$2 >>> 16;
  var h1__$4 = cljs.core.imul(h1__$3, 2246822507);
  var h1__$5 = h1__$4 ^ h1__$4 >>> 13;
  var h1__$6 = cljs.core.imul(h1__$5, 3266489909);
  var h1__$7 = h1__$6 ^ h1__$6 >>> 16;
  return h1__$7;
};
cljs.core.m3_hash_int = function m3_hash_int(in$) {
  if (in$ === 0) {
    return in$;
  } else {
    var k1 = cljs.core.m3_mix_K1(in$);
    var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed, k1);
    return cljs.core.m3_fmix(h1, 4);
  }
};
cljs.core.m3_hash_unencoded_chars = function m3_hash_unencoded_chars(in$) {
  var h1 = function() {
    var i = 1;
    var h1 = cljs.core.m3_seed;
    while (true) {
      if (i < in$.length) {
        var G__10348 = i + 2;
        var G__10349 = cljs.core.m3_mix_H1(h1, cljs.core.m3_mix_K1(in$.charCodeAt(i - 1) | in$.charCodeAt(i) << 16));
        i = G__10348;
        h1 = G__10349;
        continue;
      } else {
        return h1;
      }
      break;
    }
  }();
  var h1__$1 = (in$.length & 1) === 1 ? h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt(in$.length - 1)) : h1;
  return cljs.core.m3_fmix(h1__$1, cljs.core.imul(2, in$.length));
};
cljs.core.string_hash_cache = function() {
  var obj10351 = {};
  return obj10351;
}();
cljs.core.string_hash_cache_count = 0;
cljs.core.hash_string_STAR_ = function hash_string_STAR_(s) {
  if (!(s == null)) {
    var len = s.length;
    if (len > 0) {
      var i = 0;
      var hash = 0;
      while (true) {
        if (i < len) {
          var G__10352 = i + 1;
          var G__10353 = cljs.core.imul(31, hash) + s.charCodeAt(i);
          i = G__10352;
          hash = G__10353;
          continue;
        } else {
          return hash;
        }
        break;
      }
    } else {
      return 0;
    }
  } else {
    return 0;
  }
};
cljs.core.add_to_string_hash_cache = function add_to_string_hash_cache(k) {
  var h = cljs.core.hash_string_STAR_(k);
  cljs.core.string_hash_cache[k] = h;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h;
};
cljs.core.hash_string = function hash_string(k) {
  if (cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = function() {
      var obj10357 = {};
      return obj10357;
    }();
    cljs.core.string_hash_cache_count = 0;
  } else {
  }
  var h = cljs.core.string_hash_cache[k];
  if (typeof h === "number") {
    return h;
  } else {
    return cljs.core.add_to_string_hash_cache(k);
  }
};
cljs.core.hash = function hash(o) {
  if (function() {
    var G__10360 = o;
    if (G__10360) {
      var bit__4599__auto__ = G__10360.cljs$lang$protocol_mask$partition0$ & 4194304;
      if (bit__4599__auto__ || G__10360.cljs$core$IHash$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(null);
  } else {
    if (typeof o === "number") {
      return function() {
        var G__10361 = o;
        return Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__10361) : Math.floor.call(null, G__10361);
      }() % 2147483647;
    } else {
      if (o === true) {
        return 1;
      } else {
        if (o === false) {
          return 0;
        } else {
          if (typeof o === "string") {
            return cljs.core.m3_hash_int(cljs.core.hash_string(o));
          } else {
            if (o instanceof Date) {
              return o.valueOf();
            } else {
              if (o == null) {
                return 0;
              } else {
                return cljs.core._hash(o);
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.hash_combine = function hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2);
};
cljs.core.instance_QMARK_ = function instance_QMARK_(t, o) {
  return o instanceof t;
};
cljs.core.symbol_QMARK_ = function symbol_QMARK_(x) {
  return x instanceof cljs.core.Symbol;
};
cljs.core.hash_symbol = function hash_symbol(sym) {
  return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name), cljs.core.hash_string(sym.ns));
};
cljs.core.compare_symbols = function compare_symbols(a, b) {
  if (a.str === b.str) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__3913__auto__ = cljs.core.not(a.ns);
      if (and__3913__auto__) {
        return b.ns;
      } else {
        return and__3913__auto__;
      }
    }())) {
      return-1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not(b.ns)) {
          return 1;
        } else {
          var nsc = function() {
            var G__10368 = a.ns;
            var G__10369 = b.ns;
            return goog.array.defaultCompare(G__10368, G__10369);
          }();
          if (0 === nsc) {
            var G__10370 = a.name;
            var G__10371 = b.name;
            return goog.array.defaultCompare(G__10370, G__10371);
          } else {
            return nsc;
          }
        }
      } else {
        var G__10372 = a.name;
        var G__10373 = b.name;
        return goog.array.defaultCompare(G__10372, G__10373);
      }
    }
  }
};
cljs.core.Symbol = function(ns, name, str, _hash, _meta) {
  this.ns = ns;
  this.name = name;
  this.str = str;
  this._hash = _hash;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 2154168321;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write(writer, self__.str);
};
cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = function(sym) {
  var self__ = this;
  var sym__$1 = this;
  var h__4346__auto__ = self__._hash;
  if (!(h__4346__auto__ == null)) {
    return h__4346__auto__;
  } else {
    var h__4346__auto____$1 = cljs.core.hash_symbol(sym__$1);
    self__._hash = h__4346__auto____$1;
    return h__4346__auto____$1;
  }
};
cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Symbol(self__.ns, self__.name, self__.str, self__._hash, new_meta);
};
cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Symbol.prototype.call = function() {
  var G__10375 = null;
  var G__10375__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll, sym, null);
  };
  var G__10375__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll, sym, not_found);
  };
  G__10375 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10375__2.call(this, self__, coll);
      case 3:
        return G__10375__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__10375.cljs$core$IFn$_invoke$arity$2 = G__10375__2;
  G__10375.cljs$core$IFn$_invoke$arity$3 = G__10375__3;
  return G__10375;
}();
cljs.core.Symbol.prototype.apply = function(self__, args10374) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args10374)));
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll, sym, null);
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll, sym, not_found);
};
cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Symbol) {
    return self__.str === other.str;
  } else {
    return false;
  }
};
cljs.core.Symbol.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.str;
};
cljs.core.Symbol.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Symbol.cljs$lang$type = true;
cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";
cljs.core.Symbol.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/Symbol");
};
cljs.core.__GT_Symbol = function __GT_Symbol(ns, name, str, _hash, _meta) {
  return new cljs.core.Symbol(ns, name, str, _hash, _meta);
};
cljs.core.symbol = function() {
  var symbol = null;
  var symbol__1 = function(name) {
    if (name instanceof cljs.core.Symbol) {
      return name;
    } else {
      return symbol.cljs$core$IFn$_invoke$arity$2(null, name);
    }
  };
  var symbol__2 = function(ns, name) {
    var sym_str = !(ns == null) ? [cljs.core.str(ns), cljs.core.str("/"), cljs.core.str(name)].join("") : name;
    return new cljs.core.Symbol(ns, name, sym_str, null, null);
  };
  symbol = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return symbol__1.call(this, ns);
      case 2:
        return symbol__2.call(this, ns, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
  symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
  return symbol;
}();
cljs.core.Var = function(val, sym, _meta) {
  this.val = val;
  this.sym = sym;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 163841;
};
cljs.core.Var.prototype.call = function() {
  var G__10423 = null;
  var G__10423__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null);
  };
  var G__10423__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a);
  };
  var G__10423__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b);
  };
  var G__10423__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c);
  };
  var G__10423__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d);
  };
  var G__10423__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e);
  };
  var G__10423__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f);
  };
  var G__10423__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g);
  };
  var G__10423__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h);
  };
  var G__10423__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__10423__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__10423__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__10423__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__10423__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__10423__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__10423__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__10423__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__10423__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__10423__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__10423__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__10423__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__10423__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__10379 = function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }();
    var G__10380 = a;
    var G__10381 = b;
    var G__10382 = c;
    var G__10383 = d;
    var G__10384 = e;
    var G__10385 = f;
    var G__10386 = g;
    var G__10387 = h;
    var G__10388 = i;
    var G__10389 = j;
    var G__10390 = k;
    var G__10391 = l;
    var G__10392 = m;
    var G__10393 = n;
    var G__10394 = o;
    var G__10395 = p;
    var G__10396 = q;
    var G__10397 = r;
    var G__10398 = s;
    var G__10399 = t;
    var G__10400 = rest;
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__10379, G__10380, G__10381, G__10382, G__10383, G__10384, G__10385, G__10386, G__10387, G__10388, G__10389, G__10390, G__10391, G__10392, G__10393, G__10394, G__10395, G__10396, G__10397, G__10398, G__10399, G__10400) : cljs.core.apply.call(null, G__10379, G__10380, G__10381, G__10382, G__10383, G__10384, G__10385, G__10386, G__10387, G__10388, G__10389, G__10390, G__10391, G__10392, G__10393, 
    G__10394, G__10395, G__10396, G__10397, G__10398, G__10399, G__10400);
  };
  G__10423 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__10423__1.call(this, self__);
      case 2:
        return G__10423__2.call(this, self__, a);
      case 3:
        return G__10423__3.call(this, self__, a, b);
      case 4:
        return G__10423__4.call(this, self__, a, b, c);
      case 5:
        return G__10423__5.call(this, self__, a, b, c, d);
      case 6:
        return G__10423__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__10423__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__10423__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__10423__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__10423__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__10423__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__10423__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__10423__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__10423__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__10423__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__10423__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__10423__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__10423__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__10423__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__10423__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__10423__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__10423__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__10423.cljs$core$IFn$_invoke$arity$1 = G__10423__1;
  G__10423.cljs$core$IFn$_invoke$arity$2 = G__10423__2;
  G__10423.cljs$core$IFn$_invoke$arity$3 = G__10423__3;
  G__10423.cljs$core$IFn$_invoke$arity$4 = G__10423__4;
  G__10423.cljs$core$IFn$_invoke$arity$5 = G__10423__5;
  G__10423.cljs$core$IFn$_invoke$arity$6 = G__10423__6;
  G__10423.cljs$core$IFn$_invoke$arity$7 = G__10423__7;
  G__10423.cljs$core$IFn$_invoke$arity$8 = G__10423__8;
  G__10423.cljs$core$IFn$_invoke$arity$9 = G__10423__9;
  G__10423.cljs$core$IFn$_invoke$arity$10 = G__10423__10;
  G__10423.cljs$core$IFn$_invoke$arity$11 = G__10423__11;
  G__10423.cljs$core$IFn$_invoke$arity$12 = G__10423__12;
  G__10423.cljs$core$IFn$_invoke$arity$13 = G__10423__13;
  G__10423.cljs$core$IFn$_invoke$arity$14 = G__10423__14;
  G__10423.cljs$core$IFn$_invoke$arity$15 = G__10423__15;
  G__10423.cljs$core$IFn$_invoke$arity$16 = G__10423__16;
  G__10423.cljs$core$IFn$_invoke$arity$17 = G__10423__17;
  G__10423.cljs$core$IFn$_invoke$arity$18 = G__10423__18;
  G__10423.cljs$core$IFn$_invoke$arity$19 = G__10423__19;
  G__10423.cljs$core$IFn$_invoke$arity$20 = G__10423__20;
  G__10423.cljs$core$IFn$_invoke$arity$21 = G__10423__21;
  G__10423.cljs$core$IFn$_invoke$arity$22 = G__10423__22;
  return G__10423;
}();
cljs.core.Var.prototype.apply = function(self__, args10378) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args10378)));
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  var G__10401 = function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }();
  var G__10402 = a;
  var G__10403 = b;
  var G__10404 = c;
  var G__10405 = d;
  var G__10406 = e;
  var G__10407 = f;
  var G__10408 = g;
  var G__10409 = h;
  var G__10410 = i;
  var G__10411 = j;
  var G__10412 = k;
  var G__10413 = l;
  var G__10414 = m;
  var G__10415 = n;
  var G__10416 = o;
  var G__10417 = p;
  var G__10418 = q;
  var G__10419 = r;
  var G__10420 = s;
  var G__10421 = t;
  var G__10422 = rest;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__10401, G__10402, G__10403, G__10404, G__10405, G__10406, G__10407, G__10408, G__10409, G__10410, G__10411, G__10412, G__10413, G__10414, G__10415, G__10416, G__10417, G__10418, G__10419, G__10420, G__10421, G__10422) : cljs.core.apply.call(null, G__10401, G__10402, G__10403, G__10404, G__10405, G__10406, G__10407, G__10408, G__10409, G__10410, G__10411, G__10412, G__10413, G__10414, G__10415, 
  G__10416, G__10417, G__10418, G__10419, G__10420, G__10421, G__10422);
};
cljs.core.Var.prototype.cljs$core$Fn$ = true;
cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
};
cljs.core.Var.cljs$lang$type = true;
cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";
cljs.core.Var.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/Var");
};
cljs.core.__GT_Var = function __GT_Var(val, sym, _meta) {
  return new cljs.core.Var(val, sym, _meta);
};
cljs.core.iterable_QMARK_ = function iterable_QMARK_(x) {
  var G__10425 = x;
  if (G__10425) {
    var bit__4606__auto__ = null;
    if (cljs.core.truth_(function() {
      var or__3925__auto__ = bit__4606__auto__;
      if (cljs.core.truth_(or__3925__auto__)) {
        return or__3925__auto__;
      } else {
        return G__10425.cljs$core$IIterable$;
      }
    }())) {
      return true;
    } else {
      if (!G__10425.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable, G__10425);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable, G__10425);
  }
};
cljs.core.clone = function clone(value) {
  return cljs.core._clone(value);
};
cljs.core.cloneable_QMARK_ = function cloneable_QMARK_(value) {
  var G__10427 = value;
  if (G__10427) {
    var bit__4606__auto__ = G__10427.cljs$lang$protocol_mask$partition1$ & 8192;
    if (bit__4606__auto__ || G__10427.cljs$core$ICloneable$) {
      return true;
    } else {
      if (!G__10427.cljs$lang$protocol_mask$partition1$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable, G__10427);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable, G__10427);
  }
};
cljs.core.seq = function seq(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__10429 = coll;
      if (G__10429) {
        var bit__4599__auto__ = G__10429.cljs$lang$protocol_mask$partition0$ & 8388608;
        if (bit__4599__auto__ || G__10429.cljs$core$ISeqable$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$ISeqable$_seq$arity$1(null);
    } else {
      if (coll instanceof Array) {
        if (coll.length === 0) {
          return null;
        } else {
          return new cljs.core.IndexedSeq(coll, 0);
        }
      } else {
        if (typeof coll === "string") {
          if (coll.length === 0) {
            return null;
          } else {
            return new cljs.core.IndexedSeq(coll, 0);
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, coll)) {
            return cljs.core._seq(coll);
          } else {
            throw new Error([cljs.core.str(coll), cljs.core.str(" is not ISeqable")].join(""));
          }
        }
      }
    }
  }
};
cljs.core.first = function first(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__10431 = coll;
      if (G__10431) {
        var bit__4599__auto__ = G__10431.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4599__auto__ || G__10431.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$ISeq$_first$arity$1(null);
    } else {
      var s = cljs.core.seq(coll);
      if (s == null) {
        return null;
      } else {
        return cljs.core._first(s);
      }
    }
  }
};
cljs.core.rest = function rest(coll) {
  if (!(coll == null)) {
    if (function() {
      var G__10433 = coll;
      if (G__10433) {
        var bit__4599__auto__ = G__10433.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4599__auto__ || G__10433.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$ISeq$_rest$arity$1(null);
    } else {
      var s = cljs.core.seq(coll);
      if (s) {
        return cljs.core._rest(s);
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.next = function next(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__10435 = coll;
      if (G__10435) {
        var bit__4599__auto__ = G__10435.cljs$lang$protocol_mask$partition0$ & 128;
        if (bit__4599__auto__ || G__10435.cljs$core$INext$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$INext$_next$arity$1(null);
    } else {
      return cljs.core.seq(cljs.core.rest(coll));
    }
  }
};
cljs.core._EQ_ = function() {
  var _EQ_ = null;
  var _EQ___1 = function(x) {
    return true;
  };
  var _EQ___2 = function(x, y) {
    if (x == null) {
      return y == null;
    } else {
      return x === y || cljs.core._equiv(x, y);
    }
  };
  var _EQ___3 = function() {
    var G__10440__delegate = function(x, y, more) {
      while (true) {
        if (_EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
          if (cljs.core.next(more)) {
            var G__10441 = y;
            var G__10442 = cljs.core.first(more);
            var G__10443 = cljs.core.next(more);
            x = G__10441;
            y = G__10442;
            more = G__10443;
            continue;
          } else {
            return _EQ_.cljs$core$IFn$_invoke$arity$2(y, cljs.core.first(more));
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__10440 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__10444__i = 0, G__10444__a = new Array(arguments.length - 2);
        while (G__10444__i < G__10444__a.length) {
          G__10444__a[G__10444__i] = arguments[G__10444__i + 2];
          ++G__10444__i;
        }
        more = new cljs.core.IndexedSeq(G__10444__a, 0);
      }
      return G__10440__delegate.call(this, x, y, more);
    };
    G__10440.cljs$lang$maxFixedArity = 2;
    G__10440.cljs$lang$applyTo = function(arglist__10445) {
      var x = cljs.core.first(arglist__10445);
      arglist__10445 = cljs.core.next(arglist__10445);
      var y = cljs.core.first(arglist__10445);
      var more = cljs.core.rest(arglist__10445);
      return G__10440__delegate(x, y, more);
    };
    G__10440.cljs$core$IFn$_invoke$arity$variadic = G__10440__delegate;
    return G__10440;
  }();
  _EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ___1.call(this, x);
      case 2:
        return _EQ___2.call(this, x, y);
      default:
        var G__10446 = null;
        if (arguments.length > 2) {
          var G__10447__i = 0, G__10447__a = new Array(arguments.length - 2);
          while (G__10447__i < G__10447__a.length) {
            G__10447__a[G__10447__i] = arguments[G__10447__i + 2];
            ++G__10447__i;
          }
          G__10446 = new cljs.core.IndexedSeq(G__10447__a, 0);
        }
        return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__10446);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ_.cljs$lang$maxFixedArity = 2;
  _EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
  _EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
  _EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
  _EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ_;
}();
cljs.core.ES6Iterator = function(s) {
  this.s = s;
};
cljs.core.ES6Iterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first(self__.s);
    self__.s = cljs.core.next(self__.s);
    return{"done":false, "value":x};
  } else {
    return{"done":true, "value":null};
  }
};
cljs.core.ES6Iterator.cljs$lang$type = true;
cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";
cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/ES6Iterator");
};
cljs.core.__GT_ES6Iterator = function __GT_ES6Iterator(s) {
  return new cljs.core.ES6Iterator(s);
};
cljs.core.es6_iterator = function es6_iterator(coll) {
  return new cljs.core.ES6Iterator(cljs.core.seq(coll));
};
cljs.core.ES6IteratorSeq = function(value, iter, _rest) {
  this.value = value;
  this.iter = iter;
  this._rest = _rest;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 8388672;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.value;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__._rest == null) {
    self__._rest = function() {
      var G__10448 = self__.iter;
      return cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__10448) : cljs.core.es6_iterator_seq.call(null, G__10448);
    }();
  } else {
  }
  return self__._rest;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ES6IteratorSeq.cljs$lang$type = true;
cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";
cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/ES6IteratorSeq");
};
cljs.core.__GT_ES6IteratorSeq = function __GT_ES6IteratorSeq(value, iter, _rest) {
  return new cljs.core.ES6IteratorSeq(value, iter, _rest);
};
cljs.core.es6_iterator_seq = function es6_iterator_seq(iter) {
  var v = iter.next();
  if (cljs.core.truth_(v.done)) {
    return cljs.core.List.EMPTY;
  } else {
    return new cljs.core.ES6IteratorSeq(v.value, iter, null);
  }
};
cljs.core.mix_collection_hash = function mix_collection_hash(hash_basis, count) {
  var h1 = cljs.core.m3_seed;
  var k1 = cljs.core.m3_mix_K1(hash_basis);
  var h1__$1 = cljs.core.m3_mix_H1(h1, k1);
  return cljs.core.m3_fmix(h1__$1, count);
};
cljs.core.hash_ordered_coll = function hash_ordered_coll(coll) {
  var n = 0;
  var hash_code = 1;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__10449 = n + 1;
      var G__10450 = cljs.core.imul(31, hash_code) + cljs.core.hash(cljs.core.first(coll__$1)) | 0;
      var G__10451 = cljs.core.next(coll__$1);
      n = G__10449;
      hash_code = G__10450;
      coll__$1 = G__10451;
      continue;
    } else {
      return cljs.core.mix_collection_hash(hash_code, n);
    }
    break;
  }
};
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash(1, 0);
cljs.core.hash_unordered_coll = function hash_unordered_coll(coll) {
  var n = 0;
  var hash_code = 0;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__10452 = n + 1;
      var G__10453 = hash_code + cljs.core.hash(cljs.core.first(coll__$1)) | 0;
      var G__10454 = cljs.core.next(coll__$1);
      n = G__10452;
      hash_code = G__10453;
      coll__$1 = G__10454;
      continue;
    } else {
      return cljs.core.mix_collection_hash(hash_code, n);
    }
    break;
  }
};
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash(0, 0);
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0;
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var o__$1 = this;
  return other instanceof Date && o__$1.toString() === other.toString();
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o;
};
cljs.core.IMeta["function"] = true;
cljs.core._meta["function"] = function(_) {
  return null;
};
cljs.core.Fn["function"] = true;
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  var G__10455 = o;
  return goog.getUid(G__10455);
};
cljs.core.inc = function inc(x) {
  return x + 1;
};
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var self__ = this;
  var o__$1 = this;
  return self__.val;
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";
cljs.core.Reduced.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/Reduced");
};
cljs.core.__GT_Reduced = function __GT_Reduced(val) {
  return new cljs.core.Reduced(val);
};
cljs.core.reduced = function reduced(x) {
  return new cljs.core.Reduced(x);
};
cljs.core.reduced_QMARK_ = function reduced_QMARK_(r) {
  return r instanceof cljs.core.Reduced;
};
cljs.core.ensure_reduced = function ensure_reduced(x) {
  if (cljs.core.reduced_QMARK_(x)) {
    return x;
  } else {
    return cljs.core.reduced(x);
  }
};
cljs.core.unreduced = function unreduced(x) {
  if (cljs.core.reduced_QMARK_(x)) {
    var G__10457 = x;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10457) : cljs.core.deref.call(null, G__10457);
  } else {
    return x;
  }
};
cljs.core.deref = function deref(o) {
  return cljs.core._deref(o);
};
cljs.core.ci_reduce = function() {
  var ci_reduce = null;
  var ci_reduce__2 = function(cicoll, f) {
    var cnt = cljs.core._count(cicoll);
    if (cnt === 0) {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    } else {
      var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, 0);
      var n = 1;
      while (true) {
        if (n < cnt) {
          var nval = function() {
            var G__10464 = val;
            var G__10465 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10464, G__10465) : f.call(null, G__10464, G__10465);
          }();
          if (cljs.core.reduced_QMARK_(nval)) {
            return cljs.core.deref(nval);
          } else {
            var G__10470 = nval;
            var G__10471 = n + 1;
            val = G__10470;
            n = G__10471;
            continue;
          }
        } else {
          return val;
        }
        break;
      }
    }
  };
  var ci_reduce__3 = function(cicoll, f, val) {
    var cnt = cljs.core._count(cicoll);
    var val__$1 = val;
    var n = 0;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__10466 = val__$1;
          var G__10467 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10466, G__10467) : f.call(null, G__10466, G__10467);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__10472 = nval;
          var G__10473 = n + 1;
          val__$1 = G__10472;
          n = G__10473;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  var ci_reduce__4 = function(cicoll, f, val, idx) {
    var cnt = cljs.core._count(cicoll);
    var val__$1 = val;
    var n = idx;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__10468 = val__$1;
          var G__10469 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10468, G__10469) : f.call(null, G__10468, G__10469);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__10474 = nval;
          var G__10475 = n + 1;
          val__$1 = G__10474;
          n = G__10475;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  ci_reduce = function(cicoll, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return ci_reduce__2.call(this, cicoll, f);
      case 3:
        return ci_reduce__3.call(this, cicoll, f, val);
      case 4:
        return ci_reduce__4.call(this, cicoll, f, val, idx);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
  ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
  ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
  return ci_reduce;
}();
cljs.core.array_reduce = function() {
  var array_reduce = null;
  var array_reduce__2 = function(arr, f) {
    var cnt = arr.length;
    if (arr.length === 0) {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    } else {
      var val = arr[0];
      var n = 1;
      while (true) {
        if (n < cnt) {
          var nval = function() {
            var G__10482 = val;
            var G__10483 = arr[n];
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10482, G__10483) : f.call(null, G__10482, G__10483);
          }();
          if (cljs.core.reduced_QMARK_(nval)) {
            return cljs.core.deref(nval);
          } else {
            var G__10488 = nval;
            var G__10489 = n + 1;
            val = G__10488;
            n = G__10489;
            continue;
          }
        } else {
          return val;
        }
        break;
      }
    }
  };
  var array_reduce__3 = function(arr, f, val) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = 0;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__10484 = val__$1;
          var G__10485 = arr[n];
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10484, G__10485) : f.call(null, G__10484, G__10485);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__10490 = nval;
          var G__10491 = n + 1;
          val__$1 = G__10490;
          n = G__10491;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  var array_reduce__4 = function(arr, f, val, idx) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = idx;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__10486 = val__$1;
          var G__10487 = arr[n];
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10486, G__10487) : f.call(null, G__10486, G__10487);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__10492 = nval;
          var G__10493 = n + 1;
          val__$1 = G__10492;
          n = G__10493;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  array_reduce = function(arr, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return array_reduce__2.call(this, arr, f);
      case 3:
        return array_reduce__3.call(this, arr, f, val);
      case 4:
        return array_reduce__4.call(this, arr, f, val, idx);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
  array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
  array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
  return array_reduce;
}();
cljs.core.counted_QMARK_ = function counted_QMARK_(x) {
  var G__10495 = x;
  if (G__10495) {
    var bit__4606__auto__ = G__10495.cljs$lang$protocol_mask$partition0$ & 2;
    if (bit__4606__auto__ || G__10495.cljs$core$ICounted$) {
      return true;
    } else {
      if (!G__10495.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, G__10495);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, G__10495);
  }
};
cljs.core.indexed_QMARK_ = function indexed_QMARK_(x) {
  var G__10497 = x;
  if (G__10497) {
    var bit__4606__auto__ = G__10497.cljs$lang$protocol_mask$partition0$ & 16;
    if (bit__4606__auto__ || G__10497.cljs$core$IIndexed$) {
      return true;
    } else {
      if (!G__10497.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, G__10497);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, G__10497);
  }
};
cljs.core.IndexedSeqIterator = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.IndexedSeqIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.IndexedSeqIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.IndexedSeqIterator.cljs$lang$type = true;
cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";
cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/IndexedSeqIterator");
};
cljs.core.__GT_IndexedSeqIterator = function __GT_IndexedSeqIterator(arr, i) {
  return new cljs.core.IndexedSeqIterator(arr, i);
};
cljs.core.IndexedSeq = function(arr, i) {
  this.arr = arr;
  this.i = i;
  this.cljs$lang$protocol_mask$partition0$ = 166199550;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.IndexedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return not_found;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.IndexedSeqIterator(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.IndexedSeq(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr.length - self__.i;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var c = cljs.core._count(coll__$1);
  if (c > 0) {
    return new cljs.core.RSeq(coll__$1, c - 1, null);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  var G__10498 = coll__$1;
  var G__10499 = other;
  return cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__10498, G__10499) : cljs.core.equiv_sequential.call(null, G__10498, G__10499);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, self__.arr[self__.i], self__.i + 1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, start, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr[self__.i];
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  var G__10500 = o;
  var G__10501 = coll__$1;
  return cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__10500, G__10501) : cljs.core.cons.call(null, G__10500, G__10501);
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";
cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/IndexedSeq");
};
cljs.core.__GT_IndexedSeq = function __GT_IndexedSeq(arr, i) {
  return new cljs.core.IndexedSeq(arr, i);
};
cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4903__auto__ = this;
  return cljs.core.es6_iterator(this__4903__auto__);
};
cljs.core.prim_seq = function() {
  var prim_seq = null;
  var prim_seq__1 = function(prim) {
    return prim_seq.cljs$core$IFn$_invoke$arity$2(prim, 0);
  };
  var prim_seq__2 = function(prim, i) {
    if (i < prim.length) {
      return new cljs.core.IndexedSeq(prim, i);
    } else {
      return null;
    }
  };
  prim_seq = function(prim, i) {
    switch(arguments.length) {
      case 1:
        return prim_seq__1.call(this, prim);
      case 2:
        return prim_seq__2.call(this, prim, i);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
  prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
  return prim_seq;
}();
cljs.core.array_seq = function() {
  var array_seq = null;
  var array_seq__1 = function(array) {
    return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array, 0);
  };
  var array_seq__2 = function(array, i) {
    return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array, i);
  };
  array_seq = function(array, i) {
    switch(arguments.length) {
      case 1:
        return array_seq__1.call(this, array);
      case 2:
        return array_seq__2.call(this, array, i);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
  array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
  return array_seq;
}();
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.RSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.RSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, self__.meta);
};
cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return null;
  }
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.i + 1;
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  var G__10504 = coll__$1;
  var G__10505 = other;
  return cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__10504, G__10505) : cljs.core.equiv_sequential.call(null, G__10504, G__10505);
};
cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var G__10506 = cljs.core.List.EMPTY;
  var G__10507 = self__.meta;
  return cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__10506, G__10507) : cljs.core.with_meta.call(null, G__10506, G__10507);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(col, f) {
  var self__ = this;
  var col__$1 = this;
  var G__10508 = f;
  var G__10509 = col__$1;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__10508, G__10509) : cljs.core.seq_reduce.call(null, G__10508, G__10509);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(col, f, start) {
  var self__ = this;
  var col__$1 = this;
  var G__10510 = f;
  var G__10511 = start;
  var G__10512 = col__$1;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__10510, G__10511, G__10512) : cljs.core.seq_reduce.call(null, G__10510, G__10511, G__10512);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci, self__.i);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, new_meta);
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  var G__10513 = o;
  var G__10514 = coll__$1;
  return cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__10513, G__10514) : cljs.core.cons.call(null, G__10513, G__10514);
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";
cljs.core.RSeq.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/RSeq");
};
cljs.core.__GT_RSeq = function __GT_RSeq(ci, i, meta) {
  return new cljs.core.RSeq(ci, i, meta);
};
cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4903__auto__ = this;
  return cljs.core.es6_iterator(this__4903__auto__);
};
cljs.core.second = function second(coll) {
  return cljs.core.first(cljs.core.next(coll));
};
cljs.core.ffirst = function ffirst(coll) {
  return cljs.core.first(cljs.core.first(coll));
};
cljs.core.nfirst = function nfirst(coll) {
  return cljs.core.next(cljs.core.first(coll));
};
cljs.core.fnext = function fnext(coll) {
  return cljs.core.first(cljs.core.next(coll));
};
cljs.core.nnext = function nnext(coll) {
  return cljs.core.next(cljs.core.next(coll));
};
cljs.core.last = function last(s) {
  while (true) {
    var sn = cljs.core.next(s);
    if (!(sn == null)) {
      var G__10515 = sn;
      s = G__10515;
      continue;
    } else {
      return cljs.core.first(s);
    }
    break;
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o;
};
cljs.core.conj = function() {
  var conj = null;
  var conj__0 = function() {
    return cljs.core.PersistentVector.EMPTY;
  };
  var conj__1 = function(coll) {
    return coll;
  };
  var conj__2 = function(coll, x) {
    if (!(coll == null)) {
      return cljs.core._conj(coll, x);
    } else {
      return cljs.core._conj(cljs.core.List.EMPTY, x);
    }
  };
  var conj__3 = function() {
    var G__10520__delegate = function(coll, x, xs) {
      while (true) {
        if (cljs.core.truth_(xs)) {
          var G__10521 = conj.cljs$core$IFn$_invoke$arity$2(coll, x);
          var G__10522 = cljs.core.first(xs);
          var G__10523 = cljs.core.next(xs);
          coll = G__10521;
          x = G__10522;
          xs = G__10523;
          continue;
        } else {
          return conj.cljs$core$IFn$_invoke$arity$2(coll, x);
        }
        break;
      }
    };
    var G__10520 = function(coll, x, var_args) {
      var xs = null;
      if (arguments.length > 2) {
        var G__10524__i = 0, G__10524__a = new Array(arguments.length - 2);
        while (G__10524__i < G__10524__a.length) {
          G__10524__a[G__10524__i] = arguments[G__10524__i + 2];
          ++G__10524__i;
        }
        xs = new cljs.core.IndexedSeq(G__10524__a, 0);
      }
      return G__10520__delegate.call(this, coll, x, xs);
    };
    G__10520.cljs$lang$maxFixedArity = 2;
    G__10520.cljs$lang$applyTo = function(arglist__10525) {
      var coll = cljs.core.first(arglist__10525);
      arglist__10525 = cljs.core.next(arglist__10525);
      var x = cljs.core.first(arglist__10525);
      var xs = cljs.core.rest(arglist__10525);
      return G__10520__delegate(coll, x, xs);
    };
    G__10520.cljs$core$IFn$_invoke$arity$variadic = G__10520__delegate;
    return G__10520;
  }();
  conj = function(coll, x, var_args) {
    var xs = var_args;
    switch(arguments.length) {
      case 0:
        return conj__0.call(this);
      case 1:
        return conj__1.call(this, coll);
      case 2:
        return conj__2.call(this, coll, x);
      default:
        var G__10526 = null;
        if (arguments.length > 2) {
          var G__10527__i = 0, G__10527__a = new Array(arguments.length - 2);
          while (G__10527__i < G__10527__a.length) {
            G__10527__a[G__10527__i] = arguments[G__10527__i + 2];
            ++G__10527__i;
          }
          G__10526 = new cljs.core.IndexedSeq(G__10527__a, 0);
        }
        return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll, x, G__10526);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  conj.cljs$lang$maxFixedArity = 2;
  conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
  conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
  conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
  conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
  conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
  return conj;
}();
cljs.core.empty = function empty(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._empty(coll);
  }
};
cljs.core.accumulating_seq_count = function accumulating_seq_count(coll) {
  var s = cljs.core.seq(coll);
  var acc = 0;
  while (true) {
    if (cljs.core.counted_QMARK_(s)) {
      return acc + cljs.core._count(s);
    } else {
      var G__10528 = cljs.core.next(s);
      var G__10529 = acc + 1;
      s = G__10528;
      acc = G__10529;
      continue;
    }
    break;
  }
};
cljs.core.count = function count(coll) {
  if (!(coll == null)) {
    if (function() {
      var G__10531 = coll;
      if (G__10531) {
        var bit__4599__auto__ = G__10531.cljs$lang$protocol_mask$partition0$ & 2;
        if (bit__4599__auto__ || G__10531.cljs$core$ICounted$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$ICounted$_count$arity$1(null);
    } else {
      if (coll instanceof Array) {
        return coll.length;
      } else {
        if (typeof coll === "string") {
          return coll.length;
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, coll)) {
            return cljs.core._count(coll);
          } else {
            return cljs.core.accumulating_seq_count(coll);
          }
        }
      }
    }
  } else {
    return 0;
  }
};
cljs.core.linear_traversal_nth = function() {
  var linear_traversal_nth = null;
  var linear_traversal_nth__2 = function(coll, n) {
    while (true) {
      if (coll == null) {
        throw new Error("Index out of bounds");
      } else {
        if (n === 0) {
          if (cljs.core.seq(coll)) {
            return cljs.core.first(coll);
          } else {
            throw new Error("Index out of bounds");
          }
        } else {
          if (cljs.core.indexed_QMARK_(coll)) {
            return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
          } else {
            if (cljs.core.seq(coll)) {
              var G__10532 = cljs.core.next(coll);
              var G__10533 = n - 1;
              coll = G__10532;
              n = G__10533;
              continue;
            } else {
              throw new Error("Index out of bounds");
            }
          }
        }
      }
      break;
    }
  };
  var linear_traversal_nth__3 = function(coll, n, not_found) {
    while (true) {
      if (coll == null) {
        return not_found;
      } else {
        if (n === 0) {
          if (cljs.core.seq(coll)) {
            return cljs.core.first(coll);
          } else {
            return not_found;
          }
        } else {
          if (cljs.core.indexed_QMARK_(coll)) {
            return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
          } else {
            if (cljs.core.seq(coll)) {
              var G__10534 = cljs.core.next(coll);
              var G__10535 = n - 1;
              var G__10536 = not_found;
              coll = G__10534;
              n = G__10535;
              not_found = G__10536;
              continue;
            } else {
              return not_found;
            }
          }
        }
      }
      break;
    }
  };
  linear_traversal_nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return linear_traversal_nth__2.call(this, coll, n);
      case 3:
        return linear_traversal_nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
  return linear_traversal_nth;
}();
cljs.core.nth = function() {
  var nth = null;
  var nth__2 = function(coll, n) {
    if (!(typeof n === "number")) {
      throw new Error("index argument to nth must be a number");
    } else {
      if (coll == null) {
        return coll;
      } else {
        if (function() {
          var G__10541 = coll;
          if (G__10541) {
            var bit__4599__auto__ = G__10541.cljs$lang$protocol_mask$partition0$ & 16;
            if (bit__4599__auto__ || G__10541.cljs$core$IIndexed$) {
              return true;
            } else {
              return false;
            }
          } else {
            return false;
          }
        }()) {
          return coll.cljs$core$IIndexed$_nth$arity$2(null, n);
        } else {
          if (coll instanceof Array) {
            if (n < coll.length) {
              return coll[n];
            } else {
              return null;
            }
          } else {
            if (typeof coll === "string") {
              if (n < coll.length) {
                return coll[n];
              } else {
                return null;
              }
            } else {
              if (cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, coll)) {
                return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
              } else {
                if (function() {
                  var G__10542 = coll;
                  if (G__10542) {
                    var bit__4606__auto__ = G__10542.cljs$lang$protocol_mask$partition0$ & 64;
                    if (bit__4606__auto__ || G__10542.cljs$core$ISeq$) {
                      return true;
                    } else {
                      if (!G__10542.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__10542);
                      } else {
                        return false;
                      }
                    }
                  } else {
                    return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__10542);
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll, n);
                } else {
                  throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join(""));
                }
              }
            }
          }
        }
      }
    }
  };
  var nth__3 = function(coll, n, not_found) {
    if (!(typeof n === "number")) {
      throw new Error("index argument to nth must be a number.");
    } else {
      if (coll == null) {
        return not_found;
      } else {
        if (function() {
          var G__10543 = coll;
          if (G__10543) {
            var bit__4599__auto__ = G__10543.cljs$lang$protocol_mask$partition0$ & 16;
            if (bit__4599__auto__ || G__10543.cljs$core$IIndexed$) {
              return true;
            } else {
              return false;
            }
          } else {
            return false;
          }
        }()) {
          return coll.cljs$core$IIndexed$_nth$arity$3(null, n, not_found);
        } else {
          if (coll instanceof Array) {
            if (n < coll.length) {
              return coll[n];
            } else {
              return not_found;
            }
          } else {
            if (typeof coll === "string") {
              if (n < coll.length) {
                return coll[n];
              } else {
                return not_found;
              }
            } else {
              if (cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, coll)) {
                return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
              } else {
                if (function() {
                  var G__10544 = coll;
                  if (G__10544) {
                    var bit__4606__auto__ = G__10544.cljs$lang$protocol_mask$partition0$ & 64;
                    if (bit__4606__auto__ || G__10544.cljs$core$ISeq$) {
                      return true;
                    } else {
                      if (!G__10544.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__10544);
                      } else {
                        return false;
                      }
                    }
                  } else {
                    return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__10544);
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
                } else {
                  throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join(""));
                }
              }
            }
          }
        }
      }
    }
  };
  nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return nth__2.call(this, coll, n);
      case 3:
        return nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
  nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
  return nth;
}();
cljs.core.nthrest = function nthrest(coll, n) {
  var n__$1 = n;
  var xs = coll;
  while (true) {
    if (n__$1 > 0 && cljs.core.seq(xs)) {
      var G__10545 = n__$1 - 1;
      var G__10546 = cljs.core.rest(xs);
      n__$1 = G__10545;
      xs = G__10546;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.get = function() {
  var get = null;
  var get__2 = function(o, k) {
    if (o == null) {
      return null;
    } else {
      if (function() {
        var G__10549 = o;
        if (G__10549) {
          var bit__4599__auto__ = G__10549.cljs$lang$protocol_mask$partition0$ & 256;
          if (bit__4599__auto__ || G__10549.cljs$core$ILookup$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return o.cljs$core$ILookup$_lookup$arity$2(null, k);
      } else {
        if (o instanceof Array) {
          if (k < o.length) {
            return o[k];
          } else {
            return null;
          }
        } else {
          if (typeof o === "string") {
            if (k < o.length) {
              return o[k];
            } else {
              return null;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, o)) {
              return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o, k);
            } else {
              return null;
            }
          }
        }
      }
    }
  };
  var get__3 = function(o, k, not_found) {
    if (!(o == null)) {
      if (function() {
        var G__10550 = o;
        if (G__10550) {
          var bit__4599__auto__ = G__10550.cljs$lang$protocol_mask$partition0$ & 256;
          if (bit__4599__auto__ || G__10550.cljs$core$ILookup$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return o.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
      } else {
        if (o instanceof Array) {
          if (k < o.length) {
            return o[k];
          } else {
            return not_found;
          }
        } else {
          if (typeof o === "string") {
            if (k < o.length) {
              return o[k];
            } else {
              return not_found;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, o)) {
              return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o, k, not_found);
            } else {
              return not_found;
            }
          }
        }
      }
    } else {
      return not_found;
    }
  };
  get = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return get__2.call(this, o, k);
      case 3:
        return get__3.call(this, o, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get.cljs$core$IFn$_invoke$arity$2 = get__2;
  get.cljs$core$IFn$_invoke$arity$3 = get__3;
  return get;
}();
cljs.core.assoc = function() {
  var assoc = null;
  var assoc__3 = function(coll, k, v) {
    if (!(coll == null)) {
      return cljs.core._assoc(coll, k, v);
    } else {
      return cljs.core.PersistentHashMap.fromArrays([k], [v]);
    }
  };
  var assoc__4 = function() {
    var G__10554__delegate = function(coll, k, v, kvs) {
      while (true) {
        var ret = assoc.cljs$core$IFn$_invoke$arity$3(coll, k, v);
        if (cljs.core.truth_(kvs)) {
          var G__10555 = ret;
          var G__10556 = cljs.core.first(kvs);
          var G__10557 = cljs.core.second(kvs);
          var G__10558 = cljs.core.nnext(kvs);
          coll = G__10555;
          k = G__10556;
          v = G__10557;
          kvs = G__10558;
          continue;
        } else {
          return ret;
        }
        break;
      }
    };
    var G__10554 = function(coll, k, v, var_args) {
      var kvs = null;
      if (arguments.length > 3) {
        var G__10559__i = 0, G__10559__a = new Array(arguments.length - 3);
        while (G__10559__i < G__10559__a.length) {
          G__10559__a[G__10559__i] = arguments[G__10559__i + 3];
          ++G__10559__i;
        }
        kvs = new cljs.core.IndexedSeq(G__10559__a, 0);
      }
      return G__10554__delegate.call(this, coll, k, v, kvs);
    };
    G__10554.cljs$lang$maxFixedArity = 3;
    G__10554.cljs$lang$applyTo = function(arglist__10560) {
      var coll = cljs.core.first(arglist__10560);
      arglist__10560 = cljs.core.next(arglist__10560);
      var k = cljs.core.first(arglist__10560);
      arglist__10560 = cljs.core.next(arglist__10560);
      var v = cljs.core.first(arglist__10560);
      var kvs = cljs.core.rest(arglist__10560);
      return G__10554__delegate(coll, k, v, kvs);
    };
    G__10554.cljs$core$IFn$_invoke$arity$variadic = G__10554__delegate;
    return G__10554;
  }();
  assoc = function(coll, k, v, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc__3.call(this, coll, k, v);
      default:
        var G__10561 = null;
        if (arguments.length > 3) {
          var G__10562__i = 0, G__10562__a = new Array(arguments.length - 3);
          while (G__10562__i < G__10562__a.length) {
            G__10562__a[G__10562__i] = arguments[G__10562__i + 3];
            ++G__10562__i;
          }
          G__10561 = new cljs.core.IndexedSeq(G__10562__a, 0);
        }
        return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll, k, v, G__10561);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  assoc.cljs$lang$maxFixedArity = 3;
  assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
  assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
  assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
  return assoc;
}();
cljs.core.dissoc = function() {
  var dissoc = null;
  var dissoc__1 = function(coll) {
    return coll;
  };
  var dissoc__2 = function(coll, k) {
    if (coll == null) {
      return null;
    } else {
      return cljs.core._dissoc(coll, k);
    }
  };
  var dissoc__3 = function() {
    var G__10565__delegate = function(coll, k, ks) {
      while (true) {
        if (coll == null) {
          return null;
        } else {
          var ret = dissoc.cljs$core$IFn$_invoke$arity$2(coll, k);
          if (cljs.core.truth_(ks)) {
            var G__10566 = ret;
            var G__10567 = cljs.core.first(ks);
            var G__10568 = cljs.core.next(ks);
            coll = G__10566;
            k = G__10567;
            ks = G__10568;
            continue;
          } else {
            return ret;
          }
        }
        break;
      }
    };
    var G__10565 = function(coll, k, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        var G__10569__i = 0, G__10569__a = new Array(arguments.length - 2);
        while (G__10569__i < G__10569__a.length) {
          G__10569__a[G__10569__i] = arguments[G__10569__i + 2];
          ++G__10569__i;
        }
        ks = new cljs.core.IndexedSeq(G__10569__a, 0);
      }
      return G__10565__delegate.call(this, coll, k, ks);
    };
    G__10565.cljs$lang$maxFixedArity = 2;
    G__10565.cljs$lang$applyTo = function(arglist__10570) {
      var coll = cljs.core.first(arglist__10570);
      arglist__10570 = cljs.core.next(arglist__10570);
      var k = cljs.core.first(arglist__10570);
      var ks = cljs.core.rest(arglist__10570);
      return G__10565__delegate(coll, k, ks);
    };
    G__10565.cljs$core$IFn$_invoke$arity$variadic = G__10565__delegate;
    return G__10565;
  }();
  dissoc = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return dissoc__1.call(this, coll);
      case 2:
        return dissoc__2.call(this, coll, k);
      default:
        var G__10571 = null;
        if (arguments.length > 2) {
          var G__10572__i = 0, G__10572__a = new Array(arguments.length - 2);
          while (G__10572__i < G__10572__a.length) {
            G__10572__a[G__10572__i] = arguments[G__10572__i + 2];
            ++G__10572__i;
          }
          G__10571 = new cljs.core.IndexedSeq(G__10572__a, 0);
        }
        return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, G__10571);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dissoc.cljs$lang$maxFixedArity = 2;
  dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
  dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
  dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
  dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
  return dissoc;
}();
cljs.core.fn_QMARK_ = function fn_QMARK_(f) {
  var or__3925__auto__ = function() {
    var G__10577 = f;
    return goog.isFunction(G__10577);
  }();
  if (cljs.core.truth_(or__3925__auto__)) {
    return or__3925__auto__;
  } else {
    var G__10578 = f;
    if (G__10578) {
      var bit__4606__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3925__auto____$1 = bit__4606__auto__;
        if (cljs.core.truth_(or__3925__auto____$1)) {
          return or__3925__auto____$1;
        } else {
          return G__10578.cljs$core$Fn$;
        }
      }())) {
        return true;
      } else {
        if (!G__10578.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.Fn, G__10578);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.Fn, G__10578);
    }
  }
};
cljs.core.MetaFn = function(afn, meta) {
  this.afn = afn;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 393217;
};
cljs.core.MetaFn.prototype.call = function() {
  var G__11044 = null;
  var G__11044__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null);
  };
  var G__11044__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__10580 = a;
    return self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__10580) : self__.afn.call(null, G__10580);
  };
  var G__11044__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__10581 = a;
    var G__10582 = b;
    return self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__10581, G__10582) : self__.afn.call(null, G__10581, G__10582);
  };
  var G__11044__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__10583 = a;
    var G__10584 = b;
    var G__10585 = c;
    return self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__10583, G__10584, G__10585) : self__.afn.call(null, G__10583, G__10584, G__10585);
  };
  var G__11044__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__10586 = a;
    var G__10587 = b;
    var G__10588 = c;
    var G__10589 = d;
    return self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__10586, G__10587, G__10588, G__10589) : self__.afn.call(null, G__10586, G__10587, G__10588, G__10589);
  };
  var G__11044__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__10590 = a;
    var G__10591 = b;
    var G__10592 = c;
    var G__10593 = d;
    var G__10594 = e;
    return self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__10590, G__10591, G__10592, G__10593, G__10594) : self__.afn.call(null, G__10590, G__10591, G__10592, G__10593, G__10594);
  };
  var G__11044__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__10595 = a;
    var G__10596 = b;
    var G__10597 = c;
    var G__10598 = d;
    var G__10599 = e;
    var G__10600 = f;
    return self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__10595, G__10596, G__10597, G__10598, G__10599, G__10600) : self__.afn.call(null, G__10595, G__10596, G__10597, G__10598, G__10599, G__10600);
  };
  var G__11044__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__10601 = a;
    var G__10602 = b;
    var G__10603 = c;
    var G__10604 = d;
    var G__10605 = e;
    var G__10606 = f;
    var G__10607 = g;
    return self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__10601, G__10602, G__10603, G__10604, G__10605, G__10606, G__10607) : self__.afn.call(null, G__10601, G__10602, G__10603, G__10604, G__10605, G__10606, G__10607);
  };
  var G__11044__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__10608 = a;
    var G__10609 = b;
    var G__10610 = c;
    var G__10611 = d;
    var G__10612 = e;
    var G__10613 = f;
    var G__10614 = g;
    var G__10615 = h;
    return self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__10608, G__10609, G__10610, G__10611, G__10612, G__10613, G__10614, G__10615) : self__.afn.call(null, G__10608, G__10609, G__10610, G__10611, G__10612, G__10613, G__10614, G__10615);
  };
  var G__11044__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__10616 = a;
    var G__10617 = b;
    var G__10618 = c;
    var G__10619 = d;
    var G__10620 = e;
    var G__10621 = f;
    var G__10622 = g;
    var G__10623 = h;
    var G__10624 = i;
    return self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__10616, G__10617, G__10618, G__10619, G__10620, G__10621, G__10622, G__10623, G__10624) : self__.afn.call(null, G__10616, G__10617, G__10618, G__10619, G__10620, G__10621, G__10622, G__10623, G__10624);
  };
  var G__11044__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__10625 = a;
    var G__10626 = b;
    var G__10627 = c;
    var G__10628 = d;
    var G__10629 = e;
    var G__10630 = f;
    var G__10631 = g;
    var G__10632 = h;
    var G__10633 = i;
    var G__10634 = j;
    return self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__10625, G__10626, G__10627, G__10628, G__10629, G__10630, G__10631, G__10632, G__10633, G__10634) : self__.afn.call(null, G__10625, G__10626, G__10627, G__10628, G__10629, G__10630, G__10631, G__10632, G__10633, G__10634);
  };
  var G__11044__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__10635 = a;
    var G__10636 = b;
    var G__10637 = c;
    var G__10638 = d;
    var G__10639 = e;
    var G__10640 = f;
    var G__10641 = g;
    var G__10642 = h;
    var G__10643 = i;
    var G__10644 = j;
    var G__10645 = k;
    return self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__10635, G__10636, G__10637, G__10638, G__10639, G__10640, G__10641, G__10642, G__10643, G__10644, G__10645) : self__.afn.call(null, G__10635, G__10636, G__10637, G__10638, G__10639, G__10640, G__10641, G__10642, G__10643, G__10644, G__10645);
  };
  var G__11044__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__10646 = a;
    var G__10647 = b;
    var G__10648 = c;
    var G__10649 = d;
    var G__10650 = e;
    var G__10651 = f;
    var G__10652 = g;
    var G__10653 = h;
    var G__10654 = i;
    var G__10655 = j;
    var G__10656 = k;
    var G__10657 = l;
    return self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__10646, G__10647, G__10648, G__10649, G__10650, G__10651, G__10652, G__10653, G__10654, G__10655, G__10656, G__10657) : self__.afn.call(null, G__10646, G__10647, G__10648, G__10649, G__10650, G__10651, G__10652, G__10653, G__10654, G__10655, G__10656, G__10657);
  };
  var G__11044__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__10658 = a;
    var G__10659 = b;
    var G__10660 = c;
    var G__10661 = d;
    var G__10662 = e;
    var G__10663 = f;
    var G__10664 = g;
    var G__10665 = h;
    var G__10666 = i;
    var G__10667 = j;
    var G__10668 = k;
    var G__10669 = l;
    var G__10670 = m;
    return self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__10658, G__10659, G__10660, G__10661, G__10662, G__10663, G__10664, G__10665, G__10666, G__10667, G__10668, G__10669, G__10670) : self__.afn.call(null, G__10658, G__10659, G__10660, G__10661, G__10662, G__10663, G__10664, G__10665, G__10666, G__10667, G__10668, G__10669, G__10670);
  };
  var G__11044__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__10671 = a;
    var G__10672 = b;
    var G__10673 = c;
    var G__10674 = d;
    var G__10675 = e;
    var G__10676 = f;
    var G__10677 = g;
    var G__10678 = h;
    var G__10679 = i;
    var G__10680 = j;
    var G__10681 = k;
    var G__10682 = l;
    var G__10683 = m;
    var G__10684 = n;
    return self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__10671, G__10672, G__10673, G__10674, G__10675, G__10676, G__10677, G__10678, G__10679, G__10680, G__10681, G__10682, G__10683, G__10684) : self__.afn.call(null, G__10671, G__10672, G__10673, G__10674, G__10675, G__10676, G__10677, G__10678, G__10679, G__10680, G__10681, G__10682, G__10683, G__10684);
  };
  var G__11044__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__10685 = a;
    var G__10686 = b;
    var G__10687 = c;
    var G__10688 = d;
    var G__10689 = e;
    var G__10690 = f;
    var G__10691 = g;
    var G__10692 = h;
    var G__10693 = i;
    var G__10694 = j;
    var G__10695 = k;
    var G__10696 = l;
    var G__10697 = m;
    var G__10698 = n;
    var G__10699 = o;
    return self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__10685, G__10686, G__10687, G__10688, G__10689, G__10690, G__10691, G__10692, G__10693, G__10694, G__10695, G__10696, G__10697, G__10698, G__10699) : self__.afn.call(null, G__10685, G__10686, G__10687, G__10688, G__10689, G__10690, G__10691, G__10692, G__10693, G__10694, G__10695, G__10696, G__10697, G__10698, G__10699);
  };
  var G__11044__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__10700 = a;
    var G__10701 = b;
    var G__10702 = c;
    var G__10703 = d;
    var G__10704 = e;
    var G__10705 = f;
    var G__10706 = g;
    var G__10707 = h;
    var G__10708 = i;
    var G__10709 = j;
    var G__10710 = k;
    var G__10711 = l;
    var G__10712 = m;
    var G__10713 = n;
    var G__10714 = o;
    var G__10715 = p;
    return self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__10700, G__10701, G__10702, G__10703, G__10704, G__10705, G__10706, G__10707, G__10708, G__10709, G__10710, G__10711, G__10712, G__10713, G__10714, G__10715) : self__.afn.call(null, G__10700, G__10701, G__10702, G__10703, G__10704, G__10705, G__10706, G__10707, G__10708, G__10709, G__10710, G__10711, G__10712, G__10713, G__10714, G__10715);
  };
  var G__11044__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__10716 = a;
    var G__10717 = b;
    var G__10718 = c;
    var G__10719 = d;
    var G__10720 = e;
    var G__10721 = f;
    var G__10722 = g;
    var G__10723 = h;
    var G__10724 = i;
    var G__10725 = j;
    var G__10726 = k;
    var G__10727 = l;
    var G__10728 = m;
    var G__10729 = n;
    var G__10730 = o;
    var G__10731 = p;
    var G__10732 = q;
    return self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__10716, G__10717, G__10718, G__10719, G__10720, G__10721, G__10722, G__10723, G__10724, G__10725, G__10726, G__10727, G__10728, G__10729, G__10730, G__10731, G__10732) : self__.afn.call(null, G__10716, G__10717, G__10718, G__10719, G__10720, G__10721, G__10722, G__10723, G__10724, G__10725, G__10726, G__10727, G__10728, G__10729, G__10730, G__10731, G__10732);
  };
  var G__11044__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__10733 = a;
    var G__10734 = b;
    var G__10735 = c;
    var G__10736 = d;
    var G__10737 = e;
    var G__10738 = f;
    var G__10739 = g;
    var G__10740 = h;
    var G__10741 = i;
    var G__10742 = j;
    var G__10743 = k;
    var G__10744 = l;
    var G__10745 = m;
    var G__10746 = n;
    var G__10747 = o;
    var G__10748 = p;
    var G__10749 = q;
    var G__10750 = r;
    return self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__10733, G__10734, G__10735, G__10736, G__10737, G__10738, G__10739, G__10740, G__10741, G__10742, G__10743, G__10744, G__10745, G__10746, G__10747, G__10748, G__10749, G__10750) : self__.afn.call(null, G__10733, G__10734, G__10735, G__10736, G__10737, G__10738, G__10739, G__10740, G__10741, G__10742, G__10743, G__10744, G__10745, G__10746, G__10747, G__10748, G__10749, G__10750);
  };
  var G__11044__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__10751 = a;
    var G__10752 = b;
    var G__10753 = c;
    var G__10754 = d;
    var G__10755 = e;
    var G__10756 = f;
    var G__10757 = g;
    var G__10758 = h;
    var G__10759 = i;
    var G__10760 = j;
    var G__10761 = k;
    var G__10762 = l;
    var G__10763 = m;
    var G__10764 = n;
    var G__10765 = o;
    var G__10766 = p;
    var G__10767 = q;
    var G__10768 = r;
    var G__10769 = s;
    return self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__10751, G__10752, G__10753, G__10754, G__10755, G__10756, G__10757, G__10758, G__10759, G__10760, G__10761, G__10762, G__10763, G__10764, G__10765, G__10766, G__10767, G__10768, G__10769) : self__.afn.call(null, G__10751, G__10752, G__10753, G__10754, G__10755, G__10756, G__10757, G__10758, G__10759, G__10760, G__10761, G__10762, G__10763, G__10764, G__10765, G__10766, G__10767, G__10768, G__10769);
  };
  var G__11044__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__10770 = a;
    var G__10771 = b;
    var G__10772 = c;
    var G__10773 = d;
    var G__10774 = e;
    var G__10775 = f;
    var G__10776 = g;
    var G__10777 = h;
    var G__10778 = i;
    var G__10779 = j;
    var G__10780 = k;
    var G__10781 = l;
    var G__10782 = m;
    var G__10783 = n;
    var G__10784 = o;
    var G__10785 = p;
    var G__10786 = q;
    var G__10787 = r;
    var G__10788 = s;
    var G__10789 = t;
    return self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__10770, G__10771, G__10772, G__10773, G__10774, G__10775, G__10776, G__10777, G__10778, G__10779, G__10780, G__10781, G__10782, G__10783, G__10784, G__10785, G__10786, G__10787, G__10788, G__10789) : self__.afn.call(null, G__10770, G__10771, G__10772, G__10773, G__10774, G__10775, G__10776, G__10777, G__10778, G__10779, G__10780, G__10781, G__10782, G__10783, G__10784, G__10785, G__10786, G__10787, 
    G__10788, G__10789);
  };
  var G__11044__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__10790 = self__.afn;
    var G__10791 = a;
    var G__10792 = b;
    var G__10793 = c;
    var G__10794 = d;
    var G__10795 = e;
    var G__10796 = f;
    var G__10797 = g;
    var G__10798 = h;
    var G__10799 = i;
    var G__10800 = j;
    var G__10801 = k;
    var G__10802 = l;
    var G__10803 = m;
    var G__10804 = n;
    var G__10805 = o;
    var G__10806 = p;
    var G__10807 = q;
    var G__10808 = r;
    var G__10809 = s;
    var G__10810 = t;
    var G__10811 = rest;
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__10790, G__10791, G__10792, G__10793, G__10794, G__10795, G__10796, G__10797, G__10798, G__10799, G__10800, G__10801, G__10802, G__10803, G__10804, G__10805, G__10806, G__10807, G__10808, G__10809, G__10810, G__10811) : cljs.core.apply.call(null, G__10790, G__10791, G__10792, G__10793, G__10794, G__10795, G__10796, G__10797, G__10798, G__10799, G__10800, G__10801, G__10802, G__10803, G__10804, 
    G__10805, G__10806, G__10807, G__10808, G__10809, G__10810, G__10811);
  };
  G__11044 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__11044__1.call(this, self__);
      case 2:
        return G__11044__2.call(this, self__, a);
      case 3:
        return G__11044__3.call(this, self__, a, b);
      case 4:
        return G__11044__4.call(this, self__, a, b, c);
      case 5:
        return G__11044__5.call(this, self__, a, b, c, d);
      case 6:
        return G__11044__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__11044__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__11044__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__11044__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__11044__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__11044__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__11044__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__11044__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__11044__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__11044__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__11044__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__11044__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__11044__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__11044__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__11044__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__11044__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__11044__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11044.cljs$core$IFn$_invoke$arity$1 = G__11044__1;
  G__11044.cljs$core$IFn$_invoke$arity$2 = G__11044__2;
  G__11044.cljs$core$IFn$_invoke$arity$3 = G__11044__3;
  G__11044.cljs$core$IFn$_invoke$arity$4 = G__11044__4;
  G__11044.cljs$core$IFn$_invoke$arity$5 = G__11044__5;
  G__11044.cljs$core$IFn$_invoke$arity$6 = G__11044__6;
  G__11044.cljs$core$IFn$_invoke$arity$7 = G__11044__7;
  G__11044.cljs$core$IFn$_invoke$arity$8 = G__11044__8;
  G__11044.cljs$core$IFn$_invoke$arity$9 = G__11044__9;
  G__11044.cljs$core$IFn$_invoke$arity$10 = G__11044__10;
  G__11044.cljs$core$IFn$_invoke$arity$11 = G__11044__11;
  G__11044.cljs$core$IFn$_invoke$arity$12 = G__11044__12;
  G__11044.cljs$core$IFn$_invoke$arity$13 = G__11044__13;
  G__11044.cljs$core$IFn$_invoke$arity$14 = G__11044__14;
  G__11044.cljs$core$IFn$_invoke$arity$15 = G__11044__15;
  G__11044.cljs$core$IFn$_invoke$arity$16 = G__11044__16;
  G__11044.cljs$core$IFn$_invoke$arity$17 = G__11044__17;
  G__11044.cljs$core$IFn$_invoke$arity$18 = G__11044__18;
  G__11044.cljs$core$IFn$_invoke$arity$19 = G__11044__19;
  G__11044.cljs$core$IFn$_invoke$arity$20 = G__11044__20;
  G__11044.cljs$core$IFn$_invoke$arity$21 = G__11044__21;
  G__11044.cljs$core$IFn$_invoke$arity$22 = G__11044__22;
  return G__11044;
}();
cljs.core.MetaFn.prototype.apply = function(self__, args10579) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args10579)));
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  var G__10812 = a;
  return self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__10812) : self__.afn.call(null, G__10812);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  var G__10813 = a;
  var G__10814 = b;
  return self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__10813, G__10814) : self__.afn.call(null, G__10813, G__10814);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  var G__10815 = a;
  var G__10816 = b;
  var G__10817 = c;
  return self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__10815, G__10816, G__10817) : self__.afn.call(null, G__10815, G__10816, G__10817);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  var G__10818 = a;
  var G__10819 = b;
  var G__10820 = c;
  var G__10821 = d;
  return self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__10818, G__10819, G__10820, G__10821) : self__.afn.call(null, G__10818, G__10819, G__10820, G__10821);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  var G__10822 = a;
  var G__10823 = b;
  var G__10824 = c;
  var G__10825 = d;
  var G__10826 = e;
  return self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__10822, G__10823, G__10824, G__10825, G__10826) : self__.afn.call(null, G__10822, G__10823, G__10824, G__10825, G__10826);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  var G__10827 = a;
  var G__10828 = b;
  var G__10829 = c;
  var G__10830 = d;
  var G__10831 = e;
  var G__10832 = f;
  return self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__10827, G__10828, G__10829, G__10830, G__10831, G__10832) : self__.afn.call(null, G__10827, G__10828, G__10829, G__10830, G__10831, G__10832);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  var G__10833 = a;
  var G__10834 = b;
  var G__10835 = c;
  var G__10836 = d;
  var G__10837 = e;
  var G__10838 = f;
  var G__10839 = g;
  return self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__10833, G__10834, G__10835, G__10836, G__10837, G__10838, G__10839) : self__.afn.call(null, G__10833, G__10834, G__10835, G__10836, G__10837, G__10838, G__10839);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  var G__10840 = a;
  var G__10841 = b;
  var G__10842 = c;
  var G__10843 = d;
  var G__10844 = e;
  var G__10845 = f;
  var G__10846 = g;
  var G__10847 = h;
  return self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__10840, G__10841, G__10842, G__10843, G__10844, G__10845, G__10846, G__10847) : self__.afn.call(null, G__10840, G__10841, G__10842, G__10843, G__10844, G__10845, G__10846, G__10847);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  var G__10848 = a;
  var G__10849 = b;
  var G__10850 = c;
  var G__10851 = d;
  var G__10852 = e;
  var G__10853 = f;
  var G__10854 = g;
  var G__10855 = h;
  var G__10856 = i;
  return self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__10848, G__10849, G__10850, G__10851, G__10852, G__10853, G__10854, G__10855, G__10856) : self__.afn.call(null, G__10848, G__10849, G__10850, G__10851, G__10852, G__10853, G__10854, G__10855, G__10856);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  var G__10857 = a;
  var G__10858 = b;
  var G__10859 = c;
  var G__10860 = d;
  var G__10861 = e;
  var G__10862 = f;
  var G__10863 = g;
  var G__10864 = h;
  var G__10865 = i;
  var G__10866 = j;
  return self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__10857, G__10858, G__10859, G__10860, G__10861, G__10862, G__10863, G__10864, G__10865, G__10866) : self__.afn.call(null, G__10857, G__10858, G__10859, G__10860, G__10861, G__10862, G__10863, G__10864, G__10865, G__10866);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  var G__10867 = a;
  var G__10868 = b;
  var G__10869 = c;
  var G__10870 = d;
  var G__10871 = e;
  var G__10872 = f;
  var G__10873 = g;
  var G__10874 = h;
  var G__10875 = i;
  var G__10876 = j;
  var G__10877 = k;
  return self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__10867, G__10868, G__10869, G__10870, G__10871, G__10872, G__10873, G__10874, G__10875, G__10876, G__10877) : self__.afn.call(null, G__10867, G__10868, G__10869, G__10870, G__10871, G__10872, G__10873, G__10874, G__10875, G__10876, G__10877);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  var G__10878 = a;
  var G__10879 = b;
  var G__10880 = c;
  var G__10881 = d;
  var G__10882 = e;
  var G__10883 = f;
  var G__10884 = g;
  var G__10885 = h;
  var G__10886 = i;
  var G__10887 = j;
  var G__10888 = k;
  var G__10889 = l;
  return self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__10878, G__10879, G__10880, G__10881, G__10882, G__10883, G__10884, G__10885, G__10886, G__10887, G__10888, G__10889) : self__.afn.call(null, G__10878, G__10879, G__10880, G__10881, G__10882, G__10883, G__10884, G__10885, G__10886, G__10887, G__10888, G__10889);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  var G__10890 = a;
  var G__10891 = b;
  var G__10892 = c;
  var G__10893 = d;
  var G__10894 = e;
  var G__10895 = f;
  var G__10896 = g;
  var G__10897 = h;
  var G__10898 = i;
  var G__10899 = j;
  var G__10900 = k;
  var G__10901 = l;
  var G__10902 = m;
  return self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__10890, G__10891, G__10892, G__10893, G__10894, G__10895, G__10896, G__10897, G__10898, G__10899, G__10900, G__10901, G__10902) : self__.afn.call(null, G__10890, G__10891, G__10892, G__10893, G__10894, G__10895, G__10896, G__10897, G__10898, G__10899, G__10900, G__10901, G__10902);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  var G__10903 = a;
  var G__10904 = b;
  var G__10905 = c;
  var G__10906 = d;
  var G__10907 = e;
  var G__10908 = f;
  var G__10909 = g;
  var G__10910 = h;
  var G__10911 = i;
  var G__10912 = j;
  var G__10913 = k;
  var G__10914 = l;
  var G__10915 = m;
  var G__10916 = n;
  return self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__10903, G__10904, G__10905, G__10906, G__10907, G__10908, G__10909, G__10910, G__10911, G__10912, G__10913, G__10914, G__10915, G__10916) : self__.afn.call(null, G__10903, G__10904, G__10905, G__10906, G__10907, G__10908, G__10909, G__10910, G__10911, G__10912, G__10913, G__10914, G__10915, G__10916);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  var G__10917 = a;
  var G__10918 = b;
  var G__10919 = c;
  var G__10920 = d;
  var G__10921 = e;
  var G__10922 = f;
  var G__10923 = g;
  var G__10924 = h;
  var G__10925 = i;
  var G__10926 = j;
  var G__10927 = k;
  var G__10928 = l;
  var G__10929 = m;
  var G__10930 = n;
  var G__10931 = o;
  return self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__10917, G__10918, G__10919, G__10920, G__10921, G__10922, G__10923, G__10924, G__10925, G__10926, G__10927, G__10928, G__10929, G__10930, G__10931) : self__.afn.call(null, G__10917, G__10918, G__10919, G__10920, G__10921, G__10922, G__10923, G__10924, G__10925, G__10926, G__10927, G__10928, G__10929, G__10930, G__10931);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  var G__10932 = a;
  var G__10933 = b;
  var G__10934 = c;
  var G__10935 = d;
  var G__10936 = e;
  var G__10937 = f;
  var G__10938 = g;
  var G__10939 = h;
  var G__10940 = i;
  var G__10941 = j;
  var G__10942 = k;
  var G__10943 = l;
  var G__10944 = m;
  var G__10945 = n;
  var G__10946 = o;
  var G__10947 = p;
  return self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__10932, G__10933, G__10934, G__10935, G__10936, G__10937, G__10938, G__10939, G__10940, G__10941, G__10942, G__10943, G__10944, G__10945, G__10946, G__10947) : self__.afn.call(null, G__10932, G__10933, G__10934, G__10935, G__10936, G__10937, G__10938, G__10939, G__10940, G__10941, G__10942, G__10943, G__10944, G__10945, G__10946, G__10947);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  var G__10948 = a;
  var G__10949 = b;
  var G__10950 = c;
  var G__10951 = d;
  var G__10952 = e;
  var G__10953 = f;
  var G__10954 = g;
  var G__10955 = h;
  var G__10956 = i;
  var G__10957 = j;
  var G__10958 = k;
  var G__10959 = l;
  var G__10960 = m;
  var G__10961 = n;
  var G__10962 = o;
  var G__10963 = p;
  var G__10964 = q;
  return self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__10948, G__10949, G__10950, G__10951, G__10952, G__10953, G__10954, G__10955, G__10956, G__10957, G__10958, G__10959, G__10960, G__10961, G__10962, G__10963, G__10964) : self__.afn.call(null, G__10948, G__10949, G__10950, G__10951, G__10952, G__10953, G__10954, G__10955, G__10956, G__10957, G__10958, G__10959, G__10960, G__10961, G__10962, G__10963, G__10964);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  var G__10965 = a;
  var G__10966 = b;
  var G__10967 = c;
  var G__10968 = d;
  var G__10969 = e;
  var G__10970 = f;
  var G__10971 = g;
  var G__10972 = h;
  var G__10973 = i;
  var G__10974 = j;
  var G__10975 = k;
  var G__10976 = l;
  var G__10977 = m;
  var G__10978 = n;
  var G__10979 = o;
  var G__10980 = p;
  var G__10981 = q;
  var G__10982 = r;
  return self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__10965, G__10966, G__10967, G__10968, G__10969, G__10970, G__10971, G__10972, G__10973, G__10974, G__10975, G__10976, G__10977, G__10978, G__10979, G__10980, G__10981, G__10982) : self__.afn.call(null, G__10965, G__10966, G__10967, G__10968, G__10969, G__10970, G__10971, G__10972, G__10973, G__10974, G__10975, G__10976, G__10977, G__10978, G__10979, G__10980, G__10981, G__10982);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  var G__10983 = a;
  var G__10984 = b;
  var G__10985 = c;
  var G__10986 = d;
  var G__10987 = e;
  var G__10988 = f;
  var G__10989 = g;
  var G__10990 = h;
  var G__10991 = i;
  var G__10992 = j;
  var G__10993 = k;
  var G__10994 = l;
  var G__10995 = m;
  var G__10996 = n;
  var G__10997 = o;
  var G__10998 = p;
  var G__10999 = q;
  var G__11000 = r;
  var G__11001 = s;
  return self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__10983, G__10984, G__10985, G__10986, G__10987, G__10988, G__10989, G__10990, G__10991, G__10992, G__10993, G__10994, G__10995, G__10996, G__10997, G__10998, G__10999, G__11000, G__11001) : self__.afn.call(null, G__10983, G__10984, G__10985, G__10986, G__10987, G__10988, G__10989, G__10990, G__10991, G__10992, G__10993, G__10994, G__10995, G__10996, G__10997, G__10998, G__10999, G__11000, G__11001);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  var G__11002 = a;
  var G__11003 = b;
  var G__11004 = c;
  var G__11005 = d;
  var G__11006 = e;
  var G__11007 = f;
  var G__11008 = g;
  var G__11009 = h;
  var G__11010 = i;
  var G__11011 = j;
  var G__11012 = k;
  var G__11013 = l;
  var G__11014 = m;
  var G__11015 = n;
  var G__11016 = o;
  var G__11017 = p;
  var G__11018 = q;
  var G__11019 = r;
  var G__11020 = s;
  var G__11021 = t;
  return self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__11002, G__11003, G__11004, G__11005, G__11006, G__11007, G__11008, G__11009, G__11010, G__11011, G__11012, G__11013, G__11014, G__11015, G__11016, G__11017, G__11018, G__11019, G__11020, G__11021) : self__.afn.call(null, G__11002, G__11003, G__11004, G__11005, G__11006, G__11007, G__11008, G__11009, G__11010, G__11011, G__11012, G__11013, G__11014, G__11015, G__11016, G__11017, G__11018, G__11019, G__11020, 
  G__11021);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  var G__11022 = self__.afn;
  var G__11023 = a;
  var G__11024 = b;
  var G__11025 = c;
  var G__11026 = d;
  var G__11027 = e;
  var G__11028 = f;
  var G__11029 = g;
  var G__11030 = h;
  var G__11031 = i;
  var G__11032 = j;
  var G__11033 = k;
  var G__11034 = l;
  var G__11035 = m;
  var G__11036 = n;
  var G__11037 = o;
  var G__11038 = p;
  var G__11039 = q;
  var G__11040 = r;
  var G__11041 = s;
  var G__11042 = t;
  var G__11043 = rest;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__11022, G__11023, G__11024, G__11025, G__11026, G__11027, G__11028, G__11029, G__11030, G__11031, G__11032, G__11033, G__11034, G__11035, G__11036, G__11037, G__11038, G__11039, G__11040, G__11041, G__11042, G__11043) : cljs.core.apply.call(null, G__11022, G__11023, G__11024, G__11025, G__11026, G__11027, G__11028, G__11029, G__11030, G__11031, G__11032, G__11033, G__11034, G__11035, G__11036, 
  G__11037, G__11038, G__11039, G__11040, G__11041, G__11042, G__11043);
};
cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;
cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.MetaFn(self__.afn, new_meta);
};
cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.MetaFn.cljs$lang$type = true;
cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";
cljs.core.MetaFn.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/MetaFn");
};
cljs.core.__GT_MetaFn = function __GT_MetaFn(afn, meta) {
  return new cljs.core.MetaFn(afn, meta);
};
cljs.core.with_meta = function with_meta(o, meta) {
  if (cljs.core.fn_QMARK_(o) && !function() {
    var G__11048 = o;
    if (G__11048) {
      var bit__4606__auto__ = G__11048.cljs$lang$protocol_mask$partition0$ & 262144;
      if (bit__4606__auto__ || G__11048.cljs$core$IWithMeta$) {
        return true;
      } else {
        if (!G__11048.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta, G__11048);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta, G__11048);
    }
  }()) {
    return new cljs.core.MetaFn(o, meta);
  } else {
    if (o == null) {
      return null;
    } else {
      return cljs.core._with_meta(o, meta);
    }
  }
};
cljs.core.meta = function meta(o) {
  if (function() {
    var and__3913__auto__ = !(o == null);
    if (and__3913__auto__) {
      var G__11052 = o;
      if (G__11052) {
        var bit__4606__auto__ = G__11052.cljs$lang$protocol_mask$partition0$ & 131072;
        if (bit__4606__auto__ || G__11052.cljs$core$IMeta$) {
          return true;
        } else {
          if (!G__11052.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, G__11052);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, G__11052);
      }
    } else {
      return and__3913__auto__;
    }
  }()) {
    return cljs.core._meta(o);
  } else {
    return null;
  }
};
cljs.core.peek = function peek(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._peek(coll);
  }
};
cljs.core.pop = function pop(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._pop(coll);
  }
};
cljs.core.disj = function() {
  var disj = null;
  var disj__1 = function(coll) {
    return coll;
  };
  var disj__2 = function(coll, k) {
    if (coll == null) {
      return null;
    } else {
      return cljs.core._disjoin(coll, k);
    }
  };
  var disj__3 = function() {
    var G__11055__delegate = function(coll, k, ks) {
      while (true) {
        if (coll == null) {
          return null;
        } else {
          var ret = disj.cljs$core$IFn$_invoke$arity$2(coll, k);
          if (cljs.core.truth_(ks)) {
            var G__11056 = ret;
            var G__11057 = cljs.core.first(ks);
            var G__11058 = cljs.core.next(ks);
            coll = G__11056;
            k = G__11057;
            ks = G__11058;
            continue;
          } else {
            return ret;
          }
        }
        break;
      }
    };
    var G__11055 = function(coll, k, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        var G__11059__i = 0, G__11059__a = new Array(arguments.length - 2);
        while (G__11059__i < G__11059__a.length) {
          G__11059__a[G__11059__i] = arguments[G__11059__i + 2];
          ++G__11059__i;
        }
        ks = new cljs.core.IndexedSeq(G__11059__a, 0);
      }
      return G__11055__delegate.call(this, coll, k, ks);
    };
    G__11055.cljs$lang$maxFixedArity = 2;
    G__11055.cljs$lang$applyTo = function(arglist__11060) {
      var coll = cljs.core.first(arglist__11060);
      arglist__11060 = cljs.core.next(arglist__11060);
      var k = cljs.core.first(arglist__11060);
      var ks = cljs.core.rest(arglist__11060);
      return G__11055__delegate(coll, k, ks);
    };
    G__11055.cljs$core$IFn$_invoke$arity$variadic = G__11055__delegate;
    return G__11055;
  }();
  disj = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return disj__1.call(this, coll);
      case 2:
        return disj__2.call(this, coll, k);
      default:
        var G__11061 = null;
        if (arguments.length > 2) {
          var G__11062__i = 0, G__11062__a = new Array(arguments.length - 2);
          while (G__11062__i < G__11062__a.length) {
            G__11062__a[G__11062__i] = arguments[G__11062__i + 2];
            ++G__11062__i;
          }
          G__11061 = new cljs.core.IndexedSeq(G__11062__a, 0);
        }
        return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, G__11061);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  disj.cljs$lang$maxFixedArity = 2;
  disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
  disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
  disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
  disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
  return disj;
}();
cljs.core.empty_QMARK_ = function empty_QMARK_(coll) {
  return coll == null || cljs.core.not(cljs.core.seq(coll));
};
cljs.core.coll_QMARK_ = function coll_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__11064 = x;
    if (G__11064) {
      var bit__4606__auto__ = G__11064.cljs$lang$protocol_mask$partition0$ & 8;
      if (bit__4606__auto__ || G__11064.cljs$core$ICollection$) {
        return true;
      } else {
        if (!G__11064.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection, G__11064);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection, G__11064);
    }
  }
};
cljs.core.set_QMARK_ = function set_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__11066 = x;
    if (G__11066) {
      var bit__4606__auto__ = G__11066.cljs$lang$protocol_mask$partition0$ & 4096;
      if (bit__4606__auto__ || G__11066.cljs$core$ISet$) {
        return true;
      } else {
        if (!G__11066.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ISet, G__11066);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ISet, G__11066);
    }
  }
};
cljs.core.associative_QMARK_ = function associative_QMARK_(x) {
  var G__11068 = x;
  if (G__11068) {
    var bit__4606__auto__ = G__11068.cljs$lang$protocol_mask$partition0$ & 512;
    if (bit__4606__auto__ || G__11068.cljs$core$IAssociative$) {
      return true;
    } else {
      if (!G__11068.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, G__11068);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, G__11068);
  }
};
cljs.core.sequential_QMARK_ = function sequential_QMARK_(x) {
  var G__11070 = x;
  if (G__11070) {
    var bit__4606__auto__ = G__11070.cljs$lang$protocol_mask$partition0$ & 16777216;
    if (bit__4606__auto__ || G__11070.cljs$core$ISequential$) {
      return true;
    } else {
      if (!G__11070.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential, G__11070);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential, G__11070);
  }
};
cljs.core.sorted_QMARK_ = function sorted_QMARK_(x) {
  var G__11072 = x;
  if (G__11072) {
    var bit__4606__auto__ = G__11072.cljs$lang$protocol_mask$partition0$ & 268435456;
    if (bit__4606__auto__ || G__11072.cljs$core$ISorted$) {
      return true;
    } else {
      if (!G__11072.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted, G__11072);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted, G__11072);
  }
};
cljs.core.reduceable_QMARK_ = function reduceable_QMARK_(x) {
  var G__11074 = x;
  if (G__11074) {
    var bit__4606__auto__ = G__11074.cljs$lang$protocol_mask$partition0$ & 524288;
    if (bit__4606__auto__ || G__11074.cljs$core$IReduce$) {
      return true;
    } else {
      if (!G__11074.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, G__11074);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, G__11074);
  }
};
cljs.core.map_QMARK_ = function map_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__11076 = x;
    if (G__11076) {
      var bit__4606__auto__ = G__11076.cljs$lang$protocol_mask$partition0$ & 1024;
      if (bit__4606__auto__ || G__11076.cljs$core$IMap$) {
        return true;
      } else {
        if (!G__11076.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IMap, G__11076);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IMap, G__11076);
    }
  }
};
cljs.core.vector_QMARK_ = function vector_QMARK_(x) {
  var G__11078 = x;
  if (G__11078) {
    var bit__4606__auto__ = G__11078.cljs$lang$protocol_mask$partition0$ & 16384;
    if (bit__4606__auto__ || G__11078.cljs$core$IVector$) {
      return true;
    } else {
      if (!G__11078.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IVector, G__11078);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IVector, G__11078);
  }
};
cljs.core.chunked_seq_QMARK_ = function chunked_seq_QMARK_(x) {
  var G__11080 = x;
  if (G__11080) {
    var bit__4599__auto__ = G__11080.cljs$lang$protocol_mask$partition1$ & 512;
    if (bit__4599__auto__ || G__11080.cljs$core$IChunkedSeq$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.js_obj = function() {
  var js_obj = null;
  var js_obj__0 = function() {
    var obj11086 = {};
    return obj11086;
  };
  var js_obj__1 = function() {
    var G__11089__delegate = function(keyvals) {
      var G__11087 = goog.object.create;
      var G__11088 = keyvals;
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__11087, G__11088) : cljs.core.apply.call(null, G__11087, G__11088);
    };
    var G__11089 = function(var_args) {
      var keyvals = null;
      if (arguments.length > 0) {
        var G__11090__i = 0, G__11090__a = new Array(arguments.length - 0);
        while (G__11090__i < G__11090__a.length) {
          G__11090__a[G__11090__i] = arguments[G__11090__i + 0];
          ++G__11090__i;
        }
        keyvals = new cljs.core.IndexedSeq(G__11090__a, 0);
      }
      return G__11089__delegate.call(this, keyvals);
    };
    G__11089.cljs$lang$maxFixedArity = 0;
    G__11089.cljs$lang$applyTo = function(arglist__11091) {
      var keyvals = cljs.core.seq(arglist__11091);
      return G__11089__delegate(keyvals);
    };
    G__11089.cljs$core$IFn$_invoke$arity$variadic = G__11089__delegate;
    return G__11089;
  }();
  js_obj = function(var_args) {
    var keyvals = var_args;
    switch(arguments.length) {
      case 0:
        return js_obj__0.call(this);
      default:
        var G__11092 = null;
        if (arguments.length > 0) {
          var G__11093__i = 0, G__11093__a = new Array(arguments.length - 0);
          while (G__11093__i < G__11093__a.length) {
            G__11093__a[G__11093__i] = arguments[G__11093__i + 0];
            ++G__11093__i;
          }
          G__11092 = new cljs.core.IndexedSeq(G__11093__a, 0);
        }
        return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__11092);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js_obj.cljs$lang$maxFixedArity = 0;
  js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
  js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
  js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
  return js_obj;
}();
cljs.core.js_keys = function js_keys(obj) {
  var keys = [];
  var G__11096_11098 = obj;
  var G__11097_11099 = function(G__11096_11098, keys) {
    return function(val, key, obj__$1) {
      return keys.push(key);
    };
  }(G__11096_11098, keys);
  goog.object.forEach(G__11096_11098, G__11097_11099);
  return keys;
};
cljs.core.js_delete = function js_delete(obj, key) {
  return delete obj[key];
};
cljs.core.array_copy = function array_copy(from, i, to, j, len) {
  var i__$1 = i;
  var j__$1 = j;
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__11100 = i__$1 + 1;
      var G__11101 = j__$1 + 1;
      var G__11102 = len__$1 - 1;
      i__$1 = G__11100;
      j__$1 = G__11101;
      len__$1 = G__11102;
      continue;
    }
    break;
  }
};
cljs.core.array_copy_downward = function array_copy_downward(from, i, to, j, len) {
  var i__$1 = i + (len - 1);
  var j__$1 = j + (len - 1);
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__11103 = i__$1 - 1;
      var G__11104 = j__$1 - 1;
      var G__11105 = len__$1 - 1;
      i__$1 = G__11103;
      j__$1 = G__11104;
      len__$1 = G__11105;
      continue;
    }
    break;
  }
};
cljs.core.lookup_sentinel = function() {
  var obj11107 = {};
  return obj11107;
}();
cljs.core.false_QMARK_ = function false_QMARK_(x) {
  return x === false;
};
cljs.core.true_QMARK_ = function true_QMARK_(x) {
  return x === true;
};
cljs.core.undefined_QMARK_ = function undefined_QMARK_(x) {
  return void 0 === x;
};
cljs.core.seq_QMARK_ = function seq_QMARK_(s) {
  if (s == null) {
    return false;
  } else {
    var G__11109 = s;
    if (G__11109) {
      var bit__4606__auto__ = G__11109.cljs$lang$protocol_mask$partition0$ & 64;
      if (bit__4606__auto__ || G__11109.cljs$core$ISeq$) {
        return true;
      } else {
        if (!G__11109.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__11109);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__11109);
    }
  }
};
cljs.core.seqable_QMARK_ = function seqable_QMARK_(s) {
  var G__11111 = s;
  if (G__11111) {
    var bit__4606__auto__ = G__11111.cljs$lang$protocol_mask$partition0$ & 8388608;
    if (bit__4606__auto__ || G__11111.cljs$core$ISeqable$) {
      return true;
    } else {
      if (!G__11111.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, G__11111);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, G__11111);
  }
};
cljs.core.boolean$ = function boolean$(x) {
  if (cljs.core.truth_(x)) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ifn_QMARK_ = function ifn_QMARK_(f) {
  var or__3925__auto__ = cljs.core.fn_QMARK_(f);
  if (or__3925__auto__) {
    return or__3925__auto__;
  } else {
    var G__11115 = f;
    if (G__11115) {
      var bit__4606__auto__ = G__11115.cljs$lang$protocol_mask$partition0$ & 1;
      if (bit__4606__auto__ || G__11115.cljs$core$IFn$) {
        return true;
      } else {
        if (!G__11115.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IFn, G__11115);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IFn, G__11115);
    }
  }
};
cljs.core.integer_QMARK_ = function integer_QMARK_(n) {
  return typeof n === "number" && cljs.core.not(function() {
    var G__11128 = n;
    return isNaN(G__11128);
  }()) && !(n === Infinity) && function() {
    var G__11129 = n;
    return parseFloat(G__11129);
  }() === function() {
    var G__11130 = n;
    var G__11131 = 10;
    return parseInt(G__11130, G__11131);
  }();
};
cljs.core.contains_QMARK_ = function contains_QMARK_(coll, v) {
  if (cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false;
  } else {
    return true;
  }
};
cljs.core.find = function find(coll, k) {
  if (!(coll == null) && cljs.core.associative_QMARK_(coll) && cljs.core.contains_QMARK_(coll, k)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, k)], null);
  } else {
    return null;
  }
};
cljs.core.distinct_QMARK_ = function() {
  var distinct_QMARK_ = null;
  var distinct_QMARK___1 = function(x) {
    return true;
  };
  var distinct_QMARK___2 = function(x, y) {
    return!cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y);
  };
  var distinct_QMARK___3 = function() {
    var G__11132__delegate = function(x, y, more) {
      if (!cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
        var s = cljs.core.PersistentHashSet.fromArray([x, y], true);
        var xs = more;
        while (true) {
          var x__$1 = cljs.core.first(xs);
          var etc = cljs.core.next(xs);
          if (cljs.core.truth_(xs)) {
            if (cljs.core.contains_QMARK_(s, x__$1)) {
              return false;
            } else {
              var G__11133 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s, x__$1);
              var G__11134 = etc;
              s = G__11133;
              xs = G__11134;
              continue;
            }
          } else {
            return true;
          }
          break;
        }
      } else {
        return false;
      }
    };
    var G__11132 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__11135__i = 0, G__11135__a = new Array(arguments.length - 2);
        while (G__11135__i < G__11135__a.length) {
          G__11135__a[G__11135__i] = arguments[G__11135__i + 2];
          ++G__11135__i;
        }
        more = new cljs.core.IndexedSeq(G__11135__a, 0);
      }
      return G__11132__delegate.call(this, x, y, more);
    };
    G__11132.cljs$lang$maxFixedArity = 2;
    G__11132.cljs$lang$applyTo = function(arglist__11136) {
      var x = cljs.core.first(arglist__11136);
      arglist__11136 = cljs.core.next(arglist__11136);
      var y = cljs.core.first(arglist__11136);
      var more = cljs.core.rest(arglist__11136);
      return G__11132__delegate(x, y, more);
    };
    G__11132.cljs$core$IFn$_invoke$arity$variadic = G__11132__delegate;
    return G__11132;
  }();
  distinct_QMARK_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return distinct_QMARK___1.call(this, x);
      case 2:
        return distinct_QMARK___2.call(this, x, y);
      default:
        var G__11137 = null;
        if (arguments.length > 2) {
          var G__11138__i = 0, G__11138__a = new Array(arguments.length - 2);
          while (G__11138__i < G__11138__a.length) {
            G__11138__a[G__11138__i] = arguments[G__11138__i + 2];
            ++G__11138__i;
          }
          G__11137 = new cljs.core.IndexedSeq(G__11138__a, 0);
        }
        return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__11137);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  distinct_QMARK_.cljs$lang$maxFixedArity = 2;
  distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
  return distinct_QMARK_;
}();
cljs.core.compare = function compare(x, y) {
  if (x === y) {
    return 0;
  } else {
    if (x == null) {
      return-1;
    } else {
      if (y == null) {
        return 1;
      } else {
        if (cljs.core.type(x) === cljs.core.type(y)) {
          if (function() {
            var G__11142 = x;
            if (G__11142) {
              var bit__4599__auto__ = G__11142.cljs$lang$protocol_mask$partition1$ & 2048;
              if (bit__4599__auto__ || G__11142.cljs$core$IComparable$) {
                return true;
              } else {
                return false;
              }
            } else {
              return false;
            }
          }()) {
            return x.cljs$core$IComparable$_compare$arity$2(null, y);
          } else {
            var G__11143 = x;
            var G__11144 = y;
            return goog.array.defaultCompare(G__11143, G__11144);
          }
        } else {
          throw new Error("compare on non-nil objects of different types");
        }
      }
    }
  }
};
cljs.core.compare_indexed = function() {
  var compare_indexed = null;
  var compare_indexed__2 = function(xs, ys) {
    var xl = cljs.core.count(xs);
    var yl = cljs.core.count(ys);
    if (xl < yl) {
      return-1;
    } else {
      if (xl > yl) {
        return 1;
      } else {
        return compare_indexed.cljs$core$IFn$_invoke$arity$4(xs, ys, xl, 0);
      }
    }
  };
  var compare_indexed__4 = function(xs, ys, len, n) {
    while (true) {
      var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs, n), cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys, n));
      if (d === 0 && n + 1 < len) {
        var G__11149 = xs;
        var G__11150 = ys;
        var G__11151 = len;
        var G__11152 = n + 1;
        xs = G__11149;
        ys = G__11150;
        len = G__11151;
        n = G__11152;
        continue;
      } else {
        return d;
      }
      break;
    }
  };
  compare_indexed = function(xs, ys, len, n) {
    switch(arguments.length) {
      case 2:
        return compare_indexed__2.call(this, xs, ys);
      case 4:
        return compare_indexed__4.call(this, xs, ys, len, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
  compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
  return compare_indexed;
}();
cljs.core.fn__GT_comparator = function fn__GT_comparator(f) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f, cljs.core.compare)) {
    return cljs.core.compare;
  } else {
    return function(x, y) {
      var r = function() {
        var G__11157 = x;
        var G__11158 = y;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11157, G__11158) : f.call(null, G__11157, G__11158);
      }();
      if (typeof r === "number") {
        return r;
      } else {
        if (cljs.core.truth_(r)) {
          return-1;
        } else {
          if (cljs.core.truth_(function() {
            var G__11159 = y;
            var G__11160 = x;
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11159, G__11160) : f.call(null, G__11159, G__11160);
          }())) {
            return 1;
          } else {
            return 0;
          }
        }
      }
    };
  }
};
cljs.core.sort = function() {
  var sort = null;
  var sort__1 = function(coll) {
    return sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare, coll);
  };
  var sort__2 = function(comp, coll) {
    if (cljs.core.seq(coll)) {
      var a = function() {
        var G__11166 = coll;
        return cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__11166) : cljs.core.to_array.call(null, G__11166);
      }();
      var G__11167_11169 = a;
      var G__11168_11170 = cljs.core.fn__GT_comparator(comp);
      goog.array.stableSort(G__11167_11169, G__11168_11170);
      return cljs.core.seq(a);
    } else {
      return cljs.core.List.EMPTY;
    }
  };
  sort = function(comp, coll) {
    switch(arguments.length) {
      case 1:
        return sort__1.call(this, comp);
      case 2:
        return sort__2.call(this, comp, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
  sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
  return sort;
}();
cljs.core.sort_by = function() {
  var sort_by = null;
  var sort_by__2 = function(keyfn, coll) {
    return sort_by.cljs$core$IFn$_invoke$arity$3(keyfn, cljs.core.compare, coll);
  };
  var sort_by__3 = function(keyfn, comp, coll) {
    return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(function(x, y) {
      return cljs.core.fn__GT_comparator(comp).call(null, function() {
        var G__11176 = x;
        return keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__11176) : keyfn.call(null, G__11176);
      }(), function() {
        var G__11177 = y;
        return keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__11177) : keyfn.call(null, G__11177);
      }());
    }, coll);
  };
  sort_by = function(keyfn, comp, coll) {
    switch(arguments.length) {
      case 2:
        return sort_by__2.call(this, keyfn, comp);
      case 3:
        return sort_by__3.call(this, keyfn, comp, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
  sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
  return sort_by;
}();
cljs.core.seq_reduce = function() {
  var seq_reduce = null;
  var seq_reduce__2 = function(f, coll) {
    var temp__4124__auto__ = cljs.core.seq(coll);
    if (temp__4124__auto__) {
      var s = temp__4124__auto__;
      var G__11183 = f;
      var G__11184 = cljs.core.first(s);
      var G__11185 = cljs.core.next(s);
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__11183, G__11184, G__11185) : cljs.core.reduce.call(null, G__11183, G__11184, G__11185);
    } else {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    }
  };
  var seq_reduce__3 = function(f, val, coll) {
    var val__$1 = val;
    var coll__$1 = cljs.core.seq(coll);
    while (true) {
      if (coll__$1) {
        var nval = function() {
          var G__11186 = val__$1;
          var G__11187 = cljs.core.first(coll__$1);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11186, G__11187) : f.call(null, G__11186, G__11187);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__11188 = nval;
          var G__11189 = cljs.core.next(coll__$1);
          val__$1 = G__11188;
          coll__$1 = G__11189;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  seq_reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return seq_reduce__2.call(this, f, val);
      case 3:
        return seq_reduce__3.call(this, f, val, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
  seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
  return seq_reduce;
}();
cljs.core.shuffle = function shuffle(coll) {
  var a = function() {
    var G__11193 = coll;
    return cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__11193) : cljs.core.to_array.call(null, G__11193);
  }();
  var G__11194_11196 = a;
  goog.array.shuffle(G__11194_11196);
  var G__11195 = a;
  return cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__11195) : cljs.core.vec.call(null, G__11195);
};
cljs.core.reduce = function() {
  var reduce = null;
  var reduce__2 = function(f, coll) {
    if (function() {
      var G__11199 = coll;
      if (G__11199) {
        var bit__4599__auto__ = G__11199.cljs$lang$protocol_mask$partition0$ & 524288;
        if (bit__4599__auto__ || G__11199.cljs$core$IReduce$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$2(null, f);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
      } else {
        if (typeof coll === "string") {
          return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, coll)) {
            return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
          } else {
            return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll);
          }
        }
      }
    }
  };
  var reduce__3 = function(f, val, coll) {
    if (function() {
      var G__11200 = coll;
      if (G__11200) {
        var bit__4599__auto__ = G__11200.cljs$lang$protocol_mask$partition0$ & 524288;
        if (bit__4599__auto__ || G__11200.cljs$core$IReduce$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$3(null, f, val);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
      } else {
        if (typeof coll === "string") {
          return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, coll)) {
            return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
          } else {
            return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, val, coll);
          }
        }
      }
    }
  };
  reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return reduce__2.call(this, f, val);
      case 3:
        return reduce__3.call(this, f, val, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
  reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
  return reduce;
}();
cljs.core.reduce_kv = function reduce_kv(f, init, coll) {
  if (!(coll == null)) {
    return cljs.core._kv_reduce(coll, f, init);
  } else {
    return init;
  }
};
cljs.core.identity = function identity(x) {
  return x;
};
cljs.core.completing = function() {
  var completing = null;
  var completing__1 = function(f) {
    return completing.cljs$core$IFn$_invoke$arity$2(f, cljs.core.identity);
  };
  var completing__2 = function(f, cf) {
    return function() {
      var G__11209 = null;
      var G__11209__0 = function() {
        return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
      };
      var G__11209__1 = function(x) {
        var G__11206 = x;
        return cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__11206) : cf.call(null, G__11206);
      };
      var G__11209__2 = function(x, y) {
        var G__11207 = x;
        var G__11208 = y;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11207, G__11208) : f.call(null, G__11207, G__11208);
      };
      G__11209 = function(x, y) {
        switch(arguments.length) {
          case 0:
            return G__11209__0.call(this);
          case 1:
            return G__11209__1.call(this, x);
          case 2:
            return G__11209__2.call(this, x, y);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__11209.cljs$core$IFn$_invoke$arity$0 = G__11209__0;
      G__11209.cljs$core$IFn$_invoke$arity$1 = G__11209__1;
      G__11209.cljs$core$IFn$_invoke$arity$2 = G__11209__2;
      return G__11209;
    }();
  };
  completing = function(f, cf) {
    switch(arguments.length) {
      case 1:
        return completing__1.call(this, f);
      case 2:
        return completing__2.call(this, f, cf);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
  completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
  return completing;
}();
cljs.core.transduce = function() {
  var transduce = null;
  var transduce__3 = function(xform, f, coll) {
    return transduce.cljs$core$IFn$_invoke$arity$4(xform, f, function() {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    }(), coll);
  };
  var transduce__4 = function(xform, f, init, coll) {
    var f__$1 = function() {
      var G__11216 = f;
      return xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__11216) : xform.call(null, G__11216);
    }();
    var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1, init, coll);
    var G__11217 = ret;
    return f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__11217) : f__$1.call(null, G__11217);
  };
  transduce = function(xform, f, init, coll) {
    switch(arguments.length) {
      case 3:
        return transduce__3.call(this, xform, f, init);
      case 4:
        return transduce__4.call(this, xform, f, init, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
  transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
  return transduce;
}();
cljs.core._PLUS_ = function() {
  var _PLUS_ = null;
  var _PLUS___0 = function() {
    return 0;
  };
  var _PLUS___1 = function(x) {
    return x;
  };
  var _PLUS___2 = function(x, y) {
    return x + y;
  };
  var _PLUS___3 = function() {
    var G__11218__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_PLUS_, x + y, more);
    };
    var G__11218 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__11219__i = 0, G__11219__a = new Array(arguments.length - 2);
        while (G__11219__i < G__11219__a.length) {
          G__11219__a[G__11219__i] = arguments[G__11219__i + 2];
          ++G__11219__i;
        }
        more = new cljs.core.IndexedSeq(G__11219__a, 0);
      }
      return G__11218__delegate.call(this, x, y, more);
    };
    G__11218.cljs$lang$maxFixedArity = 2;
    G__11218.cljs$lang$applyTo = function(arglist__11220) {
      var x = cljs.core.first(arglist__11220);
      arglist__11220 = cljs.core.next(arglist__11220);
      var y = cljs.core.first(arglist__11220);
      var more = cljs.core.rest(arglist__11220);
      return G__11218__delegate(x, y, more);
    };
    G__11218.cljs$core$IFn$_invoke$arity$variadic = G__11218__delegate;
    return G__11218;
  }();
  _PLUS_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _PLUS___0.call(this);
      case 1:
        return _PLUS___1.call(this, x);
      case 2:
        return _PLUS___2.call(this, x, y);
      default:
        var G__11221 = null;
        if (arguments.length > 2) {
          var G__11222__i = 0, G__11222__a = new Array(arguments.length - 2);
          while (G__11222__i < G__11222__a.length) {
            G__11222__a[G__11222__i] = arguments[G__11222__i + 2];
            ++G__11222__i;
          }
          G__11221 = new cljs.core.IndexedSeq(G__11222__a, 0);
        }
        return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__11221);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _PLUS_.cljs$lang$maxFixedArity = 2;
  _PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
  _PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
  _PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
  _PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
  _PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
  return _PLUS_;
}();
cljs.core._ = function() {
  var _ = null;
  var ___1 = function(x) {
    return-x;
  };
  var ___2 = function(x, y) {
    return x - y;
  };
  var ___3 = function() {
    var G__11223__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_, x - y, more);
    };
    var G__11223 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__11224__i = 0, G__11224__a = new Array(arguments.length - 2);
        while (G__11224__i < G__11224__a.length) {
          G__11224__a[G__11224__i] = arguments[G__11224__i + 2];
          ++G__11224__i;
        }
        more = new cljs.core.IndexedSeq(G__11224__a, 0);
      }
      return G__11223__delegate.call(this, x, y, more);
    };
    G__11223.cljs$lang$maxFixedArity = 2;
    G__11223.cljs$lang$applyTo = function(arglist__11225) {
      var x = cljs.core.first(arglist__11225);
      arglist__11225 = cljs.core.next(arglist__11225);
      var y = cljs.core.first(arglist__11225);
      var more = cljs.core.rest(arglist__11225);
      return G__11223__delegate(x, y, more);
    };
    G__11223.cljs$core$IFn$_invoke$arity$variadic = G__11223__delegate;
    return G__11223;
  }();
  _ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return ___1.call(this, x);
      case 2:
        return ___2.call(this, x, y);
      default:
        var G__11226 = null;
        if (arguments.length > 2) {
          var G__11227__i = 0, G__11227__a = new Array(arguments.length - 2);
          while (G__11227__i < G__11227__a.length) {
            G__11227__a[G__11227__i] = arguments[G__11227__i + 2];
            ++G__11227__i;
          }
          G__11226 = new cljs.core.IndexedSeq(G__11227__a, 0);
        }
        return ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__11226);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _.cljs$lang$maxFixedArity = 2;
  _.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
  _.cljs$core$IFn$_invoke$arity$1 = ___1;
  _.cljs$core$IFn$_invoke$arity$2 = ___2;
  _.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _;
}();
cljs.core._STAR_ = function() {
  var _STAR_ = null;
  var _STAR___0 = function() {
    return 1;
  };
  var _STAR___1 = function(x) {
    return x;
  };
  var _STAR___2 = function(x, y) {
    return x * y;
  };
  var _STAR___3 = function() {
    var G__11228__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_STAR_, x * y, more);
    };
    var G__11228 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__11229__i = 0, G__11229__a = new Array(arguments.length - 2);
        while (G__11229__i < G__11229__a.length) {
          G__11229__a[G__11229__i] = arguments[G__11229__i + 2];
          ++G__11229__i;
        }
        more = new cljs.core.IndexedSeq(G__11229__a, 0);
      }
      return G__11228__delegate.call(this, x, y, more);
    };
    G__11228.cljs$lang$maxFixedArity = 2;
    G__11228.cljs$lang$applyTo = function(arglist__11230) {
      var x = cljs.core.first(arglist__11230);
      arglist__11230 = cljs.core.next(arglist__11230);
      var y = cljs.core.first(arglist__11230);
      var more = cljs.core.rest(arglist__11230);
      return G__11228__delegate(x, y, more);
    };
    G__11228.cljs$core$IFn$_invoke$arity$variadic = G__11228__delegate;
    return G__11228;
  }();
  _STAR_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _STAR___0.call(this);
      case 1:
        return _STAR___1.call(this, x);
      case 2:
        return _STAR___2.call(this, x, y);
      default:
        var G__11231 = null;
        if (arguments.length > 2) {
          var G__11232__i = 0, G__11232__a = new Array(arguments.length - 2);
          while (G__11232__i < G__11232__a.length) {
            G__11232__a[G__11232__i] = arguments[G__11232__i + 2];
            ++G__11232__i;
          }
          G__11231 = new cljs.core.IndexedSeq(G__11232__a, 0);
        }
        return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__11231);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _STAR_.cljs$lang$maxFixedArity = 2;
  _STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
  _STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
  _STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
  _STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
  _STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
  return _STAR_;
}();
cljs.core._SLASH_ = function() {
  var _SLASH_ = null;
  var _SLASH___1 = function(x) {
    return _SLASH_.cljs$core$IFn$_invoke$arity$2(1, x);
  };
  var _SLASH___2 = function(x, y) {
    return x / y;
  };
  var _SLASH___3 = function() {
    var G__11237__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_SLASH_, _SLASH_.cljs$core$IFn$_invoke$arity$2(x, y), more);
    };
    var G__11237 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__11238__i = 0, G__11238__a = new Array(arguments.length - 2);
        while (G__11238__i < G__11238__a.length) {
          G__11238__a[G__11238__i] = arguments[G__11238__i + 2];
          ++G__11238__i;
        }
        more = new cljs.core.IndexedSeq(G__11238__a, 0);
      }
      return G__11237__delegate.call(this, x, y, more);
    };
    G__11237.cljs$lang$maxFixedArity = 2;
    G__11237.cljs$lang$applyTo = function(arglist__11239) {
      var x = cljs.core.first(arglist__11239);
      arglist__11239 = cljs.core.next(arglist__11239);
      var y = cljs.core.first(arglist__11239);
      var more = cljs.core.rest(arglist__11239);
      return G__11237__delegate(x, y, more);
    };
    G__11237.cljs$core$IFn$_invoke$arity$variadic = G__11237__delegate;
    return G__11237;
  }();
  _SLASH_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _SLASH___1.call(this, x);
      case 2:
        return _SLASH___2.call(this, x, y);
      default:
        var G__11240 = null;
        if (arguments.length > 2) {
          var G__11241__i = 0, G__11241__a = new Array(arguments.length - 2);
          while (G__11241__i < G__11241__a.length) {
            G__11241__a[G__11241__i] = arguments[G__11241__i + 2];
            ++G__11241__i;
          }
          G__11240 = new cljs.core.IndexedSeq(G__11241__a, 0);
        }
        return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__11240);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _SLASH_.cljs$lang$maxFixedArity = 2;
  _SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
  _SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
  _SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
  _SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
  return _SLASH_;
}();
cljs.core._LT_ = function() {
  var _LT_ = null;
  var _LT___1 = function(x) {
    return true;
  };
  var _LT___2 = function(x, y) {
    return x < y;
  };
  var _LT___3 = function() {
    var G__11242__delegate = function(x, y, more) {
      while (true) {
        if (x < y) {
          if (cljs.core.next(more)) {
            var G__11243 = y;
            var G__11244 = cljs.core.first(more);
            var G__11245 = cljs.core.next(more);
            x = G__11243;
            y = G__11244;
            more = G__11245;
            continue;
          } else {
            return y < cljs.core.first(more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__11242 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__11246__i = 0, G__11246__a = new Array(arguments.length - 2);
        while (G__11246__i < G__11246__a.length) {
          G__11246__a[G__11246__i] = arguments[G__11246__i + 2];
          ++G__11246__i;
        }
        more = new cljs.core.IndexedSeq(G__11246__a, 0);
      }
      return G__11242__delegate.call(this, x, y, more);
    };
    G__11242.cljs$lang$maxFixedArity = 2;
    G__11242.cljs$lang$applyTo = function(arglist__11247) {
      var x = cljs.core.first(arglist__11247);
      arglist__11247 = cljs.core.next(arglist__11247);
      var y = cljs.core.first(arglist__11247);
      var more = cljs.core.rest(arglist__11247);
      return G__11242__delegate(x, y, more);
    };
    G__11242.cljs$core$IFn$_invoke$arity$variadic = G__11242__delegate;
    return G__11242;
  }();
  _LT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT___1.call(this, x);
      case 2:
        return _LT___2.call(this, x, y);
      default:
        var G__11248 = null;
        if (arguments.length > 2) {
          var G__11249__i = 0, G__11249__a = new Array(arguments.length - 2);
          while (G__11249__i < G__11249__a.length) {
            G__11249__a[G__11249__i] = arguments[G__11249__i + 2];
            ++G__11249__i;
          }
          G__11248 = new cljs.core.IndexedSeq(G__11249__a, 0);
        }
        return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__11248);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT_.cljs$lang$maxFixedArity = 2;
  _LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
  _LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
  _LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
  _LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT_;
}();
cljs.core._LT__EQ_ = function() {
  var _LT__EQ_ = null;
  var _LT__EQ___1 = function(x) {
    return true;
  };
  var _LT__EQ___2 = function(x, y) {
    return x <= y;
  };
  var _LT__EQ___3 = function() {
    var G__11250__delegate = function(x, y, more) {
      while (true) {
        if (x <= y) {
          if (cljs.core.next(more)) {
            var G__11251 = y;
            var G__11252 = cljs.core.first(more);
            var G__11253 = cljs.core.next(more);
            x = G__11251;
            y = G__11252;
            more = G__11253;
            continue;
          } else {
            return y <= cljs.core.first(more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__11250 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__11254__i = 0, G__11254__a = new Array(arguments.length - 2);
        while (G__11254__i < G__11254__a.length) {
          G__11254__a[G__11254__i] = arguments[G__11254__i + 2];
          ++G__11254__i;
        }
        more = new cljs.core.IndexedSeq(G__11254__a, 0);
      }
      return G__11250__delegate.call(this, x, y, more);
    };
    G__11250.cljs$lang$maxFixedArity = 2;
    G__11250.cljs$lang$applyTo = function(arglist__11255) {
      var x = cljs.core.first(arglist__11255);
      arglist__11255 = cljs.core.next(arglist__11255);
      var y = cljs.core.first(arglist__11255);
      var more = cljs.core.rest(arglist__11255);
      return G__11250__delegate(x, y, more);
    };
    G__11250.cljs$core$IFn$_invoke$arity$variadic = G__11250__delegate;
    return G__11250;
  }();
  _LT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT__EQ___1.call(this, x);
      case 2:
        return _LT__EQ___2.call(this, x, y);
      default:
        var G__11256 = null;
        if (arguments.length > 2) {
          var G__11257__i = 0, G__11257__a = new Array(arguments.length - 2);
          while (G__11257__i < G__11257__a.length) {
            G__11257__a[G__11257__i] = arguments[G__11257__i + 2];
            ++G__11257__i;
          }
          G__11256 = new cljs.core.IndexedSeq(G__11257__a, 0);
        }
        return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__11256);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT__EQ_.cljs$lang$maxFixedArity = 2;
  _LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT__EQ_;
}();
cljs.core._GT_ = function() {
  var _GT_ = null;
  var _GT___1 = function(x) {
    return true;
  };
  var _GT___2 = function(x, y) {
    return x > y;
  };
  var _GT___3 = function() {
    var G__11258__delegate = function(x, y, more) {
      while (true) {
        if (x > y) {
          if (cljs.core.next(more)) {
            var G__11259 = y;
            var G__11260 = cljs.core.first(more);
            var G__11261 = cljs.core.next(more);
            x = G__11259;
            y = G__11260;
            more = G__11261;
            continue;
          } else {
            return y > cljs.core.first(more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__11258 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__11262__i = 0, G__11262__a = new Array(arguments.length - 2);
        while (G__11262__i < G__11262__a.length) {
          G__11262__a[G__11262__i] = arguments[G__11262__i + 2];
          ++G__11262__i;
        }
        more = new cljs.core.IndexedSeq(G__11262__a, 0);
      }
      return G__11258__delegate.call(this, x, y, more);
    };
    G__11258.cljs$lang$maxFixedArity = 2;
    G__11258.cljs$lang$applyTo = function(arglist__11263) {
      var x = cljs.core.first(arglist__11263);
      arglist__11263 = cljs.core.next(arglist__11263);
      var y = cljs.core.first(arglist__11263);
      var more = cljs.core.rest(arglist__11263);
      return G__11258__delegate(x, y, more);
    };
    G__11258.cljs$core$IFn$_invoke$arity$variadic = G__11258__delegate;
    return G__11258;
  }();
  _GT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT___1.call(this, x);
      case 2:
        return _GT___2.call(this, x, y);
      default:
        var G__11264 = null;
        if (arguments.length > 2) {
          var G__11265__i = 0, G__11265__a = new Array(arguments.length - 2);
          while (G__11265__i < G__11265__a.length) {
            G__11265__a[G__11265__i] = arguments[G__11265__i + 2];
            ++G__11265__i;
          }
          G__11264 = new cljs.core.IndexedSeq(G__11265__a, 0);
        }
        return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__11264);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT_.cljs$lang$maxFixedArity = 2;
  _GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
  _GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
  _GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
  _GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT_;
}();
cljs.core._GT__EQ_ = function() {
  var _GT__EQ_ = null;
  var _GT__EQ___1 = function(x) {
    return true;
  };
  var _GT__EQ___2 = function(x, y) {
    return x >= y;
  };
  var _GT__EQ___3 = function() {
    var G__11266__delegate = function(x, y, more) {
      while (true) {
        if (x >= y) {
          if (cljs.core.next(more)) {
            var G__11267 = y;
            var G__11268 = cljs.core.first(more);
            var G__11269 = cljs.core.next(more);
            x = G__11267;
            y = G__11268;
            more = G__11269;
            continue;
          } else {
            return y >= cljs.core.first(more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__11266 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__11270__i = 0, G__11270__a = new Array(arguments.length - 2);
        while (G__11270__i < G__11270__a.length) {
          G__11270__a[G__11270__i] = arguments[G__11270__i + 2];
          ++G__11270__i;
        }
        more = new cljs.core.IndexedSeq(G__11270__a, 0);
      }
      return G__11266__delegate.call(this, x, y, more);
    };
    G__11266.cljs$lang$maxFixedArity = 2;
    G__11266.cljs$lang$applyTo = function(arglist__11271) {
      var x = cljs.core.first(arglist__11271);
      arglist__11271 = cljs.core.next(arglist__11271);
      var y = cljs.core.first(arglist__11271);
      var more = cljs.core.rest(arglist__11271);
      return G__11266__delegate(x, y, more);
    };
    G__11266.cljs$core$IFn$_invoke$arity$variadic = G__11266__delegate;
    return G__11266;
  }();
  _GT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT__EQ___1.call(this, x);
      case 2:
        return _GT__EQ___2.call(this, x, y);
      default:
        var G__11272 = null;
        if (arguments.length > 2) {
          var G__11273__i = 0, G__11273__a = new Array(arguments.length - 2);
          while (G__11273__i < G__11273__a.length) {
            G__11273__a[G__11273__i] = arguments[G__11273__i + 2];
            ++G__11273__i;
          }
          G__11272 = new cljs.core.IndexedSeq(G__11273__a, 0);
        }
        return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__11272);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT__EQ_.cljs$lang$maxFixedArity = 2;
  _GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT__EQ_;
}();
cljs.core.dec = function dec(x) {
  return x - 1;
};
cljs.core.max = function() {
  var max = null;
  var max__1 = function(x) {
    return x;
  };
  var max__2 = function(x, y) {
    var x__4242__auto__ = x;
    var y__4243__auto__ = y;
    return x__4242__auto__ > y__4243__auto__ ? x__4242__auto__ : y__4243__auto__;
  };
  var max__3 = function() {
    var G__11274__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(max, function() {
        var x__4242__auto__ = x;
        var y__4243__auto__ = y;
        return x__4242__auto__ > y__4243__auto__ ? x__4242__auto__ : y__4243__auto__;
      }(), more);
    };
    var G__11274 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__11275__i = 0, G__11275__a = new Array(arguments.length - 2);
        while (G__11275__i < G__11275__a.length) {
          G__11275__a[G__11275__i] = arguments[G__11275__i + 2];
          ++G__11275__i;
        }
        more = new cljs.core.IndexedSeq(G__11275__a, 0);
      }
      return G__11274__delegate.call(this, x, y, more);
    };
    G__11274.cljs$lang$maxFixedArity = 2;
    G__11274.cljs$lang$applyTo = function(arglist__11276) {
      var x = cljs.core.first(arglist__11276);
      arglist__11276 = cljs.core.next(arglist__11276);
      var y = cljs.core.first(arglist__11276);
      var more = cljs.core.rest(arglist__11276);
      return G__11274__delegate(x, y, more);
    };
    G__11274.cljs$core$IFn$_invoke$arity$variadic = G__11274__delegate;
    return G__11274;
  }();
  max = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return max__1.call(this, x);
      case 2:
        return max__2.call(this, x, y);
      default:
        var G__11277 = null;
        if (arguments.length > 2) {
          var G__11278__i = 0, G__11278__a = new Array(arguments.length - 2);
          while (G__11278__i < G__11278__a.length) {
            G__11278__a[G__11278__i] = arguments[G__11278__i + 2];
            ++G__11278__i;
          }
          G__11277 = new cljs.core.IndexedSeq(G__11278__a, 0);
        }
        return max__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__11277);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max.cljs$lang$maxFixedArity = 2;
  max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
  max.cljs$core$IFn$_invoke$arity$1 = max__1;
  max.cljs$core$IFn$_invoke$arity$2 = max__2;
  max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
  return max;
}();
cljs.core.min = function() {
  var min = null;
  var min__1 = function(x) {
    return x;
  };
  var min__2 = function(x, y) {
    var x__4249__auto__ = x;
    var y__4250__auto__ = y;
    return x__4249__auto__ < y__4250__auto__ ? x__4249__auto__ : y__4250__auto__;
  };
  var min__3 = function() {
    var G__11279__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(min, function() {
        var x__4249__auto__ = x;
        var y__4250__auto__ = y;
        return x__4249__auto__ < y__4250__auto__ ? x__4249__auto__ : y__4250__auto__;
      }(), more);
    };
    var G__11279 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__11280__i = 0, G__11280__a = new Array(arguments.length - 2);
        while (G__11280__i < G__11280__a.length) {
          G__11280__a[G__11280__i] = arguments[G__11280__i + 2];
          ++G__11280__i;
        }
        more = new cljs.core.IndexedSeq(G__11280__a, 0);
      }
      return G__11279__delegate.call(this, x, y, more);
    };
    G__11279.cljs$lang$maxFixedArity = 2;
    G__11279.cljs$lang$applyTo = function(arglist__11281) {
      var x = cljs.core.first(arglist__11281);
      arglist__11281 = cljs.core.next(arglist__11281);
      var y = cljs.core.first(arglist__11281);
      var more = cljs.core.rest(arglist__11281);
      return G__11279__delegate(x, y, more);
    };
    G__11279.cljs$core$IFn$_invoke$arity$variadic = G__11279__delegate;
    return G__11279;
  }();
  min = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return min__1.call(this, x);
      case 2:
        return min__2.call(this, x, y);
      default:
        var G__11282 = null;
        if (arguments.length > 2) {
          var G__11283__i = 0, G__11283__a = new Array(arguments.length - 2);
          while (G__11283__i < G__11283__a.length) {
            G__11283__a[G__11283__i] = arguments[G__11283__i + 2];
            ++G__11283__i;
          }
          G__11282 = new cljs.core.IndexedSeq(G__11283__a, 0);
        }
        return min__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__11282);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min.cljs$lang$maxFixedArity = 2;
  min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
  min.cljs$core$IFn$_invoke$arity$1 = min__1;
  min.cljs$core$IFn$_invoke$arity$2 = min__2;
  min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
  return min;
}();
cljs.core.byte$ = function byte$(x) {
  return x;
};
cljs.core.char$ = function char$(x) {
  if (typeof x === "number") {
    return String.fromCharCode(x);
  } else {
    if (typeof x === "string" && x.length === 1) {
      return x;
    } else {
      throw new Error("Argument to char must be a character or number");
    }
  }
};
cljs.core.short$ = function short$(x) {
  return x;
};
cljs.core.float$ = function float$(x) {
  return x;
};
cljs.core.double$ = function double$(x) {
  return x;
};
cljs.core.unchecked_byte = function unchecked_byte(x) {
  return x;
};
cljs.core.unchecked_char = function unchecked_char(x) {
  return x;
};
cljs.core.unchecked_short = function unchecked_short(x) {
  return x;
};
cljs.core.unchecked_float = function unchecked_float(x) {
  return x;
};
cljs.core.unchecked_double = function unchecked_double(x) {
  return x;
};
cljs.core.unchecked_add = function() {
  var unchecked_add = null;
  var unchecked_add__0 = function() {
    return 0;
  };
  var unchecked_add__1 = function(x) {
    return x;
  };
  var unchecked_add__2 = function(x, y) {
    return x + y;
  };
  var unchecked_add__3 = function() {
    var G__11284__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add, x + y, more);
    };
    var G__11284 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__11285__i = 0, G__11285__a = new Array(arguments.length - 2);
        while (G__11285__i < G__11285__a.length) {
          G__11285__a[G__11285__i] = arguments[G__11285__i + 2];
          ++G__11285__i;
        }
        more = new cljs.core.IndexedSeq(G__11285__a, 0);
      }
      return G__11284__delegate.call(this, x, y, more);
    };
    G__11284.cljs$lang$maxFixedArity = 2;
    G__11284.cljs$lang$applyTo = function(arglist__11286) {
      var x = cljs.core.first(arglist__11286);
      arglist__11286 = cljs.core.next(arglist__11286);
      var y = cljs.core.first(arglist__11286);
      var more = cljs.core.rest(arglist__11286);
      return G__11284__delegate(x, y, more);
    };
    G__11284.cljs$core$IFn$_invoke$arity$variadic = G__11284__delegate;
    return G__11284;
  }();
  unchecked_add = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add__0.call(this);
      case 1:
        return unchecked_add__1.call(this, x);
      case 2:
        return unchecked_add__2.call(this, x, y);
      default:
        var G__11287 = null;
        if (arguments.length > 2) {
          var G__11288__i = 0, G__11288__a = new Array(arguments.length - 2);
          while (G__11288__i < G__11288__a.length) {
            G__11288__a[G__11288__i] = arguments[G__11288__i + 2];
            ++G__11288__i;
          }
          G__11287 = new cljs.core.IndexedSeq(G__11288__a, 0);
        }
        return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__11287);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add.cljs$lang$maxFixedArity = 2;
  unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
  unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
  unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
  unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
  unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add;
}();
cljs.core.unchecked_add_int = function() {
  var unchecked_add_int = null;
  var unchecked_add_int__0 = function() {
    return 0;
  };
  var unchecked_add_int__1 = function(x) {
    return x;
  };
  var unchecked_add_int__2 = function(x, y) {
    return x + y;
  };
  var unchecked_add_int__3 = function() {
    var G__11289__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add_int, x + y, more);
    };
    var G__11289 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__11290__i = 0, G__11290__a = new Array(arguments.length - 2);
        while (G__11290__i < G__11290__a.length) {
          G__11290__a[G__11290__i] = arguments[G__11290__i + 2];
          ++G__11290__i;
        }
        more = new cljs.core.IndexedSeq(G__11290__a, 0);
      }
      return G__11289__delegate.call(this, x, y, more);
    };
    G__11289.cljs$lang$maxFixedArity = 2;
    G__11289.cljs$lang$applyTo = function(arglist__11291) {
      var x = cljs.core.first(arglist__11291);
      arglist__11291 = cljs.core.next(arglist__11291);
      var y = cljs.core.first(arglist__11291);
      var more = cljs.core.rest(arglist__11291);
      return G__11289__delegate(x, y, more);
    };
    G__11289.cljs$core$IFn$_invoke$arity$variadic = G__11289__delegate;
    return G__11289;
  }();
  unchecked_add_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add_int__0.call(this);
      case 1:
        return unchecked_add_int__1.call(this, x);
      case 2:
        return unchecked_add_int__2.call(this, x, y);
      default:
        var G__11292 = null;
        if (arguments.length > 2) {
          var G__11293__i = 0, G__11293__a = new Array(arguments.length - 2);
          while (G__11293__i < G__11293__a.length) {
            G__11293__a[G__11293__i] = arguments[G__11293__i + 2];
            ++G__11293__i;
          }
          G__11292 = new cljs.core.IndexedSeq(G__11293__a, 0);
        }
        return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__11292);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add_int.cljs$lang$maxFixedArity = 2;
  unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add_int;
}();
cljs.core.unchecked_dec = function unchecked_dec(x) {
  return x - 1;
};
cljs.core.unchecked_dec_int = function unchecked_dec_int(x) {
  return x - 1;
};
cljs.core.unchecked_divide_int = function() {
  var unchecked_divide_int = null;
  var unchecked_divide_int__1 = function(x) {
    return unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(1, x);
  };
  var unchecked_divide_int__2 = function(x, y) {
    return x / y;
  };
  var unchecked_divide_int__3 = function() {
    var G__11298__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_divide_int, unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x, y), more);
    };
    var G__11298 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__11299__i = 0, G__11299__a = new Array(arguments.length - 2);
        while (G__11299__i < G__11299__a.length) {
          G__11299__a[G__11299__i] = arguments[G__11299__i + 2];
          ++G__11299__i;
        }
        more = new cljs.core.IndexedSeq(G__11299__a, 0);
      }
      return G__11298__delegate.call(this, x, y, more);
    };
    G__11298.cljs$lang$maxFixedArity = 2;
    G__11298.cljs$lang$applyTo = function(arglist__11300) {
      var x = cljs.core.first(arglist__11300);
      arglist__11300 = cljs.core.next(arglist__11300);
      var y = cljs.core.first(arglist__11300);
      var more = cljs.core.rest(arglist__11300);
      return G__11298__delegate(x, y, more);
    };
    G__11298.cljs$core$IFn$_invoke$arity$variadic = G__11298__delegate;
    return G__11298;
  }();
  unchecked_divide_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_divide_int__1.call(this, x);
      case 2:
        return unchecked_divide_int__2.call(this, x, y);
      default:
        var G__11301 = null;
        if (arguments.length > 2) {
          var G__11302__i = 0, G__11302__a = new Array(arguments.length - 2);
          while (G__11302__i < G__11302__a.length) {
            G__11302__a[G__11302__i] = arguments[G__11302__i + 2];
            ++G__11302__i;
          }
          G__11301 = new cljs.core.IndexedSeq(G__11302__a, 0);
        }
        return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__11301);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_divide_int.cljs$lang$maxFixedArity = 2;
  unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_divide_int;
}();
cljs.core.unchecked_inc = function unchecked_inc(x) {
  return x + 1;
};
cljs.core.unchecked_inc_int = function unchecked_inc_int(x) {
  return x + 1;
};
cljs.core.unchecked_multiply = function() {
  var unchecked_multiply = null;
  var unchecked_multiply__0 = function() {
    return 1;
  };
  var unchecked_multiply__1 = function(x) {
    return x;
  };
  var unchecked_multiply__2 = function(x, y) {
    return x * y;
  };
  var unchecked_multiply__3 = function() {
    var G__11303__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply, x * y, more);
    };
    var G__11303 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__11304__i = 0, G__11304__a = new Array(arguments.length - 2);
        while (G__11304__i < G__11304__a.length) {
          G__11304__a[G__11304__i] = arguments[G__11304__i + 2];
          ++G__11304__i;
        }
        more = new cljs.core.IndexedSeq(G__11304__a, 0);
      }
      return G__11303__delegate.call(this, x, y, more);
    };
    G__11303.cljs$lang$maxFixedArity = 2;
    G__11303.cljs$lang$applyTo = function(arglist__11305) {
      var x = cljs.core.first(arglist__11305);
      arglist__11305 = cljs.core.next(arglist__11305);
      var y = cljs.core.first(arglist__11305);
      var more = cljs.core.rest(arglist__11305);
      return G__11303__delegate(x, y, more);
    };
    G__11303.cljs$core$IFn$_invoke$arity$variadic = G__11303__delegate;
    return G__11303;
  }();
  unchecked_multiply = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply__0.call(this);
      case 1:
        return unchecked_multiply__1.call(this, x);
      case 2:
        return unchecked_multiply__2.call(this, x, y);
      default:
        var G__11306 = null;
        if (arguments.length > 2) {
          var G__11307__i = 0, G__11307__a = new Array(arguments.length - 2);
          while (G__11307__i < G__11307__a.length) {
            G__11307__a[G__11307__i] = arguments[G__11307__i + 2];
            ++G__11307__i;
          }
          G__11306 = new cljs.core.IndexedSeq(G__11307__a, 0);
        }
        return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__11306);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply.cljs$lang$maxFixedArity = 2;
  unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply;
}();
cljs.core.unchecked_multiply_int = function() {
  var unchecked_multiply_int = null;
  var unchecked_multiply_int__0 = function() {
    return 1;
  };
  var unchecked_multiply_int__1 = function(x) {
    return x;
  };
  var unchecked_multiply_int__2 = function(x, y) {
    return x * y;
  };
  var unchecked_multiply_int__3 = function() {
    var G__11308__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply_int, x * y, more);
    };
    var G__11308 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__11309__i = 0, G__11309__a = new Array(arguments.length - 2);
        while (G__11309__i < G__11309__a.length) {
          G__11309__a[G__11309__i] = arguments[G__11309__i + 2];
          ++G__11309__i;
        }
        more = new cljs.core.IndexedSeq(G__11309__a, 0);
      }
      return G__11308__delegate.call(this, x, y, more);
    };
    G__11308.cljs$lang$maxFixedArity = 2;
    G__11308.cljs$lang$applyTo = function(arglist__11310) {
      var x = cljs.core.first(arglist__11310);
      arglist__11310 = cljs.core.next(arglist__11310);
      var y = cljs.core.first(arglist__11310);
      var more = cljs.core.rest(arglist__11310);
      return G__11308__delegate(x, y, more);
    };
    G__11308.cljs$core$IFn$_invoke$arity$variadic = G__11308__delegate;
    return G__11308;
  }();
  unchecked_multiply_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply_int__0.call(this);
      case 1:
        return unchecked_multiply_int__1.call(this, x);
      case 2:
        return unchecked_multiply_int__2.call(this, x, y);
      default:
        var G__11311 = null;
        if (arguments.length > 2) {
          var G__11312__i = 0, G__11312__a = new Array(arguments.length - 2);
          while (G__11312__i < G__11312__a.length) {
            G__11312__a[G__11312__i] = arguments[G__11312__i + 2];
            ++G__11312__i;
          }
          G__11311 = new cljs.core.IndexedSeq(G__11312__a, 0);
        }
        return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__11311);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
  unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply_int;
}();
cljs.core.unchecked_negate = function unchecked_negate(x) {
  return-x;
};
cljs.core.unchecked_negate_int = function unchecked_negate_int(x) {
  return-x;
};
cljs.core.unchecked_remainder_int = function unchecked_remainder_int(x, n) {
  var G__11315 = x;
  var G__11316 = n;
  return cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__11315, G__11316) : cljs.core.mod.call(null, G__11315, G__11316);
};
cljs.core.unchecked_subtract = function() {
  var unchecked_subtract = null;
  var unchecked_subtract__1 = function(x) {
    return-x;
  };
  var unchecked_subtract__2 = function(x, y) {
    return x - y;
  };
  var unchecked_subtract__3 = function() {
    var G__11317__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract, x - y, more);
    };
    var G__11317 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__11318__i = 0, G__11318__a = new Array(arguments.length - 2);
        while (G__11318__i < G__11318__a.length) {
          G__11318__a[G__11318__i] = arguments[G__11318__i + 2];
          ++G__11318__i;
        }
        more = new cljs.core.IndexedSeq(G__11318__a, 0);
      }
      return G__11317__delegate.call(this, x, y, more);
    };
    G__11317.cljs$lang$maxFixedArity = 2;
    G__11317.cljs$lang$applyTo = function(arglist__11319) {
      var x = cljs.core.first(arglist__11319);
      arglist__11319 = cljs.core.next(arglist__11319);
      var y = cljs.core.first(arglist__11319);
      var more = cljs.core.rest(arglist__11319);
      return G__11317__delegate(x, y, more);
    };
    G__11317.cljs$core$IFn$_invoke$arity$variadic = G__11317__delegate;
    return G__11317;
  }();
  unchecked_subtract = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_subtract__1.call(this, x);
      case 2:
        return unchecked_subtract__2.call(this, x, y);
      default:
        var G__11320 = null;
        if (arguments.length > 2) {
          var G__11321__i = 0, G__11321__a = new Array(arguments.length - 2);
          while (G__11321__i < G__11321__a.length) {
            G__11321__a[G__11321__i] = arguments[G__11321__i + 2];
            ++G__11321__i;
          }
          G__11320 = new cljs.core.IndexedSeq(G__11321__a, 0);
        }
        return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__11320);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_subtract.cljs$lang$maxFixedArity = 2;
  unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
  unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
  unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
  unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_subtract;
}();
cljs.core.unchecked_subtract_int = function() {
  var unchecked_subtract_int = null;
  var unchecked_subtract_int__1 = function(x) {
    return-x;
  };
  var unchecked_subtract_int__2 = function(x, y) {
    return x - y;
  };
  var unchecked_subtract_int__3 = function() {
    var G__11322__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract_int, x - y, more);
    };
    var G__11322 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__11323__i = 0, G__11323__a = new Array(arguments.length - 2);
        while (G__11323__i < G__11323__a.length) {
          G__11323__a[G__11323__i] = arguments[G__11323__i + 2];
          ++G__11323__i;
        }
        more = new cljs.core.IndexedSeq(G__11323__a, 0);
      }
      return G__11322__delegate.call(this, x, y, more);
    };
    G__11322.cljs$lang$maxFixedArity = 2;
    G__11322.cljs$lang$applyTo = function(arglist__11324) {
      var x = cljs.core.first(arglist__11324);
      arglist__11324 = cljs.core.next(arglist__11324);
      var y = cljs.core.first(arglist__11324);
      var more = cljs.core.rest(arglist__11324);
      return G__11322__delegate(x, y, more);
    };
    G__11322.cljs$core$IFn$_invoke$arity$variadic = G__11322__delegate;
    return G__11322;
  }();
  unchecked_subtract_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_subtract_int__1.call(this, x);
      case 2:
        return unchecked_subtract_int__2.call(this, x, y);
      default:
        var G__11325 = null;
        if (arguments.length > 2) {
          var G__11326__i = 0, G__11326__a = new Array(arguments.length - 2);
          while (G__11326__i < G__11326__a.length) {
            G__11326__a[G__11326__i] = arguments[G__11326__i + 2];
            ++G__11326__i;
          }
          G__11325 = new cljs.core.IndexedSeq(G__11326__a, 0);
        }
        return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__11325);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
  unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
  unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
  unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
  unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_subtract_int;
}();
cljs.core.fix = function fix(q) {
  if (q >= 0) {
    var G__11329 = q;
    return Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__11329) : Math.floor.call(null, G__11329);
  } else {
    var G__11330 = q;
    return Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__11330) : Math.ceil.call(null, G__11330);
  }
};
cljs.core.int$ = function int$(x) {
  return x | 0;
};
cljs.core.unchecked_int = function unchecked_int(x) {
  return cljs.core.fix(x);
};
cljs.core.long$ = function long$(x) {
  return cljs.core.fix(x);
};
cljs.core.unchecked_long = function unchecked_long(x) {
  return cljs.core.fix(x);
};
cljs.core.booleans = function booleans(x) {
  return x;
};
cljs.core.bytes = function bytes(x) {
  return x;
};
cljs.core.chars = function chars(x) {
  return x;
};
cljs.core.shorts = function shorts(x) {
  return x;
};
cljs.core.ints = function ints(x) {
  return x;
};
cljs.core.floats = function floats(x) {
  return x;
};
cljs.core.doubles = function doubles(x) {
  return x;
};
cljs.core.longs = function longs(x) {
  return x;
};
cljs.core.js_mod = function js_mod(n, d) {
  return n % d;
};
cljs.core.mod = function mod(n, d) {
  return(n % d + d) % d;
};
cljs.core.quot = function quot(n, d) {
  var rem = n % d;
  return cljs.core.fix((n - rem) / d);
};
cljs.core.rem = function rem(n, d) {
  var q = cljs.core.quot(n, d);
  return n - d * q;
};
cljs.core.bit_xor = function() {
  var bit_xor = null;
  var bit_xor__2 = function(x, y) {
    return x ^ y;
  };
  var bit_xor__3 = function() {
    var G__11331__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_xor, x ^ y, more);
    };
    var G__11331 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__11332__i = 0, G__11332__a = new Array(arguments.length - 2);
        while (G__11332__i < G__11332__a.length) {
          G__11332__a[G__11332__i] = arguments[G__11332__i + 2];
          ++G__11332__i;
        }
        more = new cljs.core.IndexedSeq(G__11332__a, 0);
      }
      return G__11331__delegate.call(this, x, y, more);
    };
    G__11331.cljs$lang$maxFixedArity = 2;
    G__11331.cljs$lang$applyTo = function(arglist__11333) {
      var x = cljs.core.first(arglist__11333);
      arglist__11333 = cljs.core.next(arglist__11333);
      var y = cljs.core.first(arglist__11333);
      var more = cljs.core.rest(arglist__11333);
      return G__11331__delegate(x, y, more);
    };
    G__11331.cljs$core$IFn$_invoke$arity$variadic = G__11331__delegate;
    return G__11331;
  }();
  bit_xor = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return bit_xor__2.call(this, x, y);
      default:
        var G__11334 = null;
        if (arguments.length > 2) {
          var G__11335__i = 0, G__11335__a = new Array(arguments.length - 2);
          while (G__11335__i < G__11335__a.length) {
            G__11335__a[G__11335__i] = arguments[G__11335__i + 2];
            ++G__11335__i;
          }
          G__11334 = new cljs.core.IndexedSeq(G__11335__a, 0);
        }
        return bit_xor__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__11334);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  bit_xor.cljs$lang$maxFixedArity = 2;
  bit_xor.cljs$lang$applyTo = bit_xor__3.cljs$lang$applyTo;
  bit_xor.cljs$core$IFn$_invoke$arity$2 = bit_xor__2;
  bit_xor.cljs$core$IFn$_invoke$arity$variadic = bit_xor__3.cljs$core$IFn$_invoke$arity$variadic;
  return bit_xor;
}();
cljs.core.bit_and = function() {
  var bit_and = null;
  var bit_and__2 = function(x, y) {
    return x & y;
  };
  var bit_and__3 = function() {
    var G__11336__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and, x & y, more);
    };
    var G__11336 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__11337__i = 0, G__11337__a = new Array(arguments.length - 2);
        while (G__11337__i < G__11337__a.length) {
          G__11337__a[G__11337__i] = arguments[G__11337__i + 2];
          ++G__11337__i;
        }
        more = new cljs.core.IndexedSeq(G__11337__a, 0);
      }
      return G__11336__delegate.call(this, x, y, more);
    };
    G__11336.cljs$lang$maxFixedArity = 2;
    G__11336.cljs$lang$applyTo = function(arglist__11338) {
      var x = cljs.core.first(arglist__11338);
      arglist__11338 = cljs.core.next(arglist__11338);
      var y = cljs.core.first(arglist__11338);
      var more = cljs.core.rest(arglist__11338);
      return G__11336__delegate(x, y, more);
    };
    G__11336.cljs$core$IFn$_invoke$arity$variadic = G__11336__delegate;
    return G__11336;
  }();
  bit_and = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return bit_and__2.call(this, x, y);
      default:
        var G__11339 = null;
        if (arguments.length > 2) {
          var G__11340__i = 0, G__11340__a = new Array(arguments.length - 2);
          while (G__11340__i < G__11340__a.length) {
            G__11340__a[G__11340__i] = arguments[G__11340__i + 2];
            ++G__11340__i;
          }
          G__11339 = new cljs.core.IndexedSeq(G__11340__a, 0);
        }
        return bit_and__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__11339);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  bit_and.cljs$lang$maxFixedArity = 2;
  bit_and.cljs$lang$applyTo = bit_and__3.cljs$lang$applyTo;
  bit_and.cljs$core$IFn$_invoke$arity$2 = bit_and__2;
  bit_and.cljs$core$IFn$_invoke$arity$variadic = bit_and__3.cljs$core$IFn$_invoke$arity$variadic;
  return bit_and;
}();
cljs.core.bit_or = function() {
  var bit_or = null;
  var bit_or__2 = function(x, y) {
    return x | y;
  };
  var bit_or__3 = function() {
    var G__11341__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_or, x | y, more);
    };
    var G__11341 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__11342__i = 0, G__11342__a = new Array(arguments.length - 2);
        while (G__11342__i < G__11342__a.length) {
          G__11342__a[G__11342__i] = arguments[G__11342__i + 2];
          ++G__11342__i;
        }
        more = new cljs.core.IndexedSeq(G__11342__a, 0);
      }
      return G__11341__delegate.call(this, x, y, more);
    };
    G__11341.cljs$lang$maxFixedArity = 2;
    G__11341.cljs$lang$applyTo = function(arglist__11343) {
      var x = cljs.core.first(arglist__11343);
      arglist__11343 = cljs.core.next(arglist__11343);
      var y = cljs.core.first(arglist__11343);
      var more = cljs.core.rest(arglist__11343);
      return G__11341__delegate(x, y, more);
    };
    G__11341.cljs$core$IFn$_invoke$arity$variadic = G__11341__delegate;
    return G__11341;
  }();
  bit_or = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return bit_or__2.call(this, x, y);
      default:
        var G__11344 = null;
        if (arguments.length > 2) {
          var G__11345__i = 0, G__11345__a = new Array(arguments.length - 2);
          while (G__11345__i < G__11345__a.length) {
            G__11345__a[G__11345__i] = arguments[G__11345__i + 2];
            ++G__11345__i;
          }
          G__11344 = new cljs.core.IndexedSeq(G__11345__a, 0);
        }
        return bit_or__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__11344);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  bit_or.cljs$lang$maxFixedArity = 2;
  bit_or.cljs$lang$applyTo = bit_or__3.cljs$lang$applyTo;
  bit_or.cljs$core$IFn$_invoke$arity$2 = bit_or__2;
  bit_or.cljs$core$IFn$_invoke$arity$variadic = bit_or__3.cljs$core$IFn$_invoke$arity$variadic;
  return bit_or;
}();
cljs.core.bit_and_not = function() {
  var bit_and_not = null;
  var bit_and_not__2 = function(x, y) {
    return x & ~y;
  };
  var bit_and_not__3 = function() {
    var G__11346__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and_not, x & ~y, more);
    };
    var G__11346 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__11347__i = 0, G__11347__a = new Array(arguments.length - 2);
        while (G__11347__i < G__11347__a.length) {
          G__11347__a[G__11347__i] = arguments[G__11347__i + 2];
          ++G__11347__i;
        }
        more = new cljs.core.IndexedSeq(G__11347__a, 0);
      }
      return G__11346__delegate.call(this, x, y, more);
    };
    G__11346.cljs$lang$maxFixedArity = 2;
    G__11346.cljs$lang$applyTo = function(arglist__11348) {
      var x = cljs.core.first(arglist__11348);
      arglist__11348 = cljs.core.next(arglist__11348);
      var y = cljs.core.first(arglist__11348);
      var more = cljs.core.rest(arglist__11348);
      return G__11346__delegate(x, y, more);
    };
    G__11346.cljs$core$IFn$_invoke$arity$variadic = G__11346__delegate;
    return G__11346;
  }();
  bit_and_not = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return bit_and_not__2.call(this, x, y);
      default:
        var G__11349 = null;
        if (arguments.length > 2) {
          var G__11350__i = 0, G__11350__a = new Array(arguments.length - 2);
          while (G__11350__i < G__11350__a.length) {
            G__11350__a[G__11350__i] = arguments[G__11350__i + 2];
            ++G__11350__i;
          }
          G__11349 = new cljs.core.IndexedSeq(G__11350__a, 0);
        }
        return bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__11349);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  bit_and_not.cljs$lang$maxFixedArity = 2;
  bit_and_not.cljs$lang$applyTo = bit_and_not__3.cljs$lang$applyTo;
  bit_and_not.cljs$core$IFn$_invoke$arity$2 = bit_and_not__2;
  bit_and_not.cljs$core$IFn$_invoke$arity$variadic = bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic;
  return bit_and_not;
}();
cljs.core.bit_clear = function bit_clear(x, n) {
  return x & ~(1 << n);
};
cljs.core.bit_flip = function bit_flip(x, n) {
  return x ^ 1 << n;
};
cljs.core.bit_not = function bit_not(x) {
  return~x;
};
cljs.core.bit_set = function bit_set(x, n) {
  return x | 1 << n;
};
cljs.core.bit_test = function bit_test(x, n) {
  return(x & 1 << n) != 0;
};
cljs.core.bit_shift_left = function bit_shift_left(x, n) {
  return x << n;
};
cljs.core.bit_shift_right = function bit_shift_right(x, n) {
  return x >> n;
};
cljs.core.bit_shift_right_zero_fill = function bit_shift_right_zero_fill(x, n) {
  return x >>> n;
};
cljs.core.unsigned_bit_shift_right = function unsigned_bit_shift_right(x, n) {
  return x >>> n;
};
cljs.core.bit_count = function bit_count(v) {
  var v__$1 = v - (v >> 1 & 1431655765);
  var v__$2 = (v__$1 & 858993459) + (v__$1 >> 2 & 858993459);
  return(v__$2 + (v__$2 >> 4) & 252645135) * 16843009 >> 24;
};
cljs.core._EQ__EQ_ = function() {
  var _EQ__EQ_ = null;
  var _EQ__EQ___1 = function(x) {
    return true;
  };
  var _EQ__EQ___2 = function(x, y) {
    return cljs.core._equiv(x, y);
  };
  var _EQ__EQ___3 = function() {
    var G__11355__delegate = function(x, y, more) {
      while (true) {
        if (_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
          if (cljs.core.next(more)) {
            var G__11356 = y;
            var G__11357 = cljs.core.first(more);
            var G__11358 = cljs.core.next(more);
            x = G__11356;
            y = G__11357;
            more = G__11358;
            continue;
          } else {
            return _EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y, cljs.core.first(more));
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__11355 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__11359__i = 0, G__11359__a = new Array(arguments.length - 2);
        while (G__11359__i < G__11359__a.length) {
          G__11359__a[G__11359__i] = arguments[G__11359__i + 2];
          ++G__11359__i;
        }
        more = new cljs.core.IndexedSeq(G__11359__a, 0);
      }
      return G__11355__delegate.call(this, x, y, more);
    };
    G__11355.cljs$lang$maxFixedArity = 2;
    G__11355.cljs$lang$applyTo = function(arglist__11360) {
      var x = cljs.core.first(arglist__11360);
      arglist__11360 = cljs.core.next(arglist__11360);
      var y = cljs.core.first(arglist__11360);
      var more = cljs.core.rest(arglist__11360);
      return G__11355__delegate(x, y, more);
    };
    G__11355.cljs$core$IFn$_invoke$arity$variadic = G__11355__delegate;
    return G__11355;
  }();
  _EQ__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ__EQ___1.call(this, x);
      case 2:
        return _EQ__EQ___2.call(this, x, y);
      default:
        var G__11361 = null;
        if (arguments.length > 2) {
          var G__11362__i = 0, G__11362__a = new Array(arguments.length - 2);
          while (G__11362__i < G__11362__a.length) {
            G__11362__a[G__11362__i] = arguments[G__11362__i + 2];
            ++G__11362__i;
          }
          G__11361 = new cljs.core.IndexedSeq(G__11362__a, 0);
        }
        return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__11361);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ__EQ_.cljs$lang$maxFixedArity = 2;
  _EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ__EQ_;
}();
cljs.core.pos_QMARK_ = function pos_QMARK_(n) {
  return n > 0;
};
cljs.core.zero_QMARK_ = function zero_QMARK_(n) {
  return n === 0;
};
cljs.core.neg_QMARK_ = function neg_QMARK_(x) {
  return x < 0;
};
cljs.core.nthnext = function nthnext(coll, n) {
  var n__$1 = n;
  var xs = cljs.core.seq(coll);
  while (true) {
    if (xs && n__$1 > 0) {
      var G__11363 = n__$1 - 1;
      var G__11364 = cljs.core.next(xs);
      n__$1 = G__11363;
      xs = G__11364;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.str = function() {
  var str = null;
  var str__0 = function() {
    return "";
  };
  var str__1 = function(x) {
    if (x == null) {
      return "";
    } else {
      var G__11368 = x;
      return goog.string.buildString(G__11368);
    }
  };
  var str__2 = function() {
    var G__11369__delegate = function(x, ys) {
      var sb = new goog.string.StringBuffer(str.cljs$core$IFn$_invoke$arity$1(x));
      var more = ys;
      while (true) {
        if (cljs.core.truth_(more)) {
          var G__11370 = sb.append(str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
          var G__11371 = cljs.core.next(more);
          sb = G__11370;
          more = G__11371;
          continue;
        } else {
          return sb.toString();
        }
        break;
      }
    };
    var G__11369 = function(x, var_args) {
      var ys = null;
      if (arguments.length > 1) {
        var G__11372__i = 0, G__11372__a = new Array(arguments.length - 1);
        while (G__11372__i < G__11372__a.length) {
          G__11372__a[G__11372__i] = arguments[G__11372__i + 1];
          ++G__11372__i;
        }
        ys = new cljs.core.IndexedSeq(G__11372__a, 0);
      }
      return G__11369__delegate.call(this, x, ys);
    };
    G__11369.cljs$lang$maxFixedArity = 1;
    G__11369.cljs$lang$applyTo = function(arglist__11373) {
      var x = cljs.core.first(arglist__11373);
      var ys = cljs.core.rest(arglist__11373);
      return G__11369__delegate(x, ys);
    };
    G__11369.cljs$core$IFn$_invoke$arity$variadic = G__11369__delegate;
    return G__11369;
  }();
  str = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str__0.call(this);
      case 1:
        return str__1.call(this, x);
      default:
        var G__11374 = null;
        if (arguments.length > 1) {
          var G__11375__i = 0, G__11375__a = new Array(arguments.length - 1);
          while (G__11375__i < G__11375__a.length) {
            G__11375__a[G__11375__i] = arguments[G__11375__i + 1];
            ++G__11375__i;
          }
          G__11374 = new cljs.core.IndexedSeq(G__11375__a, 0);
        }
        return str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__11374);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  str.cljs$lang$maxFixedArity = 1;
  str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
  str.cljs$core$IFn$_invoke$arity$0 = str__0;
  str.cljs$core$IFn$_invoke$arity$1 = str__1;
  str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
  return str;
}();
cljs.core.subs = function() {
  var subs = null;
  var subs__2 = function(s, start) {
    return s.substring(start);
  };
  var subs__3 = function(s, start, end) {
    return s.substring(start, end);
  };
  subs = function(s, start, end) {
    switch(arguments.length) {
      case 2:
        return subs__2.call(this, s, start);
      case 3:
        return subs__3.call(this, s, start, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
  subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
  return subs;
}();
cljs.core.equiv_sequential = function equiv_sequential(x, y) {
  return cljs.core.boolean$(cljs.core.sequential_QMARK_(y) ? cljs.core.counted_QMARK_(x) && cljs.core.counted_QMARK_(y) && !(cljs.core.count(x) === cljs.core.count(y)) ? false : function() {
    var xs = cljs.core.seq(x);
    var ys = cljs.core.seq(y);
    while (true) {
      if (xs == null) {
        return ys == null;
      } else {
        if (ys == null) {
          return false;
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs), cljs.core.first(ys))) {
            var G__11376 = cljs.core.next(xs);
            var G__11377 = cljs.core.next(ys);
            xs = G__11376;
            ys = G__11377;
            continue;
          } else {
            return false;
          }
        }
      }
      break;
    }
  }() : null);
};
cljs.core.hash_coll = function hash_coll(coll) {
  if (cljs.core.seq(coll)) {
    var res = cljs.core.hash(cljs.core.first(coll));
    var s = cljs.core.next(coll);
    while (true) {
      if (s == null) {
        return res;
      } else {
        var G__11378 = cljs.core.hash_combine(res, cljs.core.hash(cljs.core.first(s)));
        var G__11379 = cljs.core.next(s);
        res = G__11378;
        s = G__11379;
        continue;
      }
      break;
    }
  } else {
    return 0;
  }
};
cljs.core.hash_imap = function hash_imap(m) {
  var h = 0;
  var s = cljs.core.seq(m);
  while (true) {
    if (s) {
      var e = cljs.core.first(s);
      var G__11384 = (h + (cljs.core.hash(function() {
        var G__11382 = e;
        return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__11382) : cljs.core.key.call(null, G__11382);
      }()) ^ cljs.core.hash(function() {
        var G__11383 = e;
        return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__11383) : cljs.core.val.call(null, G__11383);
      }()))) % 4503599627370496;
      var G__11385 = cljs.core.next(s);
      h = G__11384;
      s = G__11385;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.hash_iset = function hash_iset(s) {
  var h = 0;
  var s__$1 = cljs.core.seq(s);
  while (true) {
    if (s__$1) {
      var e = cljs.core.first(s__$1);
      var G__11386 = (h + cljs.core.hash(e)) % 4503599627370496;
      var G__11387 = cljs.core.next(s__$1);
      h = G__11386;
      s__$1 = G__11387;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.extend_object_BANG_ = function extend_object_BANG_(obj, fn_map) {
  var seq__11398_11408 = cljs.core.seq(fn_map);
  var chunk__11399_11409 = null;
  var count__11400_11410 = 0;
  var i__11401_11411 = 0;
  while (true) {
    if (i__11401_11411 < count__11400_11410) {
      var vec__11402_11412 = chunk__11399_11409.cljs$core$IIndexed$_nth$arity$2(null, i__11401_11411);
      var key_name_11413 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11402_11412, 0, null);
      var f_11414 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11402_11412, 1, null);
      var str_name_11415 = function() {
        var G__11403 = key_name_11413;
        return cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__11403) : cljs.core.name.call(null, G__11403);
      }();
      obj[str_name_11415] = f_11414;
      var G__11416 = seq__11398_11408;
      var G__11417 = chunk__11399_11409;
      var G__11418 = count__11400_11410;
      var G__11419 = i__11401_11411 + 1;
      seq__11398_11408 = G__11416;
      chunk__11399_11409 = G__11417;
      count__11400_11410 = G__11418;
      i__11401_11411 = G__11419;
      continue;
    } else {
      var temp__4126__auto___11420 = cljs.core.seq(seq__11398_11408);
      if (temp__4126__auto___11420) {
        var seq__11398_11421__$1 = temp__4126__auto___11420;
        if (cljs.core.chunked_seq_QMARK_(seq__11398_11421__$1)) {
          var c__4712__auto___11422 = function() {
            var G__11404 = seq__11398_11421__$1;
            return cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__11404) : cljs.core.chunk_first.call(null, G__11404);
          }();
          var G__11423 = function() {
            var G__11405 = seq__11398_11421__$1;
            return cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__11405) : cljs.core.chunk_rest.call(null, G__11405);
          }();
          var G__11424 = c__4712__auto___11422;
          var G__11425 = cljs.core.count(c__4712__auto___11422);
          var G__11426 = 0;
          seq__11398_11408 = G__11423;
          chunk__11399_11409 = G__11424;
          count__11400_11410 = G__11425;
          i__11401_11411 = G__11426;
          continue;
        } else {
          var vec__11406_11427 = cljs.core.first(seq__11398_11421__$1);
          var key_name_11428 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11406_11427, 0, null);
          var f_11429 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11406_11427, 1, null);
          var str_name_11430 = function() {
            var G__11407 = key_name_11428;
            return cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__11407) : cljs.core.name.call(null, G__11407);
          }();
          obj[str_name_11430] = f_11429;
          var G__11431 = cljs.core.next(seq__11398_11421__$1);
          var G__11432 = null;
          var G__11433 = 0;
          var G__11434 = 0;
          seq__11398_11408 = G__11431;
          chunk__11399_11409 = G__11432;
          count__11400_11410 = G__11433;
          i__11401_11411 = G__11434;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return obj;
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65937646;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.List.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.List.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.List(self__.meta, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return null;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._rest(coll__$1);
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4346__auto__ = self__.__hash;
  if (!(h__4346__auto__ == null)) {
    return h__4346__auto__;
  } else {
    var h__4346__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4346__auto____$1;
    return h__4346__auto____$1;
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(meta__$1, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, coll__$1, self__.count + 1, null);
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";
cljs.core.List.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/List");
};
cljs.core.__GT_List = function __GT_List(meta, first, rest, count, __hash) {
  return new cljs.core.List(meta, first, rest, count, __hash);
};
cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4903__auto__ = this;
  return cljs.core.es6_iterator(this__4903__auto__);
};
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 65937614;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.EmptyList.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.EmptyList.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.EmptyList(self__.meta);
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.empty_ordered_hash;
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.EmptyList(meta__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, null, 1, null);
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";
cljs.core.EmptyList.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/EmptyList");
};
cljs.core.__GT_EmptyList = function __GT_EmptyList(meta) {
  return new cljs.core.EmptyList(meta);
};
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4903__auto__ = this;
  return cljs.core.es6_iterator(this__4903__auto__);
};
cljs.core.reversible_QMARK_ = function reversible_QMARK_(coll) {
  var G__11436 = coll;
  if (G__11436) {
    var bit__4606__auto__ = G__11436.cljs$lang$protocol_mask$partition0$ & 134217728;
    if (bit__4606__auto__ || G__11436.cljs$core$IReversible$) {
      return true;
    } else {
      if (!G__11436.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible, G__11436);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible, G__11436);
  }
};
cljs.core.rseq = function rseq(coll) {
  return cljs.core._rseq(coll);
};
cljs.core.reverse = function reverse(coll) {
  if (cljs.core.reversible_QMARK_(coll)) {
    return cljs.core.rseq(coll);
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.List.EMPTY, coll);
  }
};
cljs.core.list = function() {
  var list__delegate = function(xs) {
    var arr = xs instanceof cljs.core.IndexedSeq && xs.i === 0 ? xs.arr : function() {
      var arr = [];
      var xs__$1 = xs;
      while (true) {
        if (!(xs__$1 == null)) {
          arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));
          var G__11437 = xs__$1.cljs$core$INext$_next$arity$1(null);
          xs__$1 = G__11437;
          continue;
        } else {
          return arr;
        }
        break;
      }
    }();
    var i = arr.length;
    var r = cljs.core.List.EMPTY;
    while (true) {
      if (i > 0) {
        var G__11438 = i - 1;
        var G__11439 = r.cljs$core$ICollection$_conj$arity$2(null, arr[i - 1]);
        i = G__11438;
        r = G__11439;
        continue;
      } else {
        return r;
      }
      break;
    }
  };
  var list = function(var_args) {
    var xs = null;
    if (arguments.length > 0) {
      var G__11440__i = 0, G__11440__a = new Array(arguments.length - 0);
      while (G__11440__i < G__11440__a.length) {
        G__11440__a[G__11440__i] = arguments[G__11440__i + 0];
        ++G__11440__i;
      }
      xs = new cljs.core.IndexedSeq(G__11440__a, 0);
    }
    return list__delegate.call(this, xs);
  };
  list.cljs$lang$maxFixedArity = 0;
  list.cljs$lang$applyTo = function(arglist__11441) {
    var xs = cljs.core.seq(arglist__11441);
    return list__delegate(xs);
  };
  list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
  return list;
}();
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65929452;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Cons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Cons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Cons(self__.meta, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core.seq(self__.rest);
  }
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4346__auto__ = self__.__hash;
  if (!(h__4346__auto__ == null)) {
    return h__4346__auto__;
  } else {
    var h__4346__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4346__auto____$1;
    return h__4346__auto____$1;
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(meta__$1, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(null, o, coll__$1, self__.__hash);
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";
cljs.core.Cons.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/Cons");
};
cljs.core.__GT_Cons = function __GT_Cons(meta, first, rest, __hash) {
  return new cljs.core.Cons(meta, first, rest, __hash);
};
cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4903__auto__ = this;
  return cljs.core.es6_iterator(this__4903__auto__);
};
cljs.core.cons = function cons(x, coll) {
  if (function() {
    var or__3925__auto__ = coll == null;
    if (or__3925__auto__) {
      return or__3925__auto__;
    } else {
      var G__11445 = coll;
      if (G__11445) {
        var bit__4599__auto__ = G__11445.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4599__auto__ || G__11445.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null);
  } else {
    return new cljs.core.Cons(null, x, cljs.core.seq(coll), null);
  }
};
cljs.core.list_QMARK_ = function list_QMARK_(x) {
  var G__11447 = x;
  if (G__11447) {
    var bit__4606__auto__ = G__11447.cljs$lang$protocol_mask$partition0$ & 33554432;
    if (bit__4606__auto__ || G__11447.cljs$core$IList$) {
      return true;
    } else {
      if (!G__11447.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IList, G__11447);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IList, G__11447);
  }
};
cljs.core.hash_keyword = function hash_keyword(k) {
  return cljs.core.hash_symbol(k) + 2654435769 | 0;
};
cljs.core.compare_keywords = function compare_keywords(a, b) {
  if (a.fqn === b.fqn) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__3913__auto__ = cljs.core.not(a.ns);
      if (and__3913__auto__) {
        return b.ns;
      } else {
        return and__3913__auto__;
      }
    }())) {
      return-1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not(b.ns)) {
          return 1;
        } else {
          var nsc = function() {
            var G__11454 = a.ns;
            var G__11455 = b.ns;
            return goog.array.defaultCompare(G__11454, G__11455);
          }();
          if (0 === nsc) {
            var G__11456 = a.name;
            var G__11457 = b.name;
            return goog.array.defaultCompare(G__11456, G__11457);
          } else {
            return nsc;
          }
        }
      } else {
        var G__11458 = a.name;
        var G__11459 = b.name;
        return goog.array.defaultCompare(G__11458, G__11459);
      }
    }
  }
};
cljs.core.Keyword = function(ns, name, fqn, _hash) {
  this.ns = ns;
  this.name = name;
  this.fqn = fqn;
  this._hash = _hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775105;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write(writer, [cljs.core.str(":"), cljs.core.str(self__.fqn)].join(""));
};
cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var h__4346__auto__ = self__._hash;
  if (!(h__4346__auto__ == null)) {
    return h__4346__auto__;
  } else {
    var h__4346__auto____$1 = cljs.core.hash_keyword(this$__$1);
    self__._hash = h__4346__auto____$1;
    return h__4346__auto____$1;
  }
};
cljs.core.Keyword.prototype.call = function() {
  var G__11461 = null;
  var G__11461__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, kw);
  };
  var G__11461__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, kw, not_found);
  };
  G__11461 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11461__2.call(this, self__, coll);
      case 3:
        return G__11461__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11461.cljs$core$IFn$_invoke$arity$2 = G__11461__2;
  G__11461.cljs$core$IFn$_invoke$arity$3 = G__11461__3;
  return G__11461;
}();
cljs.core.Keyword.prototype.apply = function(self__, args11460) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args11460)));
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, kw);
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, kw, not_found);
};
cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Keyword) {
    return self__.fqn === other.fqn;
  } else {
    return false;
  }
};
cljs.core.Keyword.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return[cljs.core.str(":"), cljs.core.str(self__.fqn)].join("");
};
cljs.core.Keyword.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";
cljs.core.Keyword.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/Keyword");
};
cljs.core.__GT_Keyword = function __GT_Keyword(ns, name, fqn, _hash) {
  return new cljs.core.Keyword(ns, name, fqn, _hash);
};
cljs.core.keyword_QMARK_ = function keyword_QMARK_(x) {
  return x instanceof cljs.core.Keyword;
};
cljs.core.keyword_identical_QMARK_ = function keyword_identical_QMARK_(x, y) {
  if (x === y) {
    return true;
  } else {
    if (x instanceof cljs.core.Keyword && y instanceof cljs.core.Keyword) {
      return x.fqn === y.fqn;
    } else {
      return false;
    }
  }
};
cljs.core.namespace = function namespace(x) {
  if (function() {
    var G__11463 = x;
    if (G__11463) {
      var bit__4599__auto__ = G__11463.cljs$lang$protocol_mask$partition1$ & 4096;
      if (bit__4599__auto__ || G__11463.cljs$core$INamed$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return x.cljs$core$INamed$_namespace$arity$1(null);
  } else {
    throw new Error([cljs.core.str("Doesn't support namespace: "), cljs.core.str(x)].join(""));
  }
};
cljs.core.keyword = function() {
  var keyword = null;
  var keyword__1 = function(name) {
    if (name instanceof cljs.core.Keyword) {
      return name;
    } else {
      if (name instanceof cljs.core.Symbol) {
        return new cljs.core.Keyword(cljs.core.namespace(name), function() {
          var G__11465 = name;
          return cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__11465) : cljs.core.name.call(null, G__11465);
        }(), name.str, null);
      } else {
        if (typeof name === "string") {
          var parts = name.split("/");
          if (parts.length === 2) {
            return new cljs.core.Keyword(parts[0], parts[1], name, null);
          } else {
            return new cljs.core.Keyword(null, parts[0], name, null);
          }
        } else {
          return null;
        }
      }
    }
  };
  var keyword__2 = function(ns, name) {
    return new cljs.core.Keyword(ns, name, [cljs.core.str(cljs.core.truth_(ns) ? [cljs.core.str(ns), cljs.core.str("/")].join("") : null), cljs.core.str(name)].join(""), null);
  };
  keyword = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return keyword__1.call(this, ns);
      case 2:
        return keyword__2.call(this, ns, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
  keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
  return keyword;
}();
cljs.core.LazySeq = function(meta, fn, s, __hash) {
  this.meta = meta;
  this.fn = fn;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.LazySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.LazySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.LazySeq.prototype.sval = function() {
  var self__ = this;
  var coll = this;
  if (self__.fn == null) {
    return self__.s;
  } else {
    self__.s = function() {
      return self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null);
    }();
    self__.fn = null;
    return self__.s;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.next(self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4346__auto__ = self__.__hash;
  if (!(h__4346__auto__ == null)) {
    return h__4346__auto__;
  } else {
    var h__4346__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4346__auto____$1;
    return h__4346__auto____$1;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.first(self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (!(self__.s == null)) {
    return cljs.core.rest(self__.s);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  coll__$1.sval();
  if (self__.s == null) {
    return null;
  } else {
    var ls = self__.s;
    while (true) {
      if (ls instanceof cljs.core.LazySeq) {
        var G__11466 = ls.sval();
        ls = G__11466;
        continue;
      } else {
        self__.s = ls;
        return cljs.core.seq(self__.s);
      }
      break;
    }
  }
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.LazySeq(meta__$1, self__.fn, self__.s, self__.__hash);
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";
cljs.core.LazySeq.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/LazySeq");
};
cljs.core.__GT_LazySeq = function __GT_LazySeq(meta, fn, s, __hash) {
  return new cljs.core.LazySeq(meta, fn, s, __hash);
};
cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4903__auto__ = this;
  return cljs.core.es6_iterator(this__4903__auto__);
};
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end;
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var self__ = this;
  var _ = this;
  self__.buf[self__.end] = o;
  return self__.end = self__.end + 1;
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.ArrayChunk(self__.buf, 0, self__.end);
  self__.buf = null;
  return ret;
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";
cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/ChunkBuffer");
};
cljs.core.__GT_ChunkBuffer = function __GT_ChunkBuffer(buf, end) {
  return new cljs.core.ChunkBuffer(buf, end);
};
cljs.core.chunk_buffer = function chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(new Array(capacity), 0);
};
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 524306;
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, self__.arr[self__.off], self__.off + 1);
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, start, self__.off);
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off === self__.end) {
    throw new Error("-drop-first of empty chunk");
  } else {
    return new cljs.core.ArrayChunk(self__.arr, self__.off + 1, self__.end);
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var self__ = this;
  var coll__$1 = this;
  return self__.arr[self__.off + i];
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (i >= 0 && i < self__.end - self__.off) {
    return self__.arr[self__.off + i];
  } else {
    return not_found;
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end - self__.off;
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";
cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/ArrayChunk");
};
cljs.core.__GT_ArrayChunk = function __GT_ArrayChunk(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk = function() {
  var array_chunk = null;
  var array_chunk__1 = function(arr) {
    return new cljs.core.ArrayChunk(arr, 0, arr.length);
  };
  var array_chunk__2 = function(arr, off) {
    return new cljs.core.ArrayChunk(arr, off, arr.length);
  };
  var array_chunk__3 = function(arr, off, end) {
    return new cljs.core.ArrayChunk(arr, off, end);
  };
  array_chunk = function(arr, off, end) {
    switch(arguments.length) {
      case 1:
        return array_chunk__1.call(this, arr);
      case 2:
        return array_chunk__2.call(this, arr, off);
      case 3:
        return array_chunk__3.call(this, arr, off, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
  array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
  array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
  return array_chunk;
}();
cljs.core.ChunkedCons = function(chunk, more, meta, __hash) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850732;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedCons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ChunkedCons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count(self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk), self__.more, self__.meta, null);
  } else {
    var more__$1 = cljs.core._seq(self__.more);
    if (more__$1 == null) {
      return null;
    } else {
      return more__$1;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4346__auto__ = self__.__hash;
  if (!(h__4346__auto__ == null)) {
    return h__4346__auto__;
  } else {
    var h__4346__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4346__auto____$1;
    return h__4346__auto____$1;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk, 0);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count(self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk), self__.more, self__.meta, null);
  } else {
    if (self__.more == null) {
      return cljs.core.List.EMPTY;
    } else {
      return self__.more;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.chunk;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ChunkedCons(self__.chunk, self__.more, m, self__.__hash);
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons(o, this$__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return null;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";
cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/ChunkedCons");
};
cljs.core.__GT_ChunkedCons = function __GT_ChunkedCons(chunk, more, meta, __hash) {
  return new cljs.core.ChunkedCons(chunk, more, meta, __hash);
};
cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4903__auto__ = this;
  return cljs.core.es6_iterator(this__4903__auto__);
};
cljs.core.chunk_cons = function chunk_cons(chunk, rest) {
  if (cljs.core._count(chunk) === 0) {
    return rest;
  } else {
    return new cljs.core.ChunkedCons(chunk, rest, null, null);
  }
};
cljs.core.chunk_append = function chunk_append(b, x) {
  return b.add(x);
};
cljs.core.chunk = function chunk(b) {
  return b.chunk();
};
cljs.core.chunk_first = function chunk_first(s) {
  return cljs.core._chunked_first(s);
};
cljs.core.chunk_rest = function chunk_rest(s) {
  return cljs.core._chunked_rest(s);
};
cljs.core.chunk_next = function chunk_next(s) {
  if (function() {
    var G__11468 = s;
    if (G__11468) {
      var bit__4599__auto__ = G__11468.cljs$lang$protocol_mask$partition1$ & 1024;
      if (bit__4599__auto__ || G__11468.cljs$core$IChunkedNext$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._chunked_next(s);
  } else {
    return cljs.core.seq(cljs.core._chunked_rest(s));
  }
};
cljs.core.to_array = function to_array(s) {
  var ary = [];
  var s__$1 = s;
  while (true) {
    if (cljs.core.seq(s__$1)) {
      ary.push(cljs.core.first(s__$1));
      var G__11469 = cljs.core.next(s__$1);
      s__$1 = G__11469;
      continue;
    } else {
      return ary;
    }
    break;
  }
};
cljs.core.to_array_2d = function to_array_2d(coll) {
  var ret = new Array(cljs.core.count(coll));
  var i_11470 = 0;
  var xs_11471 = cljs.core.seq(coll);
  while (true) {
    if (xs_11471) {
      ret[i_11470] = cljs.core.to_array(cljs.core.first(xs_11471));
      var G__11472 = i_11470 + 1;
      var G__11473 = cljs.core.next(xs_11471);
      i_11470 = G__11472;
      xs_11471 = G__11473;
      continue;
    } else {
    }
    break;
  }
  return ret;
};
cljs.core.int_array = function() {
  var int_array = null;
  var int_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
    } else {
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
    }
  };
  var int_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_(init_val_or_seq)) {
      var s = cljs.core.seq(init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first(s__$1);
          var G__11476 = i + 1;
          var G__11477 = cljs.core.next(s__$1);
          i = G__11476;
          s__$1 = G__11477;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4812__auto___11478 = size;
      var i_11479 = 0;
      while (true) {
        if (i_11479 < n__4812__auto___11478) {
          a[i_11479] = init_val_or_seq;
          var G__11480 = i_11479 + 1;
          i_11479 = G__11480;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  int_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return int_array__1.call(this, size);
      case 2:
        return int_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
  int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
  return int_array;
}();
cljs.core.long_array = function() {
  var long_array = null;
  var long_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
    } else {
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
    }
  };
  var long_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_(init_val_or_seq)) {
      var s = cljs.core.seq(init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first(s__$1);
          var G__11483 = i + 1;
          var G__11484 = cljs.core.next(s__$1);
          i = G__11483;
          s__$1 = G__11484;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4812__auto___11485 = size;
      var i_11486 = 0;
      while (true) {
        if (i_11486 < n__4812__auto___11485) {
          a[i_11486] = init_val_or_seq;
          var G__11487 = i_11486 + 1;
          i_11486 = G__11487;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  long_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return long_array__1.call(this, size);
      case 2:
        return long_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
  long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
  return long_array;
}();
cljs.core.double_array = function() {
  var double_array = null;
  var double_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
    } else {
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
    }
  };
  var double_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_(init_val_or_seq)) {
      var s = cljs.core.seq(init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first(s__$1);
          var G__11490 = i + 1;
          var G__11491 = cljs.core.next(s__$1);
          i = G__11490;
          s__$1 = G__11491;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4812__auto___11492 = size;
      var i_11493 = 0;
      while (true) {
        if (i_11493 < n__4812__auto___11492) {
          a[i_11493] = init_val_or_seq;
          var G__11494 = i_11493 + 1;
          i_11493 = G__11494;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  double_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return double_array__1.call(this, size);
      case 2:
        return double_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
  double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
  return double_array;
}();
cljs.core.object_array = function() {
  var object_array = null;
  var object_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
    } else {
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
    }
  };
  var object_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_(init_val_or_seq)) {
      var s = cljs.core.seq(init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first(s__$1);
          var G__11497 = i + 1;
          var G__11498 = cljs.core.next(s__$1);
          i = G__11497;
          s__$1 = G__11498;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4812__auto___11499 = size;
      var i_11500 = 0;
      while (true) {
        if (i_11500 < n__4812__auto___11499) {
          a[i_11500] = init_val_or_seq;
          var G__11501 = i_11500 + 1;
          i_11500 = G__11501;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  object_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return object_array__1.call(this, size);
      case 2:
        return object_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
  object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
  return object_array;
}();
cljs.core.bounded_count = function bounded_count(s, n) {
  if (cljs.core.counted_QMARK_(s)) {
    return cljs.core.count(s);
  } else {
    var s__$1 = s;
    var i = n;
    var sum = 0;
    while (true) {
      if (i > 0 && cljs.core.seq(s__$1)) {
        var G__11502 = cljs.core.next(s__$1);
        var G__11503 = i - 1;
        var G__11504 = sum + 1;
        s__$1 = G__11502;
        i = G__11503;
        sum = G__11504;
        continue;
      } else {
        return sum;
      }
      break;
    }
  }
};
cljs.core.spread = function spread(arglist) {
  if (arglist == null) {
    return null;
  } else {
    if (cljs.core.next(arglist) == null) {
      return cljs.core.seq(cljs.core.first(arglist));
    } else {
      return cljs.core.cons(cljs.core.first(arglist), spread(cljs.core.next(arglist)));
    }
  }
};
cljs.core.concat = function() {
  var concat = null;
  var concat__0 = function() {
    return new cljs.core.LazySeq(null, function() {
      return null;
    }, null, null);
  };
  var concat__1 = function(x) {
    return new cljs.core.LazySeq(null, function() {
      return x;
    }, null, null);
  };
  var concat__2 = function(x, y) {
    return new cljs.core.LazySeq(null, function() {
      var s = cljs.core.seq(x);
      if (s) {
        if (cljs.core.chunked_seq_QMARK_(s)) {
          return cljs.core.chunk_cons(cljs.core.chunk_first(s), concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s), y));
        } else {
          return cljs.core.cons(cljs.core.first(s), concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s), y));
        }
      } else {
        return y;
      }
    }, null, null);
  };
  var concat__3 = function() {
    var G__11524__delegate = function(x, y, zs) {
      var cat = function cat(xys, zs__$1) {
        return new cljs.core.LazySeq(null, function() {
          var xys__$1 = cljs.core.seq(xys);
          if (xys__$1) {
            if (cljs.core.chunked_seq_QMARK_(xys__$1)) {
              return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1), cat(cljs.core.chunk_rest(xys__$1), zs__$1));
            } else {
              return cljs.core.cons(cljs.core.first(xys__$1), cat(cljs.core.rest(xys__$1), zs__$1));
            }
          } else {
            if (cljs.core.truth_(zs__$1)) {
              return cat(cljs.core.first(zs__$1), cljs.core.next(zs__$1));
            } else {
              return null;
            }
          }
        }, null, null);
      };
      return cat(concat.cljs$core$IFn$_invoke$arity$2(x, y), zs);
    };
    var G__11524 = function(x, y, var_args) {
      var zs = null;
      if (arguments.length > 2) {
        var G__11525__i = 0, G__11525__a = new Array(arguments.length - 2);
        while (G__11525__i < G__11525__a.length) {
          G__11525__a[G__11525__i] = arguments[G__11525__i + 2];
          ++G__11525__i;
        }
        zs = new cljs.core.IndexedSeq(G__11525__a, 0);
      }
      return G__11524__delegate.call(this, x, y, zs);
    };
    G__11524.cljs$lang$maxFixedArity = 2;
    G__11524.cljs$lang$applyTo = function(arglist__11526) {
      var x = cljs.core.first(arglist__11526);
      arglist__11526 = cljs.core.next(arglist__11526);
      var y = cljs.core.first(arglist__11526);
      var zs = cljs.core.rest(arglist__11526);
      return G__11524__delegate(x, y, zs);
    };
    G__11524.cljs$core$IFn$_invoke$arity$variadic = G__11524__delegate;
    return G__11524;
  }();
  concat = function(x, y, var_args) {
    var zs = var_args;
    switch(arguments.length) {
      case 0:
        return concat__0.call(this);
      case 1:
        return concat__1.call(this, x);
      case 2:
        return concat__2.call(this, x, y);
      default:
        var G__11527 = null;
        if (arguments.length > 2) {
          var G__11528__i = 0, G__11528__a = new Array(arguments.length - 2);
          while (G__11528__i < G__11528__a.length) {
            G__11528__a[G__11528__i] = arguments[G__11528__i + 2];
            ++G__11528__i;
          }
          G__11527 = new cljs.core.IndexedSeq(G__11528__a, 0);
        }
        return concat__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__11527);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  concat.cljs$lang$maxFixedArity = 2;
  concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
  concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
  concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
  concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
  concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
  return concat;
}();
cljs.core.list_STAR_ = function() {
  var list_STAR_ = null;
  var list_STAR___1 = function(args) {
    return cljs.core.seq(args);
  };
  var list_STAR___2 = function(a, args) {
    return cljs.core.cons(a, args);
  };
  var list_STAR___3 = function(a, b, args) {
    return cljs.core.cons(a, cljs.core.cons(b, args));
  };
  var list_STAR___4 = function(a, b, c, args) {
    return cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, args)));
  };
  var list_STAR___5 = function() {
    var G__11529__delegate = function(a, b, c, d, more) {
      return cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, cljs.core.cons(d, cljs.core.spread(more)))));
    };
    var G__11529 = function(a, b, c, d, var_args) {
      var more = null;
      if (arguments.length > 4) {
        var G__11530__i = 0, G__11530__a = new Array(arguments.length - 4);
        while (G__11530__i < G__11530__a.length) {
          G__11530__a[G__11530__i] = arguments[G__11530__i + 4];
          ++G__11530__i;
        }
        more = new cljs.core.IndexedSeq(G__11530__a, 0);
      }
      return G__11529__delegate.call(this, a, b, c, d, more);
    };
    G__11529.cljs$lang$maxFixedArity = 4;
    G__11529.cljs$lang$applyTo = function(arglist__11531) {
      var a = cljs.core.first(arglist__11531);
      arglist__11531 = cljs.core.next(arglist__11531);
      var b = cljs.core.first(arglist__11531);
      arglist__11531 = cljs.core.next(arglist__11531);
      var c = cljs.core.first(arglist__11531);
      arglist__11531 = cljs.core.next(arglist__11531);
      var d = cljs.core.first(arglist__11531);
      var more = cljs.core.rest(arglist__11531);
      return G__11529__delegate(a, b, c, d, more);
    };
    G__11529.cljs$core$IFn$_invoke$arity$variadic = G__11529__delegate;
    return G__11529;
  }();
  list_STAR_ = function(a, b, c, d, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return list_STAR___1.call(this, a);
      case 2:
        return list_STAR___2.call(this, a, b);
      case 3:
        return list_STAR___3.call(this, a, b, c);
      case 4:
        return list_STAR___4.call(this, a, b, c, d);
      default:
        var G__11532 = null;
        if (arguments.length > 4) {
          var G__11533__i = 0, G__11533__a = new Array(arguments.length - 4);
          while (G__11533__i < G__11533__a.length) {
            G__11533__a[G__11533__i] = arguments[G__11533__i + 4];
            ++G__11533__i;
          }
          G__11532 = new cljs.core.IndexedSeq(G__11533__a, 0);
        }
        return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a, b, c, d, G__11532);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  list_STAR_.cljs$lang$maxFixedArity = 4;
  list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
  list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
  list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
  list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
  list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
  list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
  return list_STAR_;
}();
cljs.core.transient$ = function transient$(coll) {
  return cljs.core._as_transient(coll);
};
cljs.core.persistent_BANG_ = function persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_(tcoll);
};
cljs.core.conj_BANG_ = function() {
  var conj_BANG_ = null;
  var conj_BANG___0 = function() {
    return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
  };
  var conj_BANG___1 = function(coll) {
    return coll;
  };
  var conj_BANG___2 = function(tcoll, val) {
    return cljs.core._conj_BANG_(tcoll, val);
  };
  var conj_BANG___3 = function() {
    var G__11534__delegate = function(tcoll, val, vals) {
      while (true) {
        var ntcoll = cljs.core._conj_BANG_(tcoll, val);
        if (cljs.core.truth_(vals)) {
          var G__11535 = ntcoll;
          var G__11536 = cljs.core.first(vals);
          var G__11537 = cljs.core.next(vals);
          tcoll = G__11535;
          val = G__11536;
          vals = G__11537;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__11534 = function(tcoll, val, var_args) {
      var vals = null;
      if (arguments.length > 2) {
        var G__11538__i = 0, G__11538__a = new Array(arguments.length - 2);
        while (G__11538__i < G__11538__a.length) {
          G__11538__a[G__11538__i] = arguments[G__11538__i + 2];
          ++G__11538__i;
        }
        vals = new cljs.core.IndexedSeq(G__11538__a, 0);
      }
      return G__11534__delegate.call(this, tcoll, val, vals);
    };
    G__11534.cljs$lang$maxFixedArity = 2;
    G__11534.cljs$lang$applyTo = function(arglist__11539) {
      var tcoll = cljs.core.first(arglist__11539);
      arglist__11539 = cljs.core.next(arglist__11539);
      var val = cljs.core.first(arglist__11539);
      var vals = cljs.core.rest(arglist__11539);
      return G__11534__delegate(tcoll, val, vals);
    };
    G__11534.cljs$core$IFn$_invoke$arity$variadic = G__11534__delegate;
    return G__11534;
  }();
  conj_BANG_ = function(tcoll, val, var_args) {
    var vals = var_args;
    switch(arguments.length) {
      case 0:
        return conj_BANG___0.call(this);
      case 1:
        return conj_BANG___1.call(this, tcoll);
      case 2:
        return conj_BANG___2.call(this, tcoll, val);
      default:
        var G__11540 = null;
        if (arguments.length > 2) {
          var G__11541__i = 0, G__11541__a = new Array(arguments.length - 2);
          while (G__11541__i < G__11541__a.length) {
            G__11541__a[G__11541__i] = arguments[G__11541__i + 2];
            ++G__11541__i;
          }
          G__11540 = new cljs.core.IndexedSeq(G__11541__a, 0);
        }
        return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, val, G__11540);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  conj_BANG_.cljs$lang$maxFixedArity = 2;
  conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
  conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
  conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
  conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
  conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return conj_BANG_;
}();
cljs.core.assoc_BANG_ = function() {
  var assoc_BANG_ = null;
  var assoc_BANG___3 = function(tcoll, key, val) {
    return cljs.core._assoc_BANG_(tcoll, key, val);
  };
  var assoc_BANG___4 = function() {
    var G__11542__delegate = function(tcoll, key, val, kvs) {
      while (true) {
        var ntcoll = cljs.core._assoc_BANG_(tcoll, key, val);
        if (cljs.core.truth_(kvs)) {
          var G__11543 = ntcoll;
          var G__11544 = cljs.core.first(kvs);
          var G__11545 = cljs.core.second(kvs);
          var G__11546 = cljs.core.nnext(kvs);
          tcoll = G__11543;
          key = G__11544;
          val = G__11545;
          kvs = G__11546;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__11542 = function(tcoll, key, val, var_args) {
      var kvs = null;
      if (arguments.length > 3) {
        var G__11547__i = 0, G__11547__a = new Array(arguments.length - 3);
        while (G__11547__i < G__11547__a.length) {
          G__11547__a[G__11547__i] = arguments[G__11547__i + 3];
          ++G__11547__i;
        }
        kvs = new cljs.core.IndexedSeq(G__11547__a, 0);
      }
      return G__11542__delegate.call(this, tcoll, key, val, kvs);
    };
    G__11542.cljs$lang$maxFixedArity = 3;
    G__11542.cljs$lang$applyTo = function(arglist__11548) {
      var tcoll = cljs.core.first(arglist__11548);
      arglist__11548 = cljs.core.next(arglist__11548);
      var key = cljs.core.first(arglist__11548);
      arglist__11548 = cljs.core.next(arglist__11548);
      var val = cljs.core.first(arglist__11548);
      var kvs = cljs.core.rest(arglist__11548);
      return G__11542__delegate(tcoll, key, val, kvs);
    };
    G__11542.cljs$core$IFn$_invoke$arity$variadic = G__11542__delegate;
    return G__11542;
  }();
  assoc_BANG_ = function(tcoll, key, val, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc_BANG___3.call(this, tcoll, key, val);
      default:
        var G__11549 = null;
        if (arguments.length > 3) {
          var G__11550__i = 0, G__11550__a = new Array(arguments.length - 3);
          while (G__11550__i < G__11550__a.length) {
            G__11550__a[G__11550__i] = arguments[G__11550__i + 3];
            ++G__11550__i;
          }
          G__11549 = new cljs.core.IndexedSeq(G__11550__a, 0);
        }
        return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll, key, val, G__11549);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  assoc_BANG_.cljs$lang$maxFixedArity = 3;
  assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
  assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
  assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
  return assoc_BANG_;
}();
cljs.core.dissoc_BANG_ = function() {
  var dissoc_BANG_ = null;
  var dissoc_BANG___2 = function(tcoll, key) {
    return cljs.core._dissoc_BANG_(tcoll, key);
  };
  var dissoc_BANG___3 = function() {
    var G__11551__delegate = function(tcoll, key, ks) {
      while (true) {
        var ntcoll = cljs.core._dissoc_BANG_(tcoll, key);
        if (cljs.core.truth_(ks)) {
          var G__11552 = ntcoll;
          var G__11553 = cljs.core.first(ks);
          var G__11554 = cljs.core.next(ks);
          tcoll = G__11552;
          key = G__11553;
          ks = G__11554;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__11551 = function(tcoll, key, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        var G__11555__i = 0, G__11555__a = new Array(arguments.length - 2);
        while (G__11555__i < G__11555__a.length) {
          G__11555__a[G__11555__i] = arguments[G__11555__i + 2];
          ++G__11555__i;
        }
        ks = new cljs.core.IndexedSeq(G__11555__a, 0);
      }
      return G__11551__delegate.call(this, tcoll, key, ks);
    };
    G__11551.cljs$lang$maxFixedArity = 2;
    G__11551.cljs$lang$applyTo = function(arglist__11556) {
      var tcoll = cljs.core.first(arglist__11556);
      arglist__11556 = cljs.core.next(arglist__11556);
      var key = cljs.core.first(arglist__11556);
      var ks = cljs.core.rest(arglist__11556);
      return G__11551__delegate(tcoll, key, ks);
    };
    G__11551.cljs$core$IFn$_invoke$arity$variadic = G__11551__delegate;
    return G__11551;
  }();
  dissoc_BANG_ = function(tcoll, key, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 2:
        return dissoc_BANG___2.call(this, tcoll, key);
      default:
        var G__11557 = null;
        if (arguments.length > 2) {
          var G__11558__i = 0, G__11558__a = new Array(arguments.length - 2);
          while (G__11558__i < G__11558__a.length) {
            G__11558__a[G__11558__i] = arguments[G__11558__i + 2];
            ++G__11558__i;
          }
          G__11557 = new cljs.core.IndexedSeq(G__11558__a, 0);
        }
        return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, key, G__11557);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dissoc_BANG_.cljs$lang$maxFixedArity = 2;
  dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
  dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
  dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return dissoc_BANG_;
}();
cljs.core.pop_BANG_ = function pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_(tcoll);
};
cljs.core.disj_BANG_ = function() {
  var disj_BANG_ = null;
  var disj_BANG___2 = function(tcoll, val) {
    return cljs.core._disjoin_BANG_(tcoll, val);
  };
  var disj_BANG___3 = function() {
    var G__11559__delegate = function(tcoll, val, vals) {
      while (true) {
        var ntcoll = cljs.core._disjoin_BANG_(tcoll, val);
        if (cljs.core.truth_(vals)) {
          var G__11560 = ntcoll;
          var G__11561 = cljs.core.first(vals);
          var G__11562 = cljs.core.next(vals);
          tcoll = G__11560;
          val = G__11561;
          vals = G__11562;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__11559 = function(tcoll, val, var_args) {
      var vals = null;
      if (arguments.length > 2) {
        var G__11563__i = 0, G__11563__a = new Array(arguments.length - 2);
        while (G__11563__i < G__11563__a.length) {
          G__11563__a[G__11563__i] = arguments[G__11563__i + 2];
          ++G__11563__i;
        }
        vals = new cljs.core.IndexedSeq(G__11563__a, 0);
      }
      return G__11559__delegate.call(this, tcoll, val, vals);
    };
    G__11559.cljs$lang$maxFixedArity = 2;
    G__11559.cljs$lang$applyTo = function(arglist__11564) {
      var tcoll = cljs.core.first(arglist__11564);
      arglist__11564 = cljs.core.next(arglist__11564);
      var val = cljs.core.first(arglist__11564);
      var vals = cljs.core.rest(arglist__11564);
      return G__11559__delegate(tcoll, val, vals);
    };
    G__11559.cljs$core$IFn$_invoke$arity$variadic = G__11559__delegate;
    return G__11559;
  }();
  disj_BANG_ = function(tcoll, val, var_args) {
    var vals = var_args;
    switch(arguments.length) {
      case 2:
        return disj_BANG___2.call(this, tcoll, val);
      default:
        var G__11565 = null;
        if (arguments.length > 2) {
          var G__11566__i = 0, G__11566__a = new Array(arguments.length - 2);
          while (G__11566__i < G__11566__a.length) {
            G__11566__a[G__11566__i] = arguments[G__11566__i + 2];
            ++G__11566__i;
          }
          G__11565 = new cljs.core.IndexedSeq(G__11566__a, 0);
        }
        return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, val, G__11565);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  disj_BANG_.cljs$lang$maxFixedArity = 2;
  disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
  disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
  disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return disj_BANG_;
}();
cljs.core.apply_to = function apply_to(f, argc, args) {
  var args__$1 = cljs.core.seq(args);
  if (argc === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var a4856 = cljs.core._first(args__$1);
    var args__$2 = cljs.core._rest(args__$1);
    if (argc === 1) {
      if (f.cljs$core$IFn$_invoke$arity$1) {
        return f.cljs$core$IFn$_invoke$arity$1(a4856);
      } else {
        var G__11777 = a4856;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11777) : f.call(null, G__11777);
      }
    } else {
      var b4857 = cljs.core._first(args__$2);
      var args__$3 = cljs.core._rest(args__$2);
      if (argc === 2) {
        if (f.cljs$core$IFn$_invoke$arity$2) {
          return f.cljs$core$IFn$_invoke$arity$2(a4856, b4857);
        } else {
          var G__11778 = a4856;
          var G__11779 = b4857;
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11778, G__11779) : f.call(null, G__11778, G__11779);
        }
      } else {
        var c4858 = cljs.core._first(args__$3);
        var args__$4 = cljs.core._rest(args__$3);
        if (argc === 3) {
          if (f.cljs$core$IFn$_invoke$arity$3) {
            return f.cljs$core$IFn$_invoke$arity$3(a4856, b4857, c4858);
          } else {
            var G__11780 = a4856;
            var G__11781 = b4857;
            var G__11782 = c4858;
            return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__11780, G__11781, G__11782) : f.call(null, G__11780, G__11781, G__11782);
          }
        } else {
          var d4859 = cljs.core._first(args__$4);
          var args__$5 = cljs.core._rest(args__$4);
          if (argc === 4) {
            if (f.cljs$core$IFn$_invoke$arity$4) {
              return f.cljs$core$IFn$_invoke$arity$4(a4856, b4857, c4858, d4859);
            } else {
              var G__11783 = a4856;
              var G__11784 = b4857;
              var G__11785 = c4858;
              var G__11786 = d4859;
              return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__11783, G__11784, G__11785, G__11786) : f.call(null, G__11783, G__11784, G__11785, G__11786);
            }
          } else {
            var e4860 = cljs.core._first(args__$5);
            var args__$6 = cljs.core._rest(args__$5);
            if (argc === 5) {
              if (f.cljs$core$IFn$_invoke$arity$5) {
                return f.cljs$core$IFn$_invoke$arity$5(a4856, b4857, c4858, d4859, e4860);
              } else {
                var G__11787 = a4856;
                var G__11788 = b4857;
                var G__11789 = c4858;
                var G__11790 = d4859;
                var G__11791 = e4860;
                return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__11787, G__11788, G__11789, G__11790, G__11791) : f.call(null, G__11787, G__11788, G__11789, G__11790, G__11791);
              }
            } else {
              var f4861 = cljs.core._first(args__$6);
              var args__$7 = cljs.core._rest(args__$6);
              if (argc === 6) {
                if (f.cljs$core$IFn$_invoke$arity$6) {
                  return f.cljs$core$IFn$_invoke$arity$6(a4856, b4857, c4858, d4859, e4860, f4861);
                } else {
                  var G__11792 = a4856;
                  var G__11793 = b4857;
                  var G__11794 = c4858;
                  var G__11795 = d4859;
                  var G__11796 = e4860;
                  var G__11797 = f4861;
                  return f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__11792, G__11793, G__11794, G__11795, G__11796, G__11797) : f.call(null, G__11792, G__11793, G__11794, G__11795, G__11796, G__11797);
                }
              } else {
                var g4862 = cljs.core._first(args__$7);
                var args__$8 = cljs.core._rest(args__$7);
                if (argc === 7) {
                  if (f.cljs$core$IFn$_invoke$arity$7) {
                    return f.cljs$core$IFn$_invoke$arity$7(a4856, b4857, c4858, d4859, e4860, f4861, g4862);
                  } else {
                    var G__11798 = a4856;
                    var G__11799 = b4857;
                    var G__11800 = c4858;
                    var G__11801 = d4859;
                    var G__11802 = e4860;
                    var G__11803 = f4861;
                    var G__11804 = g4862;
                    return f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__11798, G__11799, G__11800, G__11801, G__11802, G__11803, G__11804) : f.call(null, G__11798, G__11799, G__11800, G__11801, G__11802, G__11803, G__11804);
                  }
                } else {
                  var h4863 = cljs.core._first(args__$8);
                  var args__$9 = cljs.core._rest(args__$8);
                  if (argc === 8) {
                    if (f.cljs$core$IFn$_invoke$arity$8) {
                      return f.cljs$core$IFn$_invoke$arity$8(a4856, b4857, c4858, d4859, e4860, f4861, g4862, h4863);
                    } else {
                      var G__11805 = a4856;
                      var G__11806 = b4857;
                      var G__11807 = c4858;
                      var G__11808 = d4859;
                      var G__11809 = e4860;
                      var G__11810 = f4861;
                      var G__11811 = g4862;
                      var G__11812 = h4863;
                      return f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__11805, G__11806, G__11807, G__11808, G__11809, G__11810, G__11811, G__11812) : f.call(null, G__11805, G__11806, G__11807, G__11808, G__11809, G__11810, G__11811, G__11812);
                    }
                  } else {
                    var i4864 = cljs.core._first(args__$9);
                    var args__$10 = cljs.core._rest(args__$9);
                    if (argc === 9) {
                      if (f.cljs$core$IFn$_invoke$arity$9) {
                        return f.cljs$core$IFn$_invoke$arity$9(a4856, b4857, c4858, d4859, e4860, f4861, g4862, h4863, i4864);
                      } else {
                        var G__11813 = a4856;
                        var G__11814 = b4857;
                        var G__11815 = c4858;
                        var G__11816 = d4859;
                        var G__11817 = e4860;
                        var G__11818 = f4861;
                        var G__11819 = g4862;
                        var G__11820 = h4863;
                        var G__11821 = i4864;
                        return f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__11813, G__11814, G__11815, G__11816, G__11817, G__11818, G__11819, G__11820, G__11821) : f.call(null, G__11813, G__11814, G__11815, G__11816, G__11817, G__11818, G__11819, G__11820, G__11821);
                      }
                    } else {
                      var j4865 = cljs.core._first(args__$10);
                      var args__$11 = cljs.core._rest(args__$10);
                      if (argc === 10) {
                        if (f.cljs$core$IFn$_invoke$arity$10) {
                          return f.cljs$core$IFn$_invoke$arity$10(a4856, b4857, c4858, d4859, e4860, f4861, g4862, h4863, i4864, j4865);
                        } else {
                          var G__11822 = a4856;
                          var G__11823 = b4857;
                          var G__11824 = c4858;
                          var G__11825 = d4859;
                          var G__11826 = e4860;
                          var G__11827 = f4861;
                          var G__11828 = g4862;
                          var G__11829 = h4863;
                          var G__11830 = i4864;
                          var G__11831 = j4865;
                          return f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__11822, G__11823, G__11824, G__11825, G__11826, G__11827, G__11828, G__11829, G__11830, G__11831) : f.call(null, G__11822, G__11823, G__11824, G__11825, G__11826, G__11827, G__11828, G__11829, G__11830, G__11831);
                        }
                      } else {
                        var k4866 = cljs.core._first(args__$11);
                        var args__$12 = cljs.core._rest(args__$11);
                        if (argc === 11) {
                          if (f.cljs$core$IFn$_invoke$arity$11) {
                            return f.cljs$core$IFn$_invoke$arity$11(a4856, b4857, c4858, d4859, e4860, f4861, g4862, h4863, i4864, j4865, k4866);
                          } else {
                            var G__11832 = a4856;
                            var G__11833 = b4857;
                            var G__11834 = c4858;
                            var G__11835 = d4859;
                            var G__11836 = e4860;
                            var G__11837 = f4861;
                            var G__11838 = g4862;
                            var G__11839 = h4863;
                            var G__11840 = i4864;
                            var G__11841 = j4865;
                            var G__11842 = k4866;
                            return f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__11832, G__11833, G__11834, G__11835, G__11836, G__11837, G__11838, G__11839, G__11840, G__11841, G__11842) : f.call(null, G__11832, G__11833, G__11834, G__11835, G__11836, G__11837, G__11838, G__11839, G__11840, G__11841, G__11842);
                          }
                        } else {
                          var l4867 = cljs.core._first(args__$12);
                          var args__$13 = cljs.core._rest(args__$12);
                          if (argc === 12) {
                            if (f.cljs$core$IFn$_invoke$arity$12) {
                              return f.cljs$core$IFn$_invoke$arity$12(a4856, b4857, c4858, d4859, e4860, f4861, g4862, h4863, i4864, j4865, k4866, l4867);
                            } else {
                              var G__11843 = a4856;
                              var G__11844 = b4857;
                              var G__11845 = c4858;
                              var G__11846 = d4859;
                              var G__11847 = e4860;
                              var G__11848 = f4861;
                              var G__11849 = g4862;
                              var G__11850 = h4863;
                              var G__11851 = i4864;
                              var G__11852 = j4865;
                              var G__11853 = k4866;
                              var G__11854 = l4867;
                              return f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__11843, G__11844, G__11845, G__11846, G__11847, G__11848, G__11849, G__11850, G__11851, G__11852, G__11853, G__11854) : f.call(null, G__11843, G__11844, G__11845, G__11846, G__11847, G__11848, G__11849, G__11850, G__11851, G__11852, G__11853, G__11854);
                            }
                          } else {
                            var m4868 = cljs.core._first(args__$13);
                            var args__$14 = cljs.core._rest(args__$13);
                            if (argc === 13) {
                              if (f.cljs$core$IFn$_invoke$arity$13) {
                                return f.cljs$core$IFn$_invoke$arity$13(a4856, b4857, c4858, d4859, e4860, f4861, g4862, h4863, i4864, j4865, k4866, l4867, m4868);
                              } else {
                                var G__11855 = a4856;
                                var G__11856 = b4857;
                                var G__11857 = c4858;
                                var G__11858 = d4859;
                                var G__11859 = e4860;
                                var G__11860 = f4861;
                                var G__11861 = g4862;
                                var G__11862 = h4863;
                                var G__11863 = i4864;
                                var G__11864 = j4865;
                                var G__11865 = k4866;
                                var G__11866 = l4867;
                                var G__11867 = m4868;
                                return f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__11855, G__11856, G__11857, G__11858, G__11859, G__11860, G__11861, G__11862, G__11863, G__11864, G__11865, G__11866, G__11867) : f.call(null, G__11855, G__11856, G__11857, G__11858, G__11859, G__11860, G__11861, G__11862, G__11863, G__11864, G__11865, G__11866, G__11867);
                              }
                            } else {
                              var n4869 = cljs.core._first(args__$14);
                              var args__$15 = cljs.core._rest(args__$14);
                              if (argc === 14) {
                                if (f.cljs$core$IFn$_invoke$arity$14) {
                                  return f.cljs$core$IFn$_invoke$arity$14(a4856, b4857, c4858, d4859, e4860, f4861, g4862, h4863, i4864, j4865, k4866, l4867, m4868, n4869);
                                } else {
                                  var G__11868 = a4856;
                                  var G__11869 = b4857;
                                  var G__11870 = c4858;
                                  var G__11871 = d4859;
                                  var G__11872 = e4860;
                                  var G__11873 = f4861;
                                  var G__11874 = g4862;
                                  var G__11875 = h4863;
                                  var G__11876 = i4864;
                                  var G__11877 = j4865;
                                  var G__11878 = k4866;
                                  var G__11879 = l4867;
                                  var G__11880 = m4868;
                                  var G__11881 = n4869;
                                  return f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__11868, G__11869, G__11870, G__11871, G__11872, G__11873, G__11874, G__11875, G__11876, G__11877, G__11878, G__11879, G__11880, G__11881) : f.call(null, G__11868, G__11869, G__11870, G__11871, G__11872, G__11873, G__11874, G__11875, G__11876, G__11877, G__11878, G__11879, G__11880, G__11881);
                                }
                              } else {
                                var o4870 = cljs.core._first(args__$15);
                                var args__$16 = cljs.core._rest(args__$15);
                                if (argc === 15) {
                                  if (f.cljs$core$IFn$_invoke$arity$15) {
                                    return f.cljs$core$IFn$_invoke$arity$15(a4856, b4857, c4858, d4859, e4860, f4861, g4862, h4863, i4864, j4865, k4866, l4867, m4868, n4869, o4870);
                                  } else {
                                    var G__11882 = a4856;
                                    var G__11883 = b4857;
                                    var G__11884 = c4858;
                                    var G__11885 = d4859;
                                    var G__11886 = e4860;
                                    var G__11887 = f4861;
                                    var G__11888 = g4862;
                                    var G__11889 = h4863;
                                    var G__11890 = i4864;
                                    var G__11891 = j4865;
                                    var G__11892 = k4866;
                                    var G__11893 = l4867;
                                    var G__11894 = m4868;
                                    var G__11895 = n4869;
                                    var G__11896 = o4870;
                                    return f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__11882, G__11883, G__11884, G__11885, G__11886, G__11887, G__11888, G__11889, G__11890, G__11891, G__11892, G__11893, G__11894, G__11895, G__11896) : f.call(null, G__11882, G__11883, G__11884, G__11885, G__11886, G__11887, G__11888, G__11889, G__11890, G__11891, G__11892, G__11893, G__11894, G__11895, G__11896);
                                  }
                                } else {
                                  var p4871 = cljs.core._first(args__$16);
                                  var args__$17 = cljs.core._rest(args__$16);
                                  if (argc === 16) {
                                    if (f.cljs$core$IFn$_invoke$arity$16) {
                                      return f.cljs$core$IFn$_invoke$arity$16(a4856, b4857, c4858, d4859, e4860, f4861, g4862, h4863, i4864, j4865, k4866, l4867, m4868, n4869, o4870, p4871);
                                    } else {
                                      var G__11897 = a4856;
                                      var G__11898 = b4857;
                                      var G__11899 = c4858;
                                      var G__11900 = d4859;
                                      var G__11901 = e4860;
                                      var G__11902 = f4861;
                                      var G__11903 = g4862;
                                      var G__11904 = h4863;
                                      var G__11905 = i4864;
                                      var G__11906 = j4865;
                                      var G__11907 = k4866;
                                      var G__11908 = l4867;
                                      var G__11909 = m4868;
                                      var G__11910 = n4869;
                                      var G__11911 = o4870;
                                      var G__11912 = p4871;
                                      return f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__11897, G__11898, G__11899, G__11900, G__11901, G__11902, G__11903, G__11904, G__11905, G__11906, G__11907, G__11908, G__11909, G__11910, G__11911, G__11912) : f.call(null, G__11897, G__11898, G__11899, G__11900, G__11901, G__11902, G__11903, G__11904, G__11905, G__11906, G__11907, G__11908, G__11909, G__11910, G__11911, G__11912);
                                    }
                                  } else {
                                    var q4872 = cljs.core._first(args__$17);
                                    var args__$18 = cljs.core._rest(args__$17);
                                    if (argc === 17) {
                                      if (f.cljs$core$IFn$_invoke$arity$17) {
                                        return f.cljs$core$IFn$_invoke$arity$17(a4856, b4857, c4858, d4859, e4860, f4861, g4862, h4863, i4864, j4865, k4866, l4867, m4868, n4869, o4870, p4871, q4872);
                                      } else {
                                        var G__11913 = a4856;
                                        var G__11914 = b4857;
                                        var G__11915 = c4858;
                                        var G__11916 = d4859;
                                        var G__11917 = e4860;
                                        var G__11918 = f4861;
                                        var G__11919 = g4862;
                                        var G__11920 = h4863;
                                        var G__11921 = i4864;
                                        var G__11922 = j4865;
                                        var G__11923 = k4866;
                                        var G__11924 = l4867;
                                        var G__11925 = m4868;
                                        var G__11926 = n4869;
                                        var G__11927 = o4870;
                                        var G__11928 = p4871;
                                        var G__11929 = q4872;
                                        return f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__11913, G__11914, G__11915, G__11916, G__11917, G__11918, G__11919, G__11920, G__11921, G__11922, G__11923, G__11924, G__11925, G__11926, G__11927, G__11928, G__11929) : f.call(null, G__11913, G__11914, G__11915, G__11916, G__11917, G__11918, G__11919, G__11920, G__11921, G__11922, G__11923, G__11924, G__11925, G__11926, G__11927, G__11928, G__11929);
                                      }
                                    } else {
                                      var r4873 = cljs.core._first(args__$18);
                                      var args__$19 = cljs.core._rest(args__$18);
                                      if (argc === 18) {
                                        if (f.cljs$core$IFn$_invoke$arity$18) {
                                          return f.cljs$core$IFn$_invoke$arity$18(a4856, b4857, c4858, d4859, e4860, f4861, g4862, h4863, i4864, j4865, k4866, l4867, m4868, n4869, o4870, p4871, q4872, r4873);
                                        } else {
                                          var G__11930 = a4856;
                                          var G__11931 = b4857;
                                          var G__11932 = c4858;
                                          var G__11933 = d4859;
                                          var G__11934 = e4860;
                                          var G__11935 = f4861;
                                          var G__11936 = g4862;
                                          var G__11937 = h4863;
                                          var G__11938 = i4864;
                                          var G__11939 = j4865;
                                          var G__11940 = k4866;
                                          var G__11941 = l4867;
                                          var G__11942 = m4868;
                                          var G__11943 = n4869;
                                          var G__11944 = o4870;
                                          var G__11945 = p4871;
                                          var G__11946 = q4872;
                                          var G__11947 = r4873;
                                          return f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__11930, G__11931, G__11932, G__11933, G__11934, G__11935, G__11936, G__11937, G__11938, G__11939, G__11940, G__11941, G__11942, G__11943, G__11944, G__11945, G__11946, G__11947) : f.call(null, G__11930, G__11931, G__11932, G__11933, G__11934, G__11935, G__11936, G__11937, G__11938, G__11939, G__11940, G__11941, G__11942, G__11943, G__11944, G__11945, G__11946, G__11947);
                                        }
                                      } else {
                                        var s4874 = cljs.core._first(args__$19);
                                        var args__$20 = cljs.core._rest(args__$19);
                                        if (argc === 19) {
                                          if (f.cljs$core$IFn$_invoke$arity$19) {
                                            return f.cljs$core$IFn$_invoke$arity$19(a4856, b4857, c4858, d4859, e4860, f4861, g4862, h4863, i4864, j4865, k4866, l4867, m4868, n4869, o4870, p4871, q4872, r4873, s4874);
                                          } else {
                                            var G__11948 = a4856;
                                            var G__11949 = b4857;
                                            var G__11950 = c4858;
                                            var G__11951 = d4859;
                                            var G__11952 = e4860;
                                            var G__11953 = f4861;
                                            var G__11954 = g4862;
                                            var G__11955 = h4863;
                                            var G__11956 = i4864;
                                            var G__11957 = j4865;
                                            var G__11958 = k4866;
                                            var G__11959 = l4867;
                                            var G__11960 = m4868;
                                            var G__11961 = n4869;
                                            var G__11962 = o4870;
                                            var G__11963 = p4871;
                                            var G__11964 = q4872;
                                            var G__11965 = r4873;
                                            var G__11966 = s4874;
                                            return f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__11948, G__11949, G__11950, G__11951, G__11952, G__11953, G__11954, G__11955, G__11956, G__11957, G__11958, G__11959, G__11960, G__11961, G__11962, G__11963, G__11964, G__11965, G__11966) : f.call(null, G__11948, G__11949, G__11950, G__11951, G__11952, G__11953, G__11954, G__11955, G__11956, G__11957, G__11958, G__11959, G__11960, G__11961, G__11962, G__11963, G__11964, G__11965, 
                                            G__11966);
                                          }
                                        } else {
                                          var t4875 = cljs.core._first(args__$20);
                                          var args__$21 = cljs.core._rest(args__$20);
                                          if (argc === 20) {
                                            if (f.cljs$core$IFn$_invoke$arity$20) {
                                              return f.cljs$core$IFn$_invoke$arity$20(a4856, b4857, c4858, d4859, e4860, f4861, g4862, h4863, i4864, j4865, k4866, l4867, m4868, n4869, o4870, p4871, q4872, r4873, s4874, t4875);
                                            } else {
                                              var G__11967 = a4856;
                                              var G__11968 = b4857;
                                              var G__11969 = c4858;
                                              var G__11970 = d4859;
                                              var G__11971 = e4860;
                                              var G__11972 = f4861;
                                              var G__11973 = g4862;
                                              var G__11974 = h4863;
                                              var G__11975 = i4864;
                                              var G__11976 = j4865;
                                              var G__11977 = k4866;
                                              var G__11978 = l4867;
                                              var G__11979 = m4868;
                                              var G__11980 = n4869;
                                              var G__11981 = o4870;
                                              var G__11982 = p4871;
                                              var G__11983 = q4872;
                                              var G__11984 = r4873;
                                              var G__11985 = s4874;
                                              var G__11986 = t4875;
                                              return f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__11967, G__11968, G__11969, G__11970, G__11971, G__11972, G__11973, G__11974, G__11975, G__11976, G__11977, G__11978, G__11979, G__11980, G__11981, G__11982, G__11983, G__11984, G__11985, G__11986) : f.call(null, G__11967, G__11968, G__11969, G__11970, G__11971, G__11972, G__11973, G__11974, G__11975, G__11976, G__11977, G__11978, G__11979, G__11980, G__11981, G__11982, G__11983, 
                                              G__11984, G__11985, G__11986);
                                            }
                                          } else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply = function() {
  var apply = null;
  var apply__2 = function(f, args) {
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count(args, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to(f, bc, args);
      } else {
        return f.cljs$lang$applyTo(args);
      }
    } else {
      return f.apply(f, cljs.core.to_array(args));
    }
  };
  var apply__3 = function(f, x, args) {
    var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to(f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array(arglist));
    }
  };
  var apply__4 = function(f, x, y, args) {
    var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x, y, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to(f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array(arglist));
    }
  };
  var apply__5 = function(f, x, y, z, args) {
    var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x, y, z, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to(f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array(arglist));
    }
  };
  var apply__6 = function() {
    var G__11987__delegate = function(f, a, b, c, d, args) {
      var arglist = cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, cljs.core.cons(d, cljs.core.spread(args)))));
      var fixed_arity = f.cljs$lang$maxFixedArity;
      if (f.cljs$lang$applyTo) {
        var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
        if (bc <= fixed_arity) {
          return cljs.core.apply_to(f, bc, arglist);
        } else {
          return f.cljs$lang$applyTo(arglist);
        }
      } else {
        return f.apply(f, cljs.core.to_array(arglist));
      }
    };
    var G__11987 = function(f, a, b, c, d, var_args) {
      var args = null;
      if (arguments.length > 5) {
        var G__11988__i = 0, G__11988__a = new Array(arguments.length - 5);
        while (G__11988__i < G__11988__a.length) {
          G__11988__a[G__11988__i] = arguments[G__11988__i + 5];
          ++G__11988__i;
        }
        args = new cljs.core.IndexedSeq(G__11988__a, 0);
      }
      return G__11987__delegate.call(this, f, a, b, c, d, args);
    };
    G__11987.cljs$lang$maxFixedArity = 5;
    G__11987.cljs$lang$applyTo = function(arglist__11989) {
      var f = cljs.core.first(arglist__11989);
      arglist__11989 = cljs.core.next(arglist__11989);
      var a = cljs.core.first(arglist__11989);
      arglist__11989 = cljs.core.next(arglist__11989);
      var b = cljs.core.first(arglist__11989);
      arglist__11989 = cljs.core.next(arglist__11989);
      var c = cljs.core.first(arglist__11989);
      arglist__11989 = cljs.core.next(arglist__11989);
      var d = cljs.core.first(arglist__11989);
      var args = cljs.core.rest(arglist__11989);
      return G__11987__delegate(f, a, b, c, d, args);
    };
    G__11987.cljs$core$IFn$_invoke$arity$variadic = G__11987__delegate;
    return G__11987;
  }();
  apply = function(f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return apply__2.call(this, f, a);
      case 3:
        return apply__3.call(this, f, a, b);
      case 4:
        return apply__4.call(this, f, a, b, c);
      case 5:
        return apply__5.call(this, f, a, b, c, d);
      default:
        var G__11990 = null;
        if (arguments.length > 5) {
          var G__11991__i = 0, G__11991__a = new Array(arguments.length - 5);
          while (G__11991__i < G__11991__a.length) {
            G__11991__a[G__11991__i] = arguments[G__11991__i + 5];
            ++G__11991__i;
          }
          G__11990 = new cljs.core.IndexedSeq(G__11991__a, 0);
        }
        return apply__6.cljs$core$IFn$_invoke$arity$variadic(f, a, b, c, d, G__11990);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  apply.cljs$lang$maxFixedArity = 5;
  apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
  apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
  apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
  apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
  apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
  apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
  return apply;
}();
cljs.core.vary_meta = function() {
  var vary_meta = null;
  var vary_meta__2 = function(obj, f) {
    return cljs.core.with_meta(obj, function() {
      var G__12007 = cljs.core.meta(obj);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12007) : f.call(null, G__12007);
    }());
  };
  var vary_meta__3 = function(obj, f, a) {
    return cljs.core.with_meta(obj, function() {
      var G__12008 = cljs.core.meta(obj);
      var G__12009 = a;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12008, G__12009) : f.call(null, G__12008, G__12009);
    }());
  };
  var vary_meta__4 = function(obj, f, a, b) {
    return cljs.core.with_meta(obj, function() {
      var G__12010 = cljs.core.meta(obj);
      var G__12011 = a;
      var G__12012 = b;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__12010, G__12011, G__12012) : f.call(null, G__12010, G__12011, G__12012);
    }());
  };
  var vary_meta__5 = function(obj, f, a, b, c) {
    return cljs.core.with_meta(obj, function() {
      var G__12013 = cljs.core.meta(obj);
      var G__12014 = a;
      var G__12015 = b;
      var G__12016 = c;
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__12013, G__12014, G__12015, G__12016) : f.call(null, G__12013, G__12014, G__12015, G__12016);
    }());
  };
  var vary_meta__6 = function(obj, f, a, b, c, d) {
    return cljs.core.with_meta(obj, function() {
      var G__12017 = cljs.core.meta(obj);
      var G__12018 = a;
      var G__12019 = b;
      var G__12020 = c;
      var G__12021 = d;
      return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__12017, G__12018, G__12019, G__12020, G__12021) : f.call(null, G__12017, G__12018, G__12019, G__12020, G__12021);
    }());
  };
  var vary_meta__7 = function() {
    var G__12022__delegate = function(obj, f, a, b, c, d, args) {
      return cljs.core.with_meta(obj, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.meta(obj), a, b, c, cljs.core.array_seq([d, args], 0)));
    };
    var G__12022 = function(obj, f, a, b, c, d, var_args) {
      var args = null;
      if (arguments.length > 6) {
        var G__12023__i = 0, G__12023__a = new Array(arguments.length - 6);
        while (G__12023__i < G__12023__a.length) {
          G__12023__a[G__12023__i] = arguments[G__12023__i + 6];
          ++G__12023__i;
        }
        args = new cljs.core.IndexedSeq(G__12023__a, 0);
      }
      return G__12022__delegate.call(this, obj, f, a, b, c, d, args);
    };
    G__12022.cljs$lang$maxFixedArity = 6;
    G__12022.cljs$lang$applyTo = function(arglist__12024) {
      var obj = cljs.core.first(arglist__12024);
      arglist__12024 = cljs.core.next(arglist__12024);
      var f = cljs.core.first(arglist__12024);
      arglist__12024 = cljs.core.next(arglist__12024);
      var a = cljs.core.first(arglist__12024);
      arglist__12024 = cljs.core.next(arglist__12024);
      var b = cljs.core.first(arglist__12024);
      arglist__12024 = cljs.core.next(arglist__12024);
      var c = cljs.core.first(arglist__12024);
      arglist__12024 = cljs.core.next(arglist__12024);
      var d = cljs.core.first(arglist__12024);
      var args = cljs.core.rest(arglist__12024);
      return G__12022__delegate(obj, f, a, b, c, d, args);
    };
    G__12022.cljs$core$IFn$_invoke$arity$variadic = G__12022__delegate;
    return G__12022;
  }();
  vary_meta = function(obj, f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return vary_meta__2.call(this, obj, f);
      case 3:
        return vary_meta__3.call(this, obj, f, a);
      case 4:
        return vary_meta__4.call(this, obj, f, a, b);
      case 5:
        return vary_meta__5.call(this, obj, f, a, b, c);
      case 6:
        return vary_meta__6.call(this, obj, f, a, b, c, d);
      default:
        var G__12025 = null;
        if (arguments.length > 6) {
          var G__12026__i = 0, G__12026__a = new Array(arguments.length - 6);
          while (G__12026__i < G__12026__a.length) {
            G__12026__a[G__12026__i] = arguments[G__12026__i + 6];
            ++G__12026__i;
          }
          G__12025 = new cljs.core.IndexedSeq(G__12026__a, 0);
        }
        return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj, f, a, b, c, d, G__12025);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  vary_meta.cljs$lang$maxFixedArity = 6;
  vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
  vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
  vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
  vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
  vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
  vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
  vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
  return vary_meta;
}();
cljs.core.not_EQ_ = function() {
  var not_EQ_ = null;
  var not_EQ___1 = function(x) {
    return false;
  };
  var not_EQ___2 = function(x, y) {
    return!cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y);
  };
  var not_EQ___3 = function() {
    var G__12027__delegate = function(x, y, more) {
      return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_, x, y, more));
    };
    var G__12027 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__12028__i = 0, G__12028__a = new Array(arguments.length - 2);
        while (G__12028__i < G__12028__a.length) {
          G__12028__a[G__12028__i] = arguments[G__12028__i + 2];
          ++G__12028__i;
        }
        more = new cljs.core.IndexedSeq(G__12028__a, 0);
      }
      return G__12027__delegate.call(this, x, y, more);
    };
    G__12027.cljs$lang$maxFixedArity = 2;
    G__12027.cljs$lang$applyTo = function(arglist__12029) {
      var x = cljs.core.first(arglist__12029);
      arglist__12029 = cljs.core.next(arglist__12029);
      var y = cljs.core.first(arglist__12029);
      var more = cljs.core.rest(arglist__12029);
      return G__12027__delegate(x, y, more);
    };
    G__12027.cljs$core$IFn$_invoke$arity$variadic = G__12027__delegate;
    return G__12027;
  }();
  not_EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return not_EQ___1.call(this, x);
      case 2:
        return not_EQ___2.call(this, x, y);
      default:
        var G__12030 = null;
        if (arguments.length > 2) {
          var G__12031__i = 0, G__12031__a = new Array(arguments.length - 2);
          while (G__12031__i < G__12031__a.length) {
            G__12031__a[G__12031__i] = arguments[G__12031__i + 2];
            ++G__12031__i;
          }
          G__12030 = new cljs.core.IndexedSeq(G__12031__a, 0);
        }
        return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__12030);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  not_EQ_.cljs$lang$maxFixedArity = 2;
  not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
  not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
  not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
  not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return not_EQ_;
}();
cljs.core.not_empty = function not_empty(coll) {
  if (cljs.core.seq(coll)) {
    return coll;
  } else {
    return null;
  }
};
cljs.core.nil_iter = function nil_iter() {
  if (typeof cljs.core.t12035 !== "undefined") {
  } else {
    cljs.core.t12035 = function(nil_iter, meta12036) {
      this.nil_iter = nil_iter;
      this.meta12036 = meta12036;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.t12035.prototype.hasNext = function() {
      var self__ = this;
      var _ = this;
      return false;
    };
    cljs.core.t12035.prototype.next = function() {
      var self__ = this;
      var _ = this;
      return new Error("No such element");
    };
    cljs.core.t12035.prototype.remove = function() {
      var self__ = this;
      var _ = this;
      return new Error("Unsupported operation");
    };
    cljs.core.t12035.prototype.cljs$core$IMeta$_meta$arity$1 = function(_12037) {
      var self__ = this;
      var _12037__$1 = this;
      return self__.meta12036;
    };
    cljs.core.t12035.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_12037, meta12036__$1) {
      var self__ = this;
      var _12037__$1 = this;
      return new cljs.core.t12035(self__.nil_iter, meta12036__$1);
    };
    cljs.core.t12035.cljs$lang$type = true;
    cljs.core.t12035.cljs$lang$ctorStr = "cljs.core/t12035";
    cljs.core.t12035.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
      return cljs.core._write(writer__4513__auto__, "cljs.core/t12035");
    };
    cljs.core.__GT_t12035 = function __GT_t12035(nil_iter__$1, meta12036) {
      return new cljs.core.t12035(nil_iter__$1, meta12036);
    };
  }
  return new cljs.core.t12035(nil_iter, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.StringIter = function(s, i) {
  this.s = s;
  this.i = i;
};
cljs.core.StringIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.s.length;
};
cljs.core.StringIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.s.charAt(self__.i);
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.StringIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.StringIter.cljs$lang$type = true;
cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";
cljs.core.StringIter.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/StringIter");
};
cljs.core.__GT_StringIter = function __GT_StringIter(s, i) {
  return new cljs.core.StringIter(s, i);
};
cljs.core.string_iter = function string_iter(x) {
  return new cljs.core.StringIter(x, 0);
};
cljs.core.ArrayIter = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.ArrayIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.ArrayIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.ArrayIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.ArrayIter.cljs$lang$type = true;
cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";
cljs.core.ArrayIter.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/ArrayIter");
};
cljs.core.__GT_ArrayIter = function __GT_ArrayIter(arr, i) {
  return new cljs.core.ArrayIter(arr, i);
};
cljs.core.array_iter = function array_iter(x) {
  return new cljs.core.ArrayIter(x, 0);
};
cljs.core.INIT = {};
cljs.core.START = {};
cljs.core.SeqIter = function(_seq, _next) {
  this._seq = _seq;
  this._next = _next;
};
cljs.core.SeqIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__._seq === cljs.core.INIT) {
    self__._seq = cljs.core.START;
    self__._next = cljs.core.seq(self__._next);
  } else {
    if (self__._seq === self__._next) {
      self__._next = cljs.core.next(self__._seq);
    } else {
    }
  }
  return!(self__._next == null);
};
cljs.core.SeqIter.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (cljs.core.not(this$.hasNext())) {
    throw new Error("No such element");
  } else {
    self__._seq = self__._next;
    return cljs.core.first(self__._next);
  }
};
cljs.core.SeqIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.SeqIter.cljs$lang$type = true;
cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";
cljs.core.SeqIter.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/SeqIter");
};
cljs.core.__GT_SeqIter = function __GT_SeqIter(_seq, _next) {
  return new cljs.core.SeqIter(_seq, _next);
};
cljs.core.seq_iter = function seq_iter(coll) {
  return new cljs.core.SeqIter(cljs.core.INIT, coll);
};
cljs.core.iter = function iter(coll) {
  if (coll == null) {
    return cljs.core.nil_iter();
  } else {
    if (typeof coll === "string") {
      return cljs.core.string_iter(coll);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_iter(coll);
      } else {
        if (cljs.core.iterable_QMARK_(coll)) {
          return cljs.core._iterator(coll);
        } else {
          if (cljs.core.seqable_QMARK_(coll)) {
            return cljs.core.seq_iter(coll);
          } else {
            throw new Error([cljs.core.str("Cannot create iterator from "), cljs.core.str(coll)].join(""));
          }
        }
      }
    }
  }
};
cljs.core.lazy_transformer = function lazy_transformer(stepper) {
  return new cljs.core.LazyTransformer(stepper, null, null, null);
};
cljs.core.Stepper = function(xform, iter) {
  this.xform = xform;
  this.iter = iter;
};
cljs.core.Stepper.prototype.step = function(lt) {
  var self__ = this;
  var this$ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__3913__auto__ = !(lt.stepper == null);
      if (and__3913__auto__) {
        return self__.iter.hasNext();
      } else {
        return and__3913__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_(function() {
        var G__12038 = lt;
        var G__12039 = self__.iter.next();
        return self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__12038, G__12039) : self__.xform.call(null, G__12038, G__12039);
      }())) {
        if (lt.rest == null) {
        } else {
          lt.rest.stepper = null;
        }
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    var G__12040 = lt;
    return self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__12040) : self__.xform.call(null, G__12040);
  }
};
cljs.core.Stepper.cljs$lang$type = true;
cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";
cljs.core.Stepper.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/Stepper");
};
cljs.core.__GT_Stepper = function __GT_Stepper(xform, iter) {
  return new cljs.core.Stepper(xform, iter);
};
cljs.core.stepper = function stepper(xform, iter) {
  var stepfn = function() {
    var stepfn = null;
    var stepfn__1 = function(result) {
      var lt = cljs.core.reduced_QMARK_(result) ? cljs.core.deref(result) : result;
      lt.stepper = null;
      return result;
    };
    var stepfn__2 = function(result, input) {
      var lt = result;
      lt.first = input;
      lt.rest = cljs.core.lazy_transformer(lt.stepper);
      lt.stepper = null;
      return lt.rest;
    };
    stepfn = function(result, input) {
      switch(arguments.length) {
        case 1:
          return stepfn__1.call(this, result);
        case 2:
          return stepfn__2.call(this, result, input);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
    stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
    return stepfn;
  }();
  return new cljs.core.Stepper(function() {
    var G__12042 = stepfn;
    return xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__12042) : xform.call(null, G__12042);
  }(), iter);
};
cljs.core.MultiStepper = function(xform, iters, nexts) {
  this.xform = xform;
  this.iters = iters;
  this.nexts = nexts;
};
cljs.core.MultiStepper.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var iters__$1 = cljs.core.seq(self__.iters);
  while (true) {
    if (!(iters__$1 == null)) {
      var iter = cljs.core.first(iters__$1);
      if (cljs.core.not(iter.hasNext())) {
        return false;
      } else {
        var G__12044 = cljs.core.next(iters__$1);
        iters__$1 = G__12044;
        continue;
      }
    } else {
      return true;
    }
    break;
  }
};
cljs.core.MultiStepper.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var n__4812__auto___12045 = self__.iters.length;
  var i_12046 = 0;
  while (true) {
    if (i_12046 < n__4812__auto___12045) {
      self__.nexts[i_12046] = self__.iters[i_12046].next();
      var G__12047 = i_12046 + 1;
      i_12046 = G__12047;
      continue;
    } else {
    }
    break;
  }
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts, 0);
};
cljs.core.MultiStepper.prototype.step = function(lt) {
  var self__ = this;
  var this$ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__3913__auto__ = !(lt.stepper == null);
      if (and__3913__auto__) {
        return this$.hasNext();
      } else {
        return and__3913__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform, cljs.core.cons(lt, this$.next())))) {
        if (lt.rest == null) {
        } else {
          lt.rest.stepper = null;
        }
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    var G__12043 = lt;
    return self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__12043) : self__.xform.call(null, G__12043);
  }
};
cljs.core.MultiStepper.cljs$lang$type = true;
cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";
cljs.core.MultiStepper.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/MultiStepper");
};
cljs.core.__GT_MultiStepper = function __GT_MultiStepper(xform, iters, nexts) {
  return new cljs.core.MultiStepper(xform, iters, nexts);
};
cljs.core.multi_stepper = function() {
  var multi_stepper = null;
  var multi_stepper__2 = function(xform, iters) {
    return multi_stepper.cljs$core$IFn$_invoke$arity$3(xform, iters, new Array(iters.length));
  };
  var multi_stepper__3 = function(xform, iters, nexts) {
    var stepfn = function() {
      var stepfn = null;
      var stepfn__1 = function(result) {
        var lt = cljs.core.reduced_QMARK_(result) ? cljs.core.deref(result) : result;
        lt.stepper = null;
        return lt;
      };
      var stepfn__2 = function(result, input) {
        var lt = result;
        lt.first = input;
        lt.rest = cljs.core.lazy_transformer(lt.stepper);
        lt.stepper = null;
        return lt.rest;
      };
      stepfn = function(result, input) {
        switch(arguments.length) {
          case 1:
            return stepfn__1.call(this, result);
          case 2:
            return stepfn__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
      stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
      return stepfn;
    }();
    return new cljs.core.MultiStepper(function() {
      var G__12052 = stepfn;
      return xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__12052) : xform.call(null, G__12052);
    }(), iters, nexts);
  };
  multi_stepper = function(xform, iters, nexts) {
    switch(arguments.length) {
      case 2:
        return multi_stepper__2.call(this, xform, iters);
      case 3:
        return multi_stepper__3.call(this, xform, iters, nexts);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
  multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
  return multi_stepper;
}();
cljs.core.LazyTransformer = function(stepper, first, rest, meta) {
  this.stepper = stepper;
  this.first = first;
  this.rest = rest;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31719628;
};
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core._seq(self__.rest);
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return self__.first;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    self__.stepper.step(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return this$__$1;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.hash_ordered_coll(this$__$1);
};
cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  var s = cljs.core._seq(this$__$1);
  if (!(s == null)) {
    return cljs.core.equiv_sequential(this$__$1, other);
  } else {
    return cljs.core.sequential_QMARK_(other) && cljs.core.seq(other) == null;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons(o, cljs.core._seq(this$__$1));
};
cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this$, new_meta) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.LazyTransformer(self__.stepper, self__.first, self__.rest, new_meta);
};
cljs.core.LazyTransformer.cljs$lang$type = true;
cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";
cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/LazyTransformer");
};
cljs.core.__GT_LazyTransformer = function __GT_LazyTransformer(stepper, first, rest, meta) {
  return new cljs.core.LazyTransformer(stepper, first, rest, meta);
};
cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4903__auto__ = this;
  return cljs.core.es6_iterator(this__4903__auto__);
};
cljs.core.LazyTransformer.create = function(xform, coll) {
  return new cljs.core.LazyTransformer(cljs.core.stepper(xform, cljs.core.iter(coll)), null, null, null);
};
cljs.core.LazyTransformer.createMulti = function(xform, colls) {
  var iters = [];
  var seq__12053_12057 = cljs.core.seq(colls);
  var chunk__12054_12058 = null;
  var count__12055_12059 = 0;
  var i__12056_12060 = 0;
  while (true) {
    if (i__12056_12060 < count__12055_12059) {
      var coll_12061 = chunk__12054_12058.cljs$core$IIndexed$_nth$arity$2(null, i__12056_12060);
      iters.push(cljs.core.iter(coll_12061));
      var G__12062 = seq__12053_12057;
      var G__12063 = chunk__12054_12058;
      var G__12064 = count__12055_12059;
      var G__12065 = i__12056_12060 + 1;
      seq__12053_12057 = G__12062;
      chunk__12054_12058 = G__12063;
      count__12055_12059 = G__12064;
      i__12056_12060 = G__12065;
      continue;
    } else {
      var temp__4126__auto___12066 = cljs.core.seq(seq__12053_12057);
      if (temp__4126__auto___12066) {
        var seq__12053_12067__$1 = temp__4126__auto___12066;
        if (cljs.core.chunked_seq_QMARK_(seq__12053_12067__$1)) {
          var c__4712__auto___12068 = cljs.core.chunk_first(seq__12053_12067__$1);
          var G__12069 = cljs.core.chunk_rest(seq__12053_12067__$1);
          var G__12070 = c__4712__auto___12068;
          var G__12071 = cljs.core.count(c__4712__auto___12068);
          var G__12072 = 0;
          seq__12053_12057 = G__12069;
          chunk__12054_12058 = G__12070;
          count__12055_12059 = G__12071;
          i__12056_12060 = G__12072;
          continue;
        } else {
          var coll_12073 = cljs.core.first(seq__12053_12067__$1);
          iters.push(cljs.core.iter(coll_12073));
          var G__12074 = cljs.core.next(seq__12053_12067__$1);
          var G__12075 = null;
          var G__12076 = 0;
          var G__12077 = 0;
          seq__12053_12057 = G__12074;
          chunk__12054_12058 = G__12075;
          count__12055_12059 = G__12076;
          i__12056_12060 = G__12077;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform, iters, new Array(iters.length)), null, null, null);
};
cljs.core.sequence = function() {
  var sequence = null;
  var sequence__1 = function(coll) {
    if (cljs.core.seq_QMARK_(coll)) {
      return coll;
    } else {
      var or__3925__auto__ = cljs.core.seq(coll);
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  };
  var sequence__2 = function(xform, coll) {
    return cljs.core.LazyTransformer.create(xform, coll);
  };
  var sequence__3 = function() {
    var G__12078__delegate = function(xform, coll, colls) {
      return cljs.core.LazyTransformer.createMulti(xform, cljs.core.to_array(cljs.core.cons(coll, colls)));
    };
    var G__12078 = function(xform, coll, var_args) {
      var colls = null;
      if (arguments.length > 2) {
        var G__12079__i = 0, G__12079__a = new Array(arguments.length - 2);
        while (G__12079__i < G__12079__a.length) {
          G__12079__a[G__12079__i] = arguments[G__12079__i + 2];
          ++G__12079__i;
        }
        colls = new cljs.core.IndexedSeq(G__12079__a, 0);
      }
      return G__12078__delegate.call(this, xform, coll, colls);
    };
    G__12078.cljs$lang$maxFixedArity = 2;
    G__12078.cljs$lang$applyTo = function(arglist__12080) {
      var xform = cljs.core.first(arglist__12080);
      arglist__12080 = cljs.core.next(arglist__12080);
      var coll = cljs.core.first(arglist__12080);
      var colls = cljs.core.rest(arglist__12080);
      return G__12078__delegate(xform, coll, colls);
    };
    G__12078.cljs$core$IFn$_invoke$arity$variadic = G__12078__delegate;
    return G__12078;
  }();
  sequence = function(xform, coll, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 1:
        return sequence__1.call(this, xform);
      case 2:
        return sequence__2.call(this, xform, coll);
      default:
        var G__12081 = null;
        if (arguments.length > 2) {
          var G__12082__i = 0, G__12082__a = new Array(arguments.length - 2);
          while (G__12082__i < G__12082__a.length) {
            G__12082__a[G__12082__i] = arguments[G__12082__i + 2];
            ++G__12082__i;
          }
          G__12081 = new cljs.core.IndexedSeq(G__12082__a, 0);
        }
        return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform, coll, G__12081);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sequence.cljs$lang$maxFixedArity = 2;
  sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
  sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
  sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
  sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
  return sequence;
}();
cljs.core.every_QMARK_ = function every_QMARK_(pred, coll) {
  while (true) {
    if (cljs.core.seq(coll) == null) {
      return true;
    } else {
      if (cljs.core.truth_(function() {
        var G__12084 = cljs.core.first(coll);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__12084) : pred.call(null, G__12084);
      }())) {
        var G__12085 = pred;
        var G__12086 = cljs.core.next(coll);
        pred = G__12085;
        coll = G__12086;
        continue;
      } else {
        return false;
      }
    }
    break;
  }
};
cljs.core.not_every_QMARK_ = function not_every_QMARK_(pred, coll) {
  return!cljs.core.every_QMARK_(pred, coll);
};
cljs.core.some = function some(pred, coll) {
  while (true) {
    if (cljs.core.seq(coll)) {
      var or__3925__auto__ = function() {
        var G__12090 = cljs.core.first(coll);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__12090) : pred.call(null, G__12090);
      }();
      if (cljs.core.truth_(or__3925__auto__)) {
        return or__3925__auto__;
      } else {
        var G__12091 = pred;
        var G__12092 = cljs.core.next(coll);
        pred = G__12091;
        coll = G__12092;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.not_any_QMARK_ = function not_any_QMARK_(pred, coll) {
  return cljs.core.not(cljs.core.some(pred, coll));
};
cljs.core.even_QMARK_ = function even_QMARK_(n) {
  if (cljs.core.integer_QMARK_(n)) {
    return(n & 1) === 0;
  } else {
    throw new Error([cljs.core.str("Argument must be an integer: "), cljs.core.str(n)].join(""));
  }
};
cljs.core.odd_QMARK_ = function odd_QMARK_(n) {
  return!cljs.core.even_QMARK_(n);
};
cljs.core.complement = function complement(f) {
  return function() {
    var G__12099 = null;
    var G__12099__0 = function() {
      return cljs.core.not(function() {
        return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
      }());
    };
    var G__12099__1 = function(x) {
      return cljs.core.not(function() {
        var G__12096 = x;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12096) : f.call(null, G__12096);
      }());
    };
    var G__12099__2 = function(x, y) {
      return cljs.core.not(function() {
        var G__12097 = x;
        var G__12098 = y;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12097, G__12098) : f.call(null, G__12097, G__12098);
      }());
    };
    var G__12099__3 = function() {
      var G__12100__delegate = function(x, y, zs) {
        return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f, x, y, zs));
      };
      var G__12100 = function(x, y, var_args) {
        var zs = null;
        if (arguments.length > 2) {
          var G__12101__i = 0, G__12101__a = new Array(arguments.length - 2);
          while (G__12101__i < G__12101__a.length) {
            G__12101__a[G__12101__i] = arguments[G__12101__i + 2];
            ++G__12101__i;
          }
          zs = new cljs.core.IndexedSeq(G__12101__a, 0);
        }
        return G__12100__delegate.call(this, x, y, zs);
      };
      G__12100.cljs$lang$maxFixedArity = 2;
      G__12100.cljs$lang$applyTo = function(arglist__12102) {
        var x = cljs.core.first(arglist__12102);
        arglist__12102 = cljs.core.next(arglist__12102);
        var y = cljs.core.first(arglist__12102);
        var zs = cljs.core.rest(arglist__12102);
        return G__12100__delegate(x, y, zs);
      };
      G__12100.cljs$core$IFn$_invoke$arity$variadic = G__12100__delegate;
      return G__12100;
    }();
    G__12099 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__12099__0.call(this);
        case 1:
          return G__12099__1.call(this, x);
        case 2:
          return G__12099__2.call(this, x, y);
        default:
          var G__12103 = null;
          if (arguments.length > 2) {
            var G__12104__i = 0, G__12104__a = new Array(arguments.length - 2);
            while (G__12104__i < G__12104__a.length) {
              G__12104__a[G__12104__i] = arguments[G__12104__i + 2];
              ++G__12104__i;
            }
            G__12103 = new cljs.core.IndexedSeq(G__12104__a, 0);
          }
          return G__12099__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__12103);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__12099.cljs$lang$maxFixedArity = 2;
    G__12099.cljs$lang$applyTo = G__12099__3.cljs$lang$applyTo;
    G__12099.cljs$core$IFn$_invoke$arity$0 = G__12099__0;
    G__12099.cljs$core$IFn$_invoke$arity$1 = G__12099__1;
    G__12099.cljs$core$IFn$_invoke$arity$2 = G__12099__2;
    G__12099.cljs$core$IFn$_invoke$arity$variadic = G__12099__3.cljs$core$IFn$_invoke$arity$variadic;
    return G__12099;
  }();
};
cljs.core.constantly = function constantly(x) {
  return function() {
    var G__12105__delegate = function(args) {
      return x;
    };
    var G__12105 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__12106__i = 0, G__12106__a = new Array(arguments.length - 0);
        while (G__12106__i < G__12106__a.length) {
          G__12106__a[G__12106__i] = arguments[G__12106__i + 0];
          ++G__12106__i;
        }
        args = new cljs.core.IndexedSeq(G__12106__a, 0);
      }
      return G__12105__delegate.call(this, args);
    };
    G__12105.cljs$lang$maxFixedArity = 0;
    G__12105.cljs$lang$applyTo = function(arglist__12107) {
      var args = cljs.core.seq(arglist__12107);
      return G__12105__delegate(args);
    };
    G__12105.cljs$core$IFn$_invoke$arity$variadic = G__12105__delegate;
    return G__12105;
  }();
};
cljs.core.comp = function() {
  var comp = null;
  var comp__0 = function() {
    return cljs.core.identity;
  };
  var comp__1 = function(f) {
    return f;
  };
  var comp__2 = function(f, g) {
    return function() {
      var G__12162 = null;
      var G__12162__0 = function() {
        var G__12135 = function() {
          return g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12135) : f.call(null, G__12135);
      };
      var G__12162__1 = function(x) {
        var G__12136 = function() {
          var G__12137 = x;
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__12137) : g.call(null, G__12137);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12136) : f.call(null, G__12136);
      };
      var G__12162__2 = function(x, y) {
        var G__12138 = function() {
          var G__12139 = x;
          var G__12140 = y;
          return g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__12139, G__12140) : g.call(null, G__12139, G__12140);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12138) : f.call(null, G__12138);
      };
      var G__12162__3 = function(x, y, z) {
        var G__12141 = function() {
          var G__12142 = x;
          var G__12143 = y;
          var G__12144 = z;
          return g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__12142, G__12143, G__12144) : g.call(null, G__12142, G__12143, G__12144);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12141) : f.call(null, G__12141);
      };
      var G__12162__4 = function() {
        var G__12163__delegate = function(x, y, z, args) {
          var G__12145 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args);
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12145) : f.call(null, G__12145);
        };
        var G__12163 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__12164__i = 0, G__12164__a = new Array(arguments.length - 3);
            while (G__12164__i < G__12164__a.length) {
              G__12164__a[G__12164__i] = arguments[G__12164__i + 3];
              ++G__12164__i;
            }
            args = new cljs.core.IndexedSeq(G__12164__a, 0);
          }
          return G__12163__delegate.call(this, x, y, z, args);
        };
        G__12163.cljs$lang$maxFixedArity = 3;
        G__12163.cljs$lang$applyTo = function(arglist__12165) {
          var x = cljs.core.first(arglist__12165);
          arglist__12165 = cljs.core.next(arglist__12165);
          var y = cljs.core.first(arglist__12165);
          arglist__12165 = cljs.core.next(arglist__12165);
          var z = cljs.core.first(arglist__12165);
          var args = cljs.core.rest(arglist__12165);
          return G__12163__delegate(x, y, z, args);
        };
        G__12163.cljs$core$IFn$_invoke$arity$variadic = G__12163__delegate;
        return G__12163;
      }();
      G__12162 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__12162__0.call(this);
          case 1:
            return G__12162__1.call(this, x);
          case 2:
            return G__12162__2.call(this, x, y);
          case 3:
            return G__12162__3.call(this, x, y, z);
          default:
            var G__12166 = null;
            if (arguments.length > 3) {
              var G__12167__i = 0, G__12167__a = new Array(arguments.length - 3);
              while (G__12167__i < G__12167__a.length) {
                G__12167__a[G__12167__i] = arguments[G__12167__i + 3];
                ++G__12167__i;
              }
              G__12166 = new cljs.core.IndexedSeq(G__12167__a, 0);
            }
            return G__12162__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__12166);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__12162.cljs$lang$maxFixedArity = 3;
      G__12162.cljs$lang$applyTo = G__12162__4.cljs$lang$applyTo;
      G__12162.cljs$core$IFn$_invoke$arity$0 = G__12162__0;
      G__12162.cljs$core$IFn$_invoke$arity$1 = G__12162__1;
      G__12162.cljs$core$IFn$_invoke$arity$2 = G__12162__2;
      G__12162.cljs$core$IFn$_invoke$arity$3 = G__12162__3;
      G__12162.cljs$core$IFn$_invoke$arity$variadic = G__12162__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__12162;
    }();
  };
  var comp__3 = function(f, g, h) {
    return function() {
      var G__12168 = null;
      var G__12168__0 = function() {
        var G__12146 = function() {
          var G__12147 = function() {
            return h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null);
          }();
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__12147) : g.call(null, G__12147);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12146) : f.call(null, G__12146);
      };
      var G__12168__1 = function(x) {
        var G__12148 = function() {
          var G__12149 = function() {
            var G__12150 = x;
            return h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__12150) : h.call(null, G__12150);
          }();
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__12149) : g.call(null, G__12149);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12148) : f.call(null, G__12148);
      };
      var G__12168__2 = function(x, y) {
        var G__12151 = function() {
          var G__12152 = function() {
            var G__12153 = x;
            var G__12154 = y;
            return h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__12153, G__12154) : h.call(null, G__12153, G__12154);
          }();
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__12152) : g.call(null, G__12152);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12151) : f.call(null, G__12151);
      };
      var G__12168__3 = function(x, y, z) {
        var G__12155 = function() {
          var G__12156 = function() {
            var G__12157 = x;
            var G__12158 = y;
            var G__12159 = z;
            return h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__12157, G__12158, G__12159) : h.call(null, G__12157, G__12158, G__12159);
          }();
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__12156) : g.call(null, G__12156);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12155) : f.call(null, G__12155);
      };
      var G__12168__4 = function() {
        var G__12169__delegate = function(x, y, z, args) {
          var G__12160 = function() {
            var G__12161 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h, x, y, z, args);
            return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__12161) : g.call(null, G__12161);
          }();
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12160) : f.call(null, G__12160);
        };
        var G__12169 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__12170__i = 0, G__12170__a = new Array(arguments.length - 3);
            while (G__12170__i < G__12170__a.length) {
              G__12170__a[G__12170__i] = arguments[G__12170__i + 3];
              ++G__12170__i;
            }
            args = new cljs.core.IndexedSeq(G__12170__a, 0);
          }
          return G__12169__delegate.call(this, x, y, z, args);
        };
        G__12169.cljs$lang$maxFixedArity = 3;
        G__12169.cljs$lang$applyTo = function(arglist__12171) {
          var x = cljs.core.first(arglist__12171);
          arglist__12171 = cljs.core.next(arglist__12171);
          var y = cljs.core.first(arglist__12171);
          arglist__12171 = cljs.core.next(arglist__12171);
          var z = cljs.core.first(arglist__12171);
          var args = cljs.core.rest(arglist__12171);
          return G__12169__delegate(x, y, z, args);
        };
        G__12169.cljs$core$IFn$_invoke$arity$variadic = G__12169__delegate;
        return G__12169;
      }();
      G__12168 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__12168__0.call(this);
          case 1:
            return G__12168__1.call(this, x);
          case 2:
            return G__12168__2.call(this, x, y);
          case 3:
            return G__12168__3.call(this, x, y, z);
          default:
            var G__12172 = null;
            if (arguments.length > 3) {
              var G__12173__i = 0, G__12173__a = new Array(arguments.length - 3);
              while (G__12173__i < G__12173__a.length) {
                G__12173__a[G__12173__i] = arguments[G__12173__i + 3];
                ++G__12173__i;
              }
              G__12172 = new cljs.core.IndexedSeq(G__12173__a, 0);
            }
            return G__12168__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__12172);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__12168.cljs$lang$maxFixedArity = 3;
      G__12168.cljs$lang$applyTo = G__12168__4.cljs$lang$applyTo;
      G__12168.cljs$core$IFn$_invoke$arity$0 = G__12168__0;
      G__12168.cljs$core$IFn$_invoke$arity$1 = G__12168__1;
      G__12168.cljs$core$IFn$_invoke$arity$2 = G__12168__2;
      G__12168.cljs$core$IFn$_invoke$arity$3 = G__12168__3;
      G__12168.cljs$core$IFn$_invoke$arity$variadic = G__12168__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__12168;
    }();
  };
  var comp__4 = function() {
    var G__12174__delegate = function(f1, f2, f3, fs) {
      var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1, f2, f3, fs));
      return function(fs__$1) {
        return function() {
          var G__12175__delegate = function(args) {
            var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1), args);
            var fs__$2 = cljs.core.next(fs__$1);
            while (true) {
              if (fs__$2) {
                var G__12176 = cljs.core.first(fs__$2).call(null, ret);
                var G__12177 = cljs.core.next(fs__$2);
                ret = G__12176;
                fs__$2 = G__12177;
                continue;
              } else {
                return ret;
              }
              break;
            }
          };
          var G__12175 = function(var_args) {
            var args = null;
            if (arguments.length > 0) {
              var G__12178__i = 0, G__12178__a = new Array(arguments.length - 0);
              while (G__12178__i < G__12178__a.length) {
                G__12178__a[G__12178__i] = arguments[G__12178__i + 0];
                ++G__12178__i;
              }
              args = new cljs.core.IndexedSeq(G__12178__a, 0);
            }
            return G__12175__delegate.call(this, args);
          };
          G__12175.cljs$lang$maxFixedArity = 0;
          G__12175.cljs$lang$applyTo = function(arglist__12179) {
            var args = cljs.core.seq(arglist__12179);
            return G__12175__delegate(args);
          };
          G__12175.cljs$core$IFn$_invoke$arity$variadic = G__12175__delegate;
          return G__12175;
        }();
      }(fs__$1);
    };
    var G__12174 = function(f1, f2, f3, var_args) {
      var fs = null;
      if (arguments.length > 3) {
        var G__12180__i = 0, G__12180__a = new Array(arguments.length - 3);
        while (G__12180__i < G__12180__a.length) {
          G__12180__a[G__12180__i] = arguments[G__12180__i + 3];
          ++G__12180__i;
        }
        fs = new cljs.core.IndexedSeq(G__12180__a, 0);
      }
      return G__12174__delegate.call(this, f1, f2, f3, fs);
    };
    G__12174.cljs$lang$maxFixedArity = 3;
    G__12174.cljs$lang$applyTo = function(arglist__12181) {
      var f1 = cljs.core.first(arglist__12181);
      arglist__12181 = cljs.core.next(arglist__12181);
      var f2 = cljs.core.first(arglist__12181);
      arglist__12181 = cljs.core.next(arglist__12181);
      var f3 = cljs.core.first(arglist__12181);
      var fs = cljs.core.rest(arglist__12181);
      return G__12174__delegate(f1, f2, f3, fs);
    };
    G__12174.cljs$core$IFn$_invoke$arity$variadic = G__12174__delegate;
    return G__12174;
  }();
  comp = function(f1, f2, f3, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 0:
        return comp__0.call(this);
      case 1:
        return comp__1.call(this, f1);
      case 2:
        return comp__2.call(this, f1, f2);
      case 3:
        return comp__3.call(this, f1, f2, f3);
      default:
        var G__12182 = null;
        if (arguments.length > 3) {
          var G__12183__i = 0, G__12183__a = new Array(arguments.length - 3);
          while (G__12183__i < G__12183__a.length) {
            G__12183__a[G__12183__i] = arguments[G__12183__i + 3];
            ++G__12183__i;
          }
          G__12182 = new cljs.core.IndexedSeq(G__12183__a, 0);
        }
        return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1, f2, f3, G__12182);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  comp.cljs$lang$maxFixedArity = 3;
  comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
  comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
  comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
  comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
  comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
  comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
  return comp;
}();
cljs.core.partial = function() {
  var partial = null;
  var partial__1 = function(f) {
    return f;
  };
  var partial__2 = function(f, arg1) {
    return function() {
      var G__12268 = null;
      var G__12268__0 = function() {
        var G__12226 = arg1;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12226) : f.call(null, G__12226);
      };
      var G__12268__1 = function(x) {
        var G__12227 = arg1;
        var G__12228 = x;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12227, G__12228) : f.call(null, G__12227, G__12228);
      };
      var G__12268__2 = function(x, y) {
        var G__12229 = arg1;
        var G__12230 = x;
        var G__12231 = y;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__12229, G__12230, G__12231) : f.call(null, G__12229, G__12230, G__12231);
      };
      var G__12268__3 = function(x, y, z) {
        var G__12232 = arg1;
        var G__12233 = x;
        var G__12234 = y;
        var G__12235 = z;
        return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__12232, G__12233, G__12234, G__12235) : f.call(null, G__12232, G__12233, G__12234, G__12235);
      };
      var G__12268__4 = function() {
        var G__12269__delegate = function(x, y, z, args) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, x, y, z, cljs.core.array_seq([args], 0));
        };
        var G__12269 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__12270__i = 0, G__12270__a = new Array(arguments.length - 3);
            while (G__12270__i < G__12270__a.length) {
              G__12270__a[G__12270__i] = arguments[G__12270__i + 3];
              ++G__12270__i;
            }
            args = new cljs.core.IndexedSeq(G__12270__a, 0);
          }
          return G__12269__delegate.call(this, x, y, z, args);
        };
        G__12269.cljs$lang$maxFixedArity = 3;
        G__12269.cljs$lang$applyTo = function(arglist__12271) {
          var x = cljs.core.first(arglist__12271);
          arglist__12271 = cljs.core.next(arglist__12271);
          var y = cljs.core.first(arglist__12271);
          arglist__12271 = cljs.core.next(arglist__12271);
          var z = cljs.core.first(arglist__12271);
          var args = cljs.core.rest(arglist__12271);
          return G__12269__delegate(x, y, z, args);
        };
        G__12269.cljs$core$IFn$_invoke$arity$variadic = G__12269__delegate;
        return G__12269;
      }();
      G__12268 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__12268__0.call(this);
          case 1:
            return G__12268__1.call(this, x);
          case 2:
            return G__12268__2.call(this, x, y);
          case 3:
            return G__12268__3.call(this, x, y, z);
          default:
            var G__12272 = null;
            if (arguments.length > 3) {
              var G__12273__i = 0, G__12273__a = new Array(arguments.length - 3);
              while (G__12273__i < G__12273__a.length) {
                G__12273__a[G__12273__i] = arguments[G__12273__i + 3];
                ++G__12273__i;
              }
              G__12272 = new cljs.core.IndexedSeq(G__12273__a, 0);
            }
            return G__12268__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__12272);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__12268.cljs$lang$maxFixedArity = 3;
      G__12268.cljs$lang$applyTo = G__12268__4.cljs$lang$applyTo;
      G__12268.cljs$core$IFn$_invoke$arity$0 = G__12268__0;
      G__12268.cljs$core$IFn$_invoke$arity$1 = G__12268__1;
      G__12268.cljs$core$IFn$_invoke$arity$2 = G__12268__2;
      G__12268.cljs$core$IFn$_invoke$arity$3 = G__12268__3;
      G__12268.cljs$core$IFn$_invoke$arity$variadic = G__12268__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__12268;
    }();
  };
  var partial__3 = function(f, arg1, arg2) {
    return function() {
      var G__12274 = null;
      var G__12274__0 = function() {
        var G__12236 = arg1;
        var G__12237 = arg2;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12236, G__12237) : f.call(null, G__12236, G__12237);
      };
      var G__12274__1 = function(x) {
        var G__12238 = arg1;
        var G__12239 = arg2;
        var G__12240 = x;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__12238, G__12239, G__12240) : f.call(null, G__12238, G__12239, G__12240);
      };
      var G__12274__2 = function(x, y) {
        var G__12241 = arg1;
        var G__12242 = arg2;
        var G__12243 = x;
        var G__12244 = y;
        return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__12241, G__12242, G__12243, G__12244) : f.call(null, G__12241, G__12242, G__12243, G__12244);
      };
      var G__12274__3 = function(x, y, z) {
        var G__12245 = arg1;
        var G__12246 = arg2;
        var G__12247 = x;
        var G__12248 = y;
        var G__12249 = z;
        return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__12245, G__12246, G__12247, G__12248, G__12249) : f.call(null, G__12245, G__12246, G__12247, G__12248, G__12249);
      };
      var G__12274__4 = function() {
        var G__12275__delegate = function(x, y, z, args) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, x, y, cljs.core.array_seq([z, args], 0));
        };
        var G__12275 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__12276__i = 0, G__12276__a = new Array(arguments.length - 3);
            while (G__12276__i < G__12276__a.length) {
              G__12276__a[G__12276__i] = arguments[G__12276__i + 3];
              ++G__12276__i;
            }
            args = new cljs.core.IndexedSeq(G__12276__a, 0);
          }
          return G__12275__delegate.call(this, x, y, z, args);
        };
        G__12275.cljs$lang$maxFixedArity = 3;
        G__12275.cljs$lang$applyTo = function(arglist__12277) {
          var x = cljs.core.first(arglist__12277);
          arglist__12277 = cljs.core.next(arglist__12277);
          var y = cljs.core.first(arglist__12277);
          arglist__12277 = cljs.core.next(arglist__12277);
          var z = cljs.core.first(arglist__12277);
          var args = cljs.core.rest(arglist__12277);
          return G__12275__delegate(x, y, z, args);
        };
        G__12275.cljs$core$IFn$_invoke$arity$variadic = G__12275__delegate;
        return G__12275;
      }();
      G__12274 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__12274__0.call(this);
          case 1:
            return G__12274__1.call(this, x);
          case 2:
            return G__12274__2.call(this, x, y);
          case 3:
            return G__12274__3.call(this, x, y, z);
          default:
            var G__12278 = null;
            if (arguments.length > 3) {
              var G__12279__i = 0, G__12279__a = new Array(arguments.length - 3);
              while (G__12279__i < G__12279__a.length) {
                G__12279__a[G__12279__i] = arguments[G__12279__i + 3];
                ++G__12279__i;
              }
              G__12278 = new cljs.core.IndexedSeq(G__12279__a, 0);
            }
            return G__12274__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__12278);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__12274.cljs$lang$maxFixedArity = 3;
      G__12274.cljs$lang$applyTo = G__12274__4.cljs$lang$applyTo;
      G__12274.cljs$core$IFn$_invoke$arity$0 = G__12274__0;
      G__12274.cljs$core$IFn$_invoke$arity$1 = G__12274__1;
      G__12274.cljs$core$IFn$_invoke$arity$2 = G__12274__2;
      G__12274.cljs$core$IFn$_invoke$arity$3 = G__12274__3;
      G__12274.cljs$core$IFn$_invoke$arity$variadic = G__12274__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__12274;
    }();
  };
  var partial__4 = function(f, arg1, arg2, arg3) {
    return function() {
      var G__12280 = null;
      var G__12280__0 = function() {
        var G__12250 = arg1;
        var G__12251 = arg2;
        var G__12252 = arg3;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__12250, G__12251, G__12252) : f.call(null, G__12250, G__12251, G__12252);
      };
      var G__12280__1 = function(x) {
        var G__12253 = arg1;
        var G__12254 = arg2;
        var G__12255 = arg3;
        var G__12256 = x;
        return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__12253, G__12254, G__12255, G__12256) : f.call(null, G__12253, G__12254, G__12255, G__12256);
      };
      var G__12280__2 = function(x, y) {
        var G__12257 = arg1;
        var G__12258 = arg2;
        var G__12259 = arg3;
        var G__12260 = x;
        var G__12261 = y;
        return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__12257, G__12258, G__12259, G__12260, G__12261) : f.call(null, G__12257, G__12258, G__12259, G__12260, G__12261);
      };
      var G__12280__3 = function(x, y, z) {
        var G__12262 = arg1;
        var G__12263 = arg2;
        var G__12264 = arg3;
        var G__12265 = x;
        var G__12266 = y;
        var G__12267 = z;
        return f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__12262, G__12263, G__12264, G__12265, G__12266, G__12267) : f.call(null, G__12262, G__12263, G__12264, G__12265, G__12266, G__12267);
      };
      var G__12280__4 = function() {
        var G__12281__delegate = function(x, y, z, args) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, arg3, x, cljs.core.array_seq([y, z, args], 0));
        };
        var G__12281 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__12282__i = 0, G__12282__a = new Array(arguments.length - 3);
            while (G__12282__i < G__12282__a.length) {
              G__12282__a[G__12282__i] = arguments[G__12282__i + 3];
              ++G__12282__i;
            }
            args = new cljs.core.IndexedSeq(G__12282__a, 0);
          }
          return G__12281__delegate.call(this, x, y, z, args);
        };
        G__12281.cljs$lang$maxFixedArity = 3;
        G__12281.cljs$lang$applyTo = function(arglist__12283) {
          var x = cljs.core.first(arglist__12283);
          arglist__12283 = cljs.core.next(arglist__12283);
          var y = cljs.core.first(arglist__12283);
          arglist__12283 = cljs.core.next(arglist__12283);
          var z = cljs.core.first(arglist__12283);
          var args = cljs.core.rest(arglist__12283);
          return G__12281__delegate(x, y, z, args);
        };
        G__12281.cljs$core$IFn$_invoke$arity$variadic = G__12281__delegate;
        return G__12281;
      }();
      G__12280 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__12280__0.call(this);
          case 1:
            return G__12280__1.call(this, x);
          case 2:
            return G__12280__2.call(this, x, y);
          case 3:
            return G__12280__3.call(this, x, y, z);
          default:
            var G__12284 = null;
            if (arguments.length > 3) {
              var G__12285__i = 0, G__12285__a = new Array(arguments.length - 3);
              while (G__12285__i < G__12285__a.length) {
                G__12285__a[G__12285__i] = arguments[G__12285__i + 3];
                ++G__12285__i;
              }
              G__12284 = new cljs.core.IndexedSeq(G__12285__a, 0);
            }
            return G__12280__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__12284);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__12280.cljs$lang$maxFixedArity = 3;
      G__12280.cljs$lang$applyTo = G__12280__4.cljs$lang$applyTo;
      G__12280.cljs$core$IFn$_invoke$arity$0 = G__12280__0;
      G__12280.cljs$core$IFn$_invoke$arity$1 = G__12280__1;
      G__12280.cljs$core$IFn$_invoke$arity$2 = G__12280__2;
      G__12280.cljs$core$IFn$_invoke$arity$3 = G__12280__3;
      G__12280.cljs$core$IFn$_invoke$arity$variadic = G__12280__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__12280;
    }();
  };
  var partial__5 = function() {
    var G__12286__delegate = function(f, arg1, arg2, arg3, more) {
      return function() {
        var G__12287__delegate = function(args) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, arg1, arg2, arg3, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more, args));
        };
        var G__12287 = function(var_args) {
          var args = null;
          if (arguments.length > 0) {
            var G__12288__i = 0, G__12288__a = new Array(arguments.length - 0);
            while (G__12288__i < G__12288__a.length) {
              G__12288__a[G__12288__i] = arguments[G__12288__i + 0];
              ++G__12288__i;
            }
            args = new cljs.core.IndexedSeq(G__12288__a, 0);
          }
          return G__12287__delegate.call(this, args);
        };
        G__12287.cljs$lang$maxFixedArity = 0;
        G__12287.cljs$lang$applyTo = function(arglist__12289) {
          var args = cljs.core.seq(arglist__12289);
          return G__12287__delegate(args);
        };
        G__12287.cljs$core$IFn$_invoke$arity$variadic = G__12287__delegate;
        return G__12287;
      }();
    };
    var G__12286 = function(f, arg1, arg2, arg3, var_args) {
      var more = null;
      if (arguments.length > 4) {
        var G__12290__i = 0, G__12290__a = new Array(arguments.length - 4);
        while (G__12290__i < G__12290__a.length) {
          G__12290__a[G__12290__i] = arguments[G__12290__i + 4];
          ++G__12290__i;
        }
        more = new cljs.core.IndexedSeq(G__12290__a, 0);
      }
      return G__12286__delegate.call(this, f, arg1, arg2, arg3, more);
    };
    G__12286.cljs$lang$maxFixedArity = 4;
    G__12286.cljs$lang$applyTo = function(arglist__12291) {
      var f = cljs.core.first(arglist__12291);
      arglist__12291 = cljs.core.next(arglist__12291);
      var arg1 = cljs.core.first(arglist__12291);
      arglist__12291 = cljs.core.next(arglist__12291);
      var arg2 = cljs.core.first(arglist__12291);
      arglist__12291 = cljs.core.next(arglist__12291);
      var arg3 = cljs.core.first(arglist__12291);
      var more = cljs.core.rest(arglist__12291);
      return G__12286__delegate(f, arg1, arg2, arg3, more);
    };
    G__12286.cljs$core$IFn$_invoke$arity$variadic = G__12286__delegate;
    return G__12286;
  }();
  partial = function(f, arg1, arg2, arg3, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return partial__1.call(this, f);
      case 2:
        return partial__2.call(this, f, arg1);
      case 3:
        return partial__3.call(this, f, arg1, arg2);
      case 4:
        return partial__4.call(this, f, arg1, arg2, arg3);
      default:
        var G__12292 = null;
        if (arguments.length > 4) {
          var G__12293__i = 0, G__12293__a = new Array(arguments.length - 4);
          while (G__12293__i < G__12293__a.length) {
            G__12293__a[G__12293__i] = arguments[G__12293__i + 4];
            ++G__12293__i;
          }
          G__12292 = new cljs.core.IndexedSeq(G__12293__a, 0);
        }
        return partial__5.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, arg3, G__12292);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partial.cljs$lang$maxFixedArity = 4;
  partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
  partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
  partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
  partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
  partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
  partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
  return partial;
}();
cljs.core.fnil = function() {
  var fnil = null;
  var fnil__2 = function(f, x) {
    return function() {
      var G__12326 = null;
      var G__12326__1 = function(a) {
        var G__12310 = a == null ? x : a;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12310) : f.call(null, G__12310);
      };
      var G__12326__2 = function(a, b) {
        var G__12311 = a == null ? x : a;
        var G__12312 = b;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12311, G__12312) : f.call(null, G__12311, G__12312);
      };
      var G__12326__3 = function(a, b, c) {
        var G__12313 = a == null ? x : a;
        var G__12314 = b;
        var G__12315 = c;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__12313, G__12314, G__12315) : f.call(null, G__12313, G__12314, G__12315);
      };
      var G__12326__4 = function() {
        var G__12327__delegate = function(a, b, c, ds) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b, c, ds);
        };
        var G__12327 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            var G__12328__i = 0, G__12328__a = new Array(arguments.length - 3);
            while (G__12328__i < G__12328__a.length) {
              G__12328__a[G__12328__i] = arguments[G__12328__i + 3];
              ++G__12328__i;
            }
            ds = new cljs.core.IndexedSeq(G__12328__a, 0);
          }
          return G__12327__delegate.call(this, a, b, c, ds);
        };
        G__12327.cljs$lang$maxFixedArity = 3;
        G__12327.cljs$lang$applyTo = function(arglist__12329) {
          var a = cljs.core.first(arglist__12329);
          arglist__12329 = cljs.core.next(arglist__12329);
          var b = cljs.core.first(arglist__12329);
          arglist__12329 = cljs.core.next(arglist__12329);
          var c = cljs.core.first(arglist__12329);
          var ds = cljs.core.rest(arglist__12329);
          return G__12327__delegate(a, b, c, ds);
        };
        G__12327.cljs$core$IFn$_invoke$arity$variadic = G__12327__delegate;
        return G__12327;
      }();
      G__12326 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 1:
            return G__12326__1.call(this, a);
          case 2:
            return G__12326__2.call(this, a, b);
          case 3:
            return G__12326__3.call(this, a, b, c);
          default:
            var G__12330 = null;
            if (arguments.length > 3) {
              var G__12331__i = 0, G__12331__a = new Array(arguments.length - 3);
              while (G__12331__i < G__12331__a.length) {
                G__12331__a[G__12331__i] = arguments[G__12331__i + 3];
                ++G__12331__i;
              }
              G__12330 = new cljs.core.IndexedSeq(G__12331__a, 0);
            }
            return G__12326__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__12330);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__12326.cljs$lang$maxFixedArity = 3;
      G__12326.cljs$lang$applyTo = G__12326__4.cljs$lang$applyTo;
      G__12326.cljs$core$IFn$_invoke$arity$1 = G__12326__1;
      G__12326.cljs$core$IFn$_invoke$arity$2 = G__12326__2;
      G__12326.cljs$core$IFn$_invoke$arity$3 = G__12326__3;
      G__12326.cljs$core$IFn$_invoke$arity$variadic = G__12326__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__12326;
    }();
  };
  var fnil__3 = function(f, x, y) {
    return function() {
      var G__12332 = null;
      var G__12332__2 = function(a, b) {
        var G__12316 = a == null ? x : a;
        var G__12317 = b == null ? y : b;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12316, G__12317) : f.call(null, G__12316, G__12317);
      };
      var G__12332__3 = function(a, b, c) {
        var G__12318 = a == null ? x : a;
        var G__12319 = b == null ? y : b;
        var G__12320 = c;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__12318, G__12319, G__12320) : f.call(null, G__12318, G__12319, G__12320);
      };
      var G__12332__4 = function() {
        var G__12333__delegate = function(a, b, c, ds) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b == null ? y : b, c, ds);
        };
        var G__12333 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            var G__12334__i = 0, G__12334__a = new Array(arguments.length - 3);
            while (G__12334__i < G__12334__a.length) {
              G__12334__a[G__12334__i] = arguments[G__12334__i + 3];
              ++G__12334__i;
            }
            ds = new cljs.core.IndexedSeq(G__12334__a, 0);
          }
          return G__12333__delegate.call(this, a, b, c, ds);
        };
        G__12333.cljs$lang$maxFixedArity = 3;
        G__12333.cljs$lang$applyTo = function(arglist__12335) {
          var a = cljs.core.first(arglist__12335);
          arglist__12335 = cljs.core.next(arglist__12335);
          var b = cljs.core.first(arglist__12335);
          arglist__12335 = cljs.core.next(arglist__12335);
          var c = cljs.core.first(arglist__12335);
          var ds = cljs.core.rest(arglist__12335);
          return G__12333__delegate(a, b, c, ds);
        };
        G__12333.cljs$core$IFn$_invoke$arity$variadic = G__12333__delegate;
        return G__12333;
      }();
      G__12332 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__12332__2.call(this, a, b);
          case 3:
            return G__12332__3.call(this, a, b, c);
          default:
            var G__12336 = null;
            if (arguments.length > 3) {
              var G__12337__i = 0, G__12337__a = new Array(arguments.length - 3);
              while (G__12337__i < G__12337__a.length) {
                G__12337__a[G__12337__i] = arguments[G__12337__i + 3];
                ++G__12337__i;
              }
              G__12336 = new cljs.core.IndexedSeq(G__12337__a, 0);
            }
            return G__12332__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__12336);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__12332.cljs$lang$maxFixedArity = 3;
      G__12332.cljs$lang$applyTo = G__12332__4.cljs$lang$applyTo;
      G__12332.cljs$core$IFn$_invoke$arity$2 = G__12332__2;
      G__12332.cljs$core$IFn$_invoke$arity$3 = G__12332__3;
      G__12332.cljs$core$IFn$_invoke$arity$variadic = G__12332__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__12332;
    }();
  };
  var fnil__4 = function(f, x, y, z) {
    return function() {
      var G__12338 = null;
      var G__12338__2 = function(a, b) {
        var G__12321 = a == null ? x : a;
        var G__12322 = b == null ? y : b;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12321, G__12322) : f.call(null, G__12321, G__12322);
      };
      var G__12338__3 = function(a, b, c) {
        var G__12323 = a == null ? x : a;
        var G__12324 = b == null ? y : b;
        var G__12325 = c == null ? z : c;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__12323, G__12324, G__12325) : f.call(null, G__12323, G__12324, G__12325);
      };
      var G__12338__4 = function() {
        var G__12339__delegate = function(a, b, c, ds) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds);
        };
        var G__12339 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            var G__12340__i = 0, G__12340__a = new Array(arguments.length - 3);
            while (G__12340__i < G__12340__a.length) {
              G__12340__a[G__12340__i] = arguments[G__12340__i + 3];
              ++G__12340__i;
            }
            ds = new cljs.core.IndexedSeq(G__12340__a, 0);
          }
          return G__12339__delegate.call(this, a, b, c, ds);
        };
        G__12339.cljs$lang$maxFixedArity = 3;
        G__12339.cljs$lang$applyTo = function(arglist__12341) {
          var a = cljs.core.first(arglist__12341);
          arglist__12341 = cljs.core.next(arglist__12341);
          var b = cljs.core.first(arglist__12341);
          arglist__12341 = cljs.core.next(arglist__12341);
          var c = cljs.core.first(arglist__12341);
          var ds = cljs.core.rest(arglist__12341);
          return G__12339__delegate(a, b, c, ds);
        };
        G__12339.cljs$core$IFn$_invoke$arity$variadic = G__12339__delegate;
        return G__12339;
      }();
      G__12338 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__12338__2.call(this, a, b);
          case 3:
            return G__12338__3.call(this, a, b, c);
          default:
            var G__12342 = null;
            if (arguments.length > 3) {
              var G__12343__i = 0, G__12343__a = new Array(arguments.length - 3);
              while (G__12343__i < G__12343__a.length) {
                G__12343__a[G__12343__i] = arguments[G__12343__i + 3];
                ++G__12343__i;
              }
              G__12342 = new cljs.core.IndexedSeq(G__12343__a, 0);
            }
            return G__12338__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__12342);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__12338.cljs$lang$maxFixedArity = 3;
      G__12338.cljs$lang$applyTo = G__12338__4.cljs$lang$applyTo;
      G__12338.cljs$core$IFn$_invoke$arity$2 = G__12338__2;
      G__12338.cljs$core$IFn$_invoke$arity$3 = G__12338__3;
      G__12338.cljs$core$IFn$_invoke$arity$variadic = G__12338__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__12338;
    }();
  };
  fnil = function(f, x, y, z) {
    switch(arguments.length) {
      case 2:
        return fnil__2.call(this, f, x);
      case 3:
        return fnil__3.call(this, f, x, y);
      case 4:
        return fnil__4.call(this, f, x, y, z);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
  fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
  fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
  return fnil;
}();
cljs.core.map_indexed = function() {
  var map_indexed = null;
  var map_indexed__1 = function(f) {
    return function(rf) {
      var i = function() {
        var G__12374 = -1;
        return cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(G__12374) : cljs.core.volatile_BANG_.call(null, G__12374);
      }();
      return function(i) {
        return function() {
          var G__12404 = null;
          var G__12404__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__12404__1 = function(result) {
            var G__12375 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__12375) : rf.call(null, G__12375);
          };
          var G__12404__2 = function(result, input) {
            var G__12376 = result;
            var G__12377 = function() {
              var G__12378 = cljs.core._vreset_BANG_(i, cljs.core._deref(i) + 1);
              var G__12379 = input;
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12378, G__12379) : f.call(null, G__12378, G__12379);
            }();
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__12376, G__12377) : rf.call(null, G__12376, G__12377);
          };
          G__12404 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__12404__0.call(this);
              case 1:
                return G__12404__1.call(this, result);
              case 2:
                return G__12404__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__12404.cljs$core$IFn$_invoke$arity$0 = G__12404__0;
          G__12404.cljs$core$IFn$_invoke$arity$1 = G__12404__1;
          G__12404.cljs$core$IFn$_invoke$arity$2 = G__12404__2;
          return G__12404;
        }();
      }(i);
    };
  };
  var map_indexed__2 = function(f, coll) {
    var mapi = function mapi(idx, coll__$1) {
      return new cljs.core.LazySeq(null, function() {
        var temp__4126__auto__ = cljs.core.seq(coll__$1);
        if (temp__4126__auto__) {
          var s = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_(s)) {
            var c = cljs.core.chunk_first(s);
            var size = cljs.core.count(c);
            var b = cljs.core.chunk_buffer(size);
            var n__4812__auto___12405 = size;
            var i_12406 = 0;
            while (true) {
              if (i_12406 < n__4812__auto___12405) {
                cljs.core.chunk_append(b, function() {
                  var G__12400 = idx + i_12406;
                  var G__12401 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_12406);
                  return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12400, G__12401) : f.call(null, G__12400, G__12401);
                }());
                var G__12407 = i_12406 + 1;
                i_12406 = G__12407;
                continue;
              } else {
              }
              break;
            }
            return cljs.core.chunk_cons(cljs.core.chunk(b), mapi(idx + size, cljs.core.chunk_rest(s)));
          } else {
            return cljs.core.cons(function() {
              var G__12402 = idx;
              var G__12403 = cljs.core.first(s);
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12402, G__12403) : f.call(null, G__12402, G__12403);
            }(), mapi(idx + 1, cljs.core.rest(s)));
          }
        } else {
          return null;
        }
      }, null, null);
    };
    return mapi(0, coll);
  };
  map_indexed = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return map_indexed__1.call(this, f);
      case 2:
        return map_indexed__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  map_indexed.cljs$core$IFn$_invoke$arity$1 = map_indexed__1;
  map_indexed.cljs$core$IFn$_invoke$arity$2 = map_indexed__2;
  return map_indexed;
}();
cljs.core.keep = function() {
  var keep = null;
  var keep__1 = function(f) {
    return function(rf) {
      return function() {
        var G__12426 = null;
        var G__12426__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__12426__1 = function(result) {
          var G__12420 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__12420) : rf.call(null, G__12420);
        };
        var G__12426__2 = function(result, input) {
          var v = function() {
            var G__12421 = input;
            return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12421) : f.call(null, G__12421);
          }();
          if (v == null) {
            return result;
          } else {
            var G__12422 = result;
            var G__12423 = v;
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__12422, G__12423) : rf.call(null, G__12422, G__12423);
          }
        };
        G__12426 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__12426__0.call(this);
            case 1:
              return G__12426__1.call(this, result);
            case 2:
              return G__12426__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__12426.cljs$core$IFn$_invoke$arity$0 = G__12426__0;
        G__12426.cljs$core$IFn$_invoke$arity$1 = G__12426__1;
        G__12426.cljs$core$IFn$_invoke$arity$2 = G__12426__2;
        return G__12426;
      }();
    };
  };
  var keep__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__4812__auto___12427 = size;
          var i_12428 = 0;
          while (true) {
            if (i_12428 < n__4812__auto___12427) {
              var x_12429 = function() {
                var G__12424 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_12428);
                return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12424) : f.call(null, G__12424);
              }();
              if (x_12429 == null) {
              } else {
                cljs.core.chunk_append(b, x_12429);
              }
              var G__12430 = i_12428 + 1;
              i_12428 = G__12430;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.chunk_rest(s)));
        } else {
          var x = function() {
            var G__12425 = cljs.core.first(s);
            return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12425) : f.call(null, G__12425);
          }();
          if (x == null) {
            return keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s));
          } else {
            return cljs.core.cons(x, keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s)));
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  keep = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return keep__1.call(this, f);
      case 2:
        return keep__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
  keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
  return keep;
}();
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition0$ = 6455296;
  this.cljs$lang$protocol_mask$partition1$ = 16386;
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var G__12431 = this$__$1;
  return goog.getUid(G__12431);
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  var seq__12432 = cljs.core.seq(self__.watches);
  var chunk__12433 = null;
  var count__12434 = 0;
  var i__12435 = 0;
  while (true) {
    if (i__12435 < count__12434) {
      var vec__12436 = chunk__12433.cljs$core$IIndexed$_nth$arity$2(null, i__12435);
      var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12436, 0, null);
      var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12436, 1, null);
      var G__12437_12446 = key;
      var G__12438_12447 = this$__$1;
      var G__12439_12448 = oldval;
      var G__12440_12449 = newval;
      f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__12437_12446, G__12438_12447, G__12439_12448, G__12440_12449) : f.call(null, G__12437_12446, G__12438_12447, G__12439_12448, G__12440_12449);
      var G__12450 = seq__12432;
      var G__12451 = chunk__12433;
      var G__12452 = count__12434;
      var G__12453 = i__12435 + 1;
      seq__12432 = G__12450;
      chunk__12433 = G__12451;
      count__12434 = G__12452;
      i__12435 = G__12453;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__12432);
      if (temp__4126__auto__) {
        var seq__12432__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__12432__$1)) {
          var c__4712__auto__ = cljs.core.chunk_first(seq__12432__$1);
          var G__12454 = cljs.core.chunk_rest(seq__12432__$1);
          var G__12455 = c__4712__auto__;
          var G__12456 = cljs.core.count(c__4712__auto__);
          var G__12457 = 0;
          seq__12432 = G__12454;
          chunk__12433 = G__12455;
          count__12434 = G__12456;
          i__12435 = G__12457;
          continue;
        } else {
          var vec__12441 = cljs.core.first(seq__12432__$1);
          var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12441, 0, null);
          var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12441, 1, null);
          var G__12442_12458 = key;
          var G__12443_12459 = this$__$1;
          var G__12444_12460 = oldval;
          var G__12445_12461 = newval;
          f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__12442_12458, G__12443_12459, G__12444_12460, G__12445_12461) : f.call(null, G__12442_12458, G__12443_12459, G__12444_12460, G__12445_12461);
          var G__12462 = cljs.core.next(seq__12432__$1);
          var G__12463 = null;
          var G__12464 = 0;
          var G__12465 = 0;
          seq__12432 = G__12462;
          chunk__12433 = G__12463;
          count__12434 = G__12464;
          i__12435 = G__12465;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var self__ = this;
  var this$__$1 = this;
  this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches, key, f);
  return this$__$1;
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches, key);
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return o__$1 === other;
};
cljs.core.Atom.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";
cljs.core.Atom.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/Atom");
};
cljs.core.__GT_Atom = function __GT_Atom(state, meta, validator, watches) {
  return new cljs.core.Atom(state, meta, validator, watches);
};
cljs.core.atom = function() {
  var atom = null;
  var atom__1 = function(x) {
    return new cljs.core.Atom(x, null, null, null);
  };
  var atom__2 = function() {
    var G__12469__delegate = function(x, p__12466) {
      var map__12468 = p__12466;
      var map__12468__$1 = cljs.core.seq_QMARK_(map__12468) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__12468) : map__12468;
      var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12468__$1, new cljs.core.Keyword(null, "validator", "validator", -1966190681));
      var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12468__$1, new cljs.core.Keyword(null, "meta", "meta", 1499536964));
      return new cljs.core.Atom(x, meta, validator, null);
    };
    var G__12469 = function(x, var_args) {
      var p__12466 = null;
      if (arguments.length > 1) {
        var G__12470__i = 0, G__12470__a = new Array(arguments.length - 1);
        while (G__12470__i < G__12470__a.length) {
          G__12470__a[G__12470__i] = arguments[G__12470__i + 1];
          ++G__12470__i;
        }
        p__12466 = new cljs.core.IndexedSeq(G__12470__a, 0);
      }
      return G__12469__delegate.call(this, x, p__12466);
    };
    G__12469.cljs$lang$maxFixedArity = 1;
    G__12469.cljs$lang$applyTo = function(arglist__12471) {
      var x = cljs.core.first(arglist__12471);
      var p__12466 = cljs.core.rest(arglist__12471);
      return G__12469__delegate(x, p__12466);
    };
    G__12469.cljs$core$IFn$_invoke$arity$variadic = G__12469__delegate;
    return G__12469;
  }();
  atom = function(x, var_args) {
    var p__12466 = var_args;
    switch(arguments.length) {
      case 1:
        return atom__1.call(this, x);
      default:
        var G__12472 = null;
        if (arguments.length > 1) {
          var G__12473__i = 0, G__12473__a = new Array(arguments.length - 1);
          while (G__12473__i < G__12473__a.length) {
            G__12473__a[G__12473__i] = arguments[G__12473__i + 1];
            ++G__12473__i;
          }
          G__12472 = new cljs.core.IndexedSeq(G__12473__a, 0);
        }
        return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__12472);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  atom.cljs$lang$maxFixedArity = 1;
  atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
  atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
  atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
  return atom;
}();
cljs.core.reset_BANG_ = function reset_BANG_(a, new_value) {
  if (a instanceof cljs.core.Atom) {
    var validate = a.validator;
    if (validate == null) {
    } else {
      if (cljs.core.truth_(function() {
        var G__12476 = new_value;
        return validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__12476) : validate.call(null, G__12476);
      }())) {
      } else {
        throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Validator rejected reference state"), cljs.core.str("\n"), cljs.core.str(function() {
          var G__12477 = cljs.core.list(new cljs.core.Symbol(null, "validate", "validate", 1439230700, null), new cljs.core.Symbol(null, "new-value", "new-value", -1567397401, null));
          return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__12477) : cljs.core.pr_str.call(null, G__12477);
        }())].join(""));
      }
    }
    var old_value = a.state;
    a.state = new_value;
    if (a.watches == null) {
    } else {
      cljs.core._notify_watches(a, old_value, new_value);
    }
    return new_value;
  } else {
    return cljs.core._reset_BANG_(a, new_value);
  }
};
cljs.core.swap_BANG_ = function() {
  var swap_BANG_ = null;
  var swap_BANG___2 = function(a, f) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_(a, function() {
        var G__12484 = a.state;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12484) : f.call(null, G__12484);
      }());
    } else {
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a, f);
    }
  };
  var swap_BANG___3 = function(a, f, x) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_(a, function() {
        var G__12485 = a.state;
        var G__12486 = x;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12485, G__12486) : f.call(null, G__12485, G__12486);
      }());
    } else {
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a, f, x);
    }
  };
  var swap_BANG___4 = function(a, f, x, y) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_(a, function() {
        var G__12487 = a.state;
        var G__12488 = x;
        var G__12489 = y;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__12487, G__12488, G__12489) : f.call(null, G__12487, G__12488, G__12489);
      }());
    } else {
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a, f, x, y);
    }
  };
  var swap_BANG___5 = function() {
    var G__12490__delegate = function(a, f, x, y, more) {
      if (a instanceof cljs.core.Atom) {
        return cljs.core.reset_BANG_(a, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a.state, x, y, more));
      } else {
        return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a, f, x, y, more);
      }
    };
    var G__12490 = function(a, f, x, y, var_args) {
      var more = null;
      if (arguments.length > 4) {
        var G__12491__i = 0, G__12491__a = new Array(arguments.length - 4);
        while (G__12491__i < G__12491__a.length) {
          G__12491__a[G__12491__i] = arguments[G__12491__i + 4];
          ++G__12491__i;
        }
        more = new cljs.core.IndexedSeq(G__12491__a, 0);
      }
      return G__12490__delegate.call(this, a, f, x, y, more);
    };
    G__12490.cljs$lang$maxFixedArity = 4;
    G__12490.cljs$lang$applyTo = function(arglist__12492) {
      var a = cljs.core.first(arglist__12492);
      arglist__12492 = cljs.core.next(arglist__12492);
      var f = cljs.core.first(arglist__12492);
      arglist__12492 = cljs.core.next(arglist__12492);
      var x = cljs.core.first(arglist__12492);
      arglist__12492 = cljs.core.next(arglist__12492);
      var y = cljs.core.first(arglist__12492);
      var more = cljs.core.rest(arglist__12492);
      return G__12490__delegate(a, f, x, y, more);
    };
    G__12490.cljs$core$IFn$_invoke$arity$variadic = G__12490__delegate;
    return G__12490;
  }();
  swap_BANG_ = function(a, f, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return swap_BANG___2.call(this, a, f);
      case 3:
        return swap_BANG___3.call(this, a, f, x);
      case 4:
        return swap_BANG___4.call(this, a, f, x, y);
      default:
        var G__12493 = null;
        if (arguments.length > 4) {
          var G__12494__i = 0, G__12494__a = new Array(arguments.length - 4);
          while (G__12494__i < G__12494__a.length) {
            G__12494__a[G__12494__i] = arguments[G__12494__i + 4];
            ++G__12494__i;
          }
          G__12493 = new cljs.core.IndexedSeq(G__12494__a, 0);
        }
        return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a, f, x, y, G__12493);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  swap_BANG_.cljs$lang$maxFixedArity = 4;
  swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
  swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
  swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
  swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
  swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
  return swap_BANG_;
}();
cljs.core.compare_and_set_BANG_ = function compare_and_set_BANG_(a, oldval, newval) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null), oldval)) {
    cljs.core.reset_BANG_(a, newval);
    return true;
  } else {
    return false;
  }
};
cljs.core.set_validator_BANG_ = function set_validator_BANG_(iref, val) {
  return iref.validator = val;
};
cljs.core.get_validator = function get_validator(iref) {
  return iref.validator;
};
cljs.core.Volatile = function(state) {
  this.state = state;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;
cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = function(_, new_state) {
  var self__ = this;
  var ___$1 = this;
  return self__.state = new_state;
};
cljs.core.Volatile.cljs$lang$type = true;
cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";
cljs.core.Volatile.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/Volatile");
};
cljs.core.__GT_Volatile = function __GT_Volatile(state) {
  return new cljs.core.Volatile(state);
};
cljs.core.volatile_BANG_ = function volatile_BANG_(val) {
  return new cljs.core.Volatile(val);
};
cljs.core.volatile_QMARK_ = function volatile_QMARK_(x) {
  return x instanceof cljs.core.Volatile;
};
cljs.core.vreset_BANG_ = function vreset_BANG_(vol, newval) {
  return cljs.core._vreset_BANG_(vol, newval);
};
cljs.core.keep_indexed = function() {
  var keep_indexed = null;
  var keep_indexed__1 = function(f) {
    return function(rf) {
      var ia = cljs.core.volatile_BANG_(-1);
      return function(ia) {
        return function() {
          var G__12561 = null;
          var G__12561__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__12561__1 = function(result) {
            var G__12528 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__12528) : rf.call(null, G__12528);
          };
          var G__12561__2 = function(result, input) {
            var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, ia.cljs$core$IDeref$_deref$arity$1(null) + 1);
            var v = function() {
              var G__12529 = i;
              var G__12530 = input;
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12529, G__12530) : f.call(null, G__12529, G__12530);
            }();
            if (v == null) {
              return result;
            } else {
              var G__12531 = result;
              var G__12532 = v;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__12531, G__12532) : rf.call(null, G__12531, G__12532);
            }
          };
          G__12561 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__12561__0.call(this);
              case 1:
                return G__12561__1.call(this, result);
              case 2:
                return G__12561__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__12561.cljs$core$IFn$_invoke$arity$0 = G__12561__0;
          G__12561.cljs$core$IFn$_invoke$arity$1 = G__12561__1;
          G__12561.cljs$core$IFn$_invoke$arity$2 = G__12561__2;
          return G__12561;
        }();
      }(ia);
    };
  };
  var keep_indexed__2 = function(f, coll) {
    var keepi = function keepi(idx, coll__$1) {
      return new cljs.core.LazySeq(null, function() {
        var temp__4126__auto__ = cljs.core.seq(coll__$1);
        if (temp__4126__auto__) {
          var s = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_(s)) {
            var c = cljs.core.chunk_first(s);
            var size = cljs.core.count(c);
            var b = cljs.core.chunk_buffer(size);
            var n__4812__auto___12562 = size;
            var i_12563 = 0;
            while (true) {
              if (i_12563 < n__4812__auto___12562) {
                var x_12564 = function() {
                  var G__12557 = idx + i_12563;
                  var G__12558 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_12563);
                  return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12557, G__12558) : f.call(null, G__12557, G__12558);
                }();
                if (x_12564 == null) {
                } else {
                  cljs.core.chunk_append(b, x_12564);
                }
                var G__12565 = i_12563 + 1;
                i_12563 = G__12565;
                continue;
              } else {
              }
              break;
            }
            return cljs.core.chunk_cons(cljs.core.chunk(b), keepi(idx + size, cljs.core.chunk_rest(s)));
          } else {
            var x = function() {
              var G__12559 = idx;
              var G__12560 = cljs.core.first(s);
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12559, G__12560) : f.call(null, G__12559, G__12560);
            }();
            if (x == null) {
              return keepi(idx + 1, cljs.core.rest(s));
            } else {
              return cljs.core.cons(x, keepi(idx + 1, cljs.core.rest(s)));
            }
          }
        } else {
          return null;
        }
      }, null, null);
    };
    return keepi(0, coll);
  };
  keep_indexed = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return keep_indexed__1.call(this, f);
      case 2:
        return keep_indexed__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
  keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
  return keep_indexed;
}();
cljs.core.every_pred = function() {
  var every_pred = null;
  var every_pred__1 = function(p) {
    return function() {
      var ep1 = null;
      var ep1__0 = function() {
        return true;
      };
      var ep1__1 = function(x) {
        return cljs.core.boolean$(function() {
          var G__12779 = x;
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__12779) : p.call(null, G__12779);
        }());
      };
      var ep1__2 = function(x, y) {
        return cljs.core.boolean$(function() {
          var and__3913__auto__ = function() {
            var G__12781 = x;
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__12781) : p.call(null, G__12781);
          }();
          if (cljs.core.truth_(and__3913__auto__)) {
            var G__12782 = y;
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__12782) : p.call(null, G__12782);
          } else {
            return and__3913__auto__;
          }
        }());
      };
      var ep1__3 = function(x, y, z) {
        return cljs.core.boolean$(function() {
          var and__3913__auto__ = function() {
            var G__12784 = x;
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__12784) : p.call(null, G__12784);
          }();
          if (cljs.core.truth_(and__3913__auto__)) {
            var and__3913__auto____$1 = function() {
              var G__12786 = y;
              return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__12786) : p.call(null, G__12786);
            }();
            if (cljs.core.truth_(and__3913__auto____$1)) {
              var G__12787 = z;
              return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__12787) : p.call(null, G__12787);
            } else {
              return and__3913__auto____$1;
            }
          } else {
            return and__3913__auto__;
          }
        }());
      };
      var ep1__4 = function() {
        var G__12956__delegate = function(x, y, z, args) {
          return cljs.core.boolean$(ep1.cljs$core$IFn$_invoke$arity$3(x, y, z) && cljs.core.every_QMARK_(p, args));
        };
        var G__12956 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__12957__i = 0, G__12957__a = new Array(arguments.length - 3);
            while (G__12957__i < G__12957__a.length) {
              G__12957__a[G__12957__i] = arguments[G__12957__i + 3];
              ++G__12957__i;
            }
            args = new cljs.core.IndexedSeq(G__12957__a, 0);
          }
          return G__12956__delegate.call(this, x, y, z, args);
        };
        G__12956.cljs$lang$maxFixedArity = 3;
        G__12956.cljs$lang$applyTo = function(arglist__12958) {
          var x = cljs.core.first(arglist__12958);
          arglist__12958 = cljs.core.next(arglist__12958);
          var y = cljs.core.first(arglist__12958);
          arglist__12958 = cljs.core.next(arglist__12958);
          var z = cljs.core.first(arglist__12958);
          var args = cljs.core.rest(arglist__12958);
          return G__12956__delegate(x, y, z, args);
        };
        G__12956.cljs$core$IFn$_invoke$arity$variadic = G__12956__delegate;
        return G__12956;
      }();
      ep1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep1__0.call(this);
          case 1:
            return ep1__1.call(this, x);
          case 2:
            return ep1__2.call(this, x, y);
          case 3:
            return ep1__3.call(this, x, y, z);
          default:
            var G__12959 = null;
            if (arguments.length > 3) {
              var G__12960__i = 0, G__12960__a = new Array(arguments.length - 3);
              while (G__12960__i < G__12960__a.length) {
                G__12960__a[G__12960__i] = arguments[G__12960__i + 3];
                ++G__12960__i;
              }
              G__12959 = new cljs.core.IndexedSeq(G__12960__a, 0);
            }
            return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__12959);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep1.cljs$lang$maxFixedArity = 3;
      ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
      ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
      ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
      ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
      ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
      ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep1;
    }();
  };
  var every_pred__2 = function(p1, p2) {
    return function() {
      var ep2 = null;
      var ep2__0 = function() {
        return true;
      };
      var ep2__1 = function(x) {
        return cljs.core.boolean$(function() {
          var and__3913__auto__ = function() {
            var G__12819 = x;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__12819) : p1.call(null, G__12819);
          }();
          if (cljs.core.truth_(and__3913__auto__)) {
            var G__12820 = x;
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__12820) : p2.call(null, G__12820);
          } else {
            return and__3913__auto__;
          }
        }());
      };
      var ep2__2 = function(x, y) {
        return cljs.core.boolean$(function() {
          var and__3913__auto__ = function() {
            var G__12822 = x;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__12822) : p1.call(null, G__12822);
          }();
          if (cljs.core.truth_(and__3913__auto__)) {
            var and__3913__auto____$1 = function() {
              var G__12824 = y;
              return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__12824) : p1.call(null, G__12824);
            }();
            if (cljs.core.truth_(and__3913__auto____$1)) {
              var and__3913__auto____$2 = function() {
                var G__12826 = x;
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__12826) : p2.call(null, G__12826);
              }();
              if (cljs.core.truth_(and__3913__auto____$2)) {
                var G__12827 = y;
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__12827) : p2.call(null, G__12827);
              } else {
                return and__3913__auto____$2;
              }
            } else {
              return and__3913__auto____$1;
            }
          } else {
            return and__3913__auto__;
          }
        }());
      };
      var ep2__3 = function(x, y, z) {
        return cljs.core.boolean$(function() {
          var and__3913__auto__ = function() {
            var G__12829 = x;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__12829) : p1.call(null, G__12829);
          }();
          if (cljs.core.truth_(and__3913__auto__)) {
            var and__3913__auto____$1 = function() {
              var G__12831 = y;
              return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__12831) : p1.call(null, G__12831);
            }();
            if (cljs.core.truth_(and__3913__auto____$1)) {
              var and__3913__auto____$2 = function() {
                var G__12833 = z;
                return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__12833) : p1.call(null, G__12833);
              }();
              if (cljs.core.truth_(and__3913__auto____$2)) {
                var and__3913__auto____$3 = function() {
                  var G__12835 = x;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__12835) : p2.call(null, G__12835);
                }();
                if (cljs.core.truth_(and__3913__auto____$3)) {
                  var and__3913__auto____$4 = function() {
                    var G__12837 = y;
                    return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__12837) : p2.call(null, G__12837);
                  }();
                  if (cljs.core.truth_(and__3913__auto____$4)) {
                    var G__12838 = z;
                    return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__12838) : p2.call(null, G__12838);
                  } else {
                    return and__3913__auto____$4;
                  }
                } else {
                  return and__3913__auto____$3;
                }
              } else {
                return and__3913__auto____$2;
              }
            } else {
              return and__3913__auto____$1;
            }
          } else {
            return and__3913__auto__;
          }
        }());
      };
      var ep2__4 = function() {
        var G__12961__delegate = function(x, y, z, args) {
          return cljs.core.boolean$(ep2.cljs$core$IFn$_invoke$arity$3(x, y, z) && cljs.core.every_QMARK_(function(p1__12566_SHARP_) {
            var and__3913__auto__ = function() {
              var G__12843 = p1__12566_SHARP_;
              return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__12843) : p1.call(null, G__12843);
            }();
            if (cljs.core.truth_(and__3913__auto__)) {
              var G__12844 = p1__12566_SHARP_;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__12844) : p2.call(null, G__12844);
            } else {
              return and__3913__auto__;
            }
          }, args));
        };
        var G__12961 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__12962__i = 0, G__12962__a = new Array(arguments.length - 3);
            while (G__12962__i < G__12962__a.length) {
              G__12962__a[G__12962__i] = arguments[G__12962__i + 3];
              ++G__12962__i;
            }
            args = new cljs.core.IndexedSeq(G__12962__a, 0);
          }
          return G__12961__delegate.call(this, x, y, z, args);
        };
        G__12961.cljs$lang$maxFixedArity = 3;
        G__12961.cljs$lang$applyTo = function(arglist__12963) {
          var x = cljs.core.first(arglist__12963);
          arglist__12963 = cljs.core.next(arglist__12963);
          var y = cljs.core.first(arglist__12963);
          arglist__12963 = cljs.core.next(arglist__12963);
          var z = cljs.core.first(arglist__12963);
          var args = cljs.core.rest(arglist__12963);
          return G__12961__delegate(x, y, z, args);
        };
        G__12961.cljs$core$IFn$_invoke$arity$variadic = G__12961__delegate;
        return G__12961;
      }();
      ep2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep2__0.call(this);
          case 1:
            return ep2__1.call(this, x);
          case 2:
            return ep2__2.call(this, x, y);
          case 3:
            return ep2__3.call(this, x, y, z);
          default:
            var G__12964 = null;
            if (arguments.length > 3) {
              var G__12965__i = 0, G__12965__a = new Array(arguments.length - 3);
              while (G__12965__i < G__12965__a.length) {
                G__12965__a[G__12965__i] = arguments[G__12965__i + 3];
                ++G__12965__i;
              }
              G__12964 = new cljs.core.IndexedSeq(G__12965__a, 0);
            }
            return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__12964);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep2.cljs$lang$maxFixedArity = 3;
      ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
      ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
      ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
      ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
      ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
      ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep2;
    }();
  };
  var every_pred__3 = function(p1, p2, p3) {
    return function() {
      var ep3 = null;
      var ep3__0 = function() {
        return true;
      };
      var ep3__1 = function(x) {
        return cljs.core.boolean$(function() {
          var and__3913__auto__ = function() {
            var G__12890 = x;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__12890) : p1.call(null, G__12890);
          }();
          if (cljs.core.truth_(and__3913__auto__)) {
            var and__3913__auto____$1 = function() {
              var G__12892 = x;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__12892) : p2.call(null, G__12892);
            }();
            if (cljs.core.truth_(and__3913__auto____$1)) {
              var G__12893 = x;
              return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__12893) : p3.call(null, G__12893);
            } else {
              return and__3913__auto____$1;
            }
          } else {
            return and__3913__auto__;
          }
        }());
      };
      var ep3__2 = function(x, y) {
        return cljs.core.boolean$(function() {
          var and__3913__auto__ = function() {
            var G__12895 = x;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__12895) : p1.call(null, G__12895);
          }();
          if (cljs.core.truth_(and__3913__auto__)) {
            var and__3913__auto____$1 = function() {
              var G__12897 = x;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__12897) : p2.call(null, G__12897);
            }();
            if (cljs.core.truth_(and__3913__auto____$1)) {
              var and__3913__auto____$2 = function() {
                var G__12899 = x;
                return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__12899) : p3.call(null, G__12899);
              }();
              if (cljs.core.truth_(and__3913__auto____$2)) {
                var and__3913__auto____$3 = function() {
                  var G__12901 = y;
                  return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__12901) : p1.call(null, G__12901);
                }();
                if (cljs.core.truth_(and__3913__auto____$3)) {
                  var and__3913__auto____$4 = function() {
                    var G__12903 = y;
                    return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__12903) : p2.call(null, G__12903);
                  }();
                  if (cljs.core.truth_(and__3913__auto____$4)) {
                    var G__12904 = y;
                    return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__12904) : p3.call(null, G__12904);
                  } else {
                    return and__3913__auto____$4;
                  }
                } else {
                  return and__3913__auto____$3;
                }
              } else {
                return and__3913__auto____$2;
              }
            } else {
              return and__3913__auto____$1;
            }
          } else {
            return and__3913__auto__;
          }
        }());
      };
      var ep3__3 = function(x, y, z) {
        return cljs.core.boolean$(function() {
          var and__3913__auto__ = function() {
            var G__12906 = x;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__12906) : p1.call(null, G__12906);
          }();
          if (cljs.core.truth_(and__3913__auto__)) {
            var and__3913__auto____$1 = function() {
              var G__12908 = x;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__12908) : p2.call(null, G__12908);
            }();
            if (cljs.core.truth_(and__3913__auto____$1)) {
              var and__3913__auto____$2 = function() {
                var G__12910 = x;
                return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__12910) : p3.call(null, G__12910);
              }();
              if (cljs.core.truth_(and__3913__auto____$2)) {
                var and__3913__auto____$3 = function() {
                  var G__12912 = y;
                  return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__12912) : p1.call(null, G__12912);
                }();
                if (cljs.core.truth_(and__3913__auto____$3)) {
                  var and__3913__auto____$4 = function() {
                    var G__12914 = y;
                    return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__12914) : p2.call(null, G__12914);
                  }();
                  if (cljs.core.truth_(and__3913__auto____$4)) {
                    var and__3913__auto____$5 = function() {
                      var G__12916 = y;
                      return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__12916) : p3.call(null, G__12916);
                    }();
                    if (cljs.core.truth_(and__3913__auto____$5)) {
                      var and__3913__auto____$6 = function() {
                        var G__12918 = z;
                        return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__12918) : p1.call(null, G__12918);
                      }();
                      if (cljs.core.truth_(and__3913__auto____$6)) {
                        var and__3913__auto____$7 = function() {
                          var G__12920 = z;
                          return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__12920) : p2.call(null, G__12920);
                        }();
                        if (cljs.core.truth_(and__3913__auto____$7)) {
                          var G__12921 = z;
                          return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__12921) : p3.call(null, G__12921);
                        } else {
                          return and__3913__auto____$7;
                        }
                      } else {
                        return and__3913__auto____$6;
                      }
                    } else {
                      return and__3913__auto____$5;
                    }
                  } else {
                    return and__3913__auto____$4;
                  }
                } else {
                  return and__3913__auto____$3;
                }
              } else {
                return and__3913__auto____$2;
              }
            } else {
              return and__3913__auto____$1;
            }
          } else {
            return and__3913__auto__;
          }
        }());
      };
      var ep3__4 = function() {
        var G__12966__delegate = function(x, y, z, args) {
          return cljs.core.boolean$(ep3.cljs$core$IFn$_invoke$arity$3(x, y, z) && cljs.core.every_QMARK_(function(p1__12567_SHARP_) {
            var and__3913__auto__ = function() {
              var G__12928 = p1__12567_SHARP_;
              return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__12928) : p1.call(null, G__12928);
            }();
            if (cljs.core.truth_(and__3913__auto__)) {
              var and__3913__auto____$1 = function() {
                var G__12930 = p1__12567_SHARP_;
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__12930) : p2.call(null, G__12930);
              }();
              if (cljs.core.truth_(and__3913__auto____$1)) {
                var G__12931 = p1__12567_SHARP_;
                return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__12931) : p3.call(null, G__12931);
              } else {
                return and__3913__auto____$1;
              }
            } else {
              return and__3913__auto__;
            }
          }, args));
        };
        var G__12966 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__12967__i = 0, G__12967__a = new Array(arguments.length - 3);
            while (G__12967__i < G__12967__a.length) {
              G__12967__a[G__12967__i] = arguments[G__12967__i + 3];
              ++G__12967__i;
            }
            args = new cljs.core.IndexedSeq(G__12967__a, 0);
          }
          return G__12966__delegate.call(this, x, y, z, args);
        };
        G__12966.cljs$lang$maxFixedArity = 3;
        G__12966.cljs$lang$applyTo = function(arglist__12968) {
          var x = cljs.core.first(arglist__12968);
          arglist__12968 = cljs.core.next(arglist__12968);
          var y = cljs.core.first(arglist__12968);
          arglist__12968 = cljs.core.next(arglist__12968);
          var z = cljs.core.first(arglist__12968);
          var args = cljs.core.rest(arglist__12968);
          return G__12966__delegate(x, y, z, args);
        };
        G__12966.cljs$core$IFn$_invoke$arity$variadic = G__12966__delegate;
        return G__12966;
      }();
      ep3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep3__0.call(this);
          case 1:
            return ep3__1.call(this, x);
          case 2:
            return ep3__2.call(this, x, y);
          case 3:
            return ep3__3.call(this, x, y, z);
          default:
            var G__12969 = null;
            if (arguments.length > 3) {
              var G__12970__i = 0, G__12970__a = new Array(arguments.length - 3);
              while (G__12970__i < G__12970__a.length) {
                G__12970__a[G__12970__i] = arguments[G__12970__i + 3];
                ++G__12970__i;
              }
              G__12969 = new cljs.core.IndexedSeq(G__12970__a, 0);
            }
            return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__12969);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep3.cljs$lang$maxFixedArity = 3;
      ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
      ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
      ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
      ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
      ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
      ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep3;
    }();
  };
  var every_pred__4 = function() {
    var G__12971__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1, p2, p3, ps);
      return function(ps__$1) {
        return function() {
          var epn = null;
          var epn__0 = function() {
            return true;
          };
          var epn__1 = function(x) {
            return cljs.core.every_QMARK_(function(ps__$1) {
              return function(p1__12568_SHARP_) {
                var G__12947 = x;
                return p1__12568_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__12568_SHARP_.cljs$core$IFn$_invoke$arity$1(G__12947) : p1__12568_SHARP_.call(null, G__12947);
              };
            }(ps__$1), ps__$1);
          };
          var epn__2 = function(x, y) {
            return cljs.core.every_QMARK_(function(ps__$1) {
              return function(p1__12569_SHARP_) {
                var and__3913__auto__ = function() {
                  var G__12949 = x;
                  return p1__12569_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__12569_SHARP_.cljs$core$IFn$_invoke$arity$1(G__12949) : p1__12569_SHARP_.call(null, G__12949);
                }();
                if (cljs.core.truth_(and__3913__auto__)) {
                  var G__12950 = y;
                  return p1__12569_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__12569_SHARP_.cljs$core$IFn$_invoke$arity$1(G__12950) : p1__12569_SHARP_.call(null, G__12950);
                } else {
                  return and__3913__auto__;
                }
              };
            }(ps__$1), ps__$1);
          };
          var epn__3 = function(x, y, z) {
            return cljs.core.every_QMARK_(function(ps__$1) {
              return function(p1__12570_SHARP_) {
                var and__3913__auto__ = function() {
                  var G__12952 = x;
                  return p1__12570_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__12570_SHARP_.cljs$core$IFn$_invoke$arity$1(G__12952) : p1__12570_SHARP_.call(null, G__12952);
                }();
                if (cljs.core.truth_(and__3913__auto__)) {
                  var and__3913__auto____$1 = function() {
                    var G__12954 = y;
                    return p1__12570_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__12570_SHARP_.cljs$core$IFn$_invoke$arity$1(G__12954) : p1__12570_SHARP_.call(null, G__12954);
                  }();
                  if (cljs.core.truth_(and__3913__auto____$1)) {
                    var G__12955 = z;
                    return p1__12570_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__12570_SHARP_.cljs$core$IFn$_invoke$arity$1(G__12955) : p1__12570_SHARP_.call(null, G__12955);
                  } else {
                    return and__3913__auto____$1;
                  }
                } else {
                  return and__3913__auto__;
                }
              };
            }(ps__$1), ps__$1);
          };
          var epn__4 = function() {
            var G__12972__delegate = function(x, y, z, args) {
              return cljs.core.boolean$(epn.cljs$core$IFn$_invoke$arity$3(x, y, z) && cljs.core.every_QMARK_(function(ps__$1) {
                return function(p1__12571_SHARP_) {
                  return cljs.core.every_QMARK_(p1__12571_SHARP_, args);
                };
              }(ps__$1), ps__$1));
            };
            var G__12972 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                var G__12973__i = 0, G__12973__a = new Array(arguments.length - 3);
                while (G__12973__i < G__12973__a.length) {
                  G__12973__a[G__12973__i] = arguments[G__12973__i + 3];
                  ++G__12973__i;
                }
                args = new cljs.core.IndexedSeq(G__12973__a, 0);
              }
              return G__12972__delegate.call(this, x, y, z, args);
            };
            G__12972.cljs$lang$maxFixedArity = 3;
            G__12972.cljs$lang$applyTo = function(arglist__12974) {
              var x = cljs.core.first(arglist__12974);
              arglist__12974 = cljs.core.next(arglist__12974);
              var y = cljs.core.first(arglist__12974);
              arglist__12974 = cljs.core.next(arglist__12974);
              var z = cljs.core.first(arglist__12974);
              var args = cljs.core.rest(arglist__12974);
              return G__12972__delegate(x, y, z, args);
            };
            G__12972.cljs$core$IFn$_invoke$arity$variadic = G__12972__delegate;
            return G__12972;
          }();
          epn = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return epn__0.call(this);
              case 1:
                return epn__1.call(this, x);
              case 2:
                return epn__2.call(this, x, y);
              case 3:
                return epn__3.call(this, x, y, z);
              default:
                var G__12975 = null;
                if (arguments.length > 3) {
                  var G__12976__i = 0, G__12976__a = new Array(arguments.length - 3);
                  while (G__12976__i < G__12976__a.length) {
                    G__12976__a[G__12976__i] = arguments[G__12976__i + 3];
                    ++G__12976__i;
                  }
                  G__12975 = new cljs.core.IndexedSeq(G__12976__a, 0);
                }
                return epn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__12975);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          epn.cljs$lang$maxFixedArity = 3;
          epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
          epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
          epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
          epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
          epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
          epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
          return epn;
        }();
      }(ps__$1);
    };
    var G__12971 = function(p1, p2, p3, var_args) {
      var ps = null;
      if (arguments.length > 3) {
        var G__12977__i = 0, G__12977__a = new Array(arguments.length - 3);
        while (G__12977__i < G__12977__a.length) {
          G__12977__a[G__12977__i] = arguments[G__12977__i + 3];
          ++G__12977__i;
        }
        ps = new cljs.core.IndexedSeq(G__12977__a, 0);
      }
      return G__12971__delegate.call(this, p1, p2, p3, ps);
    };
    G__12971.cljs$lang$maxFixedArity = 3;
    G__12971.cljs$lang$applyTo = function(arglist__12978) {
      var p1 = cljs.core.first(arglist__12978);
      arglist__12978 = cljs.core.next(arglist__12978);
      var p2 = cljs.core.first(arglist__12978);
      arglist__12978 = cljs.core.next(arglist__12978);
      var p3 = cljs.core.first(arglist__12978);
      var ps = cljs.core.rest(arglist__12978);
      return G__12971__delegate(p1, p2, p3, ps);
    };
    G__12971.cljs$core$IFn$_invoke$arity$variadic = G__12971__delegate;
    return G__12971;
  }();
  every_pred = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return every_pred__1.call(this, p1);
      case 2:
        return every_pred__2.call(this, p1, p2);
      case 3:
        return every_pred__3.call(this, p1, p2, p3);
      default:
        var G__12979 = null;
        if (arguments.length > 3) {
          var G__12980__i = 0, G__12980__a = new Array(arguments.length - 3);
          while (G__12980__i < G__12980__a.length) {
            G__12980__a[G__12980__i] = arguments[G__12980__i + 3];
            ++G__12980__i;
          }
          G__12979 = new cljs.core.IndexedSeq(G__12980__a, 0);
        }
        return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, G__12979);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  every_pred.cljs$lang$maxFixedArity = 3;
  every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
  every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
  every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
  every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
  every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
  return every_pred;
}();
cljs.core.some_fn = function() {
  var some_fn = null;
  var some_fn__1 = function(p) {
    return function() {
      var sp1 = null;
      var sp1__0 = function() {
        return null;
      };
      var sp1__1 = function(x) {
        var G__13186 = x;
        return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__13186) : p.call(null, G__13186);
      };
      var sp1__2 = function(x, y) {
        var or__3925__auto__ = function() {
          var G__13188 = x;
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__13188) : p.call(null, G__13188);
        }();
        if (cljs.core.truth_(or__3925__auto__)) {
          return or__3925__auto__;
        } else {
          var G__13189 = y;
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__13189) : p.call(null, G__13189);
        }
      };
      var sp1__3 = function(x, y, z) {
        var or__3925__auto__ = function() {
          var G__13191 = x;
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__13191) : p.call(null, G__13191);
        }();
        if (cljs.core.truth_(or__3925__auto__)) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = function() {
            var G__13193 = y;
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__13193) : p.call(null, G__13193);
          }();
          if (cljs.core.truth_(or__3925__auto____$1)) {
            return or__3925__auto____$1;
          } else {
            var G__13194 = z;
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__13194) : p.call(null, G__13194);
          }
        }
      };
      var sp1__4 = function() {
        var G__13355__delegate = function(x, y, z, args) {
          var or__3925__auto__ = sp1.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(or__3925__auto__)) {
            return or__3925__auto__;
          } else {
            return cljs.core.some(p, args);
          }
        };
        var G__13355 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__13356__i = 0, G__13356__a = new Array(arguments.length - 3);
            while (G__13356__i < G__13356__a.length) {
              G__13356__a[G__13356__i] = arguments[G__13356__i + 3];
              ++G__13356__i;
            }
            args = new cljs.core.IndexedSeq(G__13356__a, 0);
          }
          return G__13355__delegate.call(this, x, y, z, args);
        };
        G__13355.cljs$lang$maxFixedArity = 3;
        G__13355.cljs$lang$applyTo = function(arglist__13357) {
          var x = cljs.core.first(arglist__13357);
          arglist__13357 = cljs.core.next(arglist__13357);
          var y = cljs.core.first(arglist__13357);
          arglist__13357 = cljs.core.next(arglist__13357);
          var z = cljs.core.first(arglist__13357);
          var args = cljs.core.rest(arglist__13357);
          return G__13355__delegate(x, y, z, args);
        };
        G__13355.cljs$core$IFn$_invoke$arity$variadic = G__13355__delegate;
        return G__13355;
      }();
      sp1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp1__0.call(this);
          case 1:
            return sp1__1.call(this, x);
          case 2:
            return sp1__2.call(this, x, y);
          case 3:
            return sp1__3.call(this, x, y, z);
          default:
            var G__13358 = null;
            if (arguments.length > 3) {
              var G__13359__i = 0, G__13359__a = new Array(arguments.length - 3);
              while (G__13359__i < G__13359__a.length) {
                G__13359__a[G__13359__i] = arguments[G__13359__i + 3];
                ++G__13359__i;
              }
              G__13358 = new cljs.core.IndexedSeq(G__13359__a, 0);
            }
            return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__13358);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp1.cljs$lang$maxFixedArity = 3;
      sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
      sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
      sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
      sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
      sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
      sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp1;
    }();
  };
  var some_fn__2 = function(p1, p2) {
    return function() {
      var sp2 = null;
      var sp2__0 = function() {
        return null;
      };
      var sp2__1 = function(x) {
        var or__3925__auto__ = function() {
          var G__13226 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13226) : p1.call(null, G__13226);
        }();
        if (cljs.core.truth_(or__3925__auto__)) {
          return or__3925__auto__;
        } else {
          var G__13227 = x;
          return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13227) : p2.call(null, G__13227);
        }
      };
      var sp2__2 = function(x, y) {
        var or__3925__auto__ = function() {
          var G__13229 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13229) : p1.call(null, G__13229);
        }();
        if (cljs.core.truth_(or__3925__auto__)) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = function() {
            var G__13231 = y;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13231) : p1.call(null, G__13231);
          }();
          if (cljs.core.truth_(or__3925__auto____$1)) {
            return or__3925__auto____$1;
          } else {
            var or__3925__auto____$2 = function() {
              var G__13233 = x;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13233) : p2.call(null, G__13233);
            }();
            if (cljs.core.truth_(or__3925__auto____$2)) {
              return or__3925__auto____$2;
            } else {
              var G__13234 = y;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13234) : p2.call(null, G__13234);
            }
          }
        }
      };
      var sp2__3 = function(x, y, z) {
        var or__3925__auto__ = function() {
          var G__13236 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13236) : p1.call(null, G__13236);
        }();
        if (cljs.core.truth_(or__3925__auto__)) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = function() {
            var G__13238 = y;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13238) : p1.call(null, G__13238);
          }();
          if (cljs.core.truth_(or__3925__auto____$1)) {
            return or__3925__auto____$1;
          } else {
            var or__3925__auto____$2 = function() {
              var G__13240 = z;
              return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13240) : p1.call(null, G__13240);
            }();
            if (cljs.core.truth_(or__3925__auto____$2)) {
              return or__3925__auto____$2;
            } else {
              var or__3925__auto____$3 = function() {
                var G__13242 = x;
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13242) : p2.call(null, G__13242);
              }();
              if (cljs.core.truth_(or__3925__auto____$3)) {
                return or__3925__auto____$3;
              } else {
                var or__3925__auto____$4 = function() {
                  var G__13244 = y;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13244) : p2.call(null, G__13244);
                }();
                if (cljs.core.truth_(or__3925__auto____$4)) {
                  return or__3925__auto____$4;
                } else {
                  var G__13245 = z;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13245) : p2.call(null, G__13245);
                }
              }
            }
          }
        }
      };
      var sp2__4 = function() {
        var G__13360__delegate = function(x, y, z, args) {
          var or__3925__auto__ = sp2.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(or__3925__auto__)) {
            return or__3925__auto__;
          } else {
            return cljs.core.some(function(or__3925__auto__) {
              return function(p1__12981_SHARP_) {
                var or__3925__auto____$1 = function() {
                  var G__13247 = p1__12981_SHARP_;
                  return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13247) : p1.call(null, G__13247);
                }();
                if (cljs.core.truth_(or__3925__auto____$1)) {
                  return or__3925__auto____$1;
                } else {
                  var G__13248 = p1__12981_SHARP_;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13248) : p2.call(null, G__13248);
                }
              };
            }(or__3925__auto__), args);
          }
        };
        var G__13360 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__13361__i = 0, G__13361__a = new Array(arguments.length - 3);
            while (G__13361__i < G__13361__a.length) {
              G__13361__a[G__13361__i] = arguments[G__13361__i + 3];
              ++G__13361__i;
            }
            args = new cljs.core.IndexedSeq(G__13361__a, 0);
          }
          return G__13360__delegate.call(this, x, y, z, args);
        };
        G__13360.cljs$lang$maxFixedArity = 3;
        G__13360.cljs$lang$applyTo = function(arglist__13362) {
          var x = cljs.core.first(arglist__13362);
          arglist__13362 = cljs.core.next(arglist__13362);
          var y = cljs.core.first(arglist__13362);
          arglist__13362 = cljs.core.next(arglist__13362);
          var z = cljs.core.first(arglist__13362);
          var args = cljs.core.rest(arglist__13362);
          return G__13360__delegate(x, y, z, args);
        };
        G__13360.cljs$core$IFn$_invoke$arity$variadic = G__13360__delegate;
        return G__13360;
      }();
      sp2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp2__0.call(this);
          case 1:
            return sp2__1.call(this, x);
          case 2:
            return sp2__2.call(this, x, y);
          case 3:
            return sp2__3.call(this, x, y, z);
          default:
            var G__13363 = null;
            if (arguments.length > 3) {
              var G__13364__i = 0, G__13364__a = new Array(arguments.length - 3);
              while (G__13364__i < G__13364__a.length) {
                G__13364__a[G__13364__i] = arguments[G__13364__i + 3];
                ++G__13364__i;
              }
              G__13363 = new cljs.core.IndexedSeq(G__13364__a, 0);
            }
            return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__13363);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp2.cljs$lang$maxFixedArity = 3;
      sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
      sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
      sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
      sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
      sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
      sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp2;
    }();
  };
  var some_fn__3 = function(p1, p2, p3) {
    return function() {
      var sp3 = null;
      var sp3__0 = function() {
        return null;
      };
      var sp3__1 = function(x) {
        var or__3925__auto__ = function() {
          var G__13294 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13294) : p1.call(null, G__13294);
        }();
        if (cljs.core.truth_(or__3925__auto__)) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = function() {
            var G__13296 = x;
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13296) : p2.call(null, G__13296);
          }();
          if (cljs.core.truth_(or__3925__auto____$1)) {
            return or__3925__auto____$1;
          } else {
            var G__13297 = x;
            return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__13297) : p3.call(null, G__13297);
          }
        }
      };
      var sp3__2 = function(x, y) {
        var or__3925__auto__ = function() {
          var G__13299 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13299) : p1.call(null, G__13299);
        }();
        if (cljs.core.truth_(or__3925__auto__)) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = function() {
            var G__13301 = x;
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13301) : p2.call(null, G__13301);
          }();
          if (cljs.core.truth_(or__3925__auto____$1)) {
            return or__3925__auto____$1;
          } else {
            var or__3925__auto____$2 = function() {
              var G__13303 = x;
              return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__13303) : p3.call(null, G__13303);
            }();
            if (cljs.core.truth_(or__3925__auto____$2)) {
              return or__3925__auto____$2;
            } else {
              var or__3925__auto____$3 = function() {
                var G__13305 = y;
                return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13305) : p1.call(null, G__13305);
              }();
              if (cljs.core.truth_(or__3925__auto____$3)) {
                return or__3925__auto____$3;
              } else {
                var or__3925__auto____$4 = function() {
                  var G__13307 = y;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13307) : p2.call(null, G__13307);
                }();
                if (cljs.core.truth_(or__3925__auto____$4)) {
                  return or__3925__auto____$4;
                } else {
                  var G__13308 = y;
                  return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__13308) : p3.call(null, G__13308);
                }
              }
            }
          }
        }
      };
      var sp3__3 = function(x, y, z) {
        var or__3925__auto__ = function() {
          var G__13310 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13310) : p1.call(null, G__13310);
        }();
        if (cljs.core.truth_(or__3925__auto__)) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = function() {
            var G__13312 = x;
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13312) : p2.call(null, G__13312);
          }();
          if (cljs.core.truth_(or__3925__auto____$1)) {
            return or__3925__auto____$1;
          } else {
            var or__3925__auto____$2 = function() {
              var G__13314 = x;
              return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__13314) : p3.call(null, G__13314);
            }();
            if (cljs.core.truth_(or__3925__auto____$2)) {
              return or__3925__auto____$2;
            } else {
              var or__3925__auto____$3 = function() {
                var G__13316 = y;
                return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13316) : p1.call(null, G__13316);
              }();
              if (cljs.core.truth_(or__3925__auto____$3)) {
                return or__3925__auto____$3;
              } else {
                var or__3925__auto____$4 = function() {
                  var G__13318 = y;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13318) : p2.call(null, G__13318);
                }();
                if (cljs.core.truth_(or__3925__auto____$4)) {
                  return or__3925__auto____$4;
                } else {
                  var or__3925__auto____$5 = function() {
                    var G__13320 = y;
                    return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__13320) : p3.call(null, G__13320);
                  }();
                  if (cljs.core.truth_(or__3925__auto____$5)) {
                    return or__3925__auto____$5;
                  } else {
                    var or__3925__auto____$6 = function() {
                      var G__13322 = z;
                      return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13322) : p1.call(null, G__13322);
                    }();
                    if (cljs.core.truth_(or__3925__auto____$6)) {
                      return or__3925__auto____$6;
                    } else {
                      var or__3925__auto____$7 = function() {
                        var G__13324 = z;
                        return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13324) : p2.call(null, G__13324);
                      }();
                      if (cljs.core.truth_(or__3925__auto____$7)) {
                        return or__3925__auto____$7;
                      } else {
                        var G__13325 = z;
                        return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__13325) : p3.call(null, G__13325);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      var sp3__4 = function() {
        var G__13365__delegate = function(x, y, z, args) {
          var or__3925__auto__ = sp3.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(or__3925__auto__)) {
            return or__3925__auto__;
          } else {
            return cljs.core.some(function(or__3925__auto__) {
              return function(p1__12982_SHARP_) {
                var or__3925__auto____$1 = function() {
                  var G__13327 = p1__12982_SHARP_;
                  return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13327) : p1.call(null, G__13327);
                }();
                if (cljs.core.truth_(or__3925__auto____$1)) {
                  return or__3925__auto____$1;
                } else {
                  var or__3925__auto____$2 = function() {
                    var G__13329 = p1__12982_SHARP_;
                    return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13329) : p2.call(null, G__13329);
                  }();
                  if (cljs.core.truth_(or__3925__auto____$2)) {
                    return or__3925__auto____$2;
                  } else {
                    var G__13330 = p1__12982_SHARP_;
                    return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__13330) : p3.call(null, G__13330);
                  }
                }
              };
            }(or__3925__auto__), args);
          }
        };
        var G__13365 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__13366__i = 0, G__13366__a = new Array(arguments.length - 3);
            while (G__13366__i < G__13366__a.length) {
              G__13366__a[G__13366__i] = arguments[G__13366__i + 3];
              ++G__13366__i;
            }
            args = new cljs.core.IndexedSeq(G__13366__a, 0);
          }
          return G__13365__delegate.call(this, x, y, z, args);
        };
        G__13365.cljs$lang$maxFixedArity = 3;
        G__13365.cljs$lang$applyTo = function(arglist__13367) {
          var x = cljs.core.first(arglist__13367);
          arglist__13367 = cljs.core.next(arglist__13367);
          var y = cljs.core.first(arglist__13367);
          arglist__13367 = cljs.core.next(arglist__13367);
          var z = cljs.core.first(arglist__13367);
          var args = cljs.core.rest(arglist__13367);
          return G__13365__delegate(x, y, z, args);
        };
        G__13365.cljs$core$IFn$_invoke$arity$variadic = G__13365__delegate;
        return G__13365;
      }();
      sp3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp3__0.call(this);
          case 1:
            return sp3__1.call(this, x);
          case 2:
            return sp3__2.call(this, x, y);
          case 3:
            return sp3__3.call(this, x, y, z);
          default:
            var G__13368 = null;
            if (arguments.length > 3) {
              var G__13369__i = 0, G__13369__a = new Array(arguments.length - 3);
              while (G__13369__i < G__13369__a.length) {
                G__13369__a[G__13369__i] = arguments[G__13369__i + 3];
                ++G__13369__i;
              }
              G__13368 = new cljs.core.IndexedSeq(G__13369__a, 0);
            }
            return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__13368);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp3.cljs$lang$maxFixedArity = 3;
      sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
      sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
      sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
      sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
      sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
      sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp3;
    }();
  };
  var some_fn__4 = function() {
    var G__13370__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1, p2, p3, ps);
      return function(ps__$1) {
        return function() {
          var spn = null;
          var spn__0 = function() {
            return null;
          };
          var spn__1 = function(x) {
            return cljs.core.some(function(ps__$1) {
              return function(p1__12983_SHARP_) {
                var G__13346 = x;
                return p1__12983_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__12983_SHARP_.cljs$core$IFn$_invoke$arity$1(G__13346) : p1__12983_SHARP_.call(null, G__13346);
              };
            }(ps__$1), ps__$1);
          };
          var spn__2 = function(x, y) {
            return cljs.core.some(function(ps__$1) {
              return function(p1__12984_SHARP_) {
                var or__3925__auto__ = function() {
                  var G__13348 = x;
                  return p1__12984_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__12984_SHARP_.cljs$core$IFn$_invoke$arity$1(G__13348) : p1__12984_SHARP_.call(null, G__13348);
                }();
                if (cljs.core.truth_(or__3925__auto__)) {
                  return or__3925__auto__;
                } else {
                  var G__13349 = y;
                  return p1__12984_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__12984_SHARP_.cljs$core$IFn$_invoke$arity$1(G__13349) : p1__12984_SHARP_.call(null, G__13349);
                }
              };
            }(ps__$1), ps__$1);
          };
          var spn__3 = function(x, y, z) {
            return cljs.core.some(function(ps__$1) {
              return function(p1__12985_SHARP_) {
                var or__3925__auto__ = function() {
                  var G__13351 = x;
                  return p1__12985_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__12985_SHARP_.cljs$core$IFn$_invoke$arity$1(G__13351) : p1__12985_SHARP_.call(null, G__13351);
                }();
                if (cljs.core.truth_(or__3925__auto__)) {
                  return or__3925__auto__;
                } else {
                  var or__3925__auto____$1 = function() {
                    var G__13353 = y;
                    return p1__12985_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__12985_SHARP_.cljs$core$IFn$_invoke$arity$1(G__13353) : p1__12985_SHARP_.call(null, G__13353);
                  }();
                  if (cljs.core.truth_(or__3925__auto____$1)) {
                    return or__3925__auto____$1;
                  } else {
                    var G__13354 = z;
                    return p1__12985_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__12985_SHARP_.cljs$core$IFn$_invoke$arity$1(G__13354) : p1__12985_SHARP_.call(null, G__13354);
                  }
                }
              };
            }(ps__$1), ps__$1);
          };
          var spn__4 = function() {
            var G__13371__delegate = function(x, y, z, args) {
              var or__3925__auto__ = spn.cljs$core$IFn$_invoke$arity$3(x, y, z);
              if (cljs.core.truth_(or__3925__auto__)) {
                return or__3925__auto__;
              } else {
                return cljs.core.some(function(or__3925__auto__, ps__$1) {
                  return function(p1__12986_SHARP_) {
                    return cljs.core.some(p1__12986_SHARP_, args);
                  };
                }(or__3925__auto__, ps__$1), ps__$1);
              }
            };
            var G__13371 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                var G__13372__i = 0, G__13372__a = new Array(arguments.length - 3);
                while (G__13372__i < G__13372__a.length) {
                  G__13372__a[G__13372__i] = arguments[G__13372__i + 3];
                  ++G__13372__i;
                }
                args = new cljs.core.IndexedSeq(G__13372__a, 0);
              }
              return G__13371__delegate.call(this, x, y, z, args);
            };
            G__13371.cljs$lang$maxFixedArity = 3;
            G__13371.cljs$lang$applyTo = function(arglist__13373) {
              var x = cljs.core.first(arglist__13373);
              arglist__13373 = cljs.core.next(arglist__13373);
              var y = cljs.core.first(arglist__13373);
              arglist__13373 = cljs.core.next(arglist__13373);
              var z = cljs.core.first(arglist__13373);
              var args = cljs.core.rest(arglist__13373);
              return G__13371__delegate(x, y, z, args);
            };
            G__13371.cljs$core$IFn$_invoke$arity$variadic = G__13371__delegate;
            return G__13371;
          }();
          spn = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return spn__0.call(this);
              case 1:
                return spn__1.call(this, x);
              case 2:
                return spn__2.call(this, x, y);
              case 3:
                return spn__3.call(this, x, y, z);
              default:
                var G__13374 = null;
                if (arguments.length > 3) {
                  var G__13375__i = 0, G__13375__a = new Array(arguments.length - 3);
                  while (G__13375__i < G__13375__a.length) {
                    G__13375__a[G__13375__i] = arguments[G__13375__i + 3];
                    ++G__13375__i;
                  }
                  G__13374 = new cljs.core.IndexedSeq(G__13375__a, 0);
                }
                return spn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__13374);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          spn.cljs$lang$maxFixedArity = 3;
          spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
          spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
          spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
          spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
          spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
          spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
          return spn;
        }();
      }(ps__$1);
    };
    var G__13370 = function(p1, p2, p3, var_args) {
      var ps = null;
      if (arguments.length > 3) {
        var G__13376__i = 0, G__13376__a = new Array(arguments.length - 3);
        while (G__13376__i < G__13376__a.length) {
          G__13376__a[G__13376__i] = arguments[G__13376__i + 3];
          ++G__13376__i;
        }
        ps = new cljs.core.IndexedSeq(G__13376__a, 0);
      }
      return G__13370__delegate.call(this, p1, p2, p3, ps);
    };
    G__13370.cljs$lang$maxFixedArity = 3;
    G__13370.cljs$lang$applyTo = function(arglist__13377) {
      var p1 = cljs.core.first(arglist__13377);
      arglist__13377 = cljs.core.next(arglist__13377);
      var p2 = cljs.core.first(arglist__13377);
      arglist__13377 = cljs.core.next(arglist__13377);
      var p3 = cljs.core.first(arglist__13377);
      var ps = cljs.core.rest(arglist__13377);
      return G__13370__delegate(p1, p2, p3, ps);
    };
    G__13370.cljs$core$IFn$_invoke$arity$variadic = G__13370__delegate;
    return G__13370;
  }();
  some_fn = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return some_fn__1.call(this, p1);
      case 2:
        return some_fn__2.call(this, p1, p2);
      case 3:
        return some_fn__3.call(this, p1, p2, p3);
      default:
        var G__13378 = null;
        if (arguments.length > 3) {
          var G__13379__i = 0, G__13379__a = new Array(arguments.length - 3);
          while (G__13379__i < G__13379__a.length) {
            G__13379__a[G__13379__i] = arguments[G__13379__i + 3];
            ++G__13379__i;
          }
          G__13378 = new cljs.core.IndexedSeq(G__13379__a, 0);
        }
        return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, G__13378);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  some_fn.cljs$lang$maxFixedArity = 3;
  some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
  some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
  some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
  some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
  some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
  return some_fn;
}();
cljs.core.map = function() {
  var map = null;
  var map__1 = function(f) {
    return function(rf) {
      return function() {
        var G__13434 = null;
        var G__13434__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__13434__1 = function(result) {
          var G__13420 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__13420) : rf.call(null, G__13420);
        };
        var G__13434__2 = function(result, input) {
          var G__13421 = result;
          var G__13422 = function() {
            var G__13423 = input;
            return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13423) : f.call(null, G__13423);
          }();
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__13421, G__13422) : rf.call(null, G__13421, G__13422);
        };
        var G__13434__3 = function() {
          var G__13435__delegate = function(result, input, inputs) {
            var G__13424 = result;
            var G__13425 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f, input, inputs);
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__13424, G__13425) : rf.call(null, G__13424, G__13425);
          };
          var G__13435 = function(result, input, var_args) {
            var inputs = null;
            if (arguments.length > 2) {
              var G__13436__i = 0, G__13436__a = new Array(arguments.length - 2);
              while (G__13436__i < G__13436__a.length) {
                G__13436__a[G__13436__i] = arguments[G__13436__i + 2];
                ++G__13436__i;
              }
              inputs = new cljs.core.IndexedSeq(G__13436__a, 0);
            }
            return G__13435__delegate.call(this, result, input, inputs);
          };
          G__13435.cljs$lang$maxFixedArity = 2;
          G__13435.cljs$lang$applyTo = function(arglist__13437) {
            var result = cljs.core.first(arglist__13437);
            arglist__13437 = cljs.core.next(arglist__13437);
            var input = cljs.core.first(arglist__13437);
            var inputs = cljs.core.rest(arglist__13437);
            return G__13435__delegate(result, input, inputs);
          };
          G__13435.cljs$core$IFn$_invoke$arity$variadic = G__13435__delegate;
          return G__13435;
        }();
        G__13434 = function(result, input, var_args) {
          var inputs = var_args;
          switch(arguments.length) {
            case 0:
              return G__13434__0.call(this);
            case 1:
              return G__13434__1.call(this, result);
            case 2:
              return G__13434__2.call(this, result, input);
            default:
              var G__13438 = null;
              if (arguments.length > 2) {
                var G__13439__i = 0, G__13439__a = new Array(arguments.length - 2);
                while (G__13439__i < G__13439__a.length) {
                  G__13439__a[G__13439__i] = arguments[G__13439__i + 2];
                  ++G__13439__i;
                }
                G__13438 = new cljs.core.IndexedSeq(G__13439__a, 0);
              }
              return G__13434__3.cljs$core$IFn$_invoke$arity$variadic(result, input, G__13438);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__13434.cljs$lang$maxFixedArity = 2;
        G__13434.cljs$lang$applyTo = G__13434__3.cljs$lang$applyTo;
        G__13434.cljs$core$IFn$_invoke$arity$0 = G__13434__0;
        G__13434.cljs$core$IFn$_invoke$arity$1 = G__13434__1;
        G__13434.cljs$core$IFn$_invoke$arity$2 = G__13434__2;
        G__13434.cljs$core$IFn$_invoke$arity$variadic = G__13434__3.cljs$core$IFn$_invoke$arity$variadic;
        return G__13434;
      }();
    };
  };
  var map__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__4812__auto___13440 = size;
          var i_13441 = 0;
          while (true) {
            if (i_13441 < n__4812__auto___13440) {
              cljs.core.chunk_append(b, function() {
                var G__13426 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_13441);
                return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13426) : f.call(null, G__13426);
              }());
              var G__13442 = i_13441 + 1;
              i_13441 = G__13442;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), map.cljs$core$IFn$_invoke$arity$2(f, cljs.core.chunk_rest(s)));
        } else {
          return cljs.core.cons(function() {
            var G__13427 = cljs.core.first(s);
            return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13427) : f.call(null, G__13427);
          }(), map.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  var map__3 = function(f, c1, c2) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq(c1);
      var s2 = cljs.core.seq(c2);
      if (s1 && s2) {
        return cljs.core.cons(function() {
          var G__13428 = cljs.core.first(s1);
          var G__13429 = cljs.core.first(s2);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13428, G__13429) : f.call(null, G__13428, G__13429);
        }(), map.cljs$core$IFn$_invoke$arity$3(f, cljs.core.rest(s1), cljs.core.rest(s2)));
      } else {
        return null;
      }
    }, null, null);
  };
  var map__4 = function(f, c1, c2, c3) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq(c1);
      var s2 = cljs.core.seq(c2);
      var s3 = cljs.core.seq(c3);
      if (s1 && s2 && s3) {
        return cljs.core.cons(function() {
          var G__13430 = cljs.core.first(s1);
          var G__13431 = cljs.core.first(s2);
          var G__13432 = cljs.core.first(s3);
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13430, G__13431, G__13432) : f.call(null, G__13430, G__13431, G__13432);
        }(), map.cljs$core$IFn$_invoke$arity$4(f, cljs.core.rest(s1), cljs.core.rest(s2), cljs.core.rest(s3)));
      } else {
        return null;
      }
    }, null, null);
  };
  var map__5 = function() {
    var G__13443__delegate = function(f, c1, c2, c3, colls) {
      var step = function step(cs) {
        return new cljs.core.LazySeq(null, function() {
          var ss = map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq, cs);
          if (cljs.core.every_QMARK_(cljs.core.identity, ss)) {
            return cljs.core.cons(map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, ss), step(map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest, ss)));
          } else {
            return null;
          }
        }, null, null);
      };
      return map.cljs$core$IFn$_invoke$arity$2(function(step) {
        return function(p1__13380_SHARP_) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, p1__13380_SHARP_);
        };
      }(step), step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls, c3, cljs.core.array_seq([c2, c1], 0))));
    };
    var G__13443 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if (arguments.length > 4) {
        var G__13444__i = 0, G__13444__a = new Array(arguments.length - 4);
        while (G__13444__i < G__13444__a.length) {
          G__13444__a[G__13444__i] = arguments[G__13444__i + 4];
          ++G__13444__i;
        }
        colls = new cljs.core.IndexedSeq(G__13444__a, 0);
      }
      return G__13443__delegate.call(this, f, c1, c2, c3, colls);
    };
    G__13443.cljs$lang$maxFixedArity = 4;
    G__13443.cljs$lang$applyTo = function(arglist__13445) {
      var f = cljs.core.first(arglist__13445);
      arglist__13445 = cljs.core.next(arglist__13445);
      var c1 = cljs.core.first(arglist__13445);
      arglist__13445 = cljs.core.next(arglist__13445);
      var c2 = cljs.core.first(arglist__13445);
      arglist__13445 = cljs.core.next(arglist__13445);
      var c3 = cljs.core.first(arglist__13445);
      var colls = cljs.core.rest(arglist__13445);
      return G__13443__delegate(f, c1, c2, c3, colls);
    };
    G__13443.cljs$core$IFn$_invoke$arity$variadic = G__13443__delegate;
    return G__13443;
  }();
  map = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 1:
        return map__1.call(this, f);
      case 2:
        return map__2.call(this, f, c1);
      case 3:
        return map__3.call(this, f, c1, c2);
      case 4:
        return map__4.call(this, f, c1, c2, c3);
      default:
        var G__13446 = null;
        if (arguments.length > 4) {
          var G__13447__i = 0, G__13447__a = new Array(arguments.length - 4);
          while (G__13447__i < G__13447__a.length) {
            G__13447__a[G__13447__i] = arguments[G__13447__i + 4];
            ++G__13447__i;
          }
          G__13446 = new cljs.core.IndexedSeq(G__13447__a, 0);
        }
        return map__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, G__13446);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  map.cljs$lang$maxFixedArity = 4;
  map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
  map.cljs$core$IFn$_invoke$arity$1 = map__1;
  map.cljs$core$IFn$_invoke$arity$2 = map__2;
  map.cljs$core$IFn$_invoke$arity$3 = map__3;
  map.cljs$core$IFn$_invoke$arity$4 = map__4;
  map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
  return map;
}();
cljs.core.take = function() {
  var take = null;
  var take__1 = function(n) {
    return function(rf) {
      var na = cljs.core.volatile_BANG_(n);
      return function(na) {
        return function() {
          var G__13456 = null;
          var G__13456__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__13456__1 = function(result) {
            var G__13453 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__13453) : rf.call(null, G__13453);
          };
          var G__13456__2 = function(result, input) {
            var n__$1 = cljs.core.deref(na);
            var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, na.cljs$core$IDeref$_deref$arity$1(null) - 1);
            var result__$1 = n__$1 > 0 ? function() {
              var G__13454 = result;
              var G__13455 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__13454, G__13455) : rf.call(null, G__13454, G__13455);
            }() : result;
            if (!(nn > 0)) {
              return cljs.core.ensure_reduced(result__$1);
            } else {
              return result__$1;
            }
          };
          G__13456 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__13456__0.call(this);
              case 1:
                return G__13456__1.call(this, result);
              case 2:
                return G__13456__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__13456.cljs$core$IFn$_invoke$arity$0 = G__13456__0;
          G__13456.cljs$core$IFn$_invoke$arity$1 = G__13456__1;
          G__13456.cljs$core$IFn$_invoke$arity$2 = G__13456__2;
          return G__13456;
        }();
      }(na);
    };
  };
  var take__2 = function(n, coll) {
    return new cljs.core.LazySeq(null, function() {
      if (n > 0) {
        var temp__4126__auto__ = cljs.core.seq(coll);
        if (temp__4126__auto__) {
          var s = temp__4126__auto__;
          return cljs.core.cons(cljs.core.first(s), take.cljs$core$IFn$_invoke$arity$2(n - 1, cljs.core.rest(s)));
        } else {
          return null;
        }
      } else {
        return null;
      }
    }, null, null);
  };
  take = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return take__1.call(this, n);
      case 2:
        return take__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take.cljs$core$IFn$_invoke$arity$1 = take__1;
  take.cljs$core$IFn$_invoke$arity$2 = take__2;
  return take;
}();
cljs.core.drop = function() {
  var drop = null;
  var drop__1 = function(n) {
    return function(rf) {
      var na = cljs.core.volatile_BANG_(n);
      return function(na) {
        return function() {
          var G__13463 = null;
          var G__13463__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__13463__1 = function(result) {
            var G__13460 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__13460) : rf.call(null, G__13460);
          };
          var G__13463__2 = function(result, input) {
            var n__$1 = cljs.core.deref(na);
            na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, na.cljs$core$IDeref$_deref$arity$1(null) - 1);
            if (n__$1 > 0) {
              return result;
            } else {
              var G__13461 = result;
              var G__13462 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__13461, G__13462) : rf.call(null, G__13461, G__13462);
            }
          };
          G__13463 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__13463__0.call(this);
              case 1:
                return G__13463__1.call(this, result);
              case 2:
                return G__13463__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__13463.cljs$core$IFn$_invoke$arity$0 = G__13463__0;
          G__13463.cljs$core$IFn$_invoke$arity$1 = G__13463__1;
          G__13463.cljs$core$IFn$_invoke$arity$2 = G__13463__2;
          return G__13463;
        }();
      }(na);
    };
  };
  var drop__2 = function(n, coll) {
    var step = function(n__$1, coll__$1) {
      while (true) {
        var s = cljs.core.seq(coll__$1);
        if (n__$1 > 0 && s) {
          var G__13464 = n__$1 - 1;
          var G__13465 = cljs.core.rest(s);
          n__$1 = G__13464;
          coll__$1 = G__13465;
          continue;
        } else {
          return s;
        }
        break;
      }
    };
    return new cljs.core.LazySeq(null, function(step) {
      return function() {
        return step(n, coll);
      };
    }(step), null, null);
  };
  drop = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return drop__1.call(this, n);
      case 2:
        return drop__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
  drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
  return drop;
}();
cljs.core.drop_last = function() {
  var drop_last = null;
  var drop_last__1 = function(s) {
    return drop_last.cljs$core$IFn$_invoke$arity$2(1, s);
  };
  var drop_last__2 = function(n, s) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$3(function(x, _) {
      return x;
    }, s, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, s));
  };
  drop_last = function(n, s) {
    switch(arguments.length) {
      case 1:
        return drop_last__1.call(this, n);
      case 2:
        return drop_last__2.call(this, n, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
  drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
  return drop_last;
}();
cljs.core.take_last = function take_last(n, coll) {
  var s = cljs.core.seq(coll);
  var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, coll));
  while (true) {
    if (lead) {
      var G__13468 = cljs.core.next(s);
      var G__13469 = cljs.core.next(lead);
      s = G__13468;
      lead = G__13469;
      continue;
    } else {
      return s;
    }
    break;
  }
};
cljs.core.drop_while = function() {
  var drop_while = null;
  var drop_while__1 = function(pred) {
    return function(rf) {
      var da = cljs.core.volatile_BANG_(true);
      return function(da) {
        return function() {
          var G__13482 = null;
          var G__13482__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__13482__1 = function(result) {
            var G__13476 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__13476) : rf.call(null, G__13476);
          };
          var G__13482__2 = function(result, input) {
            var drop_QMARK_ = cljs.core.deref(da);
            if (cljs.core.truth_(function() {
              var and__3913__auto__ = drop_QMARK_;
              if (cljs.core.truth_(and__3913__auto__)) {
                var G__13477 = input;
                return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__13477) : pred.call(null, G__13477);
              } else {
                return and__3913__auto__;
              }
            }())) {
              return result;
            } else {
              cljs.core.vreset_BANG_(da, null);
              var G__13478 = result;
              var G__13479 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__13478, G__13479) : rf.call(null, G__13478, G__13479);
            }
          };
          G__13482 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__13482__0.call(this);
              case 1:
                return G__13482__1.call(this, result);
              case 2:
                return G__13482__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__13482.cljs$core$IFn$_invoke$arity$0 = G__13482__0;
          G__13482.cljs$core$IFn$_invoke$arity$1 = G__13482__1;
          G__13482.cljs$core$IFn$_invoke$arity$2 = G__13482__2;
          return G__13482;
        }();
      }(da);
    };
  };
  var drop_while__2 = function(pred, coll) {
    var step = function(pred__$1, coll__$1) {
      while (true) {
        var s = cljs.core.seq(coll__$1);
        if (cljs.core.truth_(function() {
          var and__3913__auto__ = s;
          if (and__3913__auto__) {
            var G__13481 = cljs.core.first(s);
            return pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__13481) : pred__$1.call(null, G__13481);
          } else {
            return and__3913__auto__;
          }
        }())) {
          var G__13483 = pred__$1;
          var G__13484 = cljs.core.rest(s);
          pred__$1 = G__13483;
          coll__$1 = G__13484;
          continue;
        } else {
          return s;
        }
        break;
      }
    };
    return new cljs.core.LazySeq(null, function(step) {
      return function() {
        return step(pred, coll);
      };
    }(step), null, null);
  };
  drop_while = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return drop_while__1.call(this, pred);
      case 2:
        return drop_while__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
  drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
  return drop_while;
}();
cljs.core.cycle = function cycle(coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4126__auto__ = cljs.core.seq(coll);
    if (temp__4126__auto__) {
      var s = temp__4126__auto__;
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s, cycle(s));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.split_at = function split_at(n, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, coll), cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, coll)], null);
};
cljs.core.repeat = function() {
  var repeat = null;
  var repeat__1 = function(x) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons(x, repeat.cljs$core$IFn$_invoke$arity$1(x));
    }, null, null);
  };
  var repeat__2 = function(n, x) {
    return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, repeat.cljs$core$IFn$_invoke$arity$1(x));
  };
  repeat = function(n, x) {
    switch(arguments.length) {
      case 1:
        return repeat__1.call(this, n);
      case 2:
        return repeat__2.call(this, n, x);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
  repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
  return repeat;
}();
cljs.core.replicate = function replicate(n, x) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
};
cljs.core.repeatedly = function() {
  var repeatedly = null;
  var repeatedly__1 = function(f) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons(function() {
        return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
      }(), repeatedly.cljs$core$IFn$_invoke$arity$1(f));
    }, null, null);
  };
  var repeatedly__2 = function(n, f) {
    return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, repeatedly.cljs$core$IFn$_invoke$arity$1(f));
  };
  repeatedly = function(n, f) {
    switch(arguments.length) {
      case 1:
        return repeatedly__1.call(this, n);
      case 2:
        return repeatedly__2.call(this, n, f);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
  repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
  return repeatedly;
}();
cljs.core.iterate = function iterate(f, x) {
  return cljs.core.cons(x, new cljs.core.LazySeq(null, function() {
    return iterate(f, function() {
      var G__13493 = x;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13493) : f.call(null, G__13493);
    }());
  }, null, null));
};
cljs.core.interleave = function() {
  var interleave = null;
  var interleave__2 = function(c1, c2) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq(c1);
      var s2 = cljs.core.seq(c2);
      if (s1 && s2) {
        return cljs.core.cons(cljs.core.first(s1), cljs.core.cons(cljs.core.first(s2), interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1), cljs.core.rest(s2))));
      } else {
        return null;
      }
    }, null, null);
  };
  var interleave__3 = function() {
    var G__13496__delegate = function(c1, c2, colls) {
      return new cljs.core.LazySeq(null, function() {
        var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq, cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls, c2, cljs.core.array_seq([c1], 0)));
        if (cljs.core.every_QMARK_(cljs.core.identity, ss)) {
          return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, ss), cljs.core.apply.cljs$core$IFn$_invoke$arity$2(interleave, cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest, ss)));
        } else {
          return null;
        }
      }, null, null);
    };
    var G__13496 = function(c1, c2, var_args) {
      var colls = null;
      if (arguments.length > 2) {
        var G__13497__i = 0, G__13497__a = new Array(arguments.length - 2);
        while (G__13497__i < G__13497__a.length) {
          G__13497__a[G__13497__i] = arguments[G__13497__i + 2];
          ++G__13497__i;
        }
        colls = new cljs.core.IndexedSeq(G__13497__a, 0);
      }
      return G__13496__delegate.call(this, c1, c2, colls);
    };
    G__13496.cljs$lang$maxFixedArity = 2;
    G__13496.cljs$lang$applyTo = function(arglist__13498) {
      var c1 = cljs.core.first(arglist__13498);
      arglist__13498 = cljs.core.next(arglist__13498);
      var c2 = cljs.core.first(arglist__13498);
      var colls = cljs.core.rest(arglist__13498);
      return G__13496__delegate(c1, c2, colls);
    };
    G__13496.cljs$core$IFn$_invoke$arity$variadic = G__13496__delegate;
    return G__13496;
  }();
  interleave = function(c1, c2, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return interleave__2.call(this, c1, c2);
      default:
        var G__13499 = null;
        if (arguments.length > 2) {
          var G__13500__i = 0, G__13500__a = new Array(arguments.length - 2);
          while (G__13500__i < G__13500__a.length) {
            G__13500__a[G__13500__i] = arguments[G__13500__i + 2];
            ++G__13500__i;
          }
          G__13499 = new cljs.core.IndexedSeq(G__13500__a, 0);
        }
        return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1, c2, G__13499);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  interleave.cljs$lang$maxFixedArity = 2;
  interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
  interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
  interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
  return interleave;
}();
cljs.core.interpose = function() {
  var interpose = null;
  var interpose__1 = function(sep) {
    return function(rf) {
      var started = cljs.core.volatile_BANG_(false);
      return function(started) {
        return function() {
          var G__13515 = null;
          var G__13515__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__13515__1 = function(result) {
            var G__13508 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__13508) : rf.call(null, G__13508);
          };
          var G__13515__2 = function(result, input) {
            if (cljs.core.truth_(cljs.core.deref(started))) {
              var sepr = function() {
                var G__13509 = result;
                var G__13510 = sep;
                return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__13509, G__13510) : rf.call(null, G__13509, G__13510);
              }();
              if (cljs.core.reduced_QMARK_(sepr)) {
                return sepr;
              } else {
                var G__13511 = sepr;
                var G__13512 = input;
                return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__13511, G__13512) : rf.call(null, G__13511, G__13512);
              }
            } else {
              cljs.core.vreset_BANG_(started, true);
              var G__13513 = result;
              var G__13514 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__13513, G__13514) : rf.call(null, G__13513, G__13514);
            }
          };
          G__13515 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__13515__0.call(this);
              case 1:
                return G__13515__1.call(this, result);
              case 2:
                return G__13515__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__13515.cljs$core$IFn$_invoke$arity$0 = G__13515__0;
          G__13515.cljs$core$IFn$_invoke$arity$1 = G__13515__1;
          G__13515.cljs$core$IFn$_invoke$arity$2 = G__13515__2;
          return G__13515;
        }();
      }(started);
    };
  };
  var interpose__2 = function(sep, coll) {
    return cljs.core.drop.cljs$core$IFn$_invoke$arity$2(1, cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep), coll));
  };
  interpose = function(sep, coll) {
    switch(arguments.length) {
      case 1:
        return interpose__1.call(this, sep);
      case 2:
        return interpose__2.call(this, sep, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  interpose.cljs$core$IFn$_invoke$arity$1 = interpose__1;
  interpose.cljs$core$IFn$_invoke$arity$2 = interpose__2;
  return interpose;
}();
cljs.core.flatten1 = function flatten1(colls) {
  var cat = function cat(coll, colls__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4124__auto__ = cljs.core.seq(coll);
      if (temp__4124__auto__) {
        var coll__$1 = temp__4124__auto__;
        return cljs.core.cons(cljs.core.first(coll__$1), cat(cljs.core.rest(coll__$1), colls__$1));
      } else {
        if (cljs.core.seq(colls__$1)) {
          return cat(cljs.core.first(colls__$1), cljs.core.rest(colls__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat(null, colls);
};
cljs.core.mapcat = function() {
  var mapcat = null;
  var mapcat__1 = function(f) {
    return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f), cljs.core.cat);
  };
  var mapcat__2 = function() {
    var G__13524__delegate = function(f, colls) {
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat, cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map, f, colls));
    };
    var G__13524 = function(f, var_args) {
      var colls = null;
      if (arguments.length > 1) {
        var G__13525__i = 0, G__13525__a = new Array(arguments.length - 1);
        while (G__13525__i < G__13525__a.length) {
          G__13525__a[G__13525__i] = arguments[G__13525__i + 1];
          ++G__13525__i;
        }
        colls = new cljs.core.IndexedSeq(G__13525__a, 0);
      }
      return G__13524__delegate.call(this, f, colls);
    };
    G__13524.cljs$lang$maxFixedArity = 1;
    G__13524.cljs$lang$applyTo = function(arglist__13526) {
      var f = cljs.core.first(arglist__13526);
      var colls = cljs.core.rest(arglist__13526);
      return G__13524__delegate(f, colls);
    };
    G__13524.cljs$core$IFn$_invoke$arity$variadic = G__13524__delegate;
    return G__13524;
  }();
  mapcat = function(f, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 1:
        return mapcat__1.call(this, f);
      default:
        var G__13527 = null;
        if (arguments.length > 1) {
          var G__13528__i = 0, G__13528__a = new Array(arguments.length - 1);
          while (G__13528__i < G__13528__a.length) {
            G__13528__a[G__13528__i] = arguments[G__13528__i + 1];
            ++G__13528__i;
          }
          G__13527 = new cljs.core.IndexedSeq(G__13528__a, 0);
        }
        return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__13527);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat.cljs$lang$maxFixedArity = 1;
  mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
  mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
  mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
  return mapcat;
}();
cljs.core.filter = function() {
  var filter = null;
  var filter__1 = function(pred) {
    return function(rf) {
      return function() {
        var G__13547 = null;
        var G__13547__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__13547__1 = function(result) {
          var G__13541 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__13541) : rf.call(null, G__13541);
        };
        var G__13547__2 = function(result, input) {
          if (cljs.core.truth_(function() {
            var G__13542 = input;
            return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__13542) : pred.call(null, G__13542);
          }())) {
            var G__13543 = result;
            var G__13544 = input;
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__13543, G__13544) : rf.call(null, G__13543, G__13544);
          } else {
            return result;
          }
        };
        G__13547 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__13547__0.call(this);
            case 1:
              return G__13547__1.call(this, result);
            case 2:
              return G__13547__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__13547.cljs$core$IFn$_invoke$arity$0 = G__13547__0;
        G__13547.cljs$core$IFn$_invoke$arity$1 = G__13547__1;
        G__13547.cljs$core$IFn$_invoke$arity$2 = G__13547__2;
        return G__13547;
      }();
    };
  };
  var filter__2 = function(pred, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__4812__auto___13548 = size;
          var i_13549 = 0;
          while (true) {
            if (i_13549 < n__4812__auto___13548) {
              if (cljs.core.truth_(function() {
                var G__13545 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_13549);
                return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__13545) : pred.call(null, G__13545);
              }())) {
                cljs.core.chunk_append(b, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_13549));
              } else {
              }
              var G__13550 = i_13549 + 1;
              i_13549 = G__13550;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), filter.cljs$core$IFn$_invoke$arity$2(pred, cljs.core.chunk_rest(s)));
        } else {
          var f = cljs.core.first(s);
          var r = cljs.core.rest(s);
          if (cljs.core.truth_(function() {
            var G__13546 = f;
            return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__13546) : pred.call(null, G__13546);
          }())) {
            return cljs.core.cons(f, filter.cljs$core$IFn$_invoke$arity$2(pred, r));
          } else {
            return filter.cljs$core$IFn$_invoke$arity$2(pred, r);
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  filter = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return filter__1.call(this, pred);
      case 2:
        return filter__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
  filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
  return filter;
}();
cljs.core.remove = function() {
  var remove = null;
  var remove__1 = function(pred) {
    return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
  };
  var remove__2 = function(pred, coll) {
    return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred), coll);
  };
  remove = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return remove__1.call(this, pred);
      case 2:
        return remove__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
  remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
  return remove;
}();
cljs.core.tree_seq = function tree_seq(branch_QMARK_, children, root) {
  var walk = function walk(node) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons(node, cljs.core.truth_(function() {
        var G__13557 = node;
        return branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__13557) : branch_QMARK_.call(null, G__13557);
      }()) ? cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(walk, cljs.core.array_seq([function() {
        var G__13558 = node;
        return children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__13558) : children.call(null, G__13558);
      }()], 0)) : null);
    }, null, null);
  };
  return walk(root);
};
cljs.core.flatten = function flatten(x) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(p1__13559_SHARP_) {
    return!cljs.core.sequential_QMARK_(p1__13559_SHARP_);
  }, cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_, cljs.core.seq, x)));
};
cljs.core.into = function() {
  var into = null;
  var into__2 = function(to, from) {
    if (!(to == null)) {
      if (function() {
        var G__13562 = to;
        if (G__13562) {
          var bit__4599__auto__ = G__13562.cljs$lang$protocol_mask$partition1$ & 4;
          if (bit__4599__auto__ || G__13562.cljs$core$IEditableCollection$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_, cljs.core.transient$(to), from)), cljs.core.meta(to));
      } else {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, to, from);
      }
    } else {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.List.EMPTY, from);
    }
  };
  var into__3 = function(to, xform, from) {
    if (function() {
      var G__13563 = to;
      if (G__13563) {
        var bit__4599__auto__ = G__13563.cljs$lang$protocol_mask$partition1$ & 4;
        if (bit__4599__auto__ || G__13563.cljs$core$IEditableCollection$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, cljs.core.conj_BANG_, cljs.core.transient$(to), from)), cljs.core.meta(to));
    } else {
      return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, cljs.core.conj, to, from);
    }
  };
  into = function(to, xform, from) {
    switch(arguments.length) {
      case 2:
        return into__2.call(this, to, xform);
      case 3:
        return into__3.call(this, to, xform, from);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  into.cljs$core$IFn$_invoke$arity$2 = into__2;
  into.cljs$core$IFn$_invoke$arity$3 = into__3;
  return into;
}();
cljs.core.mapv = function() {
  var mapv = null;
  var mapv__2 = function(f, coll) {
    return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(v, o) {
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v, function() {
        var G__13565 = o;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13565) : f.call(null, G__13565);
      }());
    }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), coll));
  };
  var mapv__3 = function(f, c1, c2) {
    return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$3(f, c1, c2));
  };
  var mapv__4 = function(f, c1, c2, c3) {
    return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$4(f, c1, c2, c3));
  };
  var mapv__5 = function() {
    var G__13566__delegate = function(f, c1, c2, c3, colls) {
      return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map, f, c1, c2, c3, cljs.core.array_seq([colls], 0)));
    };
    var G__13566 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if (arguments.length > 4) {
        var G__13567__i = 0, G__13567__a = new Array(arguments.length - 4);
        while (G__13567__i < G__13567__a.length) {
          G__13567__a[G__13567__i] = arguments[G__13567__i + 4];
          ++G__13567__i;
        }
        colls = new cljs.core.IndexedSeq(G__13567__a, 0);
      }
      return G__13566__delegate.call(this, f, c1, c2, c3, colls);
    };
    G__13566.cljs$lang$maxFixedArity = 4;
    G__13566.cljs$lang$applyTo = function(arglist__13568) {
      var f = cljs.core.first(arglist__13568);
      arglist__13568 = cljs.core.next(arglist__13568);
      var c1 = cljs.core.first(arglist__13568);
      arglist__13568 = cljs.core.next(arglist__13568);
      var c2 = cljs.core.first(arglist__13568);
      arglist__13568 = cljs.core.next(arglist__13568);
      var c3 = cljs.core.first(arglist__13568);
      var colls = cljs.core.rest(arglist__13568);
      return G__13566__delegate(f, c1, c2, c3, colls);
    };
    G__13566.cljs$core$IFn$_invoke$arity$variadic = G__13566__delegate;
    return G__13566;
  }();
  mapv = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapv__2.call(this, f, c1);
      case 3:
        return mapv__3.call(this, f, c1, c2);
      case 4:
        return mapv__4.call(this, f, c1, c2, c3);
      default:
        var G__13569 = null;
        if (arguments.length > 4) {
          var G__13570__i = 0, G__13570__a = new Array(arguments.length - 4);
          while (G__13570__i < G__13570__a.length) {
            G__13570__a[G__13570__i] = arguments[G__13570__i + 4];
            ++G__13570__i;
          }
          G__13569 = new cljs.core.IndexedSeq(G__13570__a, 0);
        }
        return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, G__13569);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapv.cljs$lang$maxFixedArity = 4;
  mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
  mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
  mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
  mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
  mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
  return mapv;
}();
cljs.core.filterv = function filterv(pred, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(v, o) {
    if (cljs.core.truth_(function() {
      var G__13572 = o;
      return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__13572) : pred.call(null, G__13572);
    }())) {
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v, o);
    } else {
      return v;
    }
  }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.partition = function() {
  var partition = null;
  var partition__2 = function(n, coll) {
    return partition.cljs$core$IFn$_invoke$arity$3(n, n, coll);
  };
  var partition__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s);
        if (n === cljs.core.count(p)) {
          return cljs.core.cons(p, partition.cljs$core$IFn$_invoke$arity$3(n, step, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
        } else {
          return null;
        }
      } else {
        return null;
      }
    }, null, null);
  };
  var partition__4 = function(n, step, pad, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s);
        if (n === cljs.core.count(p)) {
          return cljs.core.cons(p, partition.cljs$core$IFn$_invoke$arity$4(n, step, pad, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
        } else {
          return cljs.core._conj(cljs.core.List.EMPTY, cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p, pad)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  partition = function(n, step, pad, coll) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, step);
      case 3:
        return partition__3.call(this, n, step, pad);
      case 4:
        return partition__4.call(this, n, step, pad, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
  partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
  partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
  return partition;
}();
cljs.core.get_in = function() {
  var get_in = null;
  var get_in__2 = function(m, ks) {
    return get_in.cljs$core$IFn$_invoke$arity$3(m, ks, null);
  };
  var get_in__3 = function(m, ks, not_found) {
    var sentinel = cljs.core.lookup_sentinel;
    var m__$1 = m;
    var ks__$1 = cljs.core.seq(ks);
    while (true) {
      if (ks__$1) {
        if (!function() {
          var G__13587 = m__$1;
          if (G__13587) {
            var bit__4606__auto__ = G__13587.cljs$lang$protocol_mask$partition0$ & 256;
            if (bit__4606__auto__ || G__13587.cljs$core$ILookup$) {
              return true;
            } else {
              if (!G__13587.cljs$lang$protocol_mask$partition0$) {
                return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, G__13587);
              } else {
                return false;
              }
            }
          } else {
            return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, G__13587);
          }
        }()) {
          return not_found;
        } else {
          var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1, cljs.core.first(ks__$1), sentinel);
          if (sentinel === m__$2) {
            return not_found;
          } else {
            var G__13588 = sentinel;
            var G__13589 = m__$2;
            var G__13590 = cljs.core.next(ks__$1);
            sentinel = G__13588;
            m__$1 = G__13589;
            ks__$1 = G__13590;
            continue;
          }
        }
      } else {
        return m__$1;
      }
      break;
    }
  };
  get_in = function(m, ks, not_found) {
    switch(arguments.length) {
      case 2:
        return get_in__2.call(this, m, ks);
      case 3:
        return get_in__3.call(this, m, ks, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
  get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
  return get_in;
}();
cljs.core.assoc_in = function assoc_in(m, p__13591, v) {
  var vec__13596 = p__13591;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13596, 0, null);
  var ks = cljs.core.nthnext(vec__13596, 1);
  if (ks) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, v));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, v);
  }
};
cljs.core.update_in = function() {
  var update_in = null;
  var update_in__3 = function(m, p__13597, f) {
    var vec__13635 = p__13597;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13635, 0, null);
    var ks = cljs.core.nthnext(vec__13635, 1);
    if (ks) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f));
    } else {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
        var G__13636 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13636) : f.call(null, G__13636);
      }());
    }
  };
  var update_in__4 = function(m, p__13598, f, a) {
    var vec__13637 = p__13598;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13637, 0, null);
    var ks = cljs.core.nthnext(vec__13637, 1);
    if (ks) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a));
    } else {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
        var G__13638 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
        var G__13639 = a;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13638, G__13639) : f.call(null, G__13638, G__13639);
      }());
    }
  };
  var update_in__5 = function(m, p__13599, f, a, b) {
    var vec__13640 = p__13599;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13640, 0, null);
    var ks = cljs.core.nthnext(vec__13640, 1);
    if (ks) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, b));
    } else {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
        var G__13641 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
        var G__13642 = a;
        var G__13643 = b;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13641, G__13642, G__13643) : f.call(null, G__13641, G__13642, G__13643);
      }());
    }
  };
  var update_in__6 = function(m, p__13600, f, a, b, c) {
    var vec__13644 = p__13600;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13644, 0, null);
    var ks = cljs.core.nthnext(vec__13644, 1);
    if (ks) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, b, c));
    } else {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
        var G__13645 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
        var G__13646 = a;
        var G__13647 = b;
        var G__13648 = c;
        return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__13645, G__13646, G__13647, G__13648) : f.call(null, G__13645, G__13646, G__13647, G__13648);
      }());
    }
  };
  var update_in__7 = function() {
    var G__13650__delegate = function(m, p__13601, f, a, b, c, args) {
      var vec__13649 = p__13601;
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13649, 0, null);
      var ks = cljs.core.nthnext(vec__13649, 1);
      if (ks) {
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(update_in, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, cljs.core.array_seq([b, c, args], 0)));
      } else {
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), a, b, c, cljs.core.array_seq([args], 0)));
      }
    };
    var G__13650 = function(m, p__13601, f, a, b, c, var_args) {
      var args = null;
      if (arguments.length > 6) {
        var G__13651__i = 0, G__13651__a = new Array(arguments.length - 6);
        while (G__13651__i < G__13651__a.length) {
          G__13651__a[G__13651__i] = arguments[G__13651__i + 6];
          ++G__13651__i;
        }
        args = new cljs.core.IndexedSeq(G__13651__a, 0);
      }
      return G__13650__delegate.call(this, m, p__13601, f, a, b, c, args);
    };
    G__13650.cljs$lang$maxFixedArity = 6;
    G__13650.cljs$lang$applyTo = function(arglist__13652) {
      var m = cljs.core.first(arglist__13652);
      arglist__13652 = cljs.core.next(arglist__13652);
      var p__13601 = cljs.core.first(arglist__13652);
      arglist__13652 = cljs.core.next(arglist__13652);
      var f = cljs.core.first(arglist__13652);
      arglist__13652 = cljs.core.next(arglist__13652);
      var a = cljs.core.first(arglist__13652);
      arglist__13652 = cljs.core.next(arglist__13652);
      var b = cljs.core.first(arglist__13652);
      arglist__13652 = cljs.core.next(arglist__13652);
      var c = cljs.core.first(arglist__13652);
      var args = cljs.core.rest(arglist__13652);
      return G__13650__delegate(m, p__13601, f, a, b, c, args);
    };
    G__13650.cljs$core$IFn$_invoke$arity$variadic = G__13650__delegate;
    return G__13650;
  }();
  update_in = function(m, p__13601, f, a, b, c, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 3:
        return update_in__3.call(this, m, p__13601, f);
      case 4:
        return update_in__4.call(this, m, p__13601, f, a);
      case 5:
        return update_in__5.call(this, m, p__13601, f, a, b);
      case 6:
        return update_in__6.call(this, m, p__13601, f, a, b, c);
      default:
        var G__13653 = null;
        if (arguments.length > 6) {
          var G__13654__i = 0, G__13654__a = new Array(arguments.length - 6);
          while (G__13654__i < G__13654__a.length) {
            G__13654__a[G__13654__i] = arguments[G__13654__i + 6];
            ++G__13654__i;
          }
          G__13653 = new cljs.core.IndexedSeq(G__13654__a, 0);
        }
        return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m, p__13601, f, a, b, c, G__13653);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_in.cljs$lang$maxFixedArity = 6;
  update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
  update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
  update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
  update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
  update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
  update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
  return update_in;
}();
cljs.core.update = function() {
  var update = null;
  var update__3 = function(m, k, f) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__13665 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13665) : f.call(null, G__13665);
    }());
  };
  var update__4 = function(m, k, f, x) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__13666 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__13667 = x;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13666, G__13667) : f.call(null, G__13666, G__13667);
    }());
  };
  var update__5 = function(m, k, f, x, y) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__13668 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__13669 = x;
      var G__13670 = y;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13668, G__13669, G__13670) : f.call(null, G__13668, G__13669, G__13670);
    }());
  };
  var update__6 = function(m, k, f, x, y, z) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__13671 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__13672 = x;
      var G__13673 = y;
      var G__13674 = z;
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__13671, G__13672, G__13673, G__13674) : f.call(null, G__13671, G__13672, G__13673, G__13674);
    }());
  };
  var update__7 = function() {
    var G__13675__delegate = function(m, k, f, x, y, z, more) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), x, y, z, cljs.core.array_seq([more], 0)));
    };
    var G__13675 = function(m, k, f, x, y, z, var_args) {
      var more = null;
      if (arguments.length > 6) {
        var G__13676__i = 0, G__13676__a = new Array(arguments.length - 6);
        while (G__13676__i < G__13676__a.length) {
          G__13676__a[G__13676__i] = arguments[G__13676__i + 6];
          ++G__13676__i;
        }
        more = new cljs.core.IndexedSeq(G__13676__a, 0);
      }
      return G__13675__delegate.call(this, m, k, f, x, y, z, more);
    };
    G__13675.cljs$lang$maxFixedArity = 6;
    G__13675.cljs$lang$applyTo = function(arglist__13677) {
      var m = cljs.core.first(arglist__13677);
      arglist__13677 = cljs.core.next(arglist__13677);
      var k = cljs.core.first(arglist__13677);
      arglist__13677 = cljs.core.next(arglist__13677);
      var f = cljs.core.first(arglist__13677);
      arglist__13677 = cljs.core.next(arglist__13677);
      var x = cljs.core.first(arglist__13677);
      arglist__13677 = cljs.core.next(arglist__13677);
      var y = cljs.core.first(arglist__13677);
      arglist__13677 = cljs.core.next(arglist__13677);
      var z = cljs.core.first(arglist__13677);
      var more = cljs.core.rest(arglist__13677);
      return G__13675__delegate(m, k, f, x, y, z, more);
    };
    G__13675.cljs$core$IFn$_invoke$arity$variadic = G__13675__delegate;
    return G__13675;
  }();
  update = function(m, k, f, x, y, z, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 3:
        return update__3.call(this, m, k, f);
      case 4:
        return update__4.call(this, m, k, f, x);
      case 5:
        return update__5.call(this, m, k, f, x, y);
      case 6:
        return update__6.call(this, m, k, f, x, y, z);
      default:
        var G__13678 = null;
        if (arguments.length > 6) {
          var G__13679__i = 0, G__13679__a = new Array(arguments.length - 6);
          while (G__13679__i < G__13679__a.length) {
            G__13679__a[G__13679__i] = arguments[G__13679__i + 6];
            ++G__13679__i;
          }
          G__13678 = new cljs.core.IndexedSeq(G__13679__a, 0);
        }
        return update__7.cljs$core$IFn$_invoke$arity$variadic(m, k, f, x, y, z, G__13678);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update.cljs$lang$maxFixedArity = 6;
  update.cljs$lang$applyTo = update__7.cljs$lang$applyTo;
  update.cljs$core$IFn$_invoke$arity$3 = update__3;
  update.cljs$core$IFn$_invoke$arity$4 = update__4;
  update.cljs$core$IFn$_invoke$arity$5 = update__5;
  update.cljs$core$IFn$_invoke$arity$6 = update__6;
  update.cljs$core$IFn$_invoke$arity$variadic = update__7.cljs$core$IFn$_invoke$arity$variadic;
  return update;
}();
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr;
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";
cljs.core.VectorNode.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/VectorNode");
};
cljs.core.__GT_VectorNode = function __GT_VectorNode(edit, arr) {
  return new cljs.core.VectorNode(edit, arr);
};
cljs.core.pv_fresh_node = function pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
};
cljs.core.pv_aget = function pv_aget(node, idx) {
  return node.arr[idx];
};
cljs.core.pv_aset = function pv_aset(node, idx, val) {
  return node.arr[idx] = val;
};
cljs.core.pv_clone_node = function pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, cljs.core.aclone(node.arr));
};
cljs.core.tail_off = function tail_off(pv) {
  var cnt = pv.cnt;
  if (cnt < 32) {
    return 0;
  } else {
    return cnt - 1 >>> 5 << 5;
  }
};
cljs.core.new_path = function new_path(edit, level, node) {
  var ll = level;
  var ret = node;
  while (true) {
    if (ll === 0) {
      return ret;
    } else {
      var embed = ret;
      var r = cljs.core.pv_fresh_node(edit);
      var _ = cljs.core.pv_aset(r, 0, embed);
      var G__13680 = ll - 5;
      var G__13681 = r;
      ll = G__13680;
      ret = G__13681;
      continue;
    }
    break;
  }
};
cljs.core.push_tail = function push_tail(pv, level, parent, tailnode) {
  var ret = cljs.core.pv_clone_node(parent);
  var subidx = pv.cnt - 1 >>> level & 31;
  if (5 === level) {
    cljs.core.pv_aset(ret, subidx, tailnode);
    return ret;
  } else {
    var child = cljs.core.pv_aget(parent, subidx);
    if (!(child == null)) {
      var node_to_insert = push_tail(pv, level - 5, child, tailnode);
      cljs.core.pv_aset(ret, subidx, node_to_insert);
      return ret;
    } else {
      var node_to_insert = cljs.core.new_path(null, level - 5, tailnode);
      cljs.core.pv_aset(ret, subidx, node_to_insert);
      return ret;
    }
  }
};
cljs.core.vector_index_out_of_bounds = function vector_index_out_of_bounds(i, cnt) {
  throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in vector of length "), cljs.core.str(cnt)].join(""));
};
cljs.core.first_array_for_longvec = function first_array_for_longvec(pv) {
  var node = pv.root;
  var level = pv.shift;
  while (true) {
    if (level > 0) {
      var G__13686 = cljs.core.pv_aget(node, 0);
      var G__13687 = level - 5;
      node = G__13686;
      level = G__13687;
      continue;
    } else {
      return node.arr;
    }
    break;
  }
};
cljs.core.unchecked_array_for = function unchecked_array_for(pv, i) {
  if (i >= cljs.core.tail_off(pv)) {
    return pv.tail;
  } else {
    var node = pv.root;
    var level = pv.shift;
    while (true) {
      if (level > 0) {
        var G__13688 = cljs.core.pv_aget(node, i >>> level & 31);
        var G__13689 = level - 5;
        node = G__13688;
        level = G__13689;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.array_for = function array_for(pv, i) {
  if (0 <= i && i < pv.cnt) {
    return cljs.core.unchecked_array_for(pv, i);
  } else {
    return cljs.core.vector_index_out_of_bounds(i, pv.cnt);
  }
};
cljs.core.do_assoc = function do_assoc(pv, level, node, i, val) {
  var ret = cljs.core.pv_clone_node(node);
  if (level === 0) {
    cljs.core.pv_aset(ret, i & 31, val);
    return ret;
  } else {
    var subidx = i >>> level & 31;
    cljs.core.pv_aset(ret, subidx, do_assoc(pv, level - 5, cljs.core.pv_aget(node, subidx), i, val));
    return ret;
  }
};
cljs.core.pop_tail = function pop_tail(pv, level, node) {
  var subidx = pv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = pop_tail(pv, level - 5, cljs.core.pv_aget(node, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node(node);
      cljs.core.pv_aset(ret, subidx, new_child);
      return ret;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node(node);
      cljs.core.pv_aset(ret, subidx, null);
      return ret;
    }
  }
};
cljs.core.RangedIterator = function(i, base, arr, v, start, end) {
  this.i = i;
  this.base = base;
  this.arr = arr;
  this.v = v;
  this.start = start;
  this.end = end;
};
cljs.core.RangedIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  return self__.i < self__.end;
};
cljs.core.RangedIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (self__.i - self__.base === 32) {
    self__.arr = cljs.core.unchecked_array_for(self__.v, self__.i);
    self__.base = self__.base + 32;
  } else {
  }
  var ret = self__.arr[self__.i & 31];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.RangedIterator.cljs$lang$type = true;
cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";
cljs.core.RangedIterator.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/RangedIterator");
};
cljs.core.__GT_RangedIterator = function __GT_RangedIterator(i, base, arr, v, start, end) {
  return new cljs.core.RangedIterator(i, base, arr, v, start, end);
};
cljs.core.ranged_iterator = function ranged_iterator(v, start, end) {
  var i = start;
  return new cljs.core.RangedIterator(i, i - i % 32, start < cljs.core.count(v) ? cljs.core.unchecked_array_for(v, i) : null, v, start, end);
};
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 167668511;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentVector.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentVector.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for(v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = function() {
              var G__13699 = init__$2;
              var G__13700 = j + i;
              var G__13701 = arr[j];
              return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13699, G__13700, G__13701) : f.call(null, G__13699, G__13700, G__13701);
            }();
            if (cljs.core.reduced_QMARK_(init__$3)) {
              return init__$3;
            } else {
              var G__13712 = j + 1;
              var G__13713 = init__$3;
              j = G__13712;
              init__$2 = G__13713;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__13702 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__13702) : cljs.core.deref.call(null, G__13702);
      } else {
        var G__13714 = i + len;
        var G__13715 = init__$2;
        i = G__13714;
        init__$1 = G__13715;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_for(coll__$1, n)[n & 31];
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core.unchecked_array_for(coll__$1, n)[n & 31];
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    if (cljs.core.tail_off(coll__$1) <= n) {
      var new_tail = cljs.core.aclone(self__.tail);
      new_tail[n & 31] = val;
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, new_tail, null);
    } else {
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, cljs.core.do_assoc(coll__$1, self__.shift, self__.root, n, val), self__.tail, null);
    }
  } else {
    if (n === self__.cnt) {
      return cljs.core._conj(coll__$1, val);
    } else {
      throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds  [0,"), cljs.core.str(self__.cnt), cljs.core.str("]")].join(""));
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.ranged_iterator(this$__$1, 0, self__.cnt);
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, 0);
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, 1);
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, self__.cnt - 1);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    throw new Error("Can't pop empty vector");
  } else {
    if (1 === self__.cnt) {
      return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
    } else {
      if (1 < self__.cnt - cljs.core.tail_off(coll__$1)) {
        return new cljs.core.PersistentVector(self__.meta, self__.cnt - 1, self__.shift, self__.root, self__.tail.slice(0, -1), null);
      } else {
        var new_tail = cljs.core.unchecked_array_for(coll__$1, self__.cnt - 2);
        var nr = cljs.core.pop_tail(coll__$1, self__.shift, self__.root);
        var new_root = nr == null ? cljs.core.PersistentVector.EMPTY_NODE : nr;
        var cnt_1 = self__.cnt - 1;
        if (5 < self__.shift && cljs.core.pv_aget(new_root, 1) == null) {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift - 5, cljs.core.pv_aget(new_root, 0), new_tail, null);
        } else {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift, new_root, new_tail, null);
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return new cljs.core.RSeq(coll__$1, self__.cnt - 1, null);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4346__auto__ = self__.__hash;
  if (!(h__4346__auto__ == null)) {
    return h__4346__auto__;
  } else {
    var h__4346__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4346__auto____$1;
    return h__4346__auto____$1;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (other instanceof cljs.core.PersistentVector) {
    if (self__.cnt === cljs.core.count(other)) {
      var me_iter = cljs.core._iterator(coll__$1);
      var you_iter = cljs.core._iterator(other);
      while (true) {
        if (cljs.core.truth_(me_iter.hasNext())) {
          var x = me_iter.next();
          var y = you_iter.next();
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
            continue;
          } else {
            return false;
          }
        } else {
          return true;
        }
        break;
      }
    } else {
      return false;
    }
  } else {
    return cljs.core.equiv_sequential(coll__$1, other);
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientVector(self__.cnt, self__.shift, function() {
    var G__13703 = self__.root;
    return cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__13703) : cljs.core.tv_editable_root.call(null, G__13703);
  }(), function() {
    var G__13704 = self__.tail;
    return cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__13704) : cljs.core.tv_editable_tail.call(null, G__13704);
  }());
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1, f);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for(v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = function() {
              var G__13705 = init__$2;
              var G__13706 = arr[j];
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13705, G__13706) : f.call(null, G__13705, G__13706);
            }();
            if (cljs.core.reduced_QMARK_(init__$3)) {
              return init__$3;
            } else {
              var G__13716 = j + 1;
              var G__13717 = init__$3;
              j = G__13716;
              init__$2 = G__13717;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__13707 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__13707) : cljs.core.deref.call(null, G__13707);
      } else {
        var G__13718 = i + len;
        var G__13719 = init__$2;
        i = G__13718;
        init__$1 = G__13719;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._assoc_n(coll__$1, k, v);
  } else {
    throw new Error("Vector's key for assoc must be a number.");
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    return null;
  } else {
    if (self__.cnt <= 32) {
      return new cljs.core.IndexedSeq(self__.tail, 0);
    } else {
      var G__13708 = coll__$1;
      var G__13709 = cljs.core.first_array_for_longvec(coll__$1);
      var G__13710 = 0;
      var G__13711 = 0;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__13708, G__13709, G__13710, G__13711) : cljs.core.chunked_seq.call(null, G__13708, G__13709, G__13710, G__13711);
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(meta__$1, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt - cljs.core.tail_off(coll__$1) < 32) {
    var len = self__.tail.length;
    var new_tail = new Array(len + 1);
    var n__4812__auto___13720 = len;
    var i_13721 = 0;
    while (true) {
      if (i_13721 < n__4812__auto___13720) {
        new_tail[i_13721] = self__.tail[i_13721];
        var G__13722 = i_13721 + 1;
        i_13721 = G__13722;
        continue;
      } else {
      }
      break;
    }
    new_tail[len] = o;
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, self__.shift, self__.root, new_tail, null);
  } else {
    var root_overflow_QMARK_ = self__.cnt >>> 5 > 1 << self__.shift;
    var new_shift = root_overflow_QMARK_ ? self__.shift + 5 : self__.shift;
    var new_root = root_overflow_QMARK_ ? function() {
      var n_r = cljs.core.pv_fresh_node(null);
      cljs.core.pv_aset(n_r, 0, self__.root);
      cljs.core.pv_aset(n_r, 1, cljs.core.new_path(null, self__.shift, new cljs.core.VectorNode(null, self__.tail)));
      return n_r;
    }() : cljs.core.push_tail(coll__$1, self__.shift, self__.root, new cljs.core.VectorNode(null, self__.tail));
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, new_shift, new_root, [o], null);
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__13723 = null;
  var G__13723__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__13723__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__13723 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__13723__2.call(this, self__, k);
      case 3:
        return G__13723__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__13723.cljs$core$IFn$_invoke$arity$2 = G__13723__2;
  G__13723.cljs$core$IFn$_invoke$arity$3 = G__13723__3;
  return G__13723;
}();
cljs.core.PersistentVector.prototype.apply = function(self__, args13698) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args13698)));
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";
cljs.core.PersistentVector.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/PersistentVector");
};
cljs.core.__GT_PersistentVector = function __GT_PersistentVector(meta, cnt, shift, root, tail, __hash) {
  return new cljs.core.PersistentVector(meta, cnt, shift, root, tail, __hash);
};
cljs.core.PersistentVector.EMPTY_NODE = new cljs.core.VectorNode(null, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], cljs.core.empty_ordered_hash);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l = xs.length;
  var xs__$1 = no_clone ? xs : cljs.core.aclone(xs);
  if (l < 32) {
    return new cljs.core.PersistentVector(null, l, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__$1, null);
  } else {
    var node = xs__$1.slice(0, 32);
    var v = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node, null);
    var i = 32;
    var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
    while (true) {
      if (i < l) {
        var G__13724 = i + 1;
        var G__13725 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out, xs__$1[i]);
        i = G__13724;
        out = G__13725;
        continue;
      } else {
        return cljs.core.persistent_BANG_(out);
      }
      break;
    }
  }
};
cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4903__auto__ = this;
  return cljs.core.es6_iterator(this__4903__auto__);
};
cljs.core.vec = function vec(coll) {
  if (coll instanceof Array) {
    return cljs.core.PersistentVector.fromArray(coll, true);
  } else {
    return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_, cljs.core._as_transient(cljs.core.PersistentVector.EMPTY), coll));
  }
};
cljs.core.vector = function() {
  var vector__delegate = function(args) {
    if (args instanceof cljs.core.IndexedSeq && args.i === 0) {
      return cljs.core.PersistentVector.fromArray(args.arr, true);
    } else {
      return cljs.core.vec(args);
    }
  };
  var vector = function(var_args) {
    var args = null;
    if (arguments.length > 0) {
      var G__13726__i = 0, G__13726__a = new Array(arguments.length - 0);
      while (G__13726__i < G__13726__a.length) {
        G__13726__a[G__13726__i] = arguments[G__13726__i + 0];
        ++G__13726__i;
      }
      args = new cljs.core.IndexedSeq(G__13726__a, 0);
    }
    return vector__delegate.call(this, args);
  };
  vector.cljs$lang$maxFixedArity = 0;
  vector.cljs$lang$applyTo = function(arglist__13727) {
    var args = cljs.core.seq(arglist__13727);
    return vector__delegate(args);
  };
  vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
  return vector;
}();
cljs.core.ChunkedSeq = function(vec, node, i, off, meta, __hash) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375020;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ChunkedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = function() {
      var G__13728 = self__.vec;
      var G__13729 = self__.node;
      var G__13730 = self__.i;
      var G__13731 = self__.off + 1;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__13728, G__13729, G__13730, G__13731) : cljs.core.chunked_seq.call(null, G__13728, G__13729, G__13730, G__13731);
    }();
    if (s == null) {
      return null;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_next(coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4346__auto__ = self__.__hash;
  if (!(h__4346__auto__ == null)) {
    return h__4346__auto__;
  } else {
    var h__4346__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4346__auto____$1;
    return h__4346__auto____$1;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(function() {
    var G__13732 = self__.vec;
    var G__13733 = self__.i + self__.off;
    var G__13734 = cljs.core.count(self__.vec);
    return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__13732, G__13733, G__13734) : cljs.core.subvec.call(null, G__13732, G__13733, G__13734);
  }(), f);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(function() {
    var G__13735 = self__.vec;
    var G__13736 = self__.i + self__.off;
    var G__13737 = cljs.core.count(self__.vec);
    return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__13735, G__13736, G__13737) : cljs.core.subvec.call(null, G__13735, G__13736, G__13737);
  }(), f, start);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.node[self__.off];
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = function() {
      var G__13738 = self__.vec;
      var G__13739 = self__.node;
      var G__13740 = self__.i;
      var G__13741 = self__.off + 1;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__13738, G__13739, G__13740, G__13741) : cljs.core.chunked_seq.call(null, G__13738, G__13739, G__13740, G__13741);
    }();
    if (s == null) {
      return cljs.core.List.EMPTY;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_rest(coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node, self__.off);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count(self__.vec)) {
    var G__13742 = self__.vec;
    var G__13743 = cljs.core.unchecked_array_for(self__.vec, end);
    var G__13744 = end;
    var G__13745 = 0;
    return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__13742, G__13743, G__13744, G__13745) : cljs.core.chunked_seq.call(null, G__13742, G__13743, G__13744, G__13745);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  var G__13746 = self__.vec;
  var G__13747 = self__.node;
  var G__13748 = self__.i;
  var G__13749 = self__.off;
  var G__13750 = m;
  return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__13746, G__13747, G__13748, G__13749, G__13750) : cljs.core.chunked_seq.call(null, G__13746, G__13747, G__13748, G__13749, G__13750);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count(self__.vec)) {
    var G__13751 = self__.vec;
    var G__13752 = cljs.core.unchecked_array_for(self__.vec, end);
    var G__13753 = end;
    var G__13754 = 0;
    return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__13751, G__13752, G__13753, G__13754) : cljs.core.chunked_seq.call(null, G__13751, G__13752, G__13753, G__13754);
  } else {
    return null;
  }
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";
cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/ChunkedSeq");
};
cljs.core.__GT_ChunkedSeq = function __GT_ChunkedSeq(vec, node, i, off, meta, __hash) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, __hash);
};
cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4903__auto__ = this;
  return cljs.core.es6_iterator(this__4903__auto__);
};
cljs.core.chunked_seq = function() {
  var chunked_seq = null;
  var chunked_seq__3 = function(vec, i, off) {
    return new cljs.core.ChunkedSeq(vec, cljs.core.array_for(vec, i), i, off, null, null);
  };
  var chunked_seq__4 = function(vec, node, i, off) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, null, null);
  };
  var chunked_seq__5 = function(vec, node, i, off, meta) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, meta, null);
  };
  chunked_seq = function(vec, node, i, off, meta) {
    switch(arguments.length) {
      case 3:
        return chunked_seq__3.call(this, vec, node, i);
      case 4:
        return chunked_seq__4.call(this, vec, node, i, off);
      case 5:
        return chunked_seq__5.call(this, vec, node, i, off, meta);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
  chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
  chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
  return chunked_seq;
}();
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 166617887;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Subvec.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Subvec.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return cljs.core.vector_index_out_of_bounds(n, self__.end - self__.start);
  } else {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, self__.start + n);
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return not_found;
  } else {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v, self__.start + n, not_found);
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  var v_pos = self__.start + n;
  var G__13756 = self__.meta;
  var G__13757 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v, v_pos, val);
  var G__13758 = self__.start;
  var G__13759 = function() {
    var x__4242__auto__ = self__.end;
    var y__4243__auto__ = v_pos + 1;
    return x__4242__auto__ > y__4243__auto__ ? x__4242__auto__ : y__4243__auto__;
  }();
  var G__13760 = null;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__13756, G__13757, G__13758, G__13759, G__13760) : cljs.core.build_subvec.call(null, G__13756, G__13757, G__13758, G__13759, G__13760);
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Subvec(self__.meta, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.end - self__.start;
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, self__.end - 1);
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.start === self__.end) {
    throw new Error("Can't pop empty vector");
  } else {
    var G__13761 = self__.meta;
    var G__13762 = self__.v;
    var G__13763 = self__.start;
    var G__13764 = self__.end - 1;
    var G__13765 = null;
    return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__13761, G__13762, G__13763, G__13764, G__13765) : cljs.core.build_subvec.call(null, G__13761, G__13762, G__13763, G__13764, G__13765);
  }
};
cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.start === self__.end)) {
    return new cljs.core.RSeq(coll__$1, self__.end - self__.start - 1, null);
  } else {
    return null;
  }
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4346__auto__ = self__.__hash;
  if (!(h__4346__auto__ == null)) {
    return h__4346__auto__;
  } else {
    var h__4346__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4346__auto____$1;
    return h__4346__auto____$1;
  }
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1, f);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1, f, start__$1);
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n(coll__$1, key, val);
  } else {
    throw new Error("Subvec's key for assoc must be a number.");
  }
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var subvec_seq = function(coll__$1) {
    return function subvec_seq(i) {
      if (i === self__.end) {
        return null;
      } else {
        return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, i), new cljs.core.LazySeq(null, function(coll__$1) {
          return function() {
            return subvec_seq(i + 1);
          };
        }(coll__$1), null, null));
      }
    };
  }(coll__$1);
  return subvec_seq(self__.start);
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  var G__13767 = meta__$1;
  var G__13768 = self__.v;
  var G__13769 = self__.start;
  var G__13770 = self__.end;
  var G__13771 = self__.__hash;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__13767, G__13768, G__13769, G__13770, G__13771) : cljs.core.build_subvec.call(null, G__13767, G__13768, G__13769, G__13770, G__13771);
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  var G__13772 = self__.meta;
  var G__13773 = cljs.core._assoc_n(self__.v, self__.end, o);
  var G__13774 = self__.start;
  var G__13775 = self__.end + 1;
  var G__13776 = null;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__13772, G__13773, G__13774, G__13775, G__13776) : cljs.core.build_subvec.call(null, G__13772, G__13773, G__13774, G__13775, G__13776);
};
cljs.core.Subvec.prototype.call = function() {
  var G__13777 = null;
  var G__13777__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__13777__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__13777 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__13777__2.call(this, self__, k);
      case 3:
        return G__13777__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__13777.cljs$core$IFn$_invoke$arity$2 = G__13777__2;
  G__13777.cljs$core$IFn$_invoke$arity$3 = G__13777__3;
  return G__13777;
}();
cljs.core.Subvec.prototype.apply = function(self__, args13755) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args13755)));
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";
cljs.core.Subvec.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/Subvec");
};
cljs.core.__GT_Subvec = function __GT_Subvec(meta, v, start, end, __hash) {
  return new cljs.core.Subvec(meta, v, start, end, __hash);
};
cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4903__auto__ = this;
  return cljs.core.es6_iterator(this__4903__auto__);
};
cljs.core.build_subvec = function build_subvec(meta, v, start, end, __hash) {
  while (true) {
    if (v instanceof cljs.core.Subvec) {
      var G__13778 = meta;
      var G__13779 = v.v;
      var G__13780 = v.start + start;
      var G__13781 = v.start + end;
      var G__13782 = __hash;
      meta = G__13778;
      v = G__13779;
      start = G__13780;
      end = G__13781;
      __hash = G__13782;
      continue;
    } else {
      var c = cljs.core.count(v);
      if (start < 0 || end < 0 || start > c || end > c) {
        throw new Error("Index out of bounds");
      } else {
      }
      return new cljs.core.Subvec(meta, v, start, end, __hash);
    }
    break;
  }
};
cljs.core.subvec = function() {
  var subvec = null;
  var subvec__2 = function(v, start) {
    return subvec.cljs$core$IFn$_invoke$arity$3(v, start, cljs.core.count(v));
  };
  var subvec__3 = function(v, start, end) {
    return cljs.core.build_subvec(null, v, start, end, null);
  };
  subvec = function(v, start, end) {
    switch(arguments.length) {
      case 2:
        return subvec__2.call(this, v, start);
      case 3:
        return subvec__3.call(this, v, start, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
  subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
  return subvec;
}();
cljs.core.tv_ensure_editable = function tv_ensure_editable(edit, node) {
  if (edit === node.edit) {
    return node;
  } else {
    return new cljs.core.VectorNode(edit, cljs.core.aclone(node.arr));
  }
};
cljs.core.tv_editable_root = function tv_editable_root(node) {
  return new cljs.core.VectorNode(function() {
    var obj13789 = {};
    return obj13789;
  }(), cljs.core.aclone(node.arr));
};
cljs.core.tv_editable_tail = function tv_editable_tail(tl) {
  var ret = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
  cljs.core.array_copy(tl, 0, ret, 0, tl.length);
  return ret;
};
cljs.core.tv_push_tail = function tv_push_tail(tv, level, parent, tail_node) {
  var ret = cljs.core.tv_ensure_editable(tv.root.edit, parent);
  var subidx = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset(ret, subidx, level === 5 ? tail_node : function() {
    var child = cljs.core.pv_aget(ret, subidx);
    if (!(child == null)) {
      return tv_push_tail(tv, level - 5, child, tail_node);
    } else {
      return cljs.core.new_path(tv.root.edit, level - 5, tail_node);
    }
  }());
  return ret;
};
cljs.core.tv_pop_tail = function tv_pop_tail(tv, level, node) {
  var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit, node);
  var subidx = tv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = tv_pop_tail(tv, level - 5, cljs.core.pv_aget(node__$1, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset(node__$1, subidx, new_child);
      return node__$1;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset(node__$1, subidx, null);
      return node__$1;
    }
  }
};
cljs.core.unchecked_editable_array_for = function unchecked_editable_array_for(tv, i) {
  if (i >= cljs.core.tail_off(tv)) {
    return tv.tail;
  } else {
    var root = tv.root;
    var node = root;
    var level = tv.shift;
    while (true) {
      if (level > 0) {
        var G__13797 = cljs.core.tv_ensure_editable(root.edit, cljs.core.pv_aget(node, i >>> level & 31));
        var G__13798 = level - 5;
        node = G__13797;
        level = G__13798;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition0$ = 275;
  this.cljs$lang$protocol_mask$partition1$ = 88;
};
cljs.core.TransientVector.prototype.call = function() {
  var G__13802 = null;
  var G__13802__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__13802__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__13802 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__13802__2.call(this, self__, k);
      case 3:
        return G__13802__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__13802.cljs$core$IFn$_invoke$arity$2 = G__13802__2;
  G__13802.cljs$core$IFn$_invoke$arity$3 = G__13802__3;
  return G__13802;
}();
cljs.core.TransientVector.prototype.apply = function(self__, args13799) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args13799)));
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return cljs.core.array_for(coll__$1, n)[n & 31];
  } else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, n);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return self__.cnt;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (0 <= n && n < self__.cnt) {
      if (cljs.core.tail_off(tcoll__$1) <= n) {
        self__.tail[n & 31] = val;
        return tcoll__$1;
      } else {
        var new_root = function(tcoll__$1) {
          return function go(level, node) {
            var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit, node);
            if (level === 0) {
              cljs.core.pv_aset(node__$1, n & 31, val);
              return node__$1;
            } else {
              var subidx = n >>> level & 31;
              cljs.core.pv_aset(node__$1, subidx, go(level - 5, cljs.core.pv_aget(node__$1, subidx)));
              return node__$1;
            }
          };
        }(tcoll__$1).call(null, self__.shift, self__.root);
        self__.root = new_root;
        return tcoll__$1;
      }
    } else {
      if (n === self__.cnt) {
        return cljs.core._conj_BANG_(tcoll__$1, val);
      } else {
        throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds for TransientVector of length"), cljs.core.str(self__.cnt)].join(""));
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt === 0) {
      throw new Error("Can't pop empty vector");
    } else {
      if (1 === self__.cnt) {
        self__.cnt = 0;
        return tcoll__$1;
      } else {
        if ((self__.cnt - 1 & 31) > 0) {
          self__.cnt = self__.cnt - 1;
          return tcoll__$1;
        } else {
          var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1, self__.cnt - 2);
          var new_root = function() {
            var nr = cljs.core.tv_pop_tail(tcoll__$1, self__.shift, self__.root);
            if (!(nr == null)) {
              return nr;
            } else {
              return new cljs.core.VectorNode(self__.root.edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
            }
          }();
          if (5 < self__.shift && cljs.core.pv_aget(new_root, 1) == null) {
            var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit, cljs.core.pv_aget(new_root, 0));
            self__.root = new_root__$1;
            self__.shift = self__.shift - 5;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          } else {
            self__.root = new_root;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          }
        }
      }
    }
  } else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n_BANG_(tcoll__$1, key, val);
  } else {
    throw new Error("TransientVector's key for assoc! must be a number.");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt - cljs.core.tail_off(tcoll__$1) < 32) {
      self__.tail[self__.cnt & 31] = o;
      self__.cnt = self__.cnt + 1;
      return tcoll__$1;
    } else {
      var tail_node = new cljs.core.VectorNode(self__.root.edit, self__.tail);
      var new_tail = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      new_tail[0] = o;
      self__.tail = new_tail;
      if (self__.cnt >>> 5 > 1 << self__.shift) {
        var new_root_array = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var new_shift = self__.shift + 5;
        new_root_array[0] = self__.root;
        new_root_array[1] = cljs.core.new_path(self__.root.edit, self__.shift, tail_node);
        self__.root = new cljs.core.VectorNode(self__.root.edit, new_root_array);
        self__.shift = new_shift;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      } else {
        var new_root = cljs.core.tv_push_tail(tcoll__$1, self__.shift, self__.root, tail_node);
        self__.root = new_root;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    self__.root.edit = null;
    var len = self__.cnt - cljs.core.tail_off(tcoll__$1);
    var trimmed_tail = new Array(len);
    cljs.core.array_copy(self__.tail, 0, trimmed_tail, 0, len);
    return new cljs.core.PersistentVector(null, self__.cnt, self__.shift, self__.root, trimmed_tail, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";
cljs.core.TransientVector.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/TransientVector");
};
cljs.core.__GT_TransientVector = function __GT_TransientVector(cnt, shift, root, tail) {
  return new cljs.core.TransientVector(cnt, shift, root, tail);
};
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572;
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentQueueSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4346__auto__ = self__.__hash;
  if (!(h__4346__auto__ == null)) {
    return h__4346__auto__;
  } else {
    var h__4346__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4346__auto____$1;
    return h__4346__auto____$1;
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var temp__4124__auto__ = cljs.core.next(self__.front);
  if (temp__4124__auto__) {
    var f1 = temp__4124__auto__;
    return new cljs.core.PersistentQueueSeq(self__.meta, f1, self__.rear, null);
  } else {
    if (self__.rear == null) {
      return cljs.core._empty(coll__$1);
    } else {
      return new cljs.core.PersistentQueueSeq(self__.meta, self__.rear, null, null);
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueueSeq(meta__$1, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/PersistentQueueSeq");
};
cljs.core.__GT_PersistentQueueSeq = function __GT_PersistentQueueSeq(meta, front, rear, __hash) {
  return new cljs.core.PersistentQueueSeq(meta, front, rear, __hash);
};
cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4903__auto__ = this;
  return cljs.core.es6_iterator(this__4903__auto__);
};
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31858766;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentQueue.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(self__.meta, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    var temp__4124__auto__ = cljs.core.next(self__.front);
    if (temp__4124__auto__) {
      var f1 = temp__4124__auto__;
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, f1, self__.rear, null);
    } else {
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, cljs.core.seq(self__.rear), cljs.core.PersistentVector.EMPTY, null);
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4346__auto__ = self__.__hash;
  if (!(h__4346__auto__ == null)) {
    return h__4346__auto__;
  } else {
    var h__4346__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4346__auto____$1;
    return h__4346__auto____$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY, self__.meta);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.rest(cljs.core.seq(coll__$1));
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var rear__$1 = cljs.core.seq(self__.rear);
  if (cljs.core.truth_(function() {
    var or__3925__auto__ = self__.front;
    if (cljs.core.truth_(or__3925__auto__)) {
      return or__3925__auto__;
    } else {
      return rear__$1;
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, self__.front, cljs.core.seq(rear__$1), null);
  } else {
    return null;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(meta__$1, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, self__.front, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(function() {
      var or__3925__auto__ = self__.rear;
      if (cljs.core.truth_(or__3925__auto__)) {
        return or__3925__auto__;
      } else {
        return cljs.core.PersistentVector.EMPTY;
      }
    }(), o), null);
  } else {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front, o), cljs.core.PersistentVector.EMPTY, null);
  }
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";
cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/PersistentQueue");
};
cljs.core.__GT_PersistentQueue = function __GT_PersistentQueue(meta, count, front, rear, __hash) {
  return new cljs.core.PersistentQueue(meta, count, front, rear, __hash);
};
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, cljs.core.empty_ordered_hash);
cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4903__auto__ = this;
  return cljs.core.es6_iterator(this__4903__auto__);
};
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2097152;
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return false;
};
cljs.core.NeverEquiv.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";
cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/NeverEquiv");
};
cljs.core.__GT_NeverEquiv = function __GT_NeverEquiv() {
  return new cljs.core.NeverEquiv;
};
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function equiv_map(x, y) {
  return cljs.core.boolean$(cljs.core.map_QMARK_(y) ? cljs.core.count(x) === cljs.core.count(y) ? cljs.core.every_QMARK_(cljs.core.identity, cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(xkv) {
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y, cljs.core.first(xkv), cljs.core.never_equiv), cljs.core.second(xkv));
  }, x)) : null : null);
};
cljs.core.scan_array = function scan_array(incr, k, array) {
  var len = array.length;
  var i = 0;
  while (true) {
    if (i < len) {
      if (k === array[i]) {
        return i;
      } else {
        var G__13803 = i + incr;
        i = G__13803;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.obj_map_compare_keys = function obj_map_compare_keys(a, b) {
  var a__$1 = cljs.core.hash(a);
  var b__$1 = cljs.core.hash(b);
  if (a__$1 < b__$1) {
    return-1;
  } else {
    if (a__$1 > b__$1) {
      return 1;
    } else {
      return 0;
    }
  }
};
cljs.core.obj_map__GT_hash_map = function obj_map__GT_hash_map(m, k, v) {
  var ks = m.keys;
  var len = ks.length;
  var so = m.strobj;
  var mm = cljs.core.meta(m);
  var i = 0;
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var k__$1 = ks[i];
      var G__13804 = i + 1;
      var G__13805 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, k__$1, so[k__$1]);
      i = G__13804;
      out = G__13805;
      continue;
    } else {
      return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, k, v)), mm);
    }
    break;
  }
};
cljs.core.obj_clone = function obj_clone(obj, ks) {
  var new_obj = function() {
    var obj13809 = {};
    return obj13809;
  }();
  var l = ks.length;
  var i_13810 = 0;
  while (true) {
    if (i_13810 < l) {
      var k_13811 = ks[i_13810];
      new_obj[k_13811] = obj[k_13811];
      var G__13812 = i_13810 + 1;
      i_13810 = G__13812;
      continue;
    } else {
    }
    break;
  }
  return new_obj;
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 4;
};
cljs.core.ObjMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ObjMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(function() {
    var and__3913__auto__ = function() {
      var G__13816 = k;
      return goog.isString(G__13816);
    }();
    if (cljs.core.truth_(and__3913__auto__)) {
      return!(cljs.core.scan_array(1, k, self__.keys) == null);
    } else {
      return and__3913__auto__;
    }
  }())) {
    return self__.strobj[k];
  } else {
    return not_found;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.keys.length;
  var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
  var init__$1 = init;
  while (true) {
    if (cljs.core.seq(keys__$1)) {
      var k = cljs.core.first(keys__$1);
      var init__$2 = function() {
        var G__13817 = init__$1;
        var G__13818 = k;
        var G__13819 = self__.strobj[k];
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13817, G__13818, G__13819) : f.call(null, G__13817, G__13818, G__13819);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__13820 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__13820) : cljs.core.deref.call(null, G__13820);
      } else {
        var G__13826 = cljs.core.rest(keys__$1);
        var G__13827 = init__$2;
        keys__$1 = G__13826;
        init__$1 = G__13827;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.keys.length;
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4346__auto__ = self__.__hash;
  if (!(h__4346__auto__ == null)) {
    return h__4346__auto__;
  } else {
    var h__4346__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4346__auto____$1;
    return h__4346__auto____$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY, coll__$1));
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.ObjMap.EMPTY, self__.meta);
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(function() {
    var and__3913__auto__ = function() {
      var G__13822 = k;
      return goog.isString(G__13822);
    }();
    if (cljs.core.truth_(and__3913__auto__)) {
      return!(cljs.core.scan_array(1, k, self__.keys) == null);
    } else {
      return and__3913__auto__;
    }
  }())) {
    var new_keys = cljs.core.aclone(self__.keys);
    var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
    new_keys.splice(cljs.core.scan_array(1, k, new_keys), 1);
    delete new_strobj[k];
    return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
  } else {
    return coll__$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(function() {
    var G__13823 = k;
    return goog.isString(G__13823);
  }())) {
    if (self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD || self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD) {
      return cljs.core.obj_map__GT_hash_map(coll__$1, k, v);
    } else {
      if (!(cljs.core.scan_array(1, k, self__.keys) == null)) {
        var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
        new_strobj[k] = v;
        return new cljs.core.ObjMap(self__.meta, self__.keys, new_strobj, self__.update_count + 1, null);
      } else {
        var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
        var new_keys = cljs.core.aclone(self__.keys);
        new_strobj[k] = v;
        new_keys.push(k);
        return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
      }
    }
  } else {
    return cljs.core.obj_map__GT_hash_map(coll__$1, k, v);
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(function() {
    var and__3913__auto__ = function() {
      var G__13825 = k;
      return goog.isString(G__13825);
    }();
    if (cljs.core.truth_(and__3913__auto__)) {
      return!(cljs.core.scan_array(1, k, self__.keys) == null);
    } else {
      return and__3913__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.keys.length > 0) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(coll__$1) {
      return function(p1__13813_SHARP_) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__13813_SHARP_, self__.strobj[p1__13813_SHARP_]], null);
      };
    }(coll__$1), self__.keys.sort(cljs.core.obj_map_compare_keys));
  } else {
    return null;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ObjMap(meta__$1, self__.keys, self__.strobj, self__.update_count, self__.__hash);
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__13828 = null;
  var G__13828__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__13828__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__13828 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__13828__2.call(this, self__, k);
      case 3:
        return G__13828__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__13828.cljs$core$IFn$_invoke$arity$2 = G__13828__2;
  G__13828.cljs$core$IFn$_invoke$arity$3 = G__13828__3;
  return G__13828;
}();
cljs.core.ObjMap.prototype.apply = function(self__, args13814) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args13814)));
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";
cljs.core.ObjMap.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/ObjMap");
};
cljs.core.__GT_ObjMap = function __GT_ObjMap(meta, keys, strobj, update_count, __hash) {
  return new cljs.core.ObjMap(meta, keys, strobj, update_count, __hash);
};
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], function() {
  var obj13830 = {};
  return obj13830;
}(), 0, cljs.core.empty_unordered_hash);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 8;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null);
};
cljs.core.ES6EntriesIterator = function(s) {
  this.s = s;
};
cljs.core.ES6EntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var vec__13831 = cljs.core.first(self__.s);
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13831, 0, null);
    var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13831, 1, null);
    self__.s = cljs.core.next(self__.s);
    return{"done":false, "value":[k, v]};
  } else {
    return{"done":true, "value":null};
  }
};
cljs.core.ES6EntriesIterator.cljs$lang$type = true;
cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";
cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/ES6EntriesIterator");
};
cljs.core.__GT_ES6EntriesIterator = function __GT_ES6EntriesIterator(s) {
  return new cljs.core.ES6EntriesIterator(s);
};
cljs.core.es6_entries_iterator = function es6_entries_iterator(coll) {
  return new cljs.core.ES6EntriesIterator(cljs.core.seq(coll));
};
cljs.core.ES6SetEntriesIterator = function(s) {
  this.s = s;
};
cljs.core.ES6SetEntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first(self__.s);
    self__.s = cljs.core.next(self__.s);
    return{"done":false, "value":[x, x]};
  } else {
    return{"done":true, "value":null};
  }
};
cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/ES6SetEntriesIterator");
};
cljs.core.__GT_ES6SetEntriesIterator = function __GT_ES6SetEntriesIterator(s) {
  return new cljs.core.ES6SetEntriesIterator(s);
};
cljs.core.es6_set_entries_iterator = function es6_set_entries_iterator(coll) {
  return new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll));
};
cljs.core.array_map_index_of_nil_QMARK_ = function array_map_index_of_nil_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (arr[i] == null) {
        return i;
      } else {
        var G__13832 = i + 2;
        i = G__13832;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_keyword_QMARK_ = function array_map_index_of_keyword_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.fqn;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Keyword && kstr === k_SINGLEQUOTE_.fqn;
      }()) {
        return i;
      } else {
        var G__13833 = i + 2;
        i = G__13833;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_symbol_QMARK_ = function array_map_index_of_symbol_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.str;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Symbol && kstr === k_SINGLEQUOTE_.str;
      }()) {
        return i;
      } else {
        var G__13834 = i + 2;
        i = G__13834;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_identical_QMARK_ = function array_map_index_of_identical_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (k === arr[i]) {
        return i;
      } else {
        var G__13835 = i + 2;
        i = G__13835;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_equiv_QMARK_ = function array_map_index_of_equiv_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, arr[i])) {
        return i;
      } else {
        var G__13836 = i + 2;
        i = G__13836;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of = function array_map_index_of(m, k) {
  var arr = m.arr;
  if (k instanceof cljs.core.Keyword) {
    return cljs.core.array_map_index_of_keyword_QMARK_(arr, m, k);
  } else {
    if (cljs.core.truth_(function() {
      var or__3925__auto__ = function() {
        var G__13840 = k;
        return goog.isString(G__13840);
      }();
      if (cljs.core.truth_(or__3925__auto__)) {
        return or__3925__auto__;
      } else {
        return typeof k === "number";
      }
    }())) {
      return cljs.core.array_map_index_of_identical_QMARK_(arr, m, k);
    } else {
      if (k instanceof cljs.core.Symbol) {
        return cljs.core.array_map_index_of_symbol_QMARK_(arr, m, k);
      } else {
        if (k == null) {
          return cljs.core.array_map_index_of_nil_QMARK_(arr, m, k);
        } else {
          return cljs.core.array_map_index_of_equiv_QMARK_(arr, m, k);
        }
      }
    }
  }
};
cljs.core.array_map_extend_kv = function array_map_extend_kv(m, k, v) {
  var arr = m.arr;
  var l = arr.length;
  var narr = new Array(l + 2);
  var i_13841 = 0;
  while (true) {
    if (i_13841 < l) {
      narr[i_13841] = arr[i_13841];
      var G__13842 = i_13841 + 1;
      i_13841 = G__13842;
      continue;
    } else {
    }
    break;
  }
  narr[l] = k;
  narr[l + 1] = v;
  return narr;
};
cljs.core.PersistentArrayMapSeq = function(arr, i, _meta) {
  this.arr = arr;
  this.i = i;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
};
cljs.core.PersistentArrayMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentArrayMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return(self__.arr.length - self__.i) / 2;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i, new_meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/PersistentArrayMapSeq");
};
cljs.core.__GT_PersistentArrayMapSeq = function __GT_PersistentArrayMapSeq(arr, i, _meta) {
  return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
};
cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4903__auto__ = this;
  return cljs.core.es6_iterator(this__4903__auto__);
};
cljs.core.persistent_array_map_seq = function persistent_array_map_seq(arr, i, _meta) {
  if (i <= arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapIterator = function(arr, i, cnt) {
  this.arr = arr;
  this.i = i;
  this.cnt = cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
  self__.i = self__.i + 2;
  return ret;
};
cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/PersistentArrayMapIterator");
};
cljs.core.__GT_PersistentArrayMapIterator = function __GT_PersistentArrayMapIterator(arr, i, cnt) {
  return new cljs.core.PersistentArrayMapIterator(arr, i, cnt);
};
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16647951;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentArrayMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__13844 = coll;
    return cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__13844) : cljs.core.keys.call(null, G__13844);
  }());
};
cljs.core.PersistentArrayMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentArrayMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__13845 = coll;
    return cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__13845) : cljs.core.vals.call(null, G__13845);
  }());
};
cljs.core.PersistentArrayMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentArrayMap.prototype.get = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentArrayMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__13846 = cljs.core.seq(coll);
  var chunk__13847 = null;
  var count__13848 = 0;
  var i__13849 = 0;
  while (true) {
    if (i__13849 < count__13848) {
      var vec__13850 = chunk__13847.cljs$core$IIndexed$_nth$arity$2(null, i__13849);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13850, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13850, 1, null);
      var G__13851_13864 = v;
      var G__13852_13865 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13851_13864, G__13852_13865) : f.call(null, G__13851_13864, G__13852_13865);
      var G__13866 = seq__13846;
      var G__13867 = chunk__13847;
      var G__13868 = count__13848;
      var G__13869 = i__13849 + 1;
      seq__13846 = G__13866;
      chunk__13847 = G__13867;
      count__13848 = G__13868;
      i__13849 = G__13869;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__13846);
      if (temp__4126__auto__) {
        var seq__13846__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__13846__$1)) {
          var c__4712__auto__ = cljs.core.chunk_first(seq__13846__$1);
          var G__13870 = cljs.core.chunk_rest(seq__13846__$1);
          var G__13871 = c__4712__auto__;
          var G__13872 = cljs.core.count(c__4712__auto__);
          var G__13873 = 0;
          seq__13846 = G__13870;
          chunk__13847 = G__13871;
          count__13848 = G__13872;
          i__13849 = G__13873;
          continue;
        } else {
          var vec__13853 = cljs.core.first(seq__13846__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13853, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13853, 1, null);
          var G__13854_13874 = v;
          var G__13855_13875 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13854_13874, G__13855_13875) : f.call(null, G__13854_13874, G__13855_13875);
          var G__13876 = cljs.core.next(seq__13846__$1);
          var G__13877 = null;
          var G__13878 = 0;
          var G__13879 = 0;
          seq__13846 = G__13876;
          chunk__13847 = G__13877;
          count__13848 = G__13878;
          i__13849 = G__13879;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx === -1) {
    return not_found;
  } else {
    return self__.arr[idx + 1];
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var G__13856 = init__$1;
        var G__13857 = self__.arr[i];
        var G__13858 = self__.arr[i + 1];
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13856, G__13857, G__13858) : f.call(null, G__13856, G__13857, G__13858);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__13859 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__13859) : cljs.core.deref.call(null, G__13859);
      } else {
        var G__13880 = i + 2;
        var G__13881 = init__$2;
        i = G__13880;
        init__$1 = G__13881;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.PersistentArrayMapIterator(self__.arr, 0, self__.cnt * 2);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4346__auto__ = self__.__hash;
  if (!(h__4346__auto__ == null)) {
    return h__4346__auto__;
  } else {
    var h__4346__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4346__auto____$1;
    return h__4346__auto____$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (function() {
    var G__13860 = other;
    if (G__13860) {
      var bit__4599__auto__ = G__13860.cljs$lang$protocol_mask$partition0$ & 1024;
      if (bit__4599__auto__ || G__13860.cljs$core$IMap$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    var alen = self__.arr.length;
    var other__$1 = other;
    if (self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null)) {
      var i = 0;
      while (true) {
        if (i < alen) {
          var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null, self__.arr[i], cljs.core.lookup_sentinel);
          if (!(v === cljs.core.lookup_sentinel)) {
            if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.arr[i + 1], v)) {
              var G__13882 = i + 2;
              i = G__13882;
              continue;
            } else {
              return false;
            }
          } else {
            return false;
          }
        } else {
          return true;
        }
        break;
      }
    } else {
      return false;
    }
  } else {
    return cljs.core.equiv_map(coll__$1, other);
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientArrayMap(function() {
    var obj13862 = {};
    return obj13862;
  }(), self__.arr.length, cljs.core.aclone(self__.arr));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY, self__.meta);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx >= 0) {
    var len = self__.arr.length;
    var new_len = len - 2;
    if (new_len === 0) {
      return cljs.core._empty(coll__$1);
    } else {
      var new_arr = new Array(new_len);
      var s = 0;
      var d = 0;
      while (true) {
        if (s >= len) {
          return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt - 1, new_arr, null);
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, self__.arr[s])) {
            var G__13883 = s + 2;
            var G__13884 = d;
            s = G__13883;
            d = G__13884;
            continue;
          } else {
            new_arr[d] = self__.arr[s];
            new_arr[d + 1] = self__.arr[s + 1];
            var G__13885 = s + 2;
            var G__13886 = d + 2;
            s = G__13885;
            d = G__13886;
            continue;
          }
        }
        break;
      }
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx === -1) {
    if (self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      var arr__$1 = cljs.core.array_map_extend_kv(coll__$1, k, v);
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt + 1, arr__$1, null);
    } else {
      return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY, coll__$1), k, v), self__.meta);
    }
  } else {
    if (v === self__.arr[idx + 1]) {
      return coll__$1;
    } else {
      var arr__$1 = function() {
        var G__13863 = cljs.core.aclone(self__.arr);
        G__13863[idx + 1] = v;
        return G__13863;
      }();
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, arr__$1, null);
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return!(cljs.core.array_map_index_of(coll__$1, k) === -1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.persistent_array_map_seq(self__.arr, 0, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMap(meta__$1, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__13887 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__13888 = cljs.core.next(es);
          ret = G__13887;
          es = G__13888;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__13889 = null;
  var G__13889__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__13889__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__13889 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__13889__2.call(this, self__, k);
      case 3:
        return G__13889__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__13889.cljs$core$IFn$_invoke$arity$2 = G__13889__2;
  G__13889.cljs$core$IFn$_invoke$arity$3 = G__13889__3;
  return G__13889;
}();
cljs.core.PersistentArrayMap.prototype.apply = function(self__, args13843) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args13843)));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";
cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/PersistentArrayMap");
};
cljs.core.__GT_PersistentArrayMap = function __GT_PersistentArrayMap(meta, cnt, arr, __hash) {
  return new cljs.core.PersistentArrayMap(meta, cnt, arr, __hash);
};
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], cljs.core.empty_unordered_hash);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 8;
cljs.core.PersistentArrayMap.fromArray = function(arr, no_clone, no_check) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone(arr);
  if (no_check) {
    var cnt = arr__$1.length / 2;
    return new cljs.core.PersistentArrayMap(null, cnt, arr__$1, null);
  } else {
    var len = arr__$1.length;
    var i = 0;
    var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__13890 = i + 2;
        var G__13891 = cljs.core._assoc_BANG_(ret, arr__$1[i], arr__$1[i + 1]);
        i = G__13890;
        ret = G__13891;
        continue;
      } else {
        return cljs.core._persistent_BANG_(ret);
      }
      break;
    }
  }
};
cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4903__auto__ = this;
  return cljs.core.es6_iterator(this__4903__auto__);
};
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258;
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, key);
    if (idx >= 0) {
      self__.arr[idx] = self__.arr[self__.len - 2];
      self__.arr[idx + 1] = self__.arr[self__.len - 1];
      var G__13892_13900 = self__.arr;
      G__13892_13900.pop();
      G__13892_13900.pop();
      self__.len = self__.len - 2;
    } else {
    }
    return tcoll__$1;
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, key);
    if (idx === -1) {
      if (self__.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        self__.len = self__.len + 2;
        self__.arr.push(key);
        self__.arr.push(val);
        return tcoll__$1;
      } else {
        return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(function() {
          var G__13893 = self__.len;
          var G__13894 = self__.arr;
          return cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__13893, G__13894) : cljs.core.array__GT_transient_hash_map.call(null, G__13893, G__13894);
        }(), key, val);
      }
    } else {
      if (val === self__.arr[idx + 1]) {
        return tcoll__$1;
      } else {
        self__.arr[idx + 1] = val;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    if (function() {
      var G__13895 = o;
      if (G__13895) {
        var bit__4606__auto__ = G__13895.cljs$lang$protocol_mask$partition0$ & 2048;
        if (bit__4606__auto__ || G__13895.cljs$core$IMapEntry$) {
          return true;
        } else {
          if (!G__13895.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, G__13895);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, G__13895);
      }
    }()) {
      return cljs.core._assoc_BANG_(tcoll__$1, function() {
        var G__13896 = o;
        return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__13896) : cljs.core.key.call(null, G__13896);
      }(), function() {
        var G__13897 = o;
        return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__13897) : cljs.core.val.call(null, G__13897);
      }());
    } else {
      var es = cljs.core.seq(o);
      var tcoll__$2 = tcoll__$1;
      while (true) {
        var temp__4124__auto__ = cljs.core.first(es);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          var G__13901 = cljs.core.next(es);
          var G__13902 = cljs.core._assoc_BANG_(tcoll__$2, function() {
            var G__13898 = e;
            return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__13898) : cljs.core.key.call(null, G__13898);
          }(), function() {
            var G__13899 = e;
            return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__13899) : cljs.core.val.call(null, G__13899);
          }());
          es = G__13901;
          tcoll__$2 = G__13902;
          continue;
        } else {
          return tcoll__$2;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    self__.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot(self__.len, 2), self__.arr, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1, k, null);
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, k);
    if (idx === -1) {
      return not_found;
    } else {
      return self__.arr[idx + 1];
    }
  } else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    return cljs.core.quot(self__.len, 2);
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";
cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/TransientArrayMap");
};
cljs.core.__GT_TransientArrayMap = function __GT_TransientArrayMap(editable_QMARK_, len, arr) {
  return new cljs.core.TransientArrayMap(editable_QMARK_, len, arr);
};
cljs.core.array__GT_transient_hash_map = function array__GT_transient_hash_map(len, arr) {
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  var i = 0;
  while (true) {
    if (i < len) {
      var G__13903 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, arr[i], arr[i + 1]);
      var G__13904 = i + 2;
      out = G__13903;
      i = G__13904;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.Box = function(val) {
  this.val = val;
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";
cljs.core.Box.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/Box");
};
cljs.core.__GT_Box = function __GT_Box(val) {
  return new cljs.core.Box(val);
};
cljs.core.key_test = function key_test(key, other) {
  if (key === other) {
    return true;
  } else {
    if (cljs.core.keyword_identical_QMARK_(key, other)) {
      return true;
    } else {
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key, other);
    }
  }
};
cljs.core.mask = function mask(hash, shift) {
  return hash >>> shift & 31;
};
cljs.core.clone_and_set = function() {
  var clone_and_set = null;
  var clone_and_set__3 = function(arr, i, a) {
    var G__13907 = cljs.core.aclone(arr);
    G__13907[i] = a;
    return G__13907;
  };
  var clone_and_set__5 = function(arr, i, a, j, b) {
    var G__13908 = cljs.core.aclone(arr);
    G__13908[i] = a;
    G__13908[j] = b;
    return G__13908;
  };
  clone_and_set = function(arr, i, a, j, b) {
    switch(arguments.length) {
      case 3:
        return clone_and_set__3.call(this, arr, i, a);
      case 5:
        return clone_and_set__5.call(this, arr, i, a, j, b);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
  clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
  return clone_and_set;
}();
cljs.core.remove_pair = function remove_pair(arr, i) {
  var new_arr = new Array(arr.length - 2);
  cljs.core.array_copy(arr, 0, new_arr, 0, 2 * i);
  cljs.core.array_copy(arr, 2 * (i + 1), new_arr, 2 * i, new_arr.length - 2 * i);
  return new_arr;
};
cljs.core.bitmap_indexed_node_index = function bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count(bitmap & bit - 1);
};
cljs.core.bitpos = function bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31);
};
cljs.core.edit_and_set = function() {
  var edit_and_set = null;
  var edit_and_set__4 = function(inode, edit, i, a) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    return editable;
  };
  var edit_and_set__6 = function(inode, edit, i, a, j, b) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    editable.arr[j] = b;
    return editable;
  };
  edit_and_set = function(inode, edit, i, a, j, b) {
    switch(arguments.length) {
      case 4:
        return edit_and_set__4.call(this, inode, edit, i, a);
      case 6:
        return edit_and_set__6.call(this, inode, edit, i, a, j, b);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
  edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
  return edit_and_set;
}();
cljs.core.inode_kv_reduce = function inode_kv_reduce(arr, f, init) {
  var len = arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var k = arr[i];
        if (!(k == null)) {
          var G__13913 = init__$1;
          var G__13914 = k;
          var G__13915 = arr[i + 1];
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13913, G__13914, G__13915) : f.call(null, G__13913, G__13914, G__13915);
        } else {
          var node = arr[i + 1];
          if (!(node == null)) {
            return node.kv_reduce(f, init__$1);
          } else {
            return init__$1;
          }
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__13916 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__13916) : cljs.core.deref.call(null, G__13916);
      } else {
        var G__13917 = i + 2;
        var G__13918 = init__$2;
        i = G__13917;
        init__$1 = G__13918;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr;
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var n = cljs.core.bit_count(self__.bitmap);
    var new_arr = new Array(n < 0 ? 4 : 2 * (n + 1));
    cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * n);
    return new cljs.core.BitmapIndexedNode(e, self__.bitmap, new_arr);
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, n);
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return inode.edit_and_remove_pair(edit__$1, bit, idx);
          }
        }
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        removed_leaf_QMARK_[0] = true;
        return inode.edit_and_remove_pair(edit__$1, bit, idx);
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var self__ = this;
  var inode = this;
  if (self__.bitmap === bit) {
    return null;
  } else {
    var editable = inode.ensure_editable(e);
    var earr = editable.arr;
    var len = earr.length;
    editable.bitmap = bit ^ editable.bitmap;
    cljs.core.array_copy(earr, 2 * (i + 1), earr, 2 * i, len - 2 * (i + 1));
    earr[len - 2] = null;
    earr[len - 1] = null;
    return editable;
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  var G__13919 = self__.arr;
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__13919) : cljs.core.create_inode_seq.call(null, G__13919);
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce(self__.arr, f, init);
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_lookup(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return val_or_node;
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count(self__.bitmap);
    if (2 * n < self__.arr.length) {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward(earr, 2 * idx, earr, 2 * (idx + 1), 2 * (n - idx));
      earr[2 * idx] = key;
      earr[2 * idx + 1] = val;
      editable.bitmap = editable.bitmap | bit;
      return editable;
    } else {
      if (n >= 16) {
        var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var jdx = hash >>> shift & 31;
        nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i_13933 = 0;
        var j_13934 = 0;
        while (true) {
          if (i_13933 < 32) {
            if ((self__.bitmap >>> i_13933 & 1) === 0) {
              var G__13935 = i_13933 + 1;
              var G__13936 = j_13934;
              i_13933 = G__13935;
              j_13934 = G__13936;
              continue;
            } else {
              nodes[i_13933] = !(self__.arr[j_13934] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, cljs.core.hash(self__.arr[j_13934]), self__.arr[j_13934], self__.arr[j_13934 + 1], added_leaf_QMARK_) : self__.arr[j_13934 + 1];
              var G__13937 = i_13933 + 1;
              var G__13938 = j_13934 + 2;
              i_13933 = G__13937;
              j_13934 = G__13938;
              continue;
            }
          } else {
          }
          break;
        }
        return new cljs.core.ArrayNode(edit__$1, n + 1, nodes);
      } else {
        var new_arr = new Array(2 * (n + 4));
        cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * idx);
        new_arr[2 * idx] = key;
        new_arr[2 * idx + 1] = val;
        cljs.core.array_copy(self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
        added_leaf_QMARK_.val = true;
        var editable = inode.ensure_editable(edit__$1);
        editable.arr = new_arr;
        editable.bitmap = editable.bitmap | bit;
        return editable;
      }
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, n);
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, val);
        }
      } else {
        added_leaf_QMARK_.val = true;
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode, edit__$1, 2 * idx, null, 2 * idx + 1, function() {
          var G__13920 = edit__$1;
          var G__13921 = shift + 5;
          var G__13922 = key_or_nil;
          var G__13923 = val_or_node;
          var G__13924 = hash;
          var G__13925 = key;
          var G__13926 = val;
          return cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__13920, G__13921, G__13922, G__13923, G__13924, G__13925, G__13926) : cljs.core.create_node.call(null, G__13920, G__13921, G__13922, G__13923, G__13924, G__13925, G__13926);
        }());
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count(self__.bitmap);
    if (n >= 16) {
      var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      var jdx = hash >>> shift & 31;
      nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i_13939 = 0;
      var j_13940 = 0;
      while (true) {
        if (i_13939 < 32) {
          if ((self__.bitmap >>> i_13939 & 1) === 0) {
            var G__13941 = i_13939 + 1;
            var G__13942 = j_13940;
            i_13939 = G__13941;
            j_13940 = G__13942;
            continue;
          } else {
            nodes[i_13939] = !(self__.arr[j_13940] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash(self__.arr[j_13940]), self__.arr[j_13940], self__.arr[j_13940 + 1], added_leaf_QMARK_) : self__.arr[j_13940 + 1];
            var G__13943 = i_13939 + 1;
            var G__13944 = j_13940 + 2;
            i_13939 = G__13943;
            j_13940 = G__13944;
            continue;
          }
        } else {
        }
        break;
      }
      return new cljs.core.ArrayNode(null, n + 1, nodes);
    } else {
      var new_arr = new Array(2 * (n + 1));
      cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * idx);
      new_arr[2 * idx] = key;
      new_arr[2 * idx + 1] = val;
      cljs.core.array_copy(self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, self__.bitmap | bit, new_arr);
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, n));
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, val));
        }
      } else {
        added_leaf_QMARK_.val = true;
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr, 2 * idx, null, 2 * idx + 1, function() {
          var G__13927 = shift + 5;
          var G__13928 = key_or_nil;
          var G__13929 = val_or_node;
          var G__13930 = hash;
          var G__13931 = key;
          var G__13932 = val;
          return cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__13927, G__13928, G__13929, G__13930, G__13931, G__13932) : cljs.core.create_node.call(null, G__13927, G__13928, G__13929, G__13930, G__13931, G__13932);
        }()));
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_find(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil, val_or_node], null);
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without(shift + 5, hash, key);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, n));
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair(self__.arr, idx));
          }
        }
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair(self__.arr, idx));
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/BitmapIndexedNode");
};
cljs.core.__GT_BitmapIndexedNode = function __GT_BitmapIndexedNode(edit, bitmap, arr) {
  return new cljs.core.BitmapIndexedNode(edit, bitmap, arr);
};
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, []);
cljs.core.pack_array_node = function pack_array_node(array_node, edit, idx) {
  var arr = array_node.arr;
  var len = arr.length;
  var new_arr = new Array(2 * (array_node.cnt - 1));
  var i = 0;
  var j = 1;
  var bitmap = 0;
  while (true) {
    if (i < len) {
      if (!(i === idx) && !(arr[i] == null)) {
        new_arr[j] = arr[i];
        var G__13945 = i + 1;
        var G__13946 = j + 2;
        var G__13947 = bitmap | 1 << i;
        i = G__13945;
        j = G__13946;
        bitmap = G__13947;
        continue;
      } else {
        var G__13948 = i + 1;
        var G__13949 = j;
        var G__13950 = bitmap;
        i = G__13948;
        j = G__13949;
        bitmap = G__13950;
        continue;
      }
    } else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap, new_arr);
    }
    break;
  }
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    return new cljs.core.ArrayNode(e, self__.cnt, cljs.core.aclone(self__.arr));
  }
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return inode;
  } else {
    var n = node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node(inode, edit__$1, idx);
        } else {
          var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
          editable.cnt = editable.cnt - 1;
          return editable;
        }
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
      }
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  var G__13951 = self__.arr;
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__13951) : cljs.core.create_array_node_seq.call(null, G__13951);
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var node = self__.arr[i];
      if (!(node == null)) {
        var init__$2 = node.kv_reduce(f, init__$1);
        if (cljs.core.reduced_QMARK_(init__$2)) {
          var G__13952 = init__$2;
          return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__13952) : cljs.core.deref.call(null, G__13952);
        } else {
          var G__13953 = i + 1;
          var G__13954 = init__$2;
          i = G__13953;
          init__$1 = G__13954;
          continue;
        }
      } else {
        var G__13955 = i + 1;
        var G__13956 = init__$1;
        i = G__13955;
        init__$1 = G__13956;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_lookup(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable.cnt = editable.cnt + 1;
    return editable;
  } else {
    var n = node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
    }
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return new cljs.core.ArrayNode(null, self__.cnt + 1, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)));
  } else {
    var n = node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
    }
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_find(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    var n = node.inode_without(shift + 5, hash, key);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node(inode, null, idx);
        } else {
          return new cljs.core.ArrayNode(null, self__.cnt - 1, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
        }
      } else {
        return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
      }
    }
  } else {
    return inode;
  }
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";
cljs.core.ArrayNode.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/ArrayNode");
};
cljs.core.__GT_ArrayNode = function __GT_ArrayNode(edit, cnt, arr) {
  return new cljs.core.ArrayNode(edit, cnt, arr);
};
cljs.core.hash_collision_node_find_index = function hash_collision_node_find_index(arr, cnt, key) {
  var lim = 2 * cnt;
  var i = 0;
  while (true) {
    if (i < lim) {
      if (cljs.core.key_test(key, arr[i])) {
        return i;
      } else {
        var G__13957 = i + 2;
        i = G__13957;
        continue;
      }
    } else {
      return-1;
    }
    break;
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var new_arr = new Array(2 * (self__.cnt + 1));
    cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * self__.cnt);
    return new cljs.core.HashCollisionNode(e, self__.collision_hash, self__.cnt, new_arr);
  }
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    removed_leaf_QMARK_[0] = true;
    if (self__.cnt === 1) {
      return null;
    } else {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      earr[idx] = earr[2 * self__.cnt - 2];
      earr[idx + 1] = earr[2 * self__.cnt - 1];
      earr[2 * self__.cnt - 1] = null;
      earr[2 * self__.cnt - 2] = null;
      editable.cnt = editable.cnt - 1;
      return editable;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  var G__13958 = self__.arr;
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__13958) : cljs.core.create_inode_seq.call(null, G__13958);
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce(self__.arr, f, init);
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test(key, self__.arr[idx])) {
      return self__.arr[idx + 1];
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
    if (idx === -1) {
      if (self__.arr.length > 2 * self__.cnt) {
        var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode, edit__$1, 2 * self__.cnt, key, 2 * self__.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable.cnt = editable.cnt + 1;
        return editable;
      } else {
        var len = self__.arr.length;
        var new_arr = new Array(len + 2);
        cljs.core.array_copy(self__.arr, 0, new_arr, 0, len);
        new_arr[len] = key;
        new_arr[len + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode.ensure_editable_array(edit__$1, self__.cnt + 1, new_arr);
      }
    } else {
      if (self__.arr[idx + 1] === val) {
        return inode;
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx + 1, val);
      }
    }
  } else {
    return(new cljs.core.BitmapIndexedNode(edit__$1, 1 << (self__.collision_hash >>> shift & 31), [null, inode, null, null])).inode_assoc_BANG_(edit__$1, shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
    if (idx === -1) {
      var len = 2 * self__.cnt;
      var new_arr = new Array(len + 2);
      cljs.core.array_copy(self__.arr, 0, new_arr, 0, len);
      new_arr[len] = key;
      new_arr[len + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt + 1, new_arr);
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.arr[idx], val)) {
        return inode;
      } else {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx + 1, val));
      }
    }
  } else {
    return(new cljs.core.BitmapIndexedNode(null, 1 << (self__.collision_hash >>> shift & 31), [null, inode])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    self__.arr = array;
    self__.cnt = count;
    return inode;
  } else {
    return new cljs.core.HashCollisionNode(self__.edit, self__.collision_hash, count, array);
  }
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test(key, self__.arr[idx])) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[idx], self__.arr[idx + 1]], null);
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    if (self__.cnt === 1) {
      return null;
    } else {
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt - 1, cljs.core.remove_pair(self__.arr, cljs.core.quot(idx, 2)));
    }
  }
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";
cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/HashCollisionNode");
};
cljs.core.__GT_HashCollisionNode = function __GT_HashCollisionNode(edit, collision_hash, cnt, arr) {
  return new cljs.core.HashCollisionNode(edit, collision_hash, cnt, arr);
};
cljs.core.create_node = function() {
  var create_node = null;
  var create_node__6 = function(shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash(key1);
    if (key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK_);
    }
  };
  var create_node__7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash(key1);
    if (key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK_);
    }
  };
  create_node = function(edit, shift, key1, val1, key2hash, key2, val2) {
    switch(arguments.length) {
      case 6:
        return create_node__6.call(this, edit, shift, key1, val1, key2hash, key2);
      case 7:
        return create_node__7.call(this, edit, shift, key1, val1, key2hash, key2, val2);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
  create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
  return create_node;
}();
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
};
cljs.core.NodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.NodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4346__auto__ = self__.__hash;
  if (!(h__4346__auto__ == null)) {
    return h__4346__auto__;
  } else {
    var h__4346__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4346__auto____$1;
    return h__4346__auto____$1;
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.nodes[self__.i], self__.nodes[self__.i + 1]], null);
  } else {
    return cljs.core.first(self__.s);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    var G__13959 = self__.nodes;
    var G__13960 = self__.i + 2;
    var G__13961 = null;
    return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__13959, G__13960, G__13961) : cljs.core.create_inode_seq.call(null, G__13959, G__13960, G__13961);
  } else {
    var G__13962 = self__.nodes;
    var G__13963 = self__.i;
    var G__13964 = cljs.core.next(self__.s);
    return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__13962, G__13963, G__13964) : cljs.core.create_inode_seq.call(null, G__13962, G__13963, G__13964);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";
cljs.core.NodeSeq.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/NodeSeq");
};
cljs.core.__GT_NodeSeq = function __GT_NodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.NodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4903__auto__ = this;
  return cljs.core.es6_iterator(this__4903__auto__);
};
cljs.core.create_inode_seq = function() {
  var create_inode_seq = null;
  var create_inode_seq__1 = function(nodes) {
    return create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes, 0, null);
  };
  var create_inode_seq__3 = function(nodes, i, s) {
    if (s == null) {
      var len = nodes.length;
      var j = i;
      while (true) {
        if (j < len) {
          if (!(nodes[j] == null)) {
            return new cljs.core.NodeSeq(null, nodes, j, null, null);
          } else {
            var temp__4124__auto__ = nodes[j + 1];
            if (cljs.core.truth_(temp__4124__auto__)) {
              var node = temp__4124__auto__;
              var temp__4124__auto____$1 = node.inode_seq();
              if (cljs.core.truth_(temp__4124__auto____$1)) {
                var node_seq = temp__4124__auto____$1;
                return new cljs.core.NodeSeq(null, nodes, j + 2, node_seq, null);
              } else {
                var G__13968 = j + 2;
                j = G__13968;
                continue;
              }
            } else {
              var G__13969 = j + 2;
              j = G__13969;
              continue;
            }
          }
        } else {
          return null;
        }
        break;
      }
    } else {
      return new cljs.core.NodeSeq(null, nodes, i, s, null);
    }
  };
  create_inode_seq = function(nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_inode_seq__1.call(this, nodes);
      case 3:
        return create_inode_seq__3.call(this, nodes, i, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
  create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
  return create_inode_seq;
}();
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ArrayNodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4346__auto__ = self__.__hash;
  if (!(h__4346__auto__ == null)) {
    return h__4346__auto__;
  } else {
    var h__4346__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4346__auto____$1;
    return h__4346__auto____$1;
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.s);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var G__13970 = null;
  var G__13971 = self__.nodes;
  var G__13972 = self__.i;
  var G__13973 = cljs.core.next(self__.s);
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__13970, G__13971, G__13972, G__13973) : cljs.core.create_array_node_seq.call(null, G__13970, G__13971, G__13972, G__13973);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ArrayNodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/ArrayNodeSeq");
};
cljs.core.__GT_ArrayNodeSeq = function __GT_ArrayNodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4903__auto__ = this;
  return cljs.core.es6_iterator(this__4903__auto__);
};
cljs.core.create_array_node_seq = function() {
  var create_array_node_seq = null;
  var create_array_node_seq__1 = function(nodes) {
    return create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null, nodes, 0, null);
  };
  var create_array_node_seq__4 = function(meta, nodes, i, s) {
    if (s == null) {
      var len = nodes.length;
      var j = i;
      while (true) {
        if (j < len) {
          var temp__4124__auto__ = nodes[j];
          if (cljs.core.truth_(temp__4124__auto__)) {
            var nj = temp__4124__auto__;
            var temp__4124__auto____$1 = nj.inode_seq();
            if (cljs.core.truth_(temp__4124__auto____$1)) {
              var ns = temp__4124__auto____$1;
              return new cljs.core.ArrayNodeSeq(meta, nodes, j + 1, ns, null);
            } else {
              var G__13978 = j + 1;
              j = G__13978;
              continue;
            }
          } else {
            var G__13979 = j + 1;
            j = G__13979;
            continue;
          }
        } else {
          return null;
        }
        break;
      }
    } else {
      return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null);
    }
  };
  create_array_node_seq = function(meta, nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_array_node_seq__1.call(this, meta);
      case 4:
        return create_array_node_seq__4.call(this, meta, nodes, i, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
  create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
  return create_array_node_seq;
}();
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentHashMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__13981 = coll;
    return cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__13981) : cljs.core.keys.call(null, G__13981);
  }());
};
cljs.core.PersistentHashMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__13982 = coll;
    return cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__13982) : cljs.core.vals.call(null, G__13982);
  }());
};
cljs.core.PersistentHashMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentHashMap.prototype.get = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__13983 = cljs.core.seq(coll);
  var chunk__13984 = null;
  var count__13985 = 0;
  var i__13986 = 0;
  while (true) {
    if (i__13986 < count__13985) {
      var vec__13987 = chunk__13984.cljs$core$IIndexed$_nth$arity$2(null, i__13986);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13987, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13987, 1, null);
      var G__13988_13999 = v;
      var G__13989_14000 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13988_13999, G__13989_14000) : f.call(null, G__13988_13999, G__13989_14000);
      var G__14001 = seq__13983;
      var G__14002 = chunk__13984;
      var G__14003 = count__13985;
      var G__14004 = i__13986 + 1;
      seq__13983 = G__14001;
      chunk__13984 = G__14002;
      count__13985 = G__14003;
      i__13986 = G__14004;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__13983);
      if (temp__4126__auto__) {
        var seq__13983__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__13983__$1)) {
          var c__4712__auto__ = cljs.core.chunk_first(seq__13983__$1);
          var G__14005 = cljs.core.chunk_rest(seq__13983__$1);
          var G__14006 = c__4712__auto__;
          var G__14007 = cljs.core.count(c__4712__auto__);
          var G__14008 = 0;
          seq__13983 = G__14005;
          chunk__13984 = G__14006;
          count__13985 = G__14007;
          i__13986 = G__14008;
          continue;
        } else {
          var vec__13990 = cljs.core.first(seq__13983__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13990, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13990, 1, null);
          var G__13991_14009 = v;
          var G__13992_14010 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13991_14009, G__13992_14010) : f.call(null, G__13991_14009, G__13992_14010);
          var G__14011 = cljs.core.next(seq__13983__$1);
          var G__14012 = null;
          var G__14013 = 0;
          var G__14014 = 0;
          seq__13983 = G__14011;
          chunk__13984 = G__14012;
          count__13985 = G__14013;
          i__13986 = G__14014;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k, not_found);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var init__$1 = self__.has_nil_QMARK_ ? function() {
    var G__13993 = init;
    var G__13994 = null;
    var G__13995 = self__.nil_val;
    return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13993, G__13994, G__13995) : f.call(null, G__13993, G__13994, G__13995);
  }() : init;
  if (cljs.core.reduced_QMARK_(init__$1)) {
    var G__13996 = init__$1;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__13996) : cljs.core.deref.call(null, G__13996);
  } else {
    if (!(self__.root == null)) {
      return self__.root.kv_reduce(f, init__$1);
    } else {
      return init__$1;
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashMap(self__.meta, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4346__auto__ = self__.__hash;
  if (!(h__4346__auto__ == null)) {
    return h__4346__auto__;
  } else {
    var h__4346__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4346__auto____$1;
    return h__4346__auto____$1;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashMap(function() {
    var obj13998 = {};
    return obj13998;
  }(), self__.root, self__.cnt, self__.has_nil_QMARK_, self__.nil_val);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY, self__.meta);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, self__.root, false, null, null);
    } else {
      return coll__$1;
    }
  } else {
    if (self__.root == null) {
      return coll__$1;
    } else {
      var new_root = self__.root.inode_without(0, cljs.core.hash(k), k);
      if (new_root === self__.root) {
        return coll__$1;
      } else {
        return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_ && v === self__.nil_val) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, self__.has_nil_QMARK_ ? self__.cnt : self__.cnt + 1, self__.root, true, v, null);
    }
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    var new_root = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc(0, cljs.core.hash(k), k, v, added_leaf_QMARK_);
    if (new_root === self__.root) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, added_leaf_QMARK_.val ? self__.cnt + 1 : self__.cnt, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    return self__.has_nil_QMARK_;
  } else {
    if (self__.root == null) {
      return false;
    } else {
      return!(self__.root.inode_lookup(0, cljs.core.hash(k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var s = !(self__.root == null) ? self__.root.inode_seq() : null;
    if (self__.has_nil_QMARK_) {
      return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, self__.nil_val], null), s);
    } else {
      return s;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashMap(meta__$1, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__14015 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__14016 = cljs.core.next(es);
          ret = G__14015;
          es = G__14016;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__14017 = null;
  var G__14017__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__14017__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__14017 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__14017__2.call(this, self__, k);
      case 3:
        return G__14017__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__14017.cljs$core$IFn$_invoke$arity$2 = G__14017__2;
  G__14017.cljs$core$IFn$_invoke$arity$3 = G__14017__3;
  return G__14017;
}();
cljs.core.PersistentHashMap.prototype.apply = function(self__, args13980) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args13980)));
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";
cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/PersistentHashMap");
};
cljs.core.__GT_PersistentHashMap = function __GT_PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  return new cljs.core.PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash);
};
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, cljs.core.empty_unordered_hash);
cljs.core.PersistentHashMap.fromArray = function(arr, no_clone) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone(arr);
  var len = arr__$1.length;
  var i = 0;
  var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__14018 = i + 2;
      var G__14019 = cljs.core._assoc_BANG_(ret, arr__$1[i], arr__$1[i + 1]);
      i = G__14018;
      ret = G__14019;
      continue;
    } else {
      return cljs.core._persistent_BANG_(ret);
    }
    break;
  }
};
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len = ks.length;
  var i = 0;
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__14020 = i + 1;
      var G__14021 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null, ks[i], vs[i]);
      i = G__14020;
      out = G__14021;
      continue;
    } else {
      return cljs.core.persistent_BANG_(out);
    }
    break;
  }
};
cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4903__auto__ = this;
  return cljs.core.es6_iterator(this__4903__auto__);
};
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258;
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.without_BANG_(key);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.assoc_BANG_(key, val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.conj_BANG_(val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.persistent_BANG_();
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return null;
    }
  } else {
    if (self__.root == null) {
      return null;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k, not_found);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.edit) {
    return self__.count;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (function() {
      var G__14022 = o;
      if (G__14022) {
        var bit__4606__auto__ = G__14022.cljs$lang$protocol_mask$partition0$ & 2048;
        if (bit__4606__auto__ || G__14022.cljs$core$IMapEntry$) {
          return true;
        } else {
          if (!G__14022.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, G__14022);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, G__14022);
      }
    }()) {
      return tcoll.assoc_BANG_(function() {
        var G__14023 = o;
        return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__14023) : cljs.core.key.call(null, G__14023);
      }(), function() {
        var G__14024 = o;
        return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__14024) : cljs.core.val.call(null, G__14024);
      }());
    } else {
      var es = cljs.core.seq(o);
      var tcoll__$1 = tcoll;
      while (true) {
        var temp__4124__auto__ = cljs.core.first(es);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          var G__14027 = cljs.core.next(es);
          var G__14028 = tcoll__$1.assoc_BANG_(function() {
            var G__14025 = e;
            return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__14025) : cljs.core.key.call(null, G__14025);
          }(), function() {
            var G__14026 = e;
            return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__14026) : cljs.core.val.call(null, G__14026);
          }());
          es = G__14027;
          tcoll__$1 = G__14028;
          continue;
        } else {
          return tcoll__$1;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.nil_val === v) {
      } else {
        self__.nil_val = v;
      }
      if (self__.has_nil_QMARK_) {
      } else {
        self__.count = self__.count + 1;
        self__.has_nil_QMARK_ = true;
      }
      return tcoll;
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      var node = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc_BANG_(self__.edit, 0, cljs.core.hash(k), k, v, added_leaf_QMARK_);
      if (node === self__.root) {
      } else {
        self__.root = node;
      }
      if (added_leaf_QMARK_.val) {
        self__.count = self__.count + 1;
      } else {
      }
      return tcoll;
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.has_nil_QMARK_) {
        self__.has_nil_QMARK_ = false;
        self__.nil_val = null;
        self__.count = self__.count - 1;
        return tcoll;
      } else {
        return tcoll;
      }
    } else {
      if (self__.root == null) {
        return tcoll;
      } else {
        var removed_leaf_QMARK_ = new cljs.core.Box(false);
        var node = self__.root.inode_without_BANG_(self__.edit, 0, cljs.core.hash(k), k, removed_leaf_QMARK_);
        if (node === self__.root) {
        } else {
          self__.root = node;
        }
        if (cljs.core.truth_(removed_leaf_QMARK_[0])) {
          self__.count = self__.count - 1;
        } else {
        }
        return tcoll;
      }
    }
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    self__.edit = null;
    return new cljs.core.PersistentHashMap(null, self__.count, self__.root, self__.has_nil_QMARK_, self__.nil_val, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";
cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/TransientHashMap");
};
cljs.core.__GT_TransientHashMap = function __GT_TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val) {
  return new cljs.core.TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val);
};
cljs.core.tree_map_seq_push = function tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t = node;
  var stack__$1 = stack;
  while (true) {
    if (!(t == null)) {
      var G__14029 = ascending_QMARK_ ? t.left : t.right;
      var G__14030 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1, t);
      t = G__14029;
      stack__$1 = G__14030;
      continue;
    } else {
      return stack__$1;
    }
    break;
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374862;
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt < 0) {
    return cljs.core.count(cljs.core.next(coll__$1)) + 1;
  } else {
    return self__.cnt;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4346__auto__ = self__.__hash;
  if (!(h__4346__auto__ == null)) {
    return h__4346__auto__;
  } else {
    var h__4346__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4346__auto____$1;
    return h__4346__auto____$1;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.peek(self__.stack);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var t = cljs.core.first(self__.stack);
  var next_stack = cljs.core.tree_map_seq_push(self__.ascending_QMARK_ ? t.right : t.left, cljs.core.next(self__.stack), self__.ascending_QMARK_);
  if (!(next_stack == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack, self__.ascending_QMARK_, self__.cnt - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMapSeq(meta__$1, self__.stack, self__.ascending_QMARK_, self__.cnt, self__.__hash);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/PersistentTreeMapSeq");
};
cljs.core.__GT_PersistentTreeMapSeq = function __GT_PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash) {
  return new cljs.core.PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash);
};
cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4903__auto__ = this;
  return cljs.core.es6_iterator(this__4903__auto__);
};
cljs.core.create_tree_map_seq = function create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push(tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null);
};
cljs.core.balance_left = function balance_left(key, val, ins, right) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null);
    } else {
      if (ins.right instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, ins, right, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, ins, right, null);
  }
};
cljs.core.balance_right = function balance_right(key, val, left, ins) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null);
    } else {
      if (ins.left instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, left, ins, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, left, ins, null);
  }
};
cljs.core.balance_left_del = function balance_left_del(key, val, del, right) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null);
  } else {
    if (right instanceof cljs.core.BlackNode) {
      return cljs.core.balance_right(key, val, del, right.redden());
    } else {
      if (right instanceof cljs.core.RedNode && right.left instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right(right.key, right.val, right.left.right, right.right.redden()), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.balance_right_del = function balance_right_del(key, val, left, del) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null);
  } else {
    if (left instanceof cljs.core.BlackNode) {
      return cljs.core.balance_left(key, val, left.redden(), del);
    } else {
      if (left instanceof cljs.core.RedNode && left.right instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left(left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function tree_map_kv_reduce(node, f, init) {
  var init__$1 = !(node.left == null) ? tree_map_kv_reduce(node.left, f, init) : init;
  if (cljs.core.reduced_QMARK_(init__$1)) {
    var G__14043 = init__$1;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14043) : cljs.core.deref.call(null, G__14043);
  } else {
    var init__$2 = function() {
      var G__14044 = init__$1;
      var G__14045 = node.key;
      var G__14046 = node.val;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14044, G__14045, G__14046) : f.call(null, G__14044, G__14045, G__14046);
    }();
    if (cljs.core.reduced_QMARK_(init__$2)) {
      var G__14047 = init__$2;
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14047) : cljs.core.deref.call(null, G__14047);
    } else {
      var init__$3 = !(node.right == null) ? tree_map_kv_reduce(node.right, f, init__$2) : init__$2;
      if (cljs.core.reduced_QMARK_(init__$3)) {
        var G__14048 = init__$3;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14048) : cljs.core.deref.call(null, G__14048);
      } else {
        return init__$3;
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
};
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_right(node);
};
cljs.core.BlackNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.BlackNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return node;
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_left(node);
};
cljs.core.BlackNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
};
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_left_del(self__.key, self__.val, del, self__.right);
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce(node, f, init);
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_right_del(self__.key, self__.val, self__.left, del);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, null);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, not_found);
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4346__auto__ = self__.__hash;
  if (!(h__4346__auto__ == null)) {
    return h__4346__auto__;
  } else {
    var h__4346__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4346__auto____$1;
    return h__4346__auto____$1;
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1, f);
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1, f, start);
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.BlackNode.prototype.call = function() {
  var G__14050 = null;
  var G__14050__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__14050__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__14050 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__14050__2.call(this, self__, k);
      case 3:
        return G__14050__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__14050.cljs$core$IFn$_invoke$arity$2 = G__14050__2;
  G__14050.cljs$core$IFn$_invoke$arity$3 = G__14050__3;
  return G__14050;
}();
cljs.core.BlackNode.prototype.apply = function(self__, args14049) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args14049)));
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";
cljs.core.BlackNode.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/BlackNode");
};
cljs.core.__GT_BlackNode = function __GT_BlackNode(key, val, left, right, __hash) {
  return new cljs.core.BlackNode(key, val, left, right, __hash);
};
cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4903__auto__ = this;
  return cljs.core.es6_iterator(this__4903__auto__);
};
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
};
cljs.core.RedNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, ins, null);
};
cljs.core.RedNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, ins, self__.right, null);
};
cljs.core.RedNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.left instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, self__.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, self__.right, parent.right, null), null);
  } else {
    if (self__.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.right.key, self__.right.val, new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, self__.right.right, parent.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
    }
  }
};
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.right instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left, null), self__.right.blacken(), null);
  } else {
    if (self__.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.left.key, self__.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left.left, null), new cljs.core.BlackNode(self__.key, self__.val, self__.left.right, self__.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
    }
  }
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, del, self__.right, null);
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce(node, f, init);
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, del, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, not_found);
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4346__auto__ = self__.__hash;
  if (!(h__4346__auto__ == null)) {
    return h__4346__auto__;
  } else {
    var h__4346__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4346__auto____$1;
    return h__4346__auto____$1;
  }
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1, f);
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1, f, start);
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.RedNode.prototype.call = function() {
  var G__14052 = null;
  var G__14052__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__14052__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__14052 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__14052__2.call(this, self__, k);
      case 3:
        return G__14052__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__14052.cljs$core$IFn$_invoke$arity$2 = G__14052__2;
  G__14052.cljs$core$IFn$_invoke$arity$3 = G__14052__3;
  return G__14052;
}();
cljs.core.RedNode.prototype.apply = function(self__, args14051) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args14051)));
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";
cljs.core.RedNode.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/RedNode");
};
cljs.core.__GT_RedNode = function __GT_RedNode(key, val, left, right, __hash) {
  return new cljs.core.RedNode(key, val, left, right, __hash);
};
cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4903__auto__ = this;
  return cljs.core.es6_iterator(this__4903__auto__);
};
cljs.core.tree_map_add = function tree_map_add(comp, tree, k, v, found) {
  if (tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null);
  } else {
    var c = function() {
      var G__14065 = k;
      var G__14066 = tree.key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__14065, G__14066) : comp.call(null, G__14065, G__14066);
    }();
    if (c === 0) {
      found[0] = tree;
      return null;
    } else {
      if (c < 0) {
        var ins = tree_map_add(comp, tree.left, k, v, found);
        if (!(ins == null)) {
          return tree.add_left(ins);
        } else {
          return null;
        }
      } else {
        var ins = tree_map_add(comp, tree.right, k, v, found);
        if (!(ins == null)) {
          return tree.add_right(ins);
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.tree_map_append = function tree_map_append(left, right) {
  if (left == null) {
    return right;
  } else {
    if (right == null) {
      return left;
    } else {
      if (left instanceof cljs.core.RedNode) {
        if (right instanceof cljs.core.RedNode) {
          var app = tree_map_append(left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.RedNode(left.key, left.val, left.left, app.left, null), new cljs.core.RedNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app, right.right, null), null);
          }
        } else {
          return new cljs.core.RedNode(left.key, left.val, left.left, tree_map_append(left.right, right), null);
        }
      } else {
        if (right instanceof cljs.core.RedNode) {
          return new cljs.core.RedNode(right.key, right.val, tree_map_append(left, right.left), right.right, null);
        } else {
          var app = tree_map_append(left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.BlackNode(left.key, left.val, left.left, app.left, null), new cljs.core.BlackNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return cljs.core.balance_left_del(left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app, right.right, null));
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function tree_map_remove(comp, tree, k, found) {
  if (!(tree == null)) {
    var c = function() {
      var G__14085 = k;
      var G__14086 = tree.key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__14085, G__14086) : comp.call(null, G__14085, G__14086);
    }();
    if (c === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append(tree.left, tree.right);
    } else {
      if (c < 0) {
        var del = tree_map_remove(comp, tree.left, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.left instanceof cljs.core.BlackNode) {
            return cljs.core.balance_left_del(tree.key, tree.val, del, tree.right);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, del, tree.right, null);
          }
        } else {
          return null;
        }
      } else {
        var del = tree_map_remove(comp, tree.right, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.right instanceof cljs.core.BlackNode) {
            return cljs.core.balance_right_del(tree.key, tree.val, tree.left, del);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, tree.left, del, null);
          }
        } else {
          return null;
        }
      }
    }
  } else {
    return null;
  }
};
cljs.core.tree_map_replace = function tree_map_replace(comp, tree, k, v) {
  var tk = tree.key;
  var c = function() {
    var G__14097 = k;
    var G__14098 = tk;
    return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__14097, G__14098) : comp.call(null, G__14097, G__14098);
  }();
  if (c === 0) {
    return tree.replace(tk, v, tree.left, tree.right);
  } else {
    if (c < 0) {
      return tree.replace(tk, tree.val, tree_map_replace(comp, tree.left, k, v), tree.right);
    } else {
      return tree.replace(tk, tree.val, tree.left, tree_map_replace(comp, tree.right, k, v));
    }
  }
};
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 418776847;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__14100 = cljs.core.seq(coll);
  var chunk__14101 = null;
  var count__14102 = 0;
  var i__14103 = 0;
  while (true) {
    if (i__14103 < count__14102) {
      var vec__14104 = chunk__14101.cljs$core$IIndexed$_nth$arity$2(null, i__14103);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14104, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14104, 1, null);
      var G__14105_14117 = v;
      var G__14106_14118 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14105_14117, G__14106_14118) : f.call(null, G__14105_14117, G__14106_14118);
      var G__14119 = seq__14100;
      var G__14120 = chunk__14101;
      var G__14121 = count__14102;
      var G__14122 = i__14103 + 1;
      seq__14100 = G__14119;
      chunk__14101 = G__14120;
      count__14102 = G__14121;
      i__14103 = G__14122;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__14100);
      if (temp__4126__auto__) {
        var seq__14100__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__14100__$1)) {
          var c__4712__auto__ = cljs.core.chunk_first(seq__14100__$1);
          var G__14123 = cljs.core.chunk_rest(seq__14100__$1);
          var G__14124 = c__4712__auto__;
          var G__14125 = cljs.core.count(c__4712__auto__);
          var G__14126 = 0;
          seq__14100 = G__14123;
          chunk__14101 = G__14124;
          count__14102 = G__14125;
          i__14103 = G__14126;
          continue;
        } else {
          var vec__14107 = cljs.core.first(seq__14100__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14107, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14107, 1, null);
          var G__14108_14127 = v;
          var G__14109_14128 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14108_14127, G__14109_14128) : f.call(null, G__14108_14127, G__14109_14128);
          var G__14129 = cljs.core.next(seq__14100__$1);
          var G__14130 = null;
          var G__14131 = 0;
          var G__14132 = 0;
          seq__14100 = G__14129;
          chunk__14101 = G__14130;
          count__14102 = G__14131;
          i__14103 = G__14132;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.get = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__14110 = coll;
    return cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__14110) : cljs.core.keys.call(null, G__14110);
  }());
};
cljs.core.PersistentTreeMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__14111 = coll;
    return cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__14111) : cljs.core.vals.call(null, G__14111);
  }());
};
cljs.core.PersistentTreeMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var self__ = this;
  var coll = this;
  var t = self__.tree;
  while (true) {
    if (!(t == null)) {
      var c = function() {
        var G__14112 = k;
        var G__14113 = t.key;
        return self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__14112, G__14113) : self__.comp.call(null, G__14112, G__14113);
      }();
      if (c === 0) {
        return t;
      } else {
        if (c < 0) {
          var G__14133 = t.left;
          t = G__14133;
          continue;
        } else {
          var G__14134 = t.right;
          t = G__14134;
          continue;
        }
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = coll__$1.entry_at(k);
  if (!(n == null)) {
    return n.val;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.tree == null)) {
    return cljs.core.tree_map_kv_reduce(self__.tree, f, init);
  } else {
    return init;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, self__.meta, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, false, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4346__auto__ = self__.__hash;
  if (!(h__4346__auto__ == null)) {
    return h__4346__auto__;
  } else {
    var h__4346__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4346__auto____$1;
    return h__4346__auto____$1;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, 0);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_remove(self__.comp, self__.tree, k, found);
  if (t == null) {
    if (cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found, 0) == null) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt - 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_add(self__.comp, self__.tree, k, v, found);
  if (t == null) {
    var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found, 0);
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v, found_node.val)) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, cljs.core.tree_map_replace(self__.comp, self__.tree, k, v), self__.cnt, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt + 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return!(coll__$1.entry_at(k) == null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, true, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, meta__$1, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__14135 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__14136 = cljs.core.next(es);
          ret = G__14135;
          es = G__14136;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__14137 = null;
  var G__14137__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__14137__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__14137 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__14137__2.call(this, self__, k);
      case 3:
        return G__14137__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__14137.cljs$core$IFn$_invoke$arity$2 = G__14137__2;
  G__14137.cljs$core$IFn$_invoke$arity$3 = G__14137__3;
  return G__14137;
}();
cljs.core.PersistentTreeMap.prototype.apply = function(self__, args14099) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args14099)));
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, ascending_QMARK_, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var stack = null;
    var t = self__.tree;
    while (true) {
      if (!(t == null)) {
        var c = function() {
          var G__14114 = k;
          var G__14115 = t.key;
          return self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__14114, G__14115) : self__.comp.call(null, G__14114, G__14115);
        }();
        if (c === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t), ascending_QMARK_, -1, null);
        } else {
          if (cljs.core.truth_(ascending_QMARK_)) {
            if (c < 0) {
              var G__14138 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t);
              var G__14139 = t.left;
              stack = G__14138;
              t = G__14139;
              continue;
            } else {
              var G__14140 = stack;
              var G__14141 = t.right;
              stack = G__14140;
              t = G__14141;
              continue;
            }
          } else {
            if (c > 0) {
              var G__14142 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t);
              var G__14143 = t.right;
              stack = G__14142;
              t = G__14143;
              continue;
            } else {
              var G__14144 = stack;
              var G__14145 = t.left;
              stack = G__14144;
              t = G__14145;
              continue;
            }
          }
        }
      } else {
        if (stack == null) {
          return null;
        } else {
          return new cljs.core.PersistentTreeMapSeq(null, stack, ascending_QMARK_, -1, null);
        }
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  var G__14116 = entry;
  return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__14116) : cljs.core.key.call(null, G__14116);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.comp;
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";
cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/PersistentTreeMap");
};
cljs.core.__GT_PersistentTreeMap = function __GT_PersistentTreeMap(comp, tree, cnt, meta, __hash) {
  return new cljs.core.PersistentTreeMap(comp, tree, cnt, meta, __hash);
};
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, cljs.core.empty_unordered_hash);
cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4903__auto__ = this;
  return cljs.core.es6_iterator(this__4903__auto__);
};
cljs.core.hash_map = function() {
  var hash_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq(keyvals);
    var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
    while (true) {
      if (in$) {
        var G__14146 = cljs.core.nnext(in$);
        var G__14147 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
        in$ = G__14146;
        out = G__14147;
        continue;
      } else {
        return cljs.core.persistent_BANG_(out);
      }
      break;
    }
  };
  var hash_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      var G__14148__i = 0, G__14148__a = new Array(arguments.length - 0);
      while (G__14148__i < G__14148__a.length) {
        G__14148__a[G__14148__i] = arguments[G__14148__i + 0];
        ++G__14148__i;
      }
      keyvals = new cljs.core.IndexedSeq(G__14148__a, 0);
    }
    return hash_map__delegate.call(this, keyvals);
  };
  hash_map.cljs$lang$maxFixedArity = 0;
  hash_map.cljs$lang$applyTo = function(arglist__14149) {
    var keyvals = cljs.core.seq(arglist__14149);
    return hash_map__delegate(keyvals);
  };
  hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
  return hash_map;
}();
cljs.core.array_map = function() {
  var array_map__delegate = function(keyvals) {
    return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array, keyvals), true, false);
  };
  var array_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      var G__14150__i = 0, G__14150__a = new Array(arguments.length - 0);
      while (G__14150__i < G__14150__a.length) {
        G__14150__a[G__14150__i] = arguments[G__14150__i + 0];
        ++G__14150__i;
      }
      keyvals = new cljs.core.IndexedSeq(G__14150__a, 0);
    }
    return array_map__delegate.call(this, keyvals);
  };
  array_map.cljs$lang$maxFixedArity = 0;
  array_map.cljs$lang$applyTo = function(arglist__14151) {
    var keyvals = cljs.core.seq(arglist__14151);
    return array_map__delegate(keyvals);
  };
  array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
  return array_map;
}();
cljs.core.obj_map = function() {
  var obj_map__delegate = function(keyvals) {
    var ks = [];
    var obj = function() {
      var obj14155 = {};
      return obj14155;
    }();
    var kvs = cljs.core.seq(keyvals);
    while (true) {
      if (kvs) {
        ks.push(cljs.core.first(kvs));
        obj[cljs.core.first(kvs)] = cljs.core.second(kvs);
        var G__14156 = cljs.core.nnext(kvs);
        kvs = G__14156;
        continue;
      } else {
        return cljs.core.ObjMap.fromObject(ks, obj);
      }
      break;
    }
  };
  var obj_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      var G__14157__i = 0, G__14157__a = new Array(arguments.length - 0);
      while (G__14157__i < G__14157__a.length) {
        G__14157__a[G__14157__i] = arguments[G__14157__i + 0];
        ++G__14157__i;
      }
      keyvals = new cljs.core.IndexedSeq(G__14157__a, 0);
    }
    return obj_map__delegate.call(this, keyvals);
  };
  obj_map.cljs$lang$maxFixedArity = 0;
  obj_map.cljs$lang$applyTo = function(arglist__14158) {
    var keyvals = cljs.core.seq(arglist__14158);
    return obj_map__delegate(keyvals);
  };
  obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
  return obj_map;
}();
cljs.core.sorted_map = function() {
  var sorted_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq(keyvals);
    var out = cljs.core.PersistentTreeMap.EMPTY;
    while (true) {
      if (in$) {
        var G__14159 = cljs.core.nnext(in$);
        var G__14160 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
        in$ = G__14159;
        out = G__14160;
        continue;
      } else {
        return out;
      }
      break;
    }
  };
  var sorted_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      var G__14161__i = 0, G__14161__a = new Array(arguments.length - 0);
      while (G__14161__i < G__14161__a.length) {
        G__14161__a[G__14161__i] = arguments[G__14161__i + 0];
        ++G__14161__i;
      }
      keyvals = new cljs.core.IndexedSeq(G__14161__a, 0);
    }
    return sorted_map__delegate.call(this, keyvals);
  };
  sorted_map.cljs$lang$maxFixedArity = 0;
  sorted_map.cljs$lang$applyTo = function(arglist__14162) {
    var keyvals = cljs.core.seq(arglist__14162);
    return sorted_map__delegate(keyvals);
  };
  sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
  return sorted_map;
}();
cljs.core.sorted_map_by = function() {
  var sorted_map_by__delegate = function(comparator, keyvals) {
    var in$ = cljs.core.seq(keyvals);
    var out = new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator), null, 0, null, 0);
    while (true) {
      if (in$) {
        var G__14163 = cljs.core.nnext(in$);
        var G__14164 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
        in$ = G__14163;
        out = G__14164;
        continue;
      } else {
        return out;
      }
      break;
    }
  };
  var sorted_map_by = function(comparator, var_args) {
    var keyvals = null;
    if (arguments.length > 1) {
      var G__14165__i = 0, G__14165__a = new Array(arguments.length - 1);
      while (G__14165__i < G__14165__a.length) {
        G__14165__a[G__14165__i] = arguments[G__14165__i + 1];
        ++G__14165__i;
      }
      keyvals = new cljs.core.IndexedSeq(G__14165__a, 0);
    }
    return sorted_map_by__delegate.call(this, comparator, keyvals);
  };
  sorted_map_by.cljs$lang$maxFixedArity = 1;
  sorted_map_by.cljs$lang$applyTo = function(arglist__14166) {
    var comparator = cljs.core.first(arglist__14166);
    var keyvals = cljs.core.rest(arglist__14166);
    return sorted_map_by__delegate(comparator, keyvals);
  };
  sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
  return sorted_map_by;
}();
cljs.core.KeySeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.KeySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.KeySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__14167 = self__.mseq;
    if (G__14167) {
      var bit__4606__auto__ = G__14167.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4606__auto__ || G__14167.cljs$core$INext$) {
        return true;
      } else {
        if (!G__14167.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__14167);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__14167);
    }
  }() ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.KeySeq(nseq, self__._meta);
  }
};
cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
  return me.cljs$core$IMapEntry$_key$arity$1(null);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__14168 = self__.mseq;
    if (G__14168) {
      var bit__4606__auto__ = G__14168.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4606__auto__ || G__14168.cljs$core$INext$) {
        return true;
      } else {
        if (!G__14168.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__14168);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__14168);
    }
  }() ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.KeySeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.KeySeq(self__.mseq, new_meta);
};
cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.KeySeq.cljs$lang$type = true;
cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";
cljs.core.KeySeq.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/KeySeq");
};
cljs.core.__GT_KeySeq = function __GT_KeySeq(mseq, _meta) {
  return new cljs.core.KeySeq(mseq, _meta);
};
cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4903__auto__ = this;
  return cljs.core.es6_iterator(this__4903__auto__);
};
cljs.core.keys = function keys(hash_map) {
  var temp__4126__auto__ = cljs.core.seq(hash_map);
  if (temp__4126__auto__) {
    var mseq = temp__4126__auto__;
    return new cljs.core.KeySeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.key = function key(map_entry) {
  return cljs.core._key(map_entry);
};
cljs.core.ValSeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.ValSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ValSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__14169 = self__.mseq;
    if (G__14169) {
      var bit__4606__auto__ = G__14169.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4606__auto__ || G__14169.cljs$core$INext$) {
        return true;
      } else {
        if (!G__14169.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__14169);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__14169);
    }
  }() ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.ValSeq(nseq, self__._meta);
  }
};
cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
  return me.cljs$core$IMapEntry$_val$arity$1(null);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__14170 = self__.mseq;
    if (G__14170) {
      var bit__4606__auto__ = G__14170.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4606__auto__ || G__14170.cljs$core$INext$) {
        return true;
      } else {
        if (!G__14170.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__14170);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__14170);
    }
  }() ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.ValSeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ValSeq(self__.mseq, new_meta);
};
cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ValSeq.cljs$lang$type = true;
cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";
cljs.core.ValSeq.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/ValSeq");
};
cljs.core.__GT_ValSeq = function __GT_ValSeq(mseq, _meta) {
  return new cljs.core.ValSeq(mseq, _meta);
};
cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4903__auto__ = this;
  return cljs.core.es6_iterator(this__4903__auto__);
};
cljs.core.vals = function vals(hash_map) {
  var temp__4126__auto__ = cljs.core.seq(hash_map);
  if (temp__4126__auto__) {
    var mseq = temp__4126__auto__;
    return new cljs.core.ValSeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.val = function val(map_entry) {
  return cljs.core._val(map_entry);
};
cljs.core.merge = function() {
  var merge__delegate = function(maps) {
    if (cljs.core.truth_(cljs.core.some(cljs.core.identity, maps))) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(function(p1__14171_SHARP_, p2__14172_SHARP_) {
        return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(function() {
          var or__3925__auto__ = p1__14171_SHARP_;
          if (cljs.core.truth_(or__3925__auto__)) {
            return or__3925__auto__;
          } else {
            return cljs.core.PersistentArrayMap.EMPTY;
          }
        }(), p2__14172_SHARP_);
      }, maps);
    } else {
      return null;
    }
  };
  var merge = function(var_args) {
    var maps = null;
    if (arguments.length > 0) {
      var G__14173__i = 0, G__14173__a = new Array(arguments.length - 0);
      while (G__14173__i < G__14173__a.length) {
        G__14173__a[G__14173__i] = arguments[G__14173__i + 0];
        ++G__14173__i;
      }
      maps = new cljs.core.IndexedSeq(G__14173__a, 0);
    }
    return merge__delegate.call(this, maps);
  };
  merge.cljs$lang$maxFixedArity = 0;
  merge.cljs$lang$applyTo = function(arglist__14174) {
    var maps = cljs.core.seq(arglist__14174);
    return merge__delegate(maps);
  };
  merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
  return merge;
}();
cljs.core.merge_with = function() {
  var merge_with__delegate = function(f, maps) {
    if (cljs.core.truth_(cljs.core.some(cljs.core.identity, maps))) {
      var merge_entry = function(m, e) {
        var k = cljs.core.first(e);
        var v = cljs.core.second(e);
        if (cljs.core.contains_QMARK_(m, k)) {
          return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
            var G__14177 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
            var G__14178 = v;
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14177, G__14178) : f.call(null, G__14177, G__14178);
          }());
        } else {
          return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, v);
        }
      };
      var merge2 = function(merge_entry) {
        return function(m1, m2) {
          return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry, function() {
            var or__3925__auto__ = m1;
            if (cljs.core.truth_(or__3925__auto__)) {
              return or__3925__auto__;
            } else {
              return cljs.core.PersistentArrayMap.EMPTY;
            }
          }(), cljs.core.seq(m2));
        };
      }(merge_entry);
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2, maps);
    } else {
      return null;
    }
  };
  var merge_with = function(f, var_args) {
    var maps = null;
    if (arguments.length > 1) {
      var G__14179__i = 0, G__14179__a = new Array(arguments.length - 1);
      while (G__14179__i < G__14179__a.length) {
        G__14179__a[G__14179__i] = arguments[G__14179__i + 1];
        ++G__14179__i;
      }
      maps = new cljs.core.IndexedSeq(G__14179__a, 0);
    }
    return merge_with__delegate.call(this, f, maps);
  };
  merge_with.cljs$lang$maxFixedArity = 1;
  merge_with.cljs$lang$applyTo = function(arglist__14180) {
    var f = cljs.core.first(arglist__14180);
    var maps = cljs.core.rest(arglist__14180);
    return merge_with__delegate(f, maps);
  };
  merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
  return merge_with;
}();
cljs.core.select_keys = function select_keys(map, keyseq) {
  var ret = cljs.core.PersistentArrayMap.EMPTY;
  var keys = cljs.core.seq(keyseq);
  while (true) {
    if (keys) {
      var key = cljs.core.first(keys);
      var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map, key, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185));
      var G__14181 = cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, key, entry) : ret;
      var G__14182 = cljs.core.next(keys);
      ret = G__14181;
      keys = G__14182;
      continue;
    } else {
      return cljs.core.with_meta(ret, cljs.core.meta(map));
    }
    break;
  }
};
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 15077647;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentHashSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentHashSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__14185 = cljs.core.seq(coll);
  var chunk__14186 = null;
  var count__14187 = 0;
  var i__14188 = 0;
  while (true) {
    if (i__14188 < count__14187) {
      var vec__14189 = chunk__14186.cljs$core$IIndexed$_nth$arity$2(null, i__14188);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14189, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14189, 1, null);
      var G__14190_14195 = v;
      var G__14191_14196 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14190_14195, G__14191_14196) : f.call(null, G__14190_14195, G__14191_14196);
      var G__14197 = seq__14185;
      var G__14198 = chunk__14186;
      var G__14199 = count__14187;
      var G__14200 = i__14188 + 1;
      seq__14185 = G__14197;
      chunk__14186 = G__14198;
      count__14187 = G__14199;
      i__14188 = G__14200;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__14185);
      if (temp__4126__auto__) {
        var seq__14185__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__14185__$1)) {
          var c__4712__auto__ = cljs.core.chunk_first(seq__14185__$1);
          var G__14201 = cljs.core.chunk_rest(seq__14185__$1);
          var G__14202 = c__4712__auto__;
          var G__14203 = cljs.core.count(c__4712__auto__);
          var G__14204 = 0;
          seq__14185 = G__14201;
          chunk__14186 = G__14202;
          count__14187 = G__14203;
          i__14188 = G__14204;
          continue;
        } else {
          var vec__14192 = cljs.core.first(seq__14185__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14192, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14192, 1, null);
          var G__14193_14205 = v;
          var G__14194_14206 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14193_14205, G__14194_14206) : f.call(null, G__14193_14205, G__14194_14206);
          var G__14207 = cljs.core.next(seq__14185__$1);
          var G__14208 = null;
          var G__14209 = 0;
          var G__14210 = 0;
          seq__14185 = G__14207;
          chunk__14186 = G__14208;
          count__14187 = G__14209;
          i__14188 = G__14210;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, v, null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._contains_key_QMARK_(self__.hash_map, v)) {
    return v;
  } else {
    return not_found;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._count(self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4346__auto__ = self__.__hash;
  if (!(h__4346__auto__ == null)) {
    return h__4346__auto__;
  } else {
    var h__4346__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4346__auto____$1;
    return h__4346__auto____$1;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_(other) && cljs.core.count(coll__$1) === cljs.core.count(other) && cljs.core.every_QMARK_(function(coll__$1) {
    return function(p1__14183_SHARP_) {
      return cljs.core.contains_QMARK_(coll__$1, p1__14183_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY, self__.meta);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core._dissoc(self__.hash_map, v), null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys(self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(meta__$1, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map, o, null), null);
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__14211 = null;
  var G__14211__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__14211__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__14211 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__14211__2.call(this, self__, k);
      case 3:
        return G__14211__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__14211.cljs$core$IFn$_invoke$arity$2 = G__14211__2;
  G__14211.cljs$core$IFn$_invoke$arity$3 = G__14211__3;
  return G__14211;
}();
cljs.core.PersistentHashSet.prototype.apply = function(self__, args14184) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args14184)));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";
cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/PersistentHashSet");
};
cljs.core.__GT_PersistentHashSet = function __GT_PersistentHashSet(meta, hash_map, __hash) {
  return new cljs.core.PersistentHashSet(meta, hash_map, __hash);
};
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.empty_unordered_hash);
cljs.core.PersistentHashSet.fromArray = function(items, no_clone) {
  var len = items.length;
  if (len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
    var arr = no_clone ? items : cljs.core.aclone(items);
    var i = 0;
    var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__14212 = i + 1;
        var G__14213 = cljs.core._assoc_BANG_(out, items[i], null);
        i = G__14212;
        out = G__14213;
        continue;
      } else {
        return new cljs.core.PersistentHashSet(null, cljs.core._persistent_BANG_(out), null);
      }
      break;
    }
  } else {
    var i = 0;
    var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < len) {
        var G__14214 = i + 1;
        var G__14215 = cljs.core._conj_BANG_(out, items[i]);
        i = G__14214;
        out = G__14215;
        continue;
      } else {
        return cljs.core._persistent_BANG_(out);
      }
      break;
    }
  }
};
cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4903__auto__ = this;
  return cljs.core.es6_iterator(this__4903__auto__);
};
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition0$ = 259;
  this.cljs$lang$protocol_mask$partition1$ = 136;
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__14217 = null;
  var G__14217__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null;
    } else {
      return k;
    }
  };
  var G__14217__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found;
    } else {
      return k;
    }
  };
  G__14217 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__14217__2.call(this, self__, k);
      case 3:
        return G__14217__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__14217.cljs$core$IFn$_invoke$arity$2 = G__14217__2;
  G__14217.cljs$core$IFn$_invoke$arity$3 = G__14217__3;
  return G__14217;
}();
cljs.core.TransientHashSet.prototype.apply = function(self__, args14216) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args14216)));
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return null;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1, v, null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return v;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core.count(self__.transient_map);
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map, v);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map, o, null);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_(self__.transient_map), null);
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";
cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/TransientHashSet");
};
cljs.core.__GT_TransientHashSet = function __GT_TransientHashSet(transient_map) {
  return new cljs.core.TransientHashSet(transient_map);
};
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 417730831;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentTreeSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__14220 = cljs.core.seq(coll);
  var chunk__14221 = null;
  var count__14222 = 0;
  var i__14223 = 0;
  while (true) {
    if (i__14223 < count__14222) {
      var vec__14224 = chunk__14221.cljs$core$IIndexed$_nth$arity$2(null, i__14223);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14224, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14224, 1, null);
      var G__14225_14230 = v;
      var G__14226_14231 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14225_14230, G__14226_14231) : f.call(null, G__14225_14230, G__14226_14231);
      var G__14232 = seq__14220;
      var G__14233 = chunk__14221;
      var G__14234 = count__14222;
      var G__14235 = i__14223 + 1;
      seq__14220 = G__14232;
      chunk__14221 = G__14233;
      count__14222 = G__14234;
      i__14223 = G__14235;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__14220);
      if (temp__4126__auto__) {
        var seq__14220__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__14220__$1)) {
          var c__4712__auto__ = cljs.core.chunk_first(seq__14220__$1);
          var G__14236 = cljs.core.chunk_rest(seq__14220__$1);
          var G__14237 = c__4712__auto__;
          var G__14238 = cljs.core.count(c__4712__auto__);
          var G__14239 = 0;
          seq__14220 = G__14236;
          chunk__14221 = G__14237;
          count__14222 = G__14238;
          i__14223 = G__14239;
          continue;
        } else {
          var vec__14227 = cljs.core.first(seq__14220__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14227, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14227, 1, null);
          var G__14228_14240 = v;
          var G__14229_14241 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14228_14240, G__14229_14241) : f.call(null, G__14228_14240, G__14229_14241);
          var G__14242 = cljs.core.next(seq__14220__$1);
          var G__14243 = null;
          var G__14244 = 0;
          var G__14245 = 0;
          seq__14220 = G__14242;
          chunk__14221 = G__14243;
          count__14222 = G__14244;
          i__14223 = G__14245;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, v, null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = self__.tree_map.entry_at(v);
  if (!(n == null)) {
    return n.key;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.count(self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.count(self__.tree_map) > 0) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core.rseq(self__.tree_map));
  } else {
    return null;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4346__auto__ = self__.__hash;
  if (!(h__4346__auto__ == null)) {
    return h__4346__auto__;
  } else {
    var h__4346__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4346__auto____$1;
    return h__4346__auto____$1;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_(other) && cljs.core.count(coll__$1) === cljs.core.count(other) && cljs.core.every_QMARK_(function(coll__$1) {
    return function(p1__14218_SHARP_) {
      return cljs.core.contains_QMARK_(coll__$1, p1__14218_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core._empty(self__.tree_map), 0);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map, v), null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys(self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(meta__$1, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map, o, null), null);
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__14246 = null;
  var G__14246__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__14246__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__14246 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__14246__2.call(this, self__, k);
      case 3:
        return G__14246__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__14246.cljs$core$IFn$_invoke$arity$2 = G__14246__2;
  G__14246.cljs$core$IFn$_invoke$arity$3 = G__14246__3;
  return G__14246;
}();
cljs.core.PersistentTreeSet.prototype.apply = function(self__, args14219) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args14219)));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core._sorted_seq(self__.tree_map, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core._sorted_seq_from(self__.tree_map, k, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return entry;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._comparator(self__.tree_map);
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";
cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/PersistentTreeSet");
};
cljs.core.__GT_PersistentTreeSet = function __GT_PersistentTreeSet(meta, tree_map, __hash) {
  return new cljs.core.PersistentTreeSet(meta, tree_map, __hash);
};
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.PersistentTreeMap.EMPTY, cljs.core.empty_unordered_hash);
cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4903__auto__ = this;
  return cljs.core.es6_iterator(this__4903__auto__);
};
cljs.core.set_from_indexed_seq = function set_from_indexed_seq(iseq) {
  var arr = iseq.arr;
  var ret = function() {
    var a__4806__auto__ = arr;
    var i = 0;
    var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < a__4806__auto__.length) {
        var G__14247 = i + 1;
        var G__14248 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null, arr[i]);
        i = G__14247;
        res = G__14248;
        continue;
      } else {
        return res;
      }
      break;
    }
  }();
  return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
};
cljs.core.set = function set(coll) {
  var in$ = cljs.core.seq(coll);
  if (in$ == null) {
    return cljs.core.PersistentHashSet.EMPTY;
  } else {
    if (in$ instanceof cljs.core.IndexedSeq && in$.i === 0) {
      return cljs.core.set_from_indexed_seq(in$);
    } else {
      var in$__$1 = in$;
      var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
      while (true) {
        if (!(in$__$1 == null)) {
          var G__14249 = in$__$1.cljs$core$INext$_next$arity$1(null);
          var G__14250 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null, in$__$1.cljs$core$ISeq$_first$arity$1(null));
          in$__$1 = G__14249;
          out = G__14250;
          continue;
        } else {
          return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
        }
        break;
      }
    }
  }
};
cljs.core.hash_set = function() {
  var hash_set = null;
  var hash_set__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY;
  };
  var hash_set__1 = function() {
    var G__14251__delegate = function(keys) {
      return cljs.core.set(keys);
    };
    var G__14251 = function(var_args) {
      var keys = null;
      if (arguments.length > 0) {
        var G__14252__i = 0, G__14252__a = new Array(arguments.length - 0);
        while (G__14252__i < G__14252__a.length) {
          G__14252__a[G__14252__i] = arguments[G__14252__i + 0];
          ++G__14252__i;
        }
        keys = new cljs.core.IndexedSeq(G__14252__a, 0);
      }
      return G__14251__delegate.call(this, keys);
    };
    G__14251.cljs$lang$maxFixedArity = 0;
    G__14251.cljs$lang$applyTo = function(arglist__14253) {
      var keys = cljs.core.seq(arglist__14253);
      return G__14251__delegate(keys);
    };
    G__14251.cljs$core$IFn$_invoke$arity$variadic = G__14251__delegate;
    return G__14251;
  }();
  hash_set = function(var_args) {
    var keys = var_args;
    switch(arguments.length) {
      case 0:
        return hash_set__0.call(this);
      default:
        var G__14254 = null;
        if (arguments.length > 0) {
          var G__14255__i = 0, G__14255__a = new Array(arguments.length - 0);
          while (G__14255__i < G__14255__a.length) {
            G__14255__a[G__14255__i] = arguments[G__14255__i + 0];
            ++G__14255__i;
          }
          G__14254 = new cljs.core.IndexedSeq(G__14255__a, 0);
        }
        return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__14254);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  hash_set.cljs$lang$maxFixedArity = 0;
  hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
  hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
  hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
  return hash_set;
}();
cljs.core.sorted_set = function() {
  var sorted_set__delegate = function(keys) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys);
  };
  var sorted_set = function(var_args) {
    var keys = null;
    if (arguments.length > 0) {
      var G__14256__i = 0, G__14256__a = new Array(arguments.length - 0);
      while (G__14256__i < G__14256__a.length) {
        G__14256__a[G__14256__i] = arguments[G__14256__i + 0];
        ++G__14256__i;
      }
      keys = new cljs.core.IndexedSeq(G__14256__a, 0);
    }
    return sorted_set__delegate.call(this, keys);
  };
  sorted_set.cljs$lang$maxFixedArity = 0;
  sorted_set.cljs$lang$applyTo = function(arglist__14257) {
    var keys = cljs.core.seq(arglist__14257);
    return sorted_set__delegate(keys);
  };
  sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
  return sorted_set;
}();
cljs.core.sorted_set_by = function() {
  var sorted_set_by__delegate = function(comparator, keys) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by(comparator), 0), keys);
  };
  var sorted_set_by = function(comparator, var_args) {
    var keys = null;
    if (arguments.length > 1) {
      var G__14258__i = 0, G__14258__a = new Array(arguments.length - 1);
      while (G__14258__i < G__14258__a.length) {
        G__14258__a[G__14258__i] = arguments[G__14258__i + 1];
        ++G__14258__i;
      }
      keys = new cljs.core.IndexedSeq(G__14258__a, 0);
    }
    return sorted_set_by__delegate.call(this, comparator, keys);
  };
  sorted_set_by.cljs$lang$maxFixedArity = 1;
  sorted_set_by.cljs$lang$applyTo = function(arglist__14259) {
    var comparator = cljs.core.first(arglist__14259);
    var keys = cljs.core.rest(arglist__14259);
    return sorted_set_by__delegate(comparator, keys);
  };
  sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
  return sorted_set_by;
}();
cljs.core.replace = function() {
  var replace = null;
  var replace__1 = function(smap) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$1(function(p1__14260_SHARP_) {
      var temp__4124__auto__ = cljs.core.find(smap, p1__14260_SHARP_);
      if (cljs.core.truth_(temp__4124__auto__)) {
        var e = temp__4124__auto__;
        return cljs.core.val(e);
      } else {
        return p1__14260_SHARP_;
      }
    });
  };
  var replace__2 = function(smap, coll) {
    if (cljs.core.vector_QMARK_(coll)) {
      var n = cljs.core.count(coll);
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(n) {
        return function(v, i) {
          var temp__4124__auto__ = cljs.core.find(smap, cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v, i));
          if (cljs.core.truth_(temp__4124__auto__)) {
            var e = temp__4124__auto__;
            return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v, i, cljs.core.second(e));
          } else {
            return v;
          }
        };
      }(n), coll, cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.iterate(cljs.core.inc, 0)));
    } else {
      return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(p1__14261_SHARP_) {
        var temp__4124__auto__ = cljs.core.find(smap, p1__14261_SHARP_);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          return cljs.core.second(e);
        } else {
          return p1__14261_SHARP_;
        }
      }, coll);
    }
  };
  replace = function(smap, coll) {
    switch(arguments.length) {
      case 1:
        return replace__1.call(this, smap);
      case 2:
        return replace__2.call(this, smap, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
  replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
  return replace;
}();
cljs.core.distinct = function() {
  var distinct = null;
  var distinct__0 = function() {
    return function(rf) {
      var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
      return function(seen) {
        return function() {
          var G__14282 = null;
          var G__14282__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__14282__1 = function(result) {
            var G__14272 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14272) : rf.call(null, G__14272);
          };
          var G__14282__2 = function(result, input) {
            if (cljs.core.contains_QMARK_(function() {
              var G__14273 = seen;
              return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14273) : cljs.core.deref.call(null, G__14273);
            }(), input)) {
              return result;
            } else {
              seen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null), input));
              var G__14274 = result;
              var G__14275 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14274, G__14275) : rf.call(null, G__14274, G__14275);
            }
          };
          G__14282 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__14282__0.call(this);
              case 1:
                return G__14282__1.call(this, result);
              case 2:
                return G__14282__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__14282.cljs$core$IFn$_invoke$arity$0 = G__14282__0;
          G__14282.cljs$core$IFn$_invoke$arity$1 = G__14282__1;
          G__14282.cljs$core$IFn$_invoke$arity$2 = G__14282__2;
          return G__14282;
        }();
      }(seen);
    };
  };
  var distinct__1 = function(coll) {
    var step = function step(xs, seen) {
      return new cljs.core.LazySeq(null, function() {
        return function(p__14280, seen__$1) {
          while (true) {
            var vec__14281 = p__14280;
            var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14281, 0, null);
            var xs__$1 = vec__14281;
            var temp__4126__auto__ = cljs.core.seq(xs__$1);
            if (temp__4126__auto__) {
              var s = temp__4126__auto__;
              if (cljs.core.contains_QMARK_(seen__$1, f)) {
                var G__14283 = cljs.core.rest(s);
                var G__14284 = seen__$1;
                p__14280 = G__14283;
                seen__$1 = G__14284;
                continue;
              } else {
                return cljs.core.cons(f, step(cljs.core.rest(s), cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1, f)));
              }
            } else {
              return null;
            }
            break;
          }
        }.call(null, xs, seen);
      }, null, null);
    };
    return step(coll, cljs.core.PersistentHashSet.EMPTY);
  };
  distinct = function(coll) {
    switch(arguments.length) {
      case 0:
        return distinct__0.call(this);
      case 1:
        return distinct__1.call(this, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  distinct.cljs$core$IFn$_invoke$arity$0 = distinct__0;
  distinct.cljs$core$IFn$_invoke$arity$1 = distinct__1;
  return distinct;
}();
cljs.core.butlast = function butlast(s) {
  var ret = cljs.core.PersistentVector.EMPTY;
  var s__$1 = s;
  while (true) {
    if (cljs.core.next(s__$1)) {
      var G__14285 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret, cljs.core.first(s__$1));
      var G__14286 = cljs.core.next(s__$1);
      ret = G__14285;
      s__$1 = G__14286;
      continue;
    } else {
      return cljs.core.seq(ret);
    }
    break;
  }
};
cljs.core.name = function name(x) {
  if (function() {
    var G__14288 = x;
    if (G__14288) {
      var bit__4599__auto__ = G__14288.cljs$lang$protocol_mask$partition1$ & 4096;
      if (bit__4599__auto__ || G__14288.cljs$core$INamed$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return x.cljs$core$INamed$_name$arity$1(null);
  } else {
    if (typeof x === "string") {
      return x;
    } else {
      throw new Error([cljs.core.str("Doesn't support name: "), cljs.core.str(x)].join(""));
    }
  }
};
cljs.core.zipmap = function zipmap(keys, vals) {
  var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
  var ks = cljs.core.seq(keys);
  var vs = cljs.core.seq(vals);
  while (true) {
    if (ks && vs) {
      var G__14289 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map, cljs.core.first(ks), cljs.core.first(vs));
      var G__14290 = cljs.core.next(ks);
      var G__14291 = cljs.core.next(vs);
      map = G__14289;
      ks = G__14290;
      vs = G__14291;
      continue;
    } else {
      return cljs.core.persistent_BANG_(map);
    }
    break;
  }
};
cljs.core.max_key = function() {
  var max_key = null;
  var max_key__2 = function(k, x) {
    return x;
  };
  var max_key__3 = function(k, x, y) {
    if (function() {
      var G__14302 = x;
      return k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__14302) : k.call(null, G__14302);
    }() > function() {
      var G__14303 = y;
      return k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__14303) : k.call(null, G__14303);
    }()) {
      return x;
    } else {
      return y;
    }
  };
  var max_key__4 = function() {
    var G__14304__delegate = function(k, x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__14292_SHARP_, p2__14293_SHARP_) {
        return max_key.cljs$core$IFn$_invoke$arity$3(k, p1__14292_SHARP_, p2__14293_SHARP_);
      }, max_key.cljs$core$IFn$_invoke$arity$3(k, x, y), more);
    };
    var G__14304 = function(k, x, y, var_args) {
      var more = null;
      if (arguments.length > 3) {
        var G__14305__i = 0, G__14305__a = new Array(arguments.length - 3);
        while (G__14305__i < G__14305__a.length) {
          G__14305__a[G__14305__i] = arguments[G__14305__i + 3];
          ++G__14305__i;
        }
        more = new cljs.core.IndexedSeq(G__14305__a, 0);
      }
      return G__14304__delegate.call(this, k, x, y, more);
    };
    G__14304.cljs$lang$maxFixedArity = 3;
    G__14304.cljs$lang$applyTo = function(arglist__14306) {
      var k = cljs.core.first(arglist__14306);
      arglist__14306 = cljs.core.next(arglist__14306);
      var x = cljs.core.first(arglist__14306);
      arglist__14306 = cljs.core.next(arglist__14306);
      var y = cljs.core.first(arglist__14306);
      var more = cljs.core.rest(arglist__14306);
      return G__14304__delegate(k, x, y, more);
    };
    G__14304.cljs$core$IFn$_invoke$arity$variadic = G__14304__delegate;
    return G__14304;
  }();
  max_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return max_key__2.call(this, k, x);
      case 3:
        return max_key__3.call(this, k, x, y);
      default:
        var G__14307 = null;
        if (arguments.length > 3) {
          var G__14308__i = 0, G__14308__a = new Array(arguments.length - 3);
          while (G__14308__i < G__14308__a.length) {
            G__14308__a[G__14308__i] = arguments[G__14308__i + 3];
            ++G__14308__i;
          }
          G__14307 = new cljs.core.IndexedSeq(G__14308__a, 0);
        }
        return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, G__14307);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max_key.cljs$lang$maxFixedArity = 3;
  max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
  max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
  max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
  max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return max_key;
}();
cljs.core.min_key = function() {
  var min_key = null;
  var min_key__2 = function(k, x) {
    return x;
  };
  var min_key__3 = function(k, x, y) {
    if (function() {
      var G__14319 = x;
      return k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__14319) : k.call(null, G__14319);
    }() < function() {
      var G__14320 = y;
      return k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__14320) : k.call(null, G__14320);
    }()) {
      return x;
    } else {
      return y;
    }
  };
  var min_key__4 = function() {
    var G__14321__delegate = function(k, x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__14309_SHARP_, p2__14310_SHARP_) {
        return min_key.cljs$core$IFn$_invoke$arity$3(k, p1__14309_SHARP_, p2__14310_SHARP_);
      }, min_key.cljs$core$IFn$_invoke$arity$3(k, x, y), more);
    };
    var G__14321 = function(k, x, y, var_args) {
      var more = null;
      if (arguments.length > 3) {
        var G__14322__i = 0, G__14322__a = new Array(arguments.length - 3);
        while (G__14322__i < G__14322__a.length) {
          G__14322__a[G__14322__i] = arguments[G__14322__i + 3];
          ++G__14322__i;
        }
        more = new cljs.core.IndexedSeq(G__14322__a, 0);
      }
      return G__14321__delegate.call(this, k, x, y, more);
    };
    G__14321.cljs$lang$maxFixedArity = 3;
    G__14321.cljs$lang$applyTo = function(arglist__14323) {
      var k = cljs.core.first(arglist__14323);
      arglist__14323 = cljs.core.next(arglist__14323);
      var x = cljs.core.first(arglist__14323);
      arglist__14323 = cljs.core.next(arglist__14323);
      var y = cljs.core.first(arglist__14323);
      var more = cljs.core.rest(arglist__14323);
      return G__14321__delegate(k, x, y, more);
    };
    G__14321.cljs$core$IFn$_invoke$arity$variadic = G__14321__delegate;
    return G__14321;
  }();
  min_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return min_key__2.call(this, k, x);
      case 3:
        return min_key__3.call(this, k, x, y);
      default:
        var G__14324 = null;
        if (arguments.length > 3) {
          var G__14325__i = 0, G__14325__a = new Array(arguments.length - 3);
          while (G__14325__i < G__14325__a.length) {
            G__14325__a[G__14325__i] = arguments[G__14325__i + 3];
            ++G__14325__i;
          }
          G__14324 = new cljs.core.IndexedSeq(G__14325__a, 0);
        }
        return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, G__14324);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min_key.cljs$lang$maxFixedArity = 3;
  min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
  min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
  min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
  min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return min_key;
}();
cljs.core.ArrayList = function(arr) {
  this.arr = arr;
};
cljs.core.ArrayList.prototype.add = function(x) {
  var self__ = this;
  var _ = this;
  return self__.arr.push(x);
};
cljs.core.ArrayList.prototype.size = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length;
};
cljs.core.ArrayList.prototype.clear = function() {
  var self__ = this;
  var _ = this;
  return self__.arr = [];
};
cljs.core.ArrayList.prototype.isEmpty = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length === 0;
};
cljs.core.ArrayList.prototype.toArray = function() {
  var self__ = this;
  var _ = this;
  return self__.arr;
};
cljs.core.ArrayList.cljs$lang$type = true;
cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";
cljs.core.ArrayList.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/ArrayList");
};
cljs.core.__GT_ArrayList = function __GT_ArrayList(arr) {
  return new cljs.core.ArrayList(arr);
};
cljs.core.array_list = function array_list() {
  return new cljs.core.ArrayList([]);
};
cljs.core.partition_all = function() {
  var partition_all = null;
  var partition_all__1 = function(n) {
    return function(rf) {
      var a = cljs.core.array_list();
      return function(a) {
        return function() {
          var G__14342 = null;
          var G__14342__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__14342__1 = function(result) {
            var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
              var v = cljs.core.vec(a.toArray());
              a.clear();
              return cljs.core.unreduced(function() {
                var G__14337 = result;
                var G__14338 = v;
                return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14337, G__14338) : rf.call(null, G__14337, G__14338);
              }());
            }();
            var G__14339 = result__$1;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14339) : rf.call(null, G__14339);
          };
          var G__14342__2 = function(result, input) {
            a.add(input);
            if (n === a.size()) {
              var v = cljs.core.vec(a.toArray());
              a.clear();
              var G__14340 = result;
              var G__14341 = v;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14340, G__14341) : rf.call(null, G__14340, G__14341);
            } else {
              return result;
            }
          };
          G__14342 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__14342__0.call(this);
              case 1:
                return G__14342__1.call(this, result);
              case 2:
                return G__14342__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__14342.cljs$core$IFn$_invoke$arity$0 = G__14342__0;
          G__14342.cljs$core$IFn$_invoke$arity$1 = G__14342__1;
          G__14342.cljs$core$IFn$_invoke$arity$2 = G__14342__2;
          return G__14342;
        }();
      }(a);
    };
  };
  var partition_all__2 = function(n, coll) {
    return partition_all.cljs$core$IFn$_invoke$arity$3(n, n, coll);
  };
  var partition_all__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s), partition_all.cljs$core$IFn$_invoke$arity$3(n, step, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
      } else {
        return null;
      }
    }, null, null);
  };
  partition_all = function(n, step, coll) {
    switch(arguments.length) {
      case 1:
        return partition_all__1.call(this, n);
      case 2:
        return partition_all__2.call(this, n, step);
      case 3:
        return partition_all__3.call(this, n, step, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
  partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
  partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
  return partition_all;
}();
cljs.core.take_while = function() {
  var take_while = null;
  var take_while__1 = function(pred) {
    return function(rf) {
      return function() {
        var G__14355 = null;
        var G__14355__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__14355__1 = function(result) {
          var G__14350 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14350) : rf.call(null, G__14350);
        };
        var G__14355__2 = function(result, input) {
          if (cljs.core.truth_(function() {
            var G__14351 = input;
            return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__14351) : pred.call(null, G__14351);
          }())) {
            var G__14352 = result;
            var G__14353 = input;
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14352, G__14353) : rf.call(null, G__14352, G__14353);
          } else {
            return cljs.core.reduced(result);
          }
        };
        G__14355 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__14355__0.call(this);
            case 1:
              return G__14355__1.call(this, result);
            case 2:
              return G__14355__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__14355.cljs$core$IFn$_invoke$arity$0 = G__14355__0;
        G__14355.cljs$core$IFn$_invoke$arity$1 = G__14355__1;
        G__14355.cljs$core$IFn$_invoke$arity$2 = G__14355__2;
        return G__14355;
      }();
    };
  };
  var take_while__2 = function(pred, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.truth_(function() {
          var G__14354 = cljs.core.first(s);
          return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__14354) : pred.call(null, G__14354);
        }())) {
          return cljs.core.cons(cljs.core.first(s), take_while.cljs$core$IFn$_invoke$arity$2(pred, cljs.core.rest(s)));
        } else {
          return null;
        }
      } else {
        return null;
      }
    }, null, null);
  };
  take_while = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return take_while__1.call(this, pred);
      case 2:
        return take_while__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
  take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
  return take_while;
}();
cljs.core.mk_bound_fn = function mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp = cljs.core._comparator(sc);
    var G__14360 = function() {
      var G__14362 = cljs.core._entry_key(sc, e);
      var G__14363 = key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__14362, G__14363) : comp.call(null, G__14362, G__14363);
    }();
    var G__14361 = 0;
    return test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__14360, G__14361) : test.call(null, G__14360, G__14361);
  };
};
cljs.core.subseq = function() {
  var subseq = null;
  var subseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn(sc, test, key);
    if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_, cljs.core._GT__EQ_], true).call(null, test))) {
      var temp__4126__auto__ = cljs.core._sorted_seq_from(sc, key, true);
      if (cljs.core.truth_(temp__4126__auto__)) {
        var vec__14367 = temp__4126__auto__;
        var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14367, 0, null);
        var s = vec__14367;
        if (cljs.core.truth_(function() {
          var G__14368 = e;
          return include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__14368) : include.call(null, G__14368);
        }())) {
          return s;
        } else {
          return cljs.core.next(s);
        }
      } else {
        return null;
      }
    } else {
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include, cljs.core._sorted_seq(sc, true));
    }
  };
  var subseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4126__auto__ = cljs.core._sorted_seq_from(sc, start_key, true);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var vec__14369 = temp__4126__auto__;
      var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14369, 0, null);
      var s = vec__14369;
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn(sc, start_test, start_key).call(null, e)) ? s : cljs.core.next(s));
    } else {
      return null;
    }
  };
  subseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return subseq__3.call(this, sc, start_test, start_key);
      case 5:
        return subseq__5.call(this, sc, start_test, start_key, end_test, end_key);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
  subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
  return subseq;
}();
cljs.core.rsubseq = function() {
  var rsubseq = null;
  var rsubseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn(sc, test, key);
    if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_, cljs.core._LT__EQ_], true).call(null, test))) {
      var temp__4126__auto__ = cljs.core._sorted_seq_from(sc, key, false);
      if (cljs.core.truth_(temp__4126__auto__)) {
        var vec__14373 = temp__4126__auto__;
        var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14373, 0, null);
        var s = vec__14373;
        if (cljs.core.truth_(function() {
          var G__14374 = e;
          return include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__14374) : include.call(null, G__14374);
        }())) {
          return s;
        } else {
          return cljs.core.next(s);
        }
      } else {
        return null;
      }
    } else {
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include, cljs.core._sorted_seq(sc, false));
    }
  };
  var rsubseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4126__auto__ = cljs.core._sorted_seq_from(sc, end_key, false);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var vec__14375 = temp__4126__auto__;
      var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14375, 0, null);
      var s = vec__14375;
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn(sc, end_test, end_key).call(null, e)) ? s : cljs.core.next(s));
    } else {
      return null;
    }
  };
  rsubseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return rsubseq__3.call(this, sc, start_test, start_key);
      case 5:
        return rsubseq__5.call(this, sc, start_test, start_key, end_test, end_key);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
  rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
  return rsubseq;
}();
cljs.core.RangeIterator = function(i, end, step) {
  this.i = i;
  this.end = end;
  this.step = step;
};
cljs.core.RangeIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__.step > 0) {
    return self__.i < self__.end;
  } else {
    return self__.i > self__.end;
  }
};
cljs.core.RangeIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.i;
  self__.i = self__.i + self__.step;
  return ret;
};
cljs.core.RangeIterator.cljs$lang$type = true;
cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";
cljs.core.RangeIterator.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/RangeIterator");
};
cljs.core.__GT_RangeIterator = function __GT_RangeIterator(i, end, step) {
  return new cljs.core.RangeIterator(i, end, step);
};
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375006;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Range.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Range.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count(rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count(rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      return not_found;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIterable$ = true;
cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RangeIterator(self__.start, self__.end, self__.step);
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return self__.meta;
};
cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Range(self__.meta, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start + self__.step < self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  } else {
    if (self__.start + self__.step > self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core.not(cljs.core._seq(rng__$1))) {
    return 0;
  } else {
    var G__14376 = (self__.end - self__.start) / self__.step;
    return Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__14376) : Math.ceil.call(null, G__14376);
  }
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  var h__4346__auto__ = self__.__hash;
  if (!(h__4346__auto__ == null)) {
    return h__4346__auto__;
  } else {
    var h__4346__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
    self__.__hash = h__4346__auto____$1;
    return h__4346__auto____$1;
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.equiv_sequential(rng__$1, other);
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1, f);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, init) {
  var self__ = this;
  var rng__$1 = this;
  var i = self__.start;
  var ret = init;
  while (true) {
    if (self__.step > 0 ? i < self__.end : i > self__.end) {
      var ret__$1 = function() {
        var G__14377 = ret;
        var G__14378 = i;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14377, G__14378) : f.call(null, G__14377, G__14378);
      }();
      if (cljs.core.reduced_QMARK_(ret__$1)) {
        var G__14379 = ret__$1;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14379) : cljs.core.deref.call(null, G__14379);
      } else {
        var G__14380 = i + self__.step;
        var G__14381 = ret__$1;
        i = G__14380;
        ret = G__14381;
        continue;
      }
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core._seq(rng__$1) == null) {
    return null;
  } else {
    return self__.start;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (!(cljs.core._seq(rng__$1) == null)) {
    return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start < self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  } else {
    if (self__.start > self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta__$1) {
  var self__ = this;
  var rng__$1 = this;
  return new cljs.core.Range(meta__$1, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.cons(o, rng__$1);
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";
cljs.core.Range.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/Range");
};
cljs.core.__GT_Range = function __GT_Range(meta, start, end, step, __hash) {
  return new cljs.core.Range(meta, start, end, step, __hash);
};
cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4903__auto__ = this;
  return cljs.core.es6_iterator(this__4903__auto__);
};
cljs.core.range = function() {
  var range = null;
  var range__0 = function() {
    return range.cljs$core$IFn$_invoke$arity$3(0, Number.MAX_VALUE, 1);
  };
  var range__1 = function(end) {
    return range.cljs$core$IFn$_invoke$arity$3(0, end, 1);
  };
  var range__2 = function(start, end) {
    return range.cljs$core$IFn$_invoke$arity$3(start, end, 1);
  };
  var range__3 = function(start, end, step) {
    return new cljs.core.Range(null, start, end, step, null);
  };
  range = function(start, end, step) {
    switch(arguments.length) {
      case 0:
        return range__0.call(this);
      case 1:
        return range__1.call(this, start);
      case 2:
        return range__2.call(this, start, end);
      case 3:
        return range__3.call(this, start, end, step);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  range.cljs$core$IFn$_invoke$arity$0 = range__0;
  range.cljs$core$IFn$_invoke$arity$1 = range__1;
  range.cljs$core$IFn$_invoke$arity$2 = range__2;
  range.cljs$core$IFn$_invoke$arity$3 = range__3;
  return range;
}();
cljs.core.take_nth = function() {
  var take_nth = null;
  var take_nth__1 = function(n) {
    return function(rf) {
      var ia = cljs.core.volatile_BANG_(-1);
      return function(ia) {
        return function() {
          var G__14399 = null;
          var G__14399__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__14399__1 = function(result) {
            var G__14396 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14396) : rf.call(null, G__14396);
          };
          var G__14399__2 = function(result, input) {
            var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, ia.cljs$core$IDeref$_deref$arity$1(null) + 1);
            if (cljs.core.rem(i, n) === 0) {
              var G__14397 = result;
              var G__14398 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14397, G__14398) : rf.call(null, G__14397, G__14398);
            } else {
              return result;
            }
          };
          G__14399 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__14399__0.call(this);
              case 1:
                return G__14399__1.call(this, result);
              case 2:
                return G__14399__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__14399.cljs$core$IFn$_invoke$arity$0 = G__14399__0;
          G__14399.cljs$core$IFn$_invoke$arity$1 = G__14399__1;
          G__14399.cljs$core$IFn$_invoke$arity$2 = G__14399__2;
          return G__14399;
        }();
      }(ia);
    };
  };
  var take_nth__2 = function(n, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        return cljs.core.cons(cljs.core.first(s), take_nth.cljs$core$IFn$_invoke$arity$2(n, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, s)));
      } else {
        return null;
      }
    }, null, null);
  };
  take_nth = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return take_nth__1.call(this, n);
      case 2:
        return take_nth__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
  take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
  return take_nth;
}();
cljs.core.split_with = function split_with(pred, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred, coll), cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred, coll)], null);
};
cljs.core.partition_by = function() {
  var partition_by = null;
  var partition_by__1 = function(f) {
    return function(rf) {
      var a = cljs.core.array_list();
      var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
      return function(a, pa) {
        return function() {
          var G__14421 = null;
          var G__14421__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__14421__1 = function(result) {
            var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
              var v = cljs.core.vec(a.toArray());
              a.clear();
              return cljs.core.unreduced(function() {
                var G__14412 = result;
                var G__14413 = v;
                return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14412, G__14413) : rf.call(null, G__14412, G__14413);
              }());
            }();
            var G__14414 = result__$1;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14414) : rf.call(null, G__14414);
          };
          var G__14421__2 = function(result, input) {
            var pval = function() {
              var G__14415 = pa;
              return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14415) : cljs.core.deref.call(null, G__14415);
            }();
            var val = function() {
              var G__14416 = input;
              return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14416) : f.call(null, G__14416);
            }();
            cljs.core.vreset_BANG_(pa, val);
            if (cljs.core.keyword_identical_QMARK_(pval, new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439)) || cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val, pval)) {
              a.add(input);
              return result;
            } else {
              var v = cljs.core.vec(a.toArray());
              a.clear();
              var ret = function() {
                var G__14417 = result;
                var G__14418 = v;
                return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14417, G__14418) : rf.call(null, G__14417, G__14418);
              }();
              if (cljs.core.reduced_QMARK_(ret)) {
              } else {
                a.add(input);
              }
              return ret;
            }
          };
          G__14421 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__14421__0.call(this);
              case 1:
                return G__14421__1.call(this, result);
              case 2:
                return G__14421__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__14421.cljs$core$IFn$_invoke$arity$0 = G__14421__0;
          G__14421.cljs$core$IFn$_invoke$arity$1 = G__14421__1;
          G__14421.cljs$core$IFn$_invoke$arity$2 = G__14421__2;
          return G__14421;
        }();
      }(a, pa);
    };
  };
  var partition_by__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        var fst = cljs.core.first(s);
        var fv = function() {
          var G__14419 = fst;
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14419) : f.call(null, G__14419);
        }();
        var run = cljs.core.cons(fst, cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(function(fst, fv, s, temp__4126__auto__) {
          return function(p1__14400_SHARP_) {
            return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv, function() {
              var G__14420 = p1__14400_SHARP_;
              return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14420) : f.call(null, G__14420);
            }());
          };
        }(fst, fv, s, temp__4126__auto__), cljs.core.next(s)));
        return cljs.core.cons(run, partition_by.cljs$core$IFn$_invoke$arity$2(f, cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run), s))));
      } else {
        return null;
      }
    }, null, null);
  };
  partition_by = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return partition_by__1.call(this, f);
      case 2:
        return partition_by__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
  partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
  return partition_by;
}();
cljs.core.frequencies = function frequencies(coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(counts, x) {
    return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts, x, cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts, x, 0) + 1);
  }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.reductions = function() {
  var reductions = null;
  var reductions__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4124__auto__ = cljs.core.seq(coll);
      if (temp__4124__auto__) {
        var s = temp__4124__auto__;
        return reductions.cljs$core$IFn$_invoke$arity$3(f, cljs.core.first(s), cljs.core.rest(s));
      } else {
        return cljs.core._conj(cljs.core.List.EMPTY, function() {
          return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
        }());
      }
    }, null, null);
  };
  var reductions__3 = function(f, init, coll) {
    return cljs.core.cons(init, new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        return reductions.cljs$core$IFn$_invoke$arity$3(f, function() {
          var G__14430 = init;
          var G__14431 = cljs.core.first(s);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14430, G__14431) : f.call(null, G__14430, G__14431);
        }(), cljs.core.rest(s));
      } else {
        return null;
      }
    }, null, null));
  };
  reductions = function(f, init, coll) {
    switch(arguments.length) {
      case 2:
        return reductions__2.call(this, f, init);
      case 3:
        return reductions__3.call(this, f, init, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
  reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
  return reductions;
}();
cljs.core.juxt = function() {
  var juxt = null;
  var juxt__1 = function(f) {
    return function() {
      var G__14526 = null;
      var G__14526__0 = function() {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
        }()], null);
      };
      var G__14526__1 = function(x) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__14484 = x;
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14484) : f.call(null, G__14484);
        }()], null);
      };
      var G__14526__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__14485 = x;
          var G__14486 = y;
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14485, G__14486) : f.call(null, G__14485, G__14486);
        }()], null);
      };
      var G__14526__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__14487 = x;
          var G__14488 = y;
          var G__14489 = z;
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14487, G__14488, G__14489) : f.call(null, G__14487, G__14488, G__14489);
        }()], null);
      };
      var G__14526__4 = function() {
        var G__14527__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args)], null);
        };
        var G__14527 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__14528__i = 0, G__14528__a = new Array(arguments.length - 3);
            while (G__14528__i < G__14528__a.length) {
              G__14528__a[G__14528__i] = arguments[G__14528__i + 3];
              ++G__14528__i;
            }
            args = new cljs.core.IndexedSeq(G__14528__a, 0);
          }
          return G__14527__delegate.call(this, x, y, z, args);
        };
        G__14527.cljs$lang$maxFixedArity = 3;
        G__14527.cljs$lang$applyTo = function(arglist__14529) {
          var x = cljs.core.first(arglist__14529);
          arglist__14529 = cljs.core.next(arglist__14529);
          var y = cljs.core.first(arglist__14529);
          arglist__14529 = cljs.core.next(arglist__14529);
          var z = cljs.core.first(arglist__14529);
          var args = cljs.core.rest(arglist__14529);
          return G__14527__delegate(x, y, z, args);
        };
        G__14527.cljs$core$IFn$_invoke$arity$variadic = G__14527__delegate;
        return G__14527;
      }();
      G__14526 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__14526__0.call(this);
          case 1:
            return G__14526__1.call(this, x);
          case 2:
            return G__14526__2.call(this, x, y);
          case 3:
            return G__14526__3.call(this, x, y, z);
          default:
            var G__14530 = null;
            if (arguments.length > 3) {
              var G__14531__i = 0, G__14531__a = new Array(arguments.length - 3);
              while (G__14531__i < G__14531__a.length) {
                G__14531__a[G__14531__i] = arguments[G__14531__i + 3];
                ++G__14531__i;
              }
              G__14530 = new cljs.core.IndexedSeq(G__14531__a, 0);
            }
            return G__14526__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__14530);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__14526.cljs$lang$maxFixedArity = 3;
      G__14526.cljs$lang$applyTo = G__14526__4.cljs$lang$applyTo;
      G__14526.cljs$core$IFn$_invoke$arity$0 = G__14526__0;
      G__14526.cljs$core$IFn$_invoke$arity$1 = G__14526__1;
      G__14526.cljs$core$IFn$_invoke$arity$2 = G__14526__2;
      G__14526.cljs$core$IFn$_invoke$arity$3 = G__14526__3;
      G__14526.cljs$core$IFn$_invoke$arity$variadic = G__14526__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__14526;
    }();
  };
  var juxt__2 = function(f, g) {
    return function() {
      var G__14532 = null;
      var G__14532__0 = function() {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
        }(), function() {
          return g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null);
        }()], null);
      };
      var G__14532__1 = function(x) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__14490 = x;
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14490) : f.call(null, G__14490);
        }(), function() {
          var G__14491 = x;
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__14491) : g.call(null, G__14491);
        }()], null);
      };
      var G__14532__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__14492 = x;
          var G__14493 = y;
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14492, G__14493) : f.call(null, G__14492, G__14493);
        }(), function() {
          var G__14494 = x;
          var G__14495 = y;
          return g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__14494, G__14495) : g.call(null, G__14494, G__14495);
        }()], null);
      };
      var G__14532__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__14496 = x;
          var G__14497 = y;
          var G__14498 = z;
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14496, G__14497, G__14498) : f.call(null, G__14496, G__14497, G__14498);
        }(), function() {
          var G__14499 = x;
          var G__14500 = y;
          var G__14501 = z;
          return g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__14499, G__14500, G__14501) : g.call(null, G__14499, G__14500, G__14501);
        }()], null);
      };
      var G__14532__4 = function() {
        var G__14533__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args)], null);
        };
        var G__14533 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__14534__i = 0, G__14534__a = new Array(arguments.length - 3);
            while (G__14534__i < G__14534__a.length) {
              G__14534__a[G__14534__i] = arguments[G__14534__i + 3];
              ++G__14534__i;
            }
            args = new cljs.core.IndexedSeq(G__14534__a, 0);
          }
          return G__14533__delegate.call(this, x, y, z, args);
        };
        G__14533.cljs$lang$maxFixedArity = 3;
        G__14533.cljs$lang$applyTo = function(arglist__14535) {
          var x = cljs.core.first(arglist__14535);
          arglist__14535 = cljs.core.next(arglist__14535);
          var y = cljs.core.first(arglist__14535);
          arglist__14535 = cljs.core.next(arglist__14535);
          var z = cljs.core.first(arglist__14535);
          var args = cljs.core.rest(arglist__14535);
          return G__14533__delegate(x, y, z, args);
        };
        G__14533.cljs$core$IFn$_invoke$arity$variadic = G__14533__delegate;
        return G__14533;
      }();
      G__14532 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__14532__0.call(this);
          case 1:
            return G__14532__1.call(this, x);
          case 2:
            return G__14532__2.call(this, x, y);
          case 3:
            return G__14532__3.call(this, x, y, z);
          default:
            var G__14536 = null;
            if (arguments.length > 3) {
              var G__14537__i = 0, G__14537__a = new Array(arguments.length - 3);
              while (G__14537__i < G__14537__a.length) {
                G__14537__a[G__14537__i] = arguments[G__14537__i + 3];
                ++G__14537__i;
              }
              G__14536 = new cljs.core.IndexedSeq(G__14537__a, 0);
            }
            return G__14532__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__14536);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__14532.cljs$lang$maxFixedArity = 3;
      G__14532.cljs$lang$applyTo = G__14532__4.cljs$lang$applyTo;
      G__14532.cljs$core$IFn$_invoke$arity$0 = G__14532__0;
      G__14532.cljs$core$IFn$_invoke$arity$1 = G__14532__1;
      G__14532.cljs$core$IFn$_invoke$arity$2 = G__14532__2;
      G__14532.cljs$core$IFn$_invoke$arity$3 = G__14532__3;
      G__14532.cljs$core$IFn$_invoke$arity$variadic = G__14532__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__14532;
    }();
  };
  var juxt__3 = function(f, g, h) {
    return function() {
      var G__14538 = null;
      var G__14538__0 = function() {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
        }(), function() {
          return g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null);
        }(), function() {
          return h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null);
        }()], null);
      };
      var G__14538__1 = function(x) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__14502 = x;
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14502) : f.call(null, G__14502);
        }(), function() {
          var G__14503 = x;
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__14503) : g.call(null, G__14503);
        }(), function() {
          var G__14504 = x;
          return h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__14504) : h.call(null, G__14504);
        }()], null);
      };
      var G__14538__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__14505 = x;
          var G__14506 = y;
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14505, G__14506) : f.call(null, G__14505, G__14506);
        }(), function() {
          var G__14507 = x;
          var G__14508 = y;
          return g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__14507, G__14508) : g.call(null, G__14507, G__14508);
        }(), function() {
          var G__14509 = x;
          var G__14510 = y;
          return h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__14509, G__14510) : h.call(null, G__14509, G__14510);
        }()], null);
      };
      var G__14538__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__14511 = x;
          var G__14512 = y;
          var G__14513 = z;
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14511, G__14512, G__14513) : f.call(null, G__14511, G__14512, G__14513);
        }(), function() {
          var G__14514 = x;
          var G__14515 = y;
          var G__14516 = z;
          return g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__14514, G__14515, G__14516) : g.call(null, G__14514, G__14515, G__14516);
        }(), function() {
          var G__14517 = x;
          var G__14518 = y;
          var G__14519 = z;
          return h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__14517, G__14518, G__14519) : h.call(null, G__14517, G__14518, G__14519);
        }()], null);
      };
      var G__14538__4 = function() {
        var G__14539__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h, x, y, z, args)], null);
        };
        var G__14539 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__14540__i = 0, G__14540__a = new Array(arguments.length - 3);
            while (G__14540__i < G__14540__a.length) {
              G__14540__a[G__14540__i] = arguments[G__14540__i + 3];
              ++G__14540__i;
            }
            args = new cljs.core.IndexedSeq(G__14540__a, 0);
          }
          return G__14539__delegate.call(this, x, y, z, args);
        };
        G__14539.cljs$lang$maxFixedArity = 3;
        G__14539.cljs$lang$applyTo = function(arglist__14541) {
          var x = cljs.core.first(arglist__14541);
          arglist__14541 = cljs.core.next(arglist__14541);
          var y = cljs.core.first(arglist__14541);
          arglist__14541 = cljs.core.next(arglist__14541);
          var z = cljs.core.first(arglist__14541);
          var args = cljs.core.rest(arglist__14541);
          return G__14539__delegate(x, y, z, args);
        };
        G__14539.cljs$core$IFn$_invoke$arity$variadic = G__14539__delegate;
        return G__14539;
      }();
      G__14538 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__14538__0.call(this);
          case 1:
            return G__14538__1.call(this, x);
          case 2:
            return G__14538__2.call(this, x, y);
          case 3:
            return G__14538__3.call(this, x, y, z);
          default:
            var G__14542 = null;
            if (arguments.length > 3) {
              var G__14543__i = 0, G__14543__a = new Array(arguments.length - 3);
              while (G__14543__i < G__14543__a.length) {
                G__14543__a[G__14543__i] = arguments[G__14543__i + 3];
                ++G__14543__i;
              }
              G__14542 = new cljs.core.IndexedSeq(G__14543__a, 0);
            }
            return G__14538__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__14542);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__14538.cljs$lang$maxFixedArity = 3;
      G__14538.cljs$lang$applyTo = G__14538__4.cljs$lang$applyTo;
      G__14538.cljs$core$IFn$_invoke$arity$0 = G__14538__0;
      G__14538.cljs$core$IFn$_invoke$arity$1 = G__14538__1;
      G__14538.cljs$core$IFn$_invoke$arity$2 = G__14538__2;
      G__14538.cljs$core$IFn$_invoke$arity$3 = G__14538__3;
      G__14538.cljs$core$IFn$_invoke$arity$variadic = G__14538__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__14538;
    }();
  };
  var juxt__4 = function() {
    var G__14544__delegate = function(f, g, h, fs) {
      var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f, g, h, fs);
      return function(fs__$1) {
        return function() {
          var G__14545 = null;
          var G__14545__0 = function() {
            return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
              return function(p1__14432_SHARP_, p2__14433_SHARP_) {
                return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__14432_SHARP_, function() {
                  return p2__14433_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__14433_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__14433_SHARP_.call(null);
                }());
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__14545__1 = function(x) {
            return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
              return function(p1__14434_SHARP_, p2__14435_SHARP_) {
                return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__14434_SHARP_, function() {
                  var G__14520 = x;
                  return p2__14435_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__14435_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14520) : p2__14435_SHARP_.call(null, G__14520);
                }());
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__14545__2 = function(x, y) {
            return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
              return function(p1__14436_SHARP_, p2__14437_SHARP_) {
                return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__14436_SHARP_, function() {
                  var G__14521 = x;
                  var G__14522 = y;
                  return p2__14437_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__14437_SHARP_.cljs$core$IFn$_invoke$arity$2(G__14521, G__14522) : p2__14437_SHARP_.call(null, G__14521, G__14522);
                }());
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__14545__3 = function(x, y, z) {
            return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
              return function(p1__14438_SHARP_, p2__14439_SHARP_) {
                return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__14438_SHARP_, function() {
                  var G__14523 = x;
                  var G__14524 = y;
                  var G__14525 = z;
                  return p2__14439_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__14439_SHARP_.cljs$core$IFn$_invoke$arity$3(G__14523, G__14524, G__14525) : p2__14439_SHARP_.call(null, G__14523, G__14524, G__14525);
                }());
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__14545__4 = function() {
            var G__14546__delegate = function(x, y, z, args) {
              return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
                return function(p1__14440_SHARP_, p2__14441_SHARP_) {
                  return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__14440_SHARP_, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__14441_SHARP_, x, y, z, args));
                };
              }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
            };
            var G__14546 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                var G__14547__i = 0, G__14547__a = new Array(arguments.length - 3);
                while (G__14547__i < G__14547__a.length) {
                  G__14547__a[G__14547__i] = arguments[G__14547__i + 3];
                  ++G__14547__i;
                }
                args = new cljs.core.IndexedSeq(G__14547__a, 0);
              }
              return G__14546__delegate.call(this, x, y, z, args);
            };
            G__14546.cljs$lang$maxFixedArity = 3;
            G__14546.cljs$lang$applyTo = function(arglist__14548) {
              var x = cljs.core.first(arglist__14548);
              arglist__14548 = cljs.core.next(arglist__14548);
              var y = cljs.core.first(arglist__14548);
              arglist__14548 = cljs.core.next(arglist__14548);
              var z = cljs.core.first(arglist__14548);
              var args = cljs.core.rest(arglist__14548);
              return G__14546__delegate(x, y, z, args);
            };
            G__14546.cljs$core$IFn$_invoke$arity$variadic = G__14546__delegate;
            return G__14546;
          }();
          G__14545 = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return G__14545__0.call(this);
              case 1:
                return G__14545__1.call(this, x);
              case 2:
                return G__14545__2.call(this, x, y);
              case 3:
                return G__14545__3.call(this, x, y, z);
              default:
                var G__14549 = null;
                if (arguments.length > 3) {
                  var G__14550__i = 0, G__14550__a = new Array(arguments.length - 3);
                  while (G__14550__i < G__14550__a.length) {
                    G__14550__a[G__14550__i] = arguments[G__14550__i + 3];
                    ++G__14550__i;
                  }
                  G__14549 = new cljs.core.IndexedSeq(G__14550__a, 0);
                }
                return G__14545__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__14549);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__14545.cljs$lang$maxFixedArity = 3;
          G__14545.cljs$lang$applyTo = G__14545__4.cljs$lang$applyTo;
          G__14545.cljs$core$IFn$_invoke$arity$0 = G__14545__0;
          G__14545.cljs$core$IFn$_invoke$arity$1 = G__14545__1;
          G__14545.cljs$core$IFn$_invoke$arity$2 = G__14545__2;
          G__14545.cljs$core$IFn$_invoke$arity$3 = G__14545__3;
          G__14545.cljs$core$IFn$_invoke$arity$variadic = G__14545__4.cljs$core$IFn$_invoke$arity$variadic;
          return G__14545;
        }();
      }(fs__$1);
    };
    var G__14544 = function(f, g, h, var_args) {
      var fs = null;
      if (arguments.length > 3) {
        var G__14551__i = 0, G__14551__a = new Array(arguments.length - 3);
        while (G__14551__i < G__14551__a.length) {
          G__14551__a[G__14551__i] = arguments[G__14551__i + 3];
          ++G__14551__i;
        }
        fs = new cljs.core.IndexedSeq(G__14551__a, 0);
      }
      return G__14544__delegate.call(this, f, g, h, fs);
    };
    G__14544.cljs$lang$maxFixedArity = 3;
    G__14544.cljs$lang$applyTo = function(arglist__14552) {
      var f = cljs.core.first(arglist__14552);
      arglist__14552 = cljs.core.next(arglist__14552);
      var g = cljs.core.first(arglist__14552);
      arglist__14552 = cljs.core.next(arglist__14552);
      var h = cljs.core.first(arglist__14552);
      var fs = cljs.core.rest(arglist__14552);
      return G__14544__delegate(f, g, h, fs);
    };
    G__14544.cljs$core$IFn$_invoke$arity$variadic = G__14544__delegate;
    return G__14544;
  }();
  juxt = function(f, g, h, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 1:
        return juxt__1.call(this, f);
      case 2:
        return juxt__2.call(this, f, g);
      case 3:
        return juxt__3.call(this, f, g, h);
      default:
        var G__14553 = null;
        if (arguments.length > 3) {
          var G__14554__i = 0, G__14554__a = new Array(arguments.length - 3);
          while (G__14554__i < G__14554__a.length) {
            G__14554__a[G__14554__i] = arguments[G__14554__i + 3];
            ++G__14554__i;
          }
          G__14553 = new cljs.core.IndexedSeq(G__14554__a, 0);
        }
        return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f, g, h, G__14553);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  juxt.cljs$lang$maxFixedArity = 3;
  juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
  juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
  juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
  juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
  juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
  return juxt;
}();
cljs.core.dorun = function() {
  var dorun = null;
  var dorun__1 = function(coll) {
    while (true) {
      if (cljs.core.seq(coll)) {
        var G__14555 = cljs.core.next(coll);
        coll = G__14555;
        continue;
      } else {
        return null;
      }
      break;
    }
  };
  var dorun__2 = function(n, coll) {
    while (true) {
      if (cljs.core.seq(coll) && n > 0) {
        var G__14556 = n - 1;
        var G__14557 = cljs.core.next(coll);
        n = G__14556;
        coll = G__14557;
        continue;
      } else {
        return null;
      }
      break;
    }
  };
  dorun = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return dorun__1.call(this, n);
      case 2:
        return dorun__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
  dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
  return dorun;
}();
cljs.core.doall = function() {
  var doall = null;
  var doall__1 = function(coll) {
    cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);
    return coll;
  };
  var doall__2 = function(n, coll) {
    cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n, coll);
    return coll;
  };
  doall = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return doall__1.call(this, n);
      case 2:
        return doall__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
  doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
  return doall;
}();
cljs.core.regexp_QMARK_ = function regexp_QMARK_(o) {
  return o instanceof RegExp;
};
cljs.core.re_matches = function re_matches(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches), s)) {
      if (cljs.core.count(matches) === 1) {
        return cljs.core.first(matches);
      } else {
        return cljs.core.vec(matches);
      }
    } else {
      return null;
    }
  } else {
    throw new TypeError("re-matches must match against a string.");
  }
};
cljs.core.re_find = function re_find(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (matches == null) {
      return null;
    } else {
      if (cljs.core.count(matches) === 1) {
        return cljs.core.first(matches);
      } else {
        return cljs.core.vec(matches);
      }
    }
  } else {
    throw new TypeError("re-find must match against a string.");
  }
};
cljs.core.re_seq = function re_seq(re, s) {
  var match_data = cljs.core.re_find(re, s);
  var match_idx = s.search(re);
  var match_str = cljs.core.coll_QMARK_(match_data) ? cljs.core.first(match_data) : match_data;
  var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s, match_idx + cljs.core.count(match_str));
  if (cljs.core.truth_(match_data)) {
    return new cljs.core.LazySeq(null, function(match_data, match_idx, match_str, post_match) {
      return function() {
        return cljs.core.cons(match_data, cljs.core.seq(post_match) ? re_seq(re, post_match) : null);
      };
    }(match_data, match_idx, match_str, post_match), null, null);
  } else {
    return null;
  }
};
cljs.core.re_pattern = function re_pattern(s) {
  if (s instanceof RegExp) {
    return s;
  } else {
    var vec__14561 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/, s);
    var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14561, 0, null);
    var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14561, 1, null);
    var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14561, 2, null);
    return new RegExp(pattern, flags);
  }
};
cljs.core.pr_sequential_writer = function pr_sequential_writer(writer, print_one, begin, sep, end, opts, coll) {
  var _STAR_print_level_STAR_14569 = cljs.core._STAR_print_level_STAR_;
  cljs.core._STAR_print_level_STAR_ = cljs.core._STAR_print_level_STAR_ == null ? null : cljs.core._STAR_print_level_STAR_ - 1;
  try {
    if (!(cljs.core._STAR_print_level_STAR_ == null) && cljs.core._STAR_print_level_STAR_ < 0) {
      return cljs.core._write(writer, "#");
    } else {
      cljs.core._write(writer, begin);
      if ((new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(opts) === 0) {
        if (cljs.core.seq(coll)) {
          cljs.core._write(writer, function() {
            var or__3925__auto__ = (new cljs.core.Keyword(null, "more-marker", "more-marker", -14717935)).cljs$core$IFn$_invoke$arity$1(opts);
            if (cljs.core.truth_(or__3925__auto__)) {
              return or__3925__auto__;
            } else {
              return "...";
            }
          }());
        } else {
        }
      } else {
        if (cljs.core.seq(coll)) {
          var G__14570_14576 = cljs.core.first(coll);
          var G__14571_14577 = writer;
          var G__14572_14578 = opts;
          print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__14570_14576, G__14571_14577, G__14572_14578) : print_one.call(null, G__14570_14576, G__14571_14577, G__14572_14578);
        } else {
        }
        var coll_14579__$1 = cljs.core.next(coll);
        var n_14580 = (new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(opts) - 1;
        while (true) {
          if (coll_14579__$1 && (n_14580 == null || !(n_14580 === 0))) {
            cljs.core._write(writer, sep);
            var G__14573_14581 = cljs.core.first(coll_14579__$1);
            var G__14574_14582 = writer;
            var G__14575_14583 = opts;
            print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__14573_14581, G__14574_14582, G__14575_14583) : print_one.call(null, G__14573_14581, G__14574_14582, G__14575_14583);
            var G__14584 = cljs.core.next(coll_14579__$1);
            var G__14585 = n_14580 - 1;
            coll_14579__$1 = G__14584;
            n_14580 = G__14585;
            continue;
          } else {
            if (cljs.core.seq(coll_14579__$1) && n_14580 === 0) {
              cljs.core._write(writer, sep);
              cljs.core._write(writer, function() {
                var or__3925__auto__ = (new cljs.core.Keyword(null, "more-marker", "more-marker", -14717935)).cljs$core$IFn$_invoke$arity$1(opts);
                if (cljs.core.truth_(or__3925__auto__)) {
                  return or__3925__auto__;
                } else {
                  return "...";
                }
              }());
            } else {
            }
          }
          break;
        }
      }
      return cljs.core._write(writer, end);
    }
  } finally {
    cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_14569;
  }
};
cljs.core.write_all = function() {
  var write_all__delegate = function(writer, ss) {
    var seq__14590 = cljs.core.seq(ss);
    var chunk__14591 = null;
    var count__14592 = 0;
    var i__14593 = 0;
    while (true) {
      if (i__14593 < count__14592) {
        var s = chunk__14591.cljs$core$IIndexed$_nth$arity$2(null, i__14593);
        cljs.core._write(writer, s);
        var G__14594 = seq__14590;
        var G__14595 = chunk__14591;
        var G__14596 = count__14592;
        var G__14597 = i__14593 + 1;
        seq__14590 = G__14594;
        chunk__14591 = G__14595;
        count__14592 = G__14596;
        i__14593 = G__14597;
        continue;
      } else {
        var temp__4126__auto__ = cljs.core.seq(seq__14590);
        if (temp__4126__auto__) {
          var seq__14590__$1 = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_(seq__14590__$1)) {
            var c__4712__auto__ = cljs.core.chunk_first(seq__14590__$1);
            var G__14598 = cljs.core.chunk_rest(seq__14590__$1);
            var G__14599 = c__4712__auto__;
            var G__14600 = cljs.core.count(c__4712__auto__);
            var G__14601 = 0;
            seq__14590 = G__14598;
            chunk__14591 = G__14599;
            count__14592 = G__14600;
            i__14593 = G__14601;
            continue;
          } else {
            var s = cljs.core.first(seq__14590__$1);
            cljs.core._write(writer, s);
            var G__14602 = cljs.core.next(seq__14590__$1);
            var G__14603 = null;
            var G__14604 = 0;
            var G__14605 = 0;
            seq__14590 = G__14602;
            chunk__14591 = G__14603;
            count__14592 = G__14604;
            i__14593 = G__14605;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  };
  var write_all = function(writer, var_args) {
    var ss = null;
    if (arguments.length > 1) {
      var G__14606__i = 0, G__14606__a = new Array(arguments.length - 1);
      while (G__14606__i < G__14606__a.length) {
        G__14606__a[G__14606__i] = arguments[G__14606__i + 1];
        ++G__14606__i;
      }
      ss = new cljs.core.IndexedSeq(G__14606__a, 0);
    }
    return write_all__delegate.call(this, writer, ss);
  };
  write_all.cljs$lang$maxFixedArity = 1;
  write_all.cljs$lang$applyTo = function(arglist__14607) {
    var writer = cljs.core.first(arglist__14607);
    var ss = cljs.core.rest(arglist__14607);
    return write_all__delegate(writer, ss);
  };
  write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
  return write_all;
}();
cljs.core.string_print = function string_print(x) {
  cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null;
};
cljs.core.flush = function flush() {
  return null;
};
cljs.core.char_escapes = function() {
  var obj14609 = {'"':'\\"', "\\":"\\\\", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t"};
  return obj14609;
}();
cljs.core.quote_string = function quote_string(s) {
  return[cljs.core.str('"'), cljs.core.str(s.replace(function() {
    var G__14612 = '[\\\\"\b\f\n\r\t]';
    var G__14613 = "g";
    return RegExp(G__14612, G__14613);
  }(), function(match) {
    return cljs.core.char_escapes[match];
  })), cljs.core.str('"')].join("");
};
cljs.core.pr_writer_impl = function pr_writer_impl(obj, writer, opts) {
  if (obj == null) {
    return cljs.core._write(writer, "nil");
  } else {
    if (void 0 === obj) {
      return cljs.core._write(writer, "#\x3cundefined\x3e");
    } else {
      if (cljs.core.truth_(function() {
        var and__3913__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts, new cljs.core.Keyword(null, "meta", "meta", 1499536964));
        if (cljs.core.truth_(and__3913__auto__)) {
          var and__3913__auto____$1 = function() {
            var G__14627 = obj;
            if (G__14627) {
              var bit__4606__auto__ = G__14627.cljs$lang$protocol_mask$partition0$ & 131072;
              if (bit__4606__auto__ || G__14627.cljs$core$IMeta$) {
                return true;
              } else {
                if (!G__14627.cljs$lang$protocol_mask$partition0$) {
                  return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, G__14627);
                } else {
                  return false;
                }
              }
            } else {
              return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, G__14627);
            }
          }();
          if (and__3913__auto____$1) {
            return cljs.core.meta(obj);
          } else {
            return and__3913__auto____$1;
          }
        } else {
          return and__3913__auto__;
        }
      }())) {
        cljs.core._write(writer, "^");
        var G__14628_14638 = cljs.core.meta(obj);
        var G__14629_14639 = writer;
        var G__14630_14640 = opts;
        cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3 ? cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3(G__14628_14638, G__14629_14639, G__14630_14640) : cljs.core.pr_writer.call(null, G__14628_14638, G__14629_14639, G__14630_14640);
        cljs.core._write(writer, " ");
      } else {
      }
      if (obj == null) {
        return cljs.core._write(writer, "nil");
      } else {
        if (obj.cljs$lang$type) {
          return obj.cljs$lang$ctorPrWriter(obj, writer, opts);
        } else {
          if (function() {
            var G__14631 = obj;
            if (G__14631) {
              var bit__4599__auto__ = G__14631.cljs$lang$protocol_mask$partition0$ & 2147483648;
              if (bit__4599__auto__ || G__14631.cljs$core$IPrintWithWriter$) {
                return true;
              } else {
                return false;
              }
            } else {
              return false;
            }
          }()) {
            return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null, writer, opts);
          } else {
            if (cljs.core.type(obj) === Boolean || typeof obj === "number") {
              return cljs.core._write(writer, [cljs.core.str(obj)].join(""));
            } else {
              if (cljs.core.object_QMARK_(obj)) {
                cljs.core._write(writer, "#js ");
                var G__14632 = cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(k) {
                  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k), obj[k]], null);
                }, cljs.core.js_keys(obj));
                var G__14633 = cljs.core.pr_writer;
                var G__14634 = writer;
                var G__14635 = opts;
                return cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__14632, G__14633, G__14634, G__14635) : cljs.core.print_map.call(null, G__14632, G__14633, G__14634, G__14635);
              } else {
                if (obj instanceof Array) {
                  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#js [", " ", "]", opts, obj);
                } else {
                  if (cljs.core.truth_(function() {
                    var G__14636 = obj;
                    return goog.isString(G__14636);
                  }())) {
                    if (cljs.core.truth_((new cljs.core.Keyword(null, "readably", "readably", 1129599760)).cljs$core$IFn$_invoke$arity$1(opts))) {
                      return cljs.core._write(writer, cljs.core.quote_string(obj));
                    } else {
                      return cljs.core._write(writer, obj);
                    }
                  } else {
                    if (cljs.core.fn_QMARK_(obj)) {
                      return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(["#\x3c", [cljs.core.str(obj)].join(""), "\x3e"], 0));
                    } else {
                      if (obj instanceof Date) {
                        var normalize = function(n, len) {
                          var ns = [cljs.core.str(n)].join("");
                          while (true) {
                            if (cljs.core.count(ns) < len) {
                              var G__14641 = [cljs.core.str("0"), cljs.core.str(ns)].join("");
                              ns = G__14641;
                              continue;
                            } else {
                              return ns;
                            }
                            break;
                          }
                        };
                        return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(['#inst "', [cljs.core.str(obj.getUTCFullYear())].join(""), "-", normalize(obj.getUTCMonth() + 1, 2), "-", normalize(obj.getUTCDate(), 2), "T", normalize(obj.getUTCHours(), 2), ":", normalize(obj.getUTCMinutes(), 2), ":", normalize(obj.getUTCSeconds(), 2), ".", normalize(obj.getUTCMilliseconds(), 3), "-", '00:00"'], 0));
                      } else {
                        if (cljs.core.regexp_QMARK_(obj)) {
                          return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(['#"', obj.source, '"'], 0));
                        } else {
                          if (function() {
                            var G__14637 = obj;
                            if (G__14637) {
                              var bit__4606__auto__ = G__14637.cljs$lang$protocol_mask$partition0$ & 2147483648;
                              if (bit__4606__auto__ || G__14637.cljs$core$IPrintWithWriter$) {
                                return true;
                              } else {
                                if (!G__14637.cljs$lang$protocol_mask$partition0$) {
                                  return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter, G__14637);
                                } else {
                                  return false;
                                }
                              }
                            } else {
                              return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter, G__14637);
                            }
                          }()) {
                            return cljs.core._pr_writer(obj, writer, opts);
                          } else {
                            return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(["#\x3c", [cljs.core.str(obj)].join(""), "\x3e"], 0));
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.pr_writer = function pr_writer(obj, writer, opts) {
  var temp__4124__auto__ = (new cljs.core.Keyword(null, "alt-impl", "alt-impl", 670969595)).cljs$core$IFn$_invoke$arity$1(opts);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var alt_impl = temp__4124__auto__;
    var G__14645 = obj;
    var G__14646 = writer;
    var G__14647 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts, new cljs.core.Keyword(null, "fallback-impl", "fallback-impl", -1501286995), cljs.core.pr_writer_impl);
    return alt_impl.cljs$core$IFn$_invoke$arity$3 ? alt_impl.cljs$core$IFn$_invoke$arity$3(G__14645, G__14646, G__14647) : alt_impl.call(null, G__14645, G__14646, G__14647);
  } else {
    return cljs.core.pr_writer_impl(obj, writer, opts);
  }
};
cljs.core.pr_seq_writer = function pr_seq_writer(objs, writer, opts) {
  cljs.core.pr_writer(cljs.core.first(objs), writer, opts);
  var seq__14652 = cljs.core.seq(cljs.core.next(objs));
  var chunk__14653 = null;
  var count__14654 = 0;
  var i__14655 = 0;
  while (true) {
    if (i__14655 < count__14654) {
      var obj = chunk__14653.cljs$core$IIndexed$_nth$arity$2(null, i__14655);
      cljs.core._write(writer, " ");
      cljs.core.pr_writer(obj, writer, opts);
      var G__14656 = seq__14652;
      var G__14657 = chunk__14653;
      var G__14658 = count__14654;
      var G__14659 = i__14655 + 1;
      seq__14652 = G__14656;
      chunk__14653 = G__14657;
      count__14654 = G__14658;
      i__14655 = G__14659;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__14652);
      if (temp__4126__auto__) {
        var seq__14652__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__14652__$1)) {
          var c__4712__auto__ = cljs.core.chunk_first(seq__14652__$1);
          var G__14660 = cljs.core.chunk_rest(seq__14652__$1);
          var G__14661 = c__4712__auto__;
          var G__14662 = cljs.core.count(c__4712__auto__);
          var G__14663 = 0;
          seq__14652 = G__14660;
          chunk__14653 = G__14661;
          count__14654 = G__14662;
          i__14655 = G__14663;
          continue;
        } else {
          var obj = cljs.core.first(seq__14652__$1);
          cljs.core._write(writer, " ");
          cljs.core.pr_writer(obj, writer, opts);
          var G__14664 = cljs.core.next(seq__14652__$1);
          var G__14665 = null;
          var G__14666 = 0;
          var G__14667 = 0;
          seq__14652 = G__14664;
          chunk__14653 = G__14665;
          count__14654 = G__14666;
          i__14655 = G__14667;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.pr_sb_with_opts = function pr_sb_with_opts(objs, opts) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core.pr_seq_writer(objs, writer, opts);
  writer.cljs$core$IWriter$_flush$arity$1(null);
  return sb;
};
cljs.core.pr_str_with_opts = function pr_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_(objs)) {
    return "";
  } else {
    return[cljs.core.str(cljs.core.pr_sb_with_opts(objs, opts))].join("");
  }
};
cljs.core.prn_str_with_opts = function prn_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_(objs)) {
    return "\n";
  } else {
    var sb = cljs.core.pr_sb_with_opts(objs, opts);
    sb.append("\n");
    return[cljs.core.str(sb)].join("");
  }
};
cljs.core.pr_with_opts = function pr_with_opts(objs, opts) {
  return cljs.core.string_print(cljs.core.pr_str_with_opts(objs, opts));
};
cljs.core.newline = function newline(opts) {
  cljs.core.string_print("\n");
  if (cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts, new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939)))) {
    return cljs.core.flush();
  } else {
    return null;
  }
};
cljs.core.pr_str = function() {
  var pr_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts(objs, cljs.core.pr_opts());
  };
  var pr_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__14668__i = 0, G__14668__a = new Array(arguments.length - 0);
      while (G__14668__i < G__14668__a.length) {
        G__14668__a[G__14668__i] = arguments[G__14668__i + 0];
        ++G__14668__i;
      }
      objs = new cljs.core.IndexedSeq(G__14668__a, 0);
    }
    return pr_str__delegate.call(this, objs);
  };
  pr_str.cljs$lang$maxFixedArity = 0;
  pr_str.cljs$lang$applyTo = function(arglist__14669) {
    var objs = cljs.core.seq(arglist__14669);
    return pr_str__delegate(objs);
  };
  pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
  return pr_str;
}();
cljs.core.prn_str = function() {
  var prn_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts(objs, cljs.core.pr_opts());
  };
  var prn_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__14670__i = 0, G__14670__a = new Array(arguments.length - 0);
      while (G__14670__i < G__14670__a.length) {
        G__14670__a[G__14670__i] = arguments[G__14670__i + 0];
        ++G__14670__i;
      }
      objs = new cljs.core.IndexedSeq(G__14670__a, 0);
    }
    return prn_str__delegate.call(this, objs);
  };
  prn_str.cljs$lang$maxFixedArity = 0;
  prn_str.cljs$lang$applyTo = function(arglist__14671) {
    var objs = cljs.core.seq(arglist__14671);
    return prn_str__delegate(objs);
  };
  prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
  return prn_str;
}();
cljs.core.pr = function() {
  var pr__delegate = function(objs) {
    return cljs.core.pr_with_opts(objs, cljs.core.pr_opts());
  };
  var pr = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__14672__i = 0, G__14672__a = new Array(arguments.length - 0);
      while (G__14672__i < G__14672__a.length) {
        G__14672__a[G__14672__i] = arguments[G__14672__i + 0];
        ++G__14672__i;
      }
      objs = new cljs.core.IndexedSeq(G__14672__a, 0);
    }
    return pr__delegate.call(this, objs);
  };
  pr.cljs$lang$maxFixedArity = 0;
  pr.cljs$lang$applyTo = function(arglist__14673) {
    var objs = cljs.core.seq(arglist__14673);
    return pr__delegate(objs);
  };
  pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
  return pr;
}();
cljs.core.print = function() {
  var cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var cljs_core_print = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__14674__i = 0, G__14674__a = new Array(arguments.length - 0);
      while (G__14674__i < G__14674__a.length) {
        G__14674__a[G__14674__i] = arguments[G__14674__i + 0];
        ++G__14674__i;
      }
      objs = new cljs.core.IndexedSeq(G__14674__a, 0);
    }
    return cljs_core_print__delegate.call(this, objs);
  };
  cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs_core_print.cljs$lang$applyTo = function(arglist__14675) {
    var objs = cljs.core.seq(arglist__14675);
    return cljs_core_print__delegate(objs);
  };
  cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
  return cljs_core_print;
}();
cljs.core.print_str = function() {
  var print_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var print_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__14676__i = 0, G__14676__a = new Array(arguments.length - 0);
      while (G__14676__i < G__14676__a.length) {
        G__14676__a[G__14676__i] = arguments[G__14676__i + 0];
        ++G__14676__i;
      }
      objs = new cljs.core.IndexedSeq(G__14676__a, 0);
    }
    return print_str__delegate.call(this, objs);
  };
  print_str.cljs$lang$maxFixedArity = 0;
  print_str.cljs$lang$applyTo = function(arglist__14677) {
    var objs = cljs.core.seq(arglist__14677);
    return print_str__delegate(objs);
  };
  print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
  return print_str;
}();
cljs.core.println = function() {
  var println__delegate = function(objs) {
    cljs.core.pr_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
    if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
      return cljs.core.newline(cljs.core.pr_opts());
    } else {
      return null;
    }
  };
  var println = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__14678__i = 0, G__14678__a = new Array(arguments.length - 0);
      while (G__14678__i < G__14678__a.length) {
        G__14678__a[G__14678__i] = arguments[G__14678__i + 0];
        ++G__14678__i;
      }
      objs = new cljs.core.IndexedSeq(G__14678__a, 0);
    }
    return println__delegate.call(this, objs);
  };
  println.cljs$lang$maxFixedArity = 0;
  println.cljs$lang$applyTo = function(arglist__14679) {
    var objs = cljs.core.seq(arglist__14679);
    return println__delegate(objs);
  };
  println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
  return println;
}();
cljs.core.println_str = function() {
  var println_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var println_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__14680__i = 0, G__14680__a = new Array(arguments.length - 0);
      while (G__14680__i < G__14680__a.length) {
        G__14680__a[G__14680__i] = arguments[G__14680__i + 0];
        ++G__14680__i;
      }
      objs = new cljs.core.IndexedSeq(G__14680__a, 0);
    }
    return println_str__delegate.call(this, objs);
  };
  println_str.cljs$lang$maxFixedArity = 0;
  println_str.cljs$lang$applyTo = function(arglist__14681) {
    var objs = cljs.core.seq(arglist__14681);
    return println_str__delegate(objs);
  };
  println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
  return println_str;
}();
cljs.core.prn = function() {
  var prn__delegate = function(objs) {
    cljs.core.pr_with_opts(objs, cljs.core.pr_opts());
    if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
      return cljs.core.newline(cljs.core.pr_opts());
    } else {
      return null;
    }
  };
  var prn = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__14682__i = 0, G__14682__a = new Array(arguments.length - 0);
      while (G__14682__i < G__14682__a.length) {
        G__14682__a[G__14682__i] = arguments[G__14682__i + 0];
        ++G__14682__i;
      }
      objs = new cljs.core.IndexedSeq(G__14682__a, 0);
    }
    return prn__delegate.call(this, objs);
  };
  prn.cljs$lang$maxFixedArity = 0;
  prn.cljs$lang$applyTo = function(arglist__14683) {
    var objs = cljs.core.seq(arglist__14683);
    return prn__delegate(objs);
  };
  prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
  return prn;
}();
cljs.core.print_map = function print_map(m, print_one, writer, opts) {
  return cljs.core.pr_sequential_writer(writer, function(e, w, opts__$1) {
    var G__14690_14696 = cljs.core.key(e);
    var G__14691_14697 = w;
    var G__14692_14698 = opts__$1;
    print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__14690_14696, G__14691_14697, G__14692_14698) : print_one.call(null, G__14690_14696, G__14691_14697, G__14692_14698);
    cljs.core._write(w, " ");
    var G__14693 = cljs.core.val(e);
    var G__14694 = w;
    var G__14695 = opts__$1;
    return print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__14693, G__14694, G__14695) : print_one.call(null, G__14693, G__14694, G__14695);
  }, "{", ", ", "}", opts, cljs.core.seq(m));
};
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#\x3cVolatile: ");
  cljs.core.pr_writer(a__$1.state, writer, opts);
  return cljs.core._write(writer, "\x3e");
};
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#'");
  return cljs.core.pr_writer(a__$1.sym, writer, opts);
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#\x3cAtom: ");
  cljs.core.pr_writer(a__$1.state, writer, opts);
  return cljs.core._write(writer, "\x3e");
};
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core._write(writer, "()");
};
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#queue [", " ", "]", opts, cljs.core.seq(coll__$1));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
};
cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;
cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
};
cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;
cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_keywords(x__$1, y);
};
cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;
cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_symbols(x__$1, y);
};
cljs.core.alter_meta_BANG_ = function() {
  var alter_meta_BANG___delegate = function(iref, f, args) {
    return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f, iref.meta, args);
  };
  var alter_meta_BANG_ = function(iref, f, var_args) {
    var args = null;
    if (arguments.length > 2) {
      var G__14699__i = 0, G__14699__a = new Array(arguments.length - 2);
      while (G__14699__i < G__14699__a.length) {
        G__14699__a[G__14699__i] = arguments[G__14699__i + 2];
        ++G__14699__i;
      }
      args = new cljs.core.IndexedSeq(G__14699__a, 0);
    }
    return alter_meta_BANG___delegate.call(this, iref, f, args);
  };
  alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
  alter_meta_BANG_.cljs$lang$applyTo = function(arglist__14700) {
    var iref = cljs.core.first(arglist__14700);
    arglist__14700 = cljs.core.next(arglist__14700);
    var f = cljs.core.first(arglist__14700);
    var args = cljs.core.rest(arglist__14700);
    return alter_meta_BANG___delegate(iref, f, args);
  };
  alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
  return alter_meta_BANG_;
}();
cljs.core.reset_meta_BANG_ = function reset_meta_BANG_(iref, m) {
  return iref.meta = m;
};
cljs.core.add_watch = function add_watch(iref, key, f) {
  cljs.core._add_watch(iref, key, f);
  return iref;
};
cljs.core.remove_watch = function remove_watch(iref, key) {
  cljs.core._remove_watch(iref, key);
  return iref;
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function() {
  var gensym = null;
  var gensym__0 = function() {
    return gensym.cljs$core$IFn$_invoke$arity$1("G__");
  };
  var gensym__1 = function(prefix_string) {
    if (cljs.core.gensym_counter == null) {
      cljs.core.gensym_counter = function() {
        var G__14703 = 0;
        return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__14703) : cljs.core.atom.call(null, G__14703);
      }();
    } else {
    }
    return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string), cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter, cljs.core.inc))].join(""));
  };
  gensym = function(prefix_string) {
    switch(arguments.length) {
      case 0:
        return gensym__0.call(this);
      case 1:
        return gensym__1.call(this, prefix_string);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
  gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
  return gensym;
}();
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
cljs.core.Delay = function(f, value) {
  this.f = f;
  this.value = value;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(d) {
  var self__ = this;
  var d__$1 = this;
  return cljs.core.not(self__.f);
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (cljs.core.truth_(self__.f)) {
    self__.value = function() {
      return self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null);
    }();
    self__.f = null;
  } else {
  }
  return self__.value;
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";
cljs.core.Delay.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/Delay");
};
cljs.core.__GT_Delay = function __GT_Delay(f, value) {
  return new cljs.core.Delay(f, value);
};
cljs.core.delay_QMARK_ = function delay_QMARK_(x) {
  return x instanceof cljs.core.Delay;
};
cljs.core.force = function force(x) {
  if (cljs.core.delay_QMARK_(x)) {
    var G__14705 = x;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14705) : cljs.core.deref.call(null, G__14705);
  } else {
    return x;
  }
};
cljs.core.realized_QMARK_ = function realized_QMARK_(d) {
  return cljs.core._realized_QMARK_(d);
};
cljs.core.preserving_reduced = function preserving_reduced(rf) {
  return function(p1__14706_SHARP_, p2__14707_SHARP_) {
    var ret = function() {
      var G__14710 = p1__14706_SHARP_;
      var G__14711 = p2__14707_SHARP_;
      return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14710, G__14711) : rf.call(null, G__14710, G__14711);
    }();
    if (cljs.core.reduced_QMARK_(ret)) {
      return cljs.core.reduced(ret);
    } else {
      return ret;
    }
  };
};
cljs.core.cat = function cat(rf) {
  var rf1 = cljs.core.preserving_reduced(rf);
  return function(rf1) {
    return function() {
      var G__14714 = null;
      var G__14714__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__14714__1 = function(result) {
        var G__14713 = result;
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14713) : rf.call(null, G__14713);
      };
      var G__14714__2 = function(result, input) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1, result, input);
      };
      G__14714 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__14714__0.call(this);
          case 1:
            return G__14714__1.call(this, result);
          case 2:
            return G__14714__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__14714.cljs$core$IFn$_invoke$arity$0 = G__14714__0;
      G__14714.cljs$core$IFn$_invoke$arity$1 = G__14714__1;
      G__14714.cljs$core$IFn$_invoke$arity$2 = G__14714__2;
      return G__14714;
    }();
  }(rf1);
};
cljs.core.dedupe = function() {
  var dedupe = null;
  var dedupe__0 = function() {
    return function(rf) {
      var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
      return function(pa) {
        return function() {
          var G__14723 = null;
          var G__14723__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__14723__1 = function(result) {
            var G__14719 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14719) : rf.call(null, G__14719);
          };
          var G__14723__2 = function(result, input) {
            var prior = function() {
              var G__14720 = pa;
              return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14720) : cljs.core.deref.call(null, G__14720);
            }();
            cljs.core.vreset_BANG_(pa, input);
            if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior, input)) {
              return result;
            } else {
              var G__14721 = result;
              var G__14722 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14721, G__14722) : rf.call(null, G__14721, G__14722);
            }
          };
          G__14723 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__14723__0.call(this);
              case 1:
                return G__14723__1.call(this, result);
              case 2:
                return G__14723__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__14723.cljs$core$IFn$_invoke$arity$0 = G__14723__0;
          G__14723.cljs$core$IFn$_invoke$arity$1 = G__14723__1;
          G__14723.cljs$core$IFn$_invoke$arity$2 = G__14723__2;
          return G__14723;
        }();
      }(pa);
    };
  };
  var dedupe__1 = function(coll) {
    return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(dedupe.cljs$core$IFn$_invoke$arity$0(), coll);
  };
  dedupe = function(coll) {
    switch(arguments.length) {
      case 0:
        return dedupe__0.call(this);
      case 1:
        return dedupe__1.call(this, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
  dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
  return dedupe;
}();
cljs.core.random_sample = function() {
  var random_sample = null;
  var random_sample__1 = function(prob) {
    return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(function(_) {
      return function() {
        return cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null);
      }() < prob;
    });
  };
  var random_sample__2 = function(prob, coll) {
    return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(_) {
      return function() {
        return cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null);
      }() < prob;
    }, coll);
  };
  random_sample = function(prob, coll) {
    switch(arguments.length) {
      case 1:
        return random_sample__1.call(this, prob);
      case 2:
        return random_sample__2.call(this, prob, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
  random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
  return random_sample;
}();
cljs.core.Eduction = function(xform, coll) {
  this.xform = xform;
  this.coll = coll;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2173173760;
};
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll__$1, writer, opts) {
  var self__ = this;
  var coll__$2 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$2);
};
cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = function(_, f, init) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform, f, init, self__.coll);
};
cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform, self__.coll));
};
cljs.core.Eduction.cljs$lang$type = true;
cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";
cljs.core.Eduction.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/Eduction");
};
cljs.core.__GT_Eduction = function __GT_Eduction(xform, coll) {
  return new cljs.core.Eduction(xform, coll);
};
cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4903__auto__ = this;
  return cljs.core.es6_iterator(this__4903__auto__);
};
cljs.core.eduction = function eduction(xform, coll) {
  return new cljs.core.Eduction(xform, coll);
};
cljs.core.run_BANG_ = function run_BANG_(proc, coll) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__14725_SHARP_, p2__14724_SHARP_) {
    var G__14727 = p2__14724_SHARP_;
    return proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__14727) : proc.call(null, G__14727);
  }, null, coll);
};
cljs.core.IEncodeJS = function() {
  var obj14729 = {};
  return obj14729;
}();
cljs.core._clj__GT_js = function _clj__GT_js(x) {
  if (function() {
    var and__3913__auto__ = x;
    if (and__3913__auto__) {
      return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
  } else {
    var x__4569__auto__ = x == null ? null : x;
    return function() {
      var or__3925__auto__ = cljs.core._clj__GT_js[function() {
        var G__14733 = x__4569__auto__;
        return goog.typeOf(G__14733);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._clj__GT_js["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEncodeJS.-clj-\x3ejs", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core._key__GT_js = function _key__GT_js(x) {
  if (function() {
    var and__3913__auto__ = x;
    if (and__3913__auto__) {
      return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
  } else {
    var x__4569__auto__ = x == null ? null : x;
    return function() {
      var or__3925__auto__ = cljs.core._key__GT_js[function() {
        var G__14737 = x__4569__auto__;
        return goog.typeOf(G__14737);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._key__GT_js["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEncodeJS.-key-\x3ejs", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core.key__GT_js = function key__GT_js(k) {
  if (function() {
    var G__14740 = k;
    if (G__14740) {
      var bit__4606__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3925__auto__ = bit__4606__auto__;
        if (cljs.core.truth_(or__3925__auto__)) {
          return or__3925__auto__;
        } else {
          return G__14740.cljs$core$IEncodeJS$;
        }
      }())) {
        return true;
      } else {
        if (!G__14740.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, G__14740);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, G__14740);
    }
  }()) {
    return cljs.core._clj__GT_js(k);
  } else {
    if (typeof k === "string" || typeof k === "number" || k instanceof cljs.core.Keyword || k instanceof cljs.core.Symbol) {
      var G__14741 = k;
      return cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__14741) : cljs.core.clj__GT_js.call(null, G__14741);
    } else {
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
    }
  }
};
cljs.core.clj__GT_js = function clj__GT_js(x) {
  if (x == null) {
    return null;
  } else {
    if (function() {
      var G__14757 = x;
      if (G__14757) {
        var bit__4606__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3925__auto__ = bit__4606__auto__;
          if (cljs.core.truth_(or__3925__auto__)) {
            return or__3925__auto__;
          } else {
            return G__14757.cljs$core$IEncodeJS$;
          }
        }())) {
          return true;
        } else {
          if (!G__14757.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, G__14757);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, G__14757);
      }
    }()) {
      return cljs.core._clj__GT_js(x);
    } else {
      if (x instanceof cljs.core.Keyword) {
        return cljs.core.name(x);
      } else {
        if (x instanceof cljs.core.Symbol) {
          return[cljs.core.str(x)].join("");
        } else {
          if (cljs.core.map_QMARK_(x)) {
            var m = function() {
              var obj14759 = {};
              return obj14759;
            }();
            var seq__14760_14770 = cljs.core.seq(x);
            var chunk__14761_14771 = null;
            var count__14762_14772 = 0;
            var i__14763_14773 = 0;
            while (true) {
              if (i__14763_14773 < count__14762_14772) {
                var vec__14764_14774 = chunk__14761_14771.cljs$core$IIndexed$_nth$arity$2(null, i__14763_14773);
                var k_14775 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14764_14774, 0, null);
                var v_14776 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14764_14774, 1, null);
                m[cljs.core.key__GT_js(k_14775)] = clj__GT_js(v_14776);
                var G__14777 = seq__14760_14770;
                var G__14778 = chunk__14761_14771;
                var G__14779 = count__14762_14772;
                var G__14780 = i__14763_14773 + 1;
                seq__14760_14770 = G__14777;
                chunk__14761_14771 = G__14778;
                count__14762_14772 = G__14779;
                i__14763_14773 = G__14780;
                continue;
              } else {
                var temp__4126__auto___14781 = cljs.core.seq(seq__14760_14770);
                if (temp__4126__auto___14781) {
                  var seq__14760_14782__$1 = temp__4126__auto___14781;
                  if (cljs.core.chunked_seq_QMARK_(seq__14760_14782__$1)) {
                    var c__4712__auto___14783 = cljs.core.chunk_first(seq__14760_14782__$1);
                    var G__14784 = cljs.core.chunk_rest(seq__14760_14782__$1);
                    var G__14785 = c__4712__auto___14783;
                    var G__14786 = cljs.core.count(c__4712__auto___14783);
                    var G__14787 = 0;
                    seq__14760_14770 = G__14784;
                    chunk__14761_14771 = G__14785;
                    count__14762_14772 = G__14786;
                    i__14763_14773 = G__14787;
                    continue;
                  } else {
                    var vec__14765_14788 = cljs.core.first(seq__14760_14782__$1);
                    var k_14789 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14765_14788, 0, null);
                    var v_14790 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14765_14788, 1, null);
                    m[cljs.core.key__GT_js(k_14789)] = clj__GT_js(v_14790);
                    var G__14791 = cljs.core.next(seq__14760_14782__$1);
                    var G__14792 = null;
                    var G__14793 = 0;
                    var G__14794 = 0;
                    seq__14760_14770 = G__14791;
                    chunk__14761_14771 = G__14792;
                    count__14762_14772 = G__14793;
                    i__14763_14773 = G__14794;
                    continue;
                  }
                } else {
                }
              }
              break;
            }
            return m;
          } else {
            if (cljs.core.coll_QMARK_(x)) {
              var arr = [];
              var seq__14766_14795 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clj__GT_js, x));
              var chunk__14767_14796 = null;
              var count__14768_14797 = 0;
              var i__14769_14798 = 0;
              while (true) {
                if (i__14769_14798 < count__14768_14797) {
                  var x_14799__$1 = chunk__14767_14796.cljs$core$IIndexed$_nth$arity$2(null, i__14769_14798);
                  arr.push(x_14799__$1);
                  var G__14800 = seq__14766_14795;
                  var G__14801 = chunk__14767_14796;
                  var G__14802 = count__14768_14797;
                  var G__14803 = i__14769_14798 + 1;
                  seq__14766_14795 = G__14800;
                  chunk__14767_14796 = G__14801;
                  count__14768_14797 = G__14802;
                  i__14769_14798 = G__14803;
                  continue;
                } else {
                  var temp__4126__auto___14804 = cljs.core.seq(seq__14766_14795);
                  if (temp__4126__auto___14804) {
                    var seq__14766_14805__$1 = temp__4126__auto___14804;
                    if (cljs.core.chunked_seq_QMARK_(seq__14766_14805__$1)) {
                      var c__4712__auto___14806 = cljs.core.chunk_first(seq__14766_14805__$1);
                      var G__14807 = cljs.core.chunk_rest(seq__14766_14805__$1);
                      var G__14808 = c__4712__auto___14806;
                      var G__14809 = cljs.core.count(c__4712__auto___14806);
                      var G__14810 = 0;
                      seq__14766_14795 = G__14807;
                      chunk__14767_14796 = G__14808;
                      count__14768_14797 = G__14809;
                      i__14769_14798 = G__14810;
                      continue;
                    } else {
                      var x_14811__$1 = cljs.core.first(seq__14766_14805__$1);
                      arr.push(x_14811__$1);
                      var G__14812 = cljs.core.next(seq__14766_14805__$1);
                      var G__14813 = null;
                      var G__14814 = 0;
                      var G__14815 = 0;
                      seq__14766_14795 = G__14812;
                      chunk__14767_14796 = G__14813;
                      count__14768_14797 = G__14814;
                      i__14769_14798 = G__14815;
                      continue;
                    }
                  } else {
                  }
                }
                break;
              }
              return arr;
            } else {
              return x;
            }
          }
        }
      }
    }
  }
};
cljs.core.IEncodeClojure = function() {
  var obj14817 = {};
  return obj14817;
}();
cljs.core._js__GT_clj = function _js__GT_clj(x, options) {
  if (function() {
    var and__3913__auto__ = x;
    if (and__3913__auto__) {
      return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x, options);
  } else {
    var x__4569__auto__ = x == null ? null : x;
    return function() {
      var or__3925__auto__ = cljs.core._js__GT_clj[function() {
        var G__14821 = x__4569__auto__;
        return goog.typeOf(G__14821);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._js__GT_clj["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEncodeClojure.-js-\x3eclj", x);
        }
      }
    }().call(null, x, options);
  }
};
cljs.core.js__GT_clj = function() {
  var js__GT_clj = null;
  var js__GT_clj__1 = function(x) {
    return js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252), false], null)], 0));
  };
  var js__GT_clj__2 = function() {
    var G__14878__delegate = function(x, opts) {
      var map__14851 = opts;
      var map__14851__$1 = cljs.core.seq_QMARK_(map__14851) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__14851) : map__14851;
      var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__14851__$1, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252));
      var keyfn = cljs.core.truth_(keywordize_keys) ? cljs.core.keyword : cljs.core.str;
      var f = function(map__14851, map__14851__$1, keywordize_keys, keyfn) {
        return function thisfn(x__$1) {
          if (function() {
            var G__14867 = x__$1;
            if (G__14867) {
              var bit__4606__auto__ = null;
              if (cljs.core.truth_(function() {
                var or__3925__auto__ = bit__4606__auto__;
                if (cljs.core.truth_(or__3925__auto__)) {
                  return or__3925__auto__;
                } else {
                  return G__14867.cljs$core$IEncodeClojure$;
                }
              }())) {
                return true;
              } else {
                if (!G__14867.cljs$lang$protocol_mask$partition$) {
                  return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure, G__14867);
                } else {
                  return false;
                }
              }
            } else {
              return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure, G__14867);
            }
          }()) {
            return cljs.core._js__GT_clj(x__$1, cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map, opts));
          } else {
            if (cljs.core.seq_QMARK_(x__$1)) {
              return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn, x__$1));
            } else {
              if (cljs.core.coll_QMARK_(x__$1)) {
                return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1), cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn, x__$1));
              } else {
                if (x__$1 instanceof Array) {
                  return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn, x__$1));
                } else {
                  if (cljs.core.type(x__$1) === Object) {
                    return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY, function() {
                      var iter__4681__auto__ = function(map__14851, map__14851__$1, keywordize_keys, keyfn) {
                        return function iter__14868(s__14869) {
                          return new cljs.core.LazySeq(null, function(map__14851, map__14851__$1, keywordize_keys, keyfn) {
                            return function() {
                              var s__14869__$1 = s__14869;
                              while (true) {
                                var temp__4126__auto__ = cljs.core.seq(s__14869__$1);
                                if (temp__4126__auto__) {
                                  var s__14869__$2 = temp__4126__auto__;
                                  if (cljs.core.chunked_seq_QMARK_(s__14869__$2)) {
                                    var c__4679__auto__ = cljs.core.chunk_first(s__14869__$2);
                                    var size__4680__auto__ = cljs.core.count(c__4679__auto__);
                                    var b__14871 = cljs.core.chunk_buffer(size__4680__auto__);
                                    if (function() {
                                      var i__14870 = 0;
                                      while (true) {
                                        if (i__14870 < size__4680__auto__) {
                                          var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__4679__auto__, i__14870);
                                          cljs.core.chunk_append(b__14871, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
                                            var G__14876 = k;
                                            return keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__14876) : keyfn.call(null, G__14876);
                                          }(), thisfn(x__$1[k])], null));
                                          var G__14879 = i__14870 + 1;
                                          i__14870 = G__14879;
                                          continue;
                                        } else {
                                          return true;
                                        }
                                        break;
                                      }
                                    }()) {
                                      return cljs.core.chunk_cons(cljs.core.chunk(b__14871), iter__14868(cljs.core.chunk_rest(s__14869__$2)));
                                    } else {
                                      return cljs.core.chunk_cons(cljs.core.chunk(b__14871), null);
                                    }
                                  } else {
                                    var k = cljs.core.first(s__14869__$2);
                                    return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
                                      var G__14877 = k;
                                      return keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__14877) : keyfn.call(null, G__14877);
                                    }(), thisfn(x__$1[k])], null), iter__14868(cljs.core.rest(s__14869__$2)));
                                  }
                                } else {
                                  return null;
                                }
                                break;
                              }
                            };
                          }(map__14851, map__14851__$1, keywordize_keys, keyfn), null, null);
                        };
                      }(map__14851, map__14851__$1, keywordize_keys, keyfn);
                      return iter__4681__auto__(cljs.core.js_keys(x__$1));
                    }());
                  } else {
                    return x__$1;
                  }
                }
              }
            }
          }
        };
      }(map__14851, map__14851__$1, keywordize_keys, keyfn);
      return f(x);
    };
    var G__14878 = function(x, var_args) {
      var opts = null;
      if (arguments.length > 1) {
        var G__14880__i = 0, G__14880__a = new Array(arguments.length - 1);
        while (G__14880__i < G__14880__a.length) {
          G__14880__a[G__14880__i] = arguments[G__14880__i + 1];
          ++G__14880__i;
        }
        opts = new cljs.core.IndexedSeq(G__14880__a, 0);
      }
      return G__14878__delegate.call(this, x, opts);
    };
    G__14878.cljs$lang$maxFixedArity = 1;
    G__14878.cljs$lang$applyTo = function(arglist__14881) {
      var x = cljs.core.first(arglist__14881);
      var opts = cljs.core.rest(arglist__14881);
      return G__14878__delegate(x, opts);
    };
    G__14878.cljs$core$IFn$_invoke$arity$variadic = G__14878__delegate;
    return G__14878;
  }();
  js__GT_clj = function(x, var_args) {
    var opts = var_args;
    switch(arguments.length) {
      case 1:
        return js__GT_clj__1.call(this, x);
      default:
        var G__14882 = null;
        if (arguments.length > 1) {
          var G__14883__i = 0, G__14883__a = new Array(arguments.length - 1);
          while (G__14883__i < G__14883__a.length) {
            G__14883__a[G__14883__i] = arguments[G__14883__i + 1];
            ++G__14883__i;
          }
          G__14882 = new cljs.core.IndexedSeq(G__14883__a, 0);
        }
        return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__14882);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js__GT_clj.cljs$lang$maxFixedArity = 1;
  js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
  js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
  js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
  return js__GT_clj;
}();
cljs.core.memoize = function memoize(f) {
  var mem = function() {
    var G__14886 = cljs.core.PersistentArrayMap.EMPTY;
    return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__14886) : cljs.core.atom.call(null, G__14886);
  }();
  return function(mem) {
    return function() {
      var G__14888__delegate = function(args) {
        var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3(function() {
          var G__14887 = mem;
          return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14887) : cljs.core.deref.call(null, G__14887);
        }(), args, cljs.core.lookup_sentinel);
        if (v === cljs.core.lookup_sentinel) {
          var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, args);
          cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem, cljs.core.assoc, args, ret);
          return ret;
        } else {
          return v;
        }
      };
      var G__14888 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          var G__14889__i = 0, G__14889__a = new Array(arguments.length - 0);
          while (G__14889__i < G__14889__a.length) {
            G__14889__a[G__14889__i] = arguments[G__14889__i + 0];
            ++G__14889__i;
          }
          args = new cljs.core.IndexedSeq(G__14889__a, 0);
        }
        return G__14888__delegate.call(this, args);
      };
      G__14888.cljs$lang$maxFixedArity = 0;
      G__14888.cljs$lang$applyTo = function(arglist__14890) {
        var args = cljs.core.seq(arglist__14890);
        return G__14888__delegate(args);
      };
      G__14888.cljs$core$IFn$_invoke$arity$variadic = G__14888__delegate;
      return G__14888;
    }();
  }(mem);
};
cljs.core.trampoline = function() {
  var trampoline = null;
  var trampoline__1 = function(f) {
    while (true) {
      var ret = function() {
        return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
      }();
      if (cljs.core.fn_QMARK_(ret)) {
        var G__14892 = ret;
        f = G__14892;
        continue;
      } else {
        return ret;
      }
      break;
    }
  };
  var trampoline__2 = function() {
    var G__14893__delegate = function(f, args) {
      return trampoline.cljs$core$IFn$_invoke$arity$1(function() {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, args);
      });
    };
    var G__14893 = function(f, var_args) {
      var args = null;
      if (arguments.length > 1) {
        var G__14894__i = 0, G__14894__a = new Array(arguments.length - 1);
        while (G__14894__i < G__14894__a.length) {
          G__14894__a[G__14894__i] = arguments[G__14894__i + 1];
          ++G__14894__i;
        }
        args = new cljs.core.IndexedSeq(G__14894__a, 0);
      }
      return G__14893__delegate.call(this, f, args);
    };
    G__14893.cljs$lang$maxFixedArity = 1;
    G__14893.cljs$lang$applyTo = function(arglist__14895) {
      var f = cljs.core.first(arglist__14895);
      var args = cljs.core.rest(arglist__14895);
      return G__14893__delegate(f, args);
    };
    G__14893.cljs$core$IFn$_invoke$arity$variadic = G__14893__delegate;
    return G__14893;
  }();
  trampoline = function(f, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 1:
        return trampoline__1.call(this, f);
      default:
        var G__14896 = null;
        if (arguments.length > 1) {
          var G__14897__i = 0, G__14897__a = new Array(arguments.length - 1);
          while (G__14897__i < G__14897__a.length) {
            G__14897__a[G__14897__i] = arguments[G__14897__i + 1];
            ++G__14897__i;
          }
          G__14896 = new cljs.core.IndexedSeq(G__14897__a, 0);
        }
        return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__14896);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  trampoline.cljs$lang$maxFixedArity = 1;
  trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
  trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
  trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
  return trampoline;
}();
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return rand.cljs$core$IFn$_invoke$arity$1(1);
  };
  var rand__1 = function(n) {
    return function() {
      return Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null);
    }() * n;
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
  rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
  return rand;
}();
cljs.core.rand_int = function rand_int(n) {
  var G__14900 = function() {
    return Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null);
  }() * n;
  return Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__14900) : Math.floor.call(null, G__14900);
};
cljs.core.rand_nth = function rand_nth(coll) {
  return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll, cljs.core.rand_int(cljs.core.count(coll)));
};
cljs.core.group_by = function group_by(f, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(ret, x) {
    var k = function() {
      var G__14902 = x;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14902) : f.call(null, G__14902);
    }();
    return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.PersistentVector.EMPTY), x));
  }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.make_hierarchy = function make_hierarchy() {
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), cljs.core.PersistentArrayMap.EMPTY], null);
};
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = function get_global_hierarchy() {
  if (cljs.core._global_hierarchy == null) {
    cljs.core._global_hierarchy = function() {
      var G__14904 = cljs.core.make_hierarchy();
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__14904) : cljs.core.atom.call(null, G__14904);
    }();
  } else {
  }
  return cljs.core._global_hierarchy;
};
cljs.core.swap_global_hierarchy_BANG_ = function() {
  var swap_global_hierarchy_BANG___delegate = function(f, args) {
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_, cljs.core.get_global_hierarchy(), f, args);
  };
  var swap_global_hierarchy_BANG_ = function(f, var_args) {
    var args = null;
    if (arguments.length > 1) {
      var G__14905__i = 0, G__14905__a = new Array(arguments.length - 1);
      while (G__14905__i < G__14905__a.length) {
        G__14905__a[G__14905__i] = arguments[G__14905__i + 1];
        ++G__14905__i;
      }
      args = new cljs.core.IndexedSeq(G__14905__a, 0);
    }
    return swap_global_hierarchy_BANG___delegate.call(this, f, args);
  };
  swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
  swap_global_hierarchy_BANG_.cljs$lang$applyTo = function(arglist__14906) {
    var f = cljs.core.first(arglist__14906);
    var args = cljs.core.rest(arglist__14906);
    return swap_global_hierarchy_BANG___delegate(f, args);
  };
  swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
  return swap_global_hierarchy_BANG_;
}();
cljs.core.isa_QMARK_ = function() {
  var isa_QMARK_ = null;
  var isa_QMARK___2 = function(child, parent) {
    return isa_QMARK_.cljs$core$IFn$_invoke$arity$3(function() {
      var G__14971 = cljs.core.get_global_hierarchy();
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14971) : cljs.core.deref.call(null, G__14971);
    }(), child, parent);
  };
  var isa_QMARK___3 = function(h, child, parent) {
    var or__3925__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child, parent);
    if (or__3925__auto__) {
      return or__3925__auto__;
    } else {
      var or__3925__auto____$1 = cljs.core.contains_QMARK_((new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h).call(null, child), parent);
      if (or__3925__auto____$1) {
        return or__3925__auto____$1;
      } else {
        var and__3913__auto__ = cljs.core.vector_QMARK_(parent);
        if (and__3913__auto__) {
          var and__3913__auto____$1 = cljs.core.vector_QMARK_(child);
          if (and__3913__auto____$1) {
            var and__3913__auto____$2 = cljs.core.count(parent) === cljs.core.count(child);
            if (and__3913__auto____$2) {
              var ret = true;
              var i = 0;
              while (true) {
                if (!ret || i === cljs.core.count(parent)) {
                  return ret;
                } else {
                  var G__14996 = isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h, function() {
                    var G__14994 = i;
                    return child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__14994) : child.call(null, G__14994);
                  }(), function() {
                    var G__14995 = i;
                    return parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__14995) : parent.call(null, G__14995);
                  }());
                  var G__14997 = i + 1;
                  ret = G__14996;
                  i = G__14997;
                  continue;
                }
                break;
              }
            } else {
              return and__3913__auto____$2;
            }
          } else {
            return and__3913__auto____$1;
          }
        } else {
          return and__3913__auto__;
        }
      }
    }
  };
  isa_QMARK_ = function(h, child, parent) {
    switch(arguments.length) {
      case 2:
        return isa_QMARK___2.call(this, h, child);
      case 3:
        return isa_QMARK___3.call(this, h, child, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
  isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
  return isa_QMARK_;
}();
cljs.core.parents = function() {
  var parents = null;
  var parents__1 = function(tag) {
    return parents.cljs$core$IFn$_invoke$arity$2(function() {
      var G__15001 = cljs.core.get_global_hierarchy();
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15001) : cljs.core.deref.call(null, G__15001);
    }(), tag);
  };
  var parents__2 = function(h, tag) {
    return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  parents = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return parents__1.call(this, h);
      case 2:
        return parents__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
  parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
  return parents;
}();
cljs.core.ancestors = function() {
  var ancestors = null;
  var ancestors__1 = function(tag) {
    return ancestors.cljs$core$IFn$_invoke$arity$2(function() {
      var G__15005 = cljs.core.get_global_hierarchy();
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15005) : cljs.core.deref.call(null, G__15005);
    }(), tag);
  };
  var ancestors__2 = function(h, tag) {
    return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  ancestors = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return ancestors__1.call(this, h);
      case 2:
        return ancestors__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
  ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
  return ancestors;
}();
cljs.core.descendants = function() {
  var descendants = null;
  var descendants__1 = function(tag) {
    return descendants.cljs$core$IFn$_invoke$arity$2(function() {
      var G__15009 = cljs.core.get_global_hierarchy();
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15009) : cljs.core.deref.call(null, G__15009);
    }(), tag);
  };
  var descendants__2 = function(h, tag) {
    return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  descendants = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return descendants__1.call(this, h);
      case 2:
        return descendants__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
  descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
  return descendants;
}();
cljs.core.derive = function() {
  var derive = null;
  var derive__2 = function(tag, parent) {
    if (cljs.core.truth_(cljs.core.namespace(parent))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null, "namespace", "namespace", 1263021155, null), new cljs.core.Symbol(null, "parent", "parent", 761652748, null))], 0)))].join(""));
    }
    cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(derive, cljs.core.array_seq([tag, parent], 0));
    return null;
  };
  var derive__3 = function(h, tag, parent) {
    if (cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag, parent)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null, "not\x3d", "not\x3d", 1466536204, null), new cljs.core.Symbol(null, "tag", "tag", 350170304, null), new cljs.core.Symbol(null, "parent", "parent", 761652748, null))], 0)))].join(""));
    }
    var tp = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
    var td = (new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h);
    var ta = (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h);
    var tf = function(tp, td, ta) {
      return function(m, source, sources, target, targets) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(tp, td, ta) {
          return function(ret, k) {
            return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons(target, function() {
              var G__15018 = target;
              return targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__15018) : targets.call(null, G__15018);
            }())));
          };
        }(tp, td, ta), m, cljs.core.cons(source, function() {
          var G__15019 = source;
          return sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__15019) : sources.call(null, G__15019);
        }()));
      };
    }(tp, td, ta);
    var or__3925__auto__ = cljs.core.contains_QMARK_(function() {
      var G__15023 = tag;
      return tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__15023) : tp.call(null, G__15023);
    }(), parent) ? null : function() {
      if (cljs.core.contains_QMARK_(function() {
        var G__15024 = tag;
        return ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__15024) : ta.call(null, G__15024);
      }(), parent)) {
        throw new Error([cljs.core.str(tag), cljs.core.str("already has"), cljs.core.str(parent), cljs.core.str("as ancestor")].join(""));
      } else {
      }
      if (cljs.core.contains_QMARK_(function() {
        var G__15025 = parent;
        return ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__15025) : ta.call(null, G__15025);
      }(), tag)) {
        throw new Error([cljs.core.str("Cyclic derivation:"), cljs.core.str(parent), cljs.core.str("has"), cljs.core.str(tag), cljs.core.str("as ancestor")].join(""));
      } else {
      }
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.assoc.cljs$core$IFn$_invoke$arity$3((new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp, tag, cljs.core.PersistentHashSet.EMPTY), parent)), new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), tf((new cljs.core.Keyword(null, 
      "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), tag, td, parent, ta), new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), tf((new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), parent, ta, tag, td)], null);
    }();
    if (cljs.core.truth_(or__3925__auto__)) {
      return or__3925__auto__;
    } else {
      return h;
    }
  };
  derive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return derive__2.call(this, h, tag);
      case 3:
        return derive__3.call(this, h, tag, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
  derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
  return derive;
}();
cljs.core.underive = function() {
  var underive = null;
  var underive__2 = function(tag, parent) {
    cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(underive, cljs.core.array_seq([tag, parent], 0));
    return null;
  };
  var underive__3 = function(h, tag, parent) {
    var parentMap = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
    var childsParents = cljs.core.truth_(function() {
      var G__15032 = tag;
      return parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__15032) : parentMap.call(null, G__15032);
    }()) ? cljs.core.disj.cljs$core$IFn$_invoke$arity$2(function() {
      var G__15033 = tag;
      return parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__15033) : parentMap.call(null, G__15033);
    }(), parent) : cljs.core.PersistentHashSet.EMPTY;
    var newParents = cljs.core.truth_(cljs.core.not_empty(childsParents)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap, tag, childsParents) : cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap, tag);
    var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(parentMap, childsParents, newParents) {
      return function(p1__15026_SHARP_) {
        return cljs.core.cons(cljs.core.first(p1__15026_SHARP_), cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__15026_SHARP_), cljs.core.second(p1__15026_SHARP_)));
      };
    }(parentMap, childsParents, newParents), cljs.core.seq(newParents)));
    if (cljs.core.contains_QMARK_(function() {
      var G__15034 = tag;
      return parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__15034) : parentMap.call(null, G__15034);
    }(), parent)) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(parentMap, childsParents, newParents, deriv_seq) {
        return function(p1__15027_SHARP_, p2__15028_SHARP_) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive, p1__15027_SHARP_, p2__15028_SHARP_);
        };
      }(parentMap, childsParents, newParents, deriv_seq), cljs.core.make_hierarchy(), cljs.core.partition.cljs$core$IFn$_invoke$arity$2(2, deriv_seq));
    } else {
      return h;
    }
  };
  underive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return underive__2.call(this, h, tag);
      case 3:
        return underive__3.call(this, h, tag, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
  underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
  return underive;
}();
cljs.core.reset_cache = function reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache, function(_) {
    var G__15037 = method_table;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15037) : cljs.core.deref.call(null, G__15037);
  });
  return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy, function(_) {
    var G__15038 = hierarchy;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15038) : cljs.core.deref.call(null, G__15038);
  });
};
cljs.core.prefers_STAR_ = function prefers_STAR_(x, y, prefer_table) {
  var xprefs = function() {
    var G__15054 = prefer_table;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15054) : cljs.core.deref.call(null, G__15054);
  }().call(null, x);
  var or__3925__auto__ = cljs.core.truth_(function() {
    var and__3913__auto__ = xprefs;
    if (cljs.core.truth_(and__3913__auto__)) {
      var G__15056 = y;
      return xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__15056) : xprefs.call(null, G__15056);
    } else {
      return and__3913__auto__;
    }
  }()) ? true : null;
  if (cljs.core.truth_(or__3925__auto__)) {
    return or__3925__auto__;
  } else {
    var or__3925__auto____$1 = function() {
      var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
      while (true) {
        if (cljs.core.count(ps) > 0) {
          if (cljs.core.truth_(prefers_STAR_(x, cljs.core.first(ps), prefer_table))) {
          } else {
          }
          var G__15057 = cljs.core.rest(ps);
          ps = G__15057;
          continue;
        } else {
          return null;
        }
        break;
      }
    }();
    if (cljs.core.truth_(or__3925__auto____$1)) {
      return or__3925__auto____$1;
    } else {
      var or__3925__auto____$2 = function() {
        var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
        while (true) {
          if (cljs.core.count(ps) > 0) {
            if (cljs.core.truth_(prefers_STAR_(cljs.core.first(ps), y, prefer_table))) {
            } else {
            }
            var G__15058 = cljs.core.rest(ps);
            ps = G__15058;
            continue;
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(or__3925__auto____$2)) {
        return or__3925__auto____$2;
      } else {
        return false;
      }
    }
  }
};
cljs.core.dominates = function dominates(x, y, prefer_table) {
  var or__3925__auto__ = cljs.core.prefers_STAR_(x, y, prefer_table);
  if (cljs.core.truth_(or__3925__auto__)) {
    return or__3925__auto__;
  } else {
    return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x, y);
  }
};
cljs.core.find_and_cache_best_method = function find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(be, p__15072) {
    var vec__15073 = p__15072;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15073, 0, null);
    var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__15073, 1, null);
    var e = vec__15073;
    if (cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(function() {
      var G__15074 = hierarchy;
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15074) : cljs.core.deref.call(null, G__15074);
    }(), dispatch_val, k)) {
      var be2 = cljs.core.truth_(function() {
        var or__3925__auto__ = be == null;
        if (or__3925__auto__) {
          return or__3925__auto__;
        } else {
          return cljs.core.dominates(k, cljs.core.first(be), prefer_table);
        }
      }()) ? e : be;
      if (cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2), k, prefer_table))) {
      } else {
        throw new Error([cljs.core.str("Multiple methods in multimethod '"), cljs.core.str(name), cljs.core.str("' match dispatch value: "), cljs.core.str(dispatch_val), cljs.core.str(" -\x3e "), cljs.core.str(k), cljs.core.str(" and "), cljs.core.str(cljs.core.first(be2)), cljs.core.str(", and neither is preferred")].join(""));
      }
      return be2;
    } else {
      return be;
    }
  }, null, function() {
    var G__15075 = method_table;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15075) : cljs.core.deref.call(null, G__15075);
  }());
  if (cljs.core.truth_(best_entry)) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(function() {
      var G__15076 = cached_hierarchy;
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15076) : cljs.core.deref.call(null, G__15076);
    }(), function() {
      var G__15077 = hierarchy;
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15077) : cljs.core.deref.call(null, G__15077);
    }())) {
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache, cljs.core.assoc, dispatch_val, cljs.core.second(best_entry));
      return cljs.core.second(best_entry);
    } else {
      cljs.core.reset_cache(method_cache, method_table, cached_hierarchy, hierarchy);
      return find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
    }
  } else {
    return null;
  }
};
cljs.core.IMultiFn = function() {
  var obj15079 = {};
  return obj15079;
}();
cljs.core._reset = function _reset(mf) {
  if (function() {
    var and__3913__auto__ = mf;
    if (and__3913__auto__) {
      return mf.cljs$core$IMultiFn$_reset$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
  } else {
    var x__4569__auto__ = mf == null ? null : mf;
    return function() {
      var or__3925__auto__ = cljs.core._reset[function() {
        var G__15083 = x__4569__auto__;
        return goog.typeOf(G__15083);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._reset["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-reset", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._add_method = function _add_method(mf, dispatch_val, method) {
  if (function() {
    var and__3913__auto__ = mf;
    if (and__3913__auto__) {
      return mf.cljs$core$IMultiFn$_add_method$arity$3;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method);
  } else {
    var x__4569__auto__ = mf == null ? null : mf;
    return function() {
      var or__3925__auto__ = cljs.core._add_method[function() {
        var G__15087 = x__4569__auto__;
        return goog.typeOf(G__15087);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._add_method["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-add-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, method);
  }
};
cljs.core._remove_method = function _remove_method(mf, dispatch_val) {
  if (function() {
    var and__3913__auto__ = mf;
    if (and__3913__auto__) {
      return mf.cljs$core$IMultiFn$_remove_method$arity$2;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val);
  } else {
    var x__4569__auto__ = mf == null ? null : mf;
    return function() {
      var or__3925__auto__ = cljs.core._remove_method[function() {
        var G__15091 = x__4569__auto__;
        return goog.typeOf(G__15091);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._remove_method["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-remove-method", mf);
        }
      }
    }().call(null, mf, dispatch_val);
  }
};
cljs.core._prefer_method = function _prefer_method(mf, dispatch_val, dispatch_val_y) {
  if (function() {
    var and__3913__auto__ = mf;
    if (and__3913__auto__) {
      return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y);
  } else {
    var x__4569__auto__ = mf == null ? null : mf;
    return function() {
      var or__3925__auto__ = cljs.core._prefer_method[function() {
        var G__15095 = x__4569__auto__;
        return goog.typeOf(G__15095);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._prefer_method["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-prefer-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, dispatch_val_y);
  }
};
cljs.core._get_method = function _get_method(mf, dispatch_val) {
  if (function() {
    var and__3913__auto__ = mf;
    if (and__3913__auto__) {
      return mf.cljs$core$IMultiFn$_get_method$arity$2;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val);
  } else {
    var x__4569__auto__ = mf == null ? null : mf;
    return function() {
      var or__3925__auto__ = cljs.core._get_method[function() {
        var G__15099 = x__4569__auto__;
        return goog.typeOf(G__15099);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._get_method["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-get-method", mf);
        }
      }
    }().call(null, mf, dispatch_val);
  }
};
cljs.core._methods = function _methods(mf) {
  if (function() {
    var and__3913__auto__ = mf;
    if (and__3913__auto__) {
      return mf.cljs$core$IMultiFn$_methods$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
  } else {
    var x__4569__auto__ = mf == null ? null : mf;
    return function() {
      var or__3925__auto__ = cljs.core._methods[function() {
        var G__15103 = x__4569__auto__;
        return goog.typeOf(G__15103);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._methods["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-methods", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._prefers = function _prefers(mf) {
  if (function() {
    var and__3913__auto__ = mf;
    if (and__3913__auto__) {
      return mf.cljs$core$IMultiFn$_prefers$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
  } else {
    var x__4569__auto__ = mf == null ? null : mf;
    return function() {
      var or__3925__auto__ = cljs.core._prefers[function() {
        var G__15107 = x__4569__auto__;
        return goog.typeOf(G__15107);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._prefers["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-prefers", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core.throw_no_method_error = function throw_no_method_error(name, dispatch_val) {
  throw new Error([cljs.core.str("No method in multimethod '"), cljs.core.str(name), cljs.core.str("' for dispatch value: "), cljs.core.str(dispatch_val)].join(""));
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194305;
  this.cljs$lang$protocol_mask$partition1$ = 4352;
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var G__15109 = this$__$1;
  return goog.getUid(G__15109);
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._name(self__.name);
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._namespace(self__.name);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy, function(mf__$1) {
    return function(mf__$2) {
      return null;
    };
  }(mf__$1));
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(function() {
    var G__15110 = self__.cached_hierarchy;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15110) : cljs.core.deref.call(null, G__15110);
  }(), function() {
    var G__15111 = self__.hierarchy;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15111) : cljs.core.deref.call(null, G__15111);
  }())) {
  } else {
    cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  }
  var temp__4124__auto__ = function() {
    var G__15112 = self__.method_cache;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15112) : cljs.core.deref.call(null, G__15112);
  }().call(null, dispatch_val);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var target_fn = temp__4124__auto__;
    return target_fn;
  } else {
    var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method(self__.name, dispatch_val, self__.hierarchy, self__.method_table, self__.prefer_table, self__.method_cache, self__.cached_hierarchy);
    if (cljs.core.truth_(temp__4124__auto____$1)) {
      var target_fn = temp__4124__auto____$1;
      return target_fn;
    } else {
      return function() {
        var G__15113 = self__.method_table;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15113) : cljs.core.deref.call(null, G__15113);
      }().call(null, self__.default_dispatch_val);
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x, dispatch_val_y, self__.prefer_table))) {
    throw new Error([cljs.core.str("Preference conflict in multimethod '"), cljs.core.str(self__.name), cljs.core.str("': "), cljs.core.str(dispatch_val_y), cljs.core.str(" is already preferred to "), cljs.core.str(dispatch_val_x)].join(""));
  } else {
  }
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table, function(mf__$1) {
    return function(old) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old, dispatch_val_x, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y));
    };
  }(mf__$1));
  return cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  var G__15114 = self__.method_table;
  return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15114) : cljs.core.deref.call(null, G__15114);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  var G__15115 = self__.prefer_table;
  return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__15115) : cljs.core.deref.call(null, G__15115);
};
cljs.core.MultiFn.prototype.call = function() {
  var G__15956 = null;
  var G__15956__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null);
  };
  var G__15956__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__15116 = a;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__15116) : self__.dispatch_fn.call(null, G__15116);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__15117 = a;
    return target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__15117) : target_fn.call(null, G__15117);
  };
  var G__15956__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__15118 = a;
      var G__15119 = b;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__15118, G__15119) : self__.dispatch_fn.call(null, G__15118, G__15119);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__15120 = a;
    var G__15121 = b;
    return target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__15120, G__15121) : target_fn.call(null, G__15120, G__15121);
  };
  var G__15956__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__15122 = a;
      var G__15123 = b;
      var G__15124 = c;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__15122, G__15123, G__15124) : self__.dispatch_fn.call(null, G__15122, G__15123, G__15124);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__15125 = a;
    var G__15126 = b;
    var G__15127 = c;
    return target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__15125, G__15126, G__15127) : target_fn.call(null, G__15125, G__15126, G__15127);
  };
  var G__15956__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__15128 = a;
      var G__15129 = b;
      var G__15130 = c;
      var G__15131 = d;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__15128, G__15129, G__15130, G__15131) : self__.dispatch_fn.call(null, G__15128, G__15129, G__15130, G__15131);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__15132 = a;
    var G__15133 = b;
    var G__15134 = c;
    var G__15135 = d;
    return target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__15132, G__15133, G__15134, G__15135) : target_fn.call(null, G__15132, G__15133, G__15134, G__15135);
  };
  var G__15956__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__15136 = a;
      var G__15137 = b;
      var G__15138 = c;
      var G__15139 = d;
      var G__15140 = e;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__15136, G__15137, G__15138, G__15139, G__15140) : self__.dispatch_fn.call(null, G__15136, G__15137, G__15138, G__15139, G__15140);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__15141 = a;
    var G__15142 = b;
    var G__15143 = c;
    var G__15144 = d;
    var G__15145 = e;
    return target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__15141, G__15142, G__15143, G__15144, G__15145) : target_fn.call(null, G__15141, G__15142, G__15143, G__15144, G__15145);
  };
  var G__15956__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__15146 = a;
      var G__15147 = b;
      var G__15148 = c;
      var G__15149 = d;
      var G__15150 = e;
      var G__15151 = f;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__15146, G__15147, G__15148, G__15149, G__15150, G__15151) : self__.dispatch_fn.call(null, G__15146, G__15147, G__15148, G__15149, G__15150, G__15151);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__15152 = a;
    var G__15153 = b;
    var G__15154 = c;
    var G__15155 = d;
    var G__15156 = e;
    var G__15157 = f;
    return target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__15152, G__15153, G__15154, G__15155, G__15156, G__15157) : target_fn.call(null, G__15152, G__15153, G__15154, G__15155, G__15156, G__15157);
  };
  var G__15956__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__15158 = a;
      var G__15159 = b;
      var G__15160 = c;
      var G__15161 = d;
      var G__15162 = e;
      var G__15163 = f;
      var G__15164 = g;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__15158, G__15159, G__15160, G__15161, G__15162, G__15163, G__15164) : self__.dispatch_fn.call(null, G__15158, G__15159, G__15160, G__15161, G__15162, G__15163, G__15164);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__15165 = a;
    var G__15166 = b;
    var G__15167 = c;
    var G__15168 = d;
    var G__15169 = e;
    var G__15170 = f;
    var G__15171 = g;
    return target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__15165, G__15166, G__15167, G__15168, G__15169, G__15170, G__15171) : target_fn.call(null, G__15165, G__15166, G__15167, G__15168, G__15169, G__15170, G__15171);
  };
  var G__15956__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__15172 = a;
      var G__15173 = b;
      var G__15174 = c;
      var G__15175 = d;
      var G__15176 = e;
      var G__15177 = f;
      var G__15178 = g;
      var G__15179 = h;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__15172, G__15173, G__15174, G__15175, G__15176, G__15177, G__15178, G__15179) : self__.dispatch_fn.call(null, G__15172, G__15173, G__15174, G__15175, G__15176, G__15177, G__15178, G__15179);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__15180 = a;
    var G__15181 = b;
    var G__15182 = c;
    var G__15183 = d;
    var G__15184 = e;
    var G__15185 = f;
    var G__15186 = g;
    var G__15187 = h;
    return target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__15180, G__15181, G__15182, G__15183, G__15184, G__15185, G__15186, G__15187) : target_fn.call(null, G__15180, G__15181, G__15182, G__15183, G__15184, G__15185, G__15186, G__15187);
  };
  var G__15956__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__15188 = a;
      var G__15189 = b;
      var G__15190 = c;
      var G__15191 = d;
      var G__15192 = e;
      var G__15193 = f;
      var G__15194 = g;
      var G__15195 = h;
      var G__15196 = i;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__15188, G__15189, G__15190, G__15191, G__15192, G__15193, G__15194, G__15195, G__15196) : self__.dispatch_fn.call(null, G__15188, G__15189, G__15190, G__15191, G__15192, G__15193, G__15194, G__15195, G__15196);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__15197 = a;
    var G__15198 = b;
    var G__15199 = c;
    var G__15200 = d;
    var G__15201 = e;
    var G__15202 = f;
    var G__15203 = g;
    var G__15204 = h;
    var G__15205 = i;
    return target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__15197, G__15198, G__15199, G__15200, G__15201, G__15202, G__15203, G__15204, G__15205) : target_fn.call(null, G__15197, G__15198, G__15199, G__15200, G__15201, G__15202, G__15203, G__15204, G__15205);
  };
  var G__15956__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__15206 = a;
      var G__15207 = b;
      var G__15208 = c;
      var G__15209 = d;
      var G__15210 = e;
      var G__15211 = f;
      var G__15212 = g;
      var G__15213 = h;
      var G__15214 = i;
      var G__15215 = j;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__15206, G__15207, G__15208, G__15209, G__15210, G__15211, G__15212, G__15213, G__15214, G__15215) : self__.dispatch_fn.call(null, G__15206, G__15207, G__15208, G__15209, G__15210, G__15211, G__15212, G__15213, G__15214, G__15215);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__15216 = a;
    var G__15217 = b;
    var G__15218 = c;
    var G__15219 = d;
    var G__15220 = e;
    var G__15221 = f;
    var G__15222 = g;
    var G__15223 = h;
    var G__15224 = i;
    var G__15225 = j;
    return target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__15216, G__15217, G__15218, G__15219, G__15220, G__15221, G__15222, G__15223, G__15224, G__15225) : target_fn.call(null, G__15216, G__15217, G__15218, G__15219, G__15220, G__15221, G__15222, G__15223, G__15224, G__15225);
  };
  var G__15956__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__15226 = a;
      var G__15227 = b;
      var G__15228 = c;
      var G__15229 = d;
      var G__15230 = e;
      var G__15231 = f;
      var G__15232 = g;
      var G__15233 = h;
      var G__15234 = i;
      var G__15235 = j;
      var G__15236 = k;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__15226, G__15227, G__15228, G__15229, G__15230, G__15231, G__15232, G__15233, G__15234, G__15235, G__15236) : self__.dispatch_fn.call(null, G__15226, G__15227, G__15228, G__15229, G__15230, G__15231, G__15232, G__15233, G__15234, G__15235, G__15236);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__15237 = a;
    var G__15238 = b;
    var G__15239 = c;
    var G__15240 = d;
    var G__15241 = e;
    var G__15242 = f;
    var G__15243 = g;
    var G__15244 = h;
    var G__15245 = i;
    var G__15246 = j;
    var G__15247 = k;
    return target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__15237, G__15238, G__15239, G__15240, G__15241, G__15242, G__15243, G__15244, G__15245, G__15246, G__15247) : target_fn.call(null, G__15237, G__15238, G__15239, G__15240, G__15241, G__15242, G__15243, G__15244, G__15245, G__15246, G__15247);
  };
  var G__15956__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__15248 = a;
      var G__15249 = b;
      var G__15250 = c;
      var G__15251 = d;
      var G__15252 = e;
      var G__15253 = f;
      var G__15254 = g;
      var G__15255 = h;
      var G__15256 = i;
      var G__15257 = j;
      var G__15258 = k;
      var G__15259 = l;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__15248, G__15249, G__15250, G__15251, G__15252, G__15253, G__15254, G__15255, G__15256, G__15257, G__15258, G__15259) : self__.dispatch_fn.call(null, G__15248, G__15249, G__15250, G__15251, G__15252, G__15253, G__15254, G__15255, G__15256, G__15257, G__15258, G__15259);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__15260 = a;
    var G__15261 = b;
    var G__15262 = c;
    var G__15263 = d;
    var G__15264 = e;
    var G__15265 = f;
    var G__15266 = g;
    var G__15267 = h;
    var G__15268 = i;
    var G__15269 = j;
    var G__15270 = k;
    var G__15271 = l;
    return target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__15260, G__15261, G__15262, G__15263, G__15264, G__15265, G__15266, G__15267, G__15268, G__15269, G__15270, G__15271) : target_fn.call(null, G__15260, G__15261, G__15262, G__15263, G__15264, G__15265, G__15266, G__15267, G__15268, G__15269, G__15270, G__15271);
  };
  var G__15956__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__15272 = a;
      var G__15273 = b;
      var G__15274 = c;
      var G__15275 = d;
      var G__15276 = e;
      var G__15277 = f;
      var G__15278 = g;
      var G__15279 = h;
      var G__15280 = i;
      var G__15281 = j;
      var G__15282 = k;
      var G__15283 = l;
      var G__15284 = m;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__15272, G__15273, G__15274, G__15275, G__15276, G__15277, G__15278, G__15279, G__15280, G__15281, G__15282, G__15283, G__15284) : self__.dispatch_fn.call(null, G__15272, G__15273, G__15274, G__15275, G__15276, G__15277, G__15278, G__15279, G__15280, G__15281, G__15282, G__15283, G__15284);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__15285 = a;
    var G__15286 = b;
    var G__15287 = c;
    var G__15288 = d;
    var G__15289 = e;
    var G__15290 = f;
    var G__15291 = g;
    var G__15292 = h;
    var G__15293 = i;
    var G__15294 = j;
    var G__15295 = k;
    var G__15296 = l;
    var G__15297 = m;
    return target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__15285, G__15286, G__15287, G__15288, G__15289, G__15290, G__15291, G__15292, G__15293, G__15294, G__15295, G__15296, G__15297) : target_fn.call(null, G__15285, G__15286, G__15287, G__15288, G__15289, G__15290, G__15291, G__15292, G__15293, G__15294, G__15295, G__15296, G__15297);
  };
  var G__15956__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__15298 = a;
      var G__15299 = b;
      var G__15300 = c;
      var G__15301 = d;
      var G__15302 = e;
      var G__15303 = f;
      var G__15304 = g;
      var G__15305 = h;
      var G__15306 = i;
      var G__15307 = j;
      var G__15308 = k;
      var G__15309 = l;
      var G__15310 = m;
      var G__15311 = n;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__15298, G__15299, G__15300, G__15301, G__15302, G__15303, G__15304, G__15305, G__15306, G__15307, G__15308, G__15309, G__15310, G__15311) : self__.dispatch_fn.call(null, G__15298, G__15299, G__15300, G__15301, G__15302, G__15303, G__15304, G__15305, G__15306, G__15307, G__15308, G__15309, G__15310, G__15311);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__15312 = a;
    var G__15313 = b;
    var G__15314 = c;
    var G__15315 = d;
    var G__15316 = e;
    var G__15317 = f;
    var G__15318 = g;
    var G__15319 = h;
    var G__15320 = i;
    var G__15321 = j;
    var G__15322 = k;
    var G__15323 = l;
    var G__15324 = m;
    var G__15325 = n;
    return target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__15312, G__15313, G__15314, G__15315, G__15316, G__15317, G__15318, G__15319, G__15320, G__15321, G__15322, G__15323, G__15324, G__15325) : target_fn.call(null, G__15312, G__15313, G__15314, G__15315, G__15316, G__15317, G__15318, G__15319, G__15320, G__15321, G__15322, G__15323, G__15324, G__15325);
  };
  var G__15956__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__15326 = a;
      var G__15327 = b;
      var G__15328 = c;
      var G__15329 = d;
      var G__15330 = e;
      var G__15331 = f;
      var G__15332 = g;
      var G__15333 = h;
      var G__15334 = i;
      var G__15335 = j;
      var G__15336 = k;
      var G__15337 = l;
      var G__15338 = m;
      var G__15339 = n;
      var G__15340 = o;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__15326, G__15327, G__15328, G__15329, G__15330, G__15331, G__15332, G__15333, G__15334, G__15335, G__15336, G__15337, G__15338, G__15339, G__15340) : self__.dispatch_fn.call(null, G__15326, G__15327, G__15328, G__15329, G__15330, G__15331, G__15332, G__15333, G__15334, G__15335, G__15336, G__15337, G__15338, G__15339, G__15340);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__15341 = a;
    var G__15342 = b;
    var G__15343 = c;
    var G__15344 = d;
    var G__15345 = e;
    var G__15346 = f;
    var G__15347 = g;
    var G__15348 = h;
    var G__15349 = i;
    var G__15350 = j;
    var G__15351 = k;
    var G__15352 = l;
    var G__15353 = m;
    var G__15354 = n;
    var G__15355 = o;
    return target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__15341, G__15342, G__15343, G__15344, G__15345, G__15346, G__15347, G__15348, G__15349, G__15350, G__15351, G__15352, G__15353, G__15354, G__15355) : target_fn.call(null, G__15341, G__15342, G__15343, G__15344, G__15345, G__15346, G__15347, G__15348, G__15349, G__15350, G__15351, G__15352, G__15353, G__15354, G__15355);
  };
  var G__15956__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__15356 = a;
      var G__15357 = b;
      var G__15358 = c;
      var G__15359 = d;
      var G__15360 = e;
      var G__15361 = f;
      var G__15362 = g;
      var G__15363 = h;
      var G__15364 = i;
      var G__15365 = j;
      var G__15366 = k;
      var G__15367 = l;
      var G__15368 = m;
      var G__15369 = n;
      var G__15370 = o;
      var G__15371 = p;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__15356, G__15357, G__15358, G__15359, G__15360, G__15361, G__15362, G__15363, G__15364, G__15365, G__15366, G__15367, G__15368, G__15369, G__15370, G__15371) : self__.dispatch_fn.call(null, G__15356, G__15357, G__15358, G__15359, G__15360, G__15361, G__15362, G__15363, G__15364, G__15365, G__15366, G__15367, G__15368, G__15369, G__15370, G__15371);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__15372 = a;
    var G__15373 = b;
    var G__15374 = c;
    var G__15375 = d;
    var G__15376 = e;
    var G__15377 = f;
    var G__15378 = g;
    var G__15379 = h;
    var G__15380 = i;
    var G__15381 = j;
    var G__15382 = k;
    var G__15383 = l;
    var G__15384 = m;
    var G__15385 = n;
    var G__15386 = o;
    var G__15387 = p;
    return target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__15372, G__15373, G__15374, G__15375, G__15376, G__15377, G__15378, G__15379, G__15380, G__15381, G__15382, G__15383, G__15384, G__15385, G__15386, G__15387) : target_fn.call(null, G__15372, G__15373, G__15374, G__15375, G__15376, G__15377, G__15378, G__15379, G__15380, G__15381, G__15382, G__15383, G__15384, G__15385, G__15386, G__15387);
  };
  var G__15956__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__15388 = a;
      var G__15389 = b;
      var G__15390 = c;
      var G__15391 = d;
      var G__15392 = e;
      var G__15393 = f;
      var G__15394 = g;
      var G__15395 = h;
      var G__15396 = i;
      var G__15397 = j;
      var G__15398 = k;
      var G__15399 = l;
      var G__15400 = m;
      var G__15401 = n;
      var G__15402 = o;
      var G__15403 = p;
      var G__15404 = q;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__15388, G__15389, G__15390, G__15391, G__15392, G__15393, G__15394, G__15395, G__15396, G__15397, G__15398, G__15399, G__15400, G__15401, G__15402, G__15403, G__15404) : self__.dispatch_fn.call(null, G__15388, G__15389, G__15390, G__15391, G__15392, G__15393, G__15394, G__15395, G__15396, G__15397, G__15398, G__15399, G__15400, G__15401, G__15402, G__15403, G__15404);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__15405 = a;
    var G__15406 = b;
    var G__15407 = c;
    var G__15408 = d;
    var G__15409 = e;
    var G__15410 = f;
    var G__15411 = g;
    var G__15412 = h;
    var G__15413 = i;
    var G__15414 = j;
    var G__15415 = k;
    var G__15416 = l;
    var G__15417 = m;
    var G__15418 = n;
    var G__15419 = o;
    var G__15420 = p;
    var G__15421 = q;
    return target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__15405, G__15406, G__15407, G__15408, G__15409, G__15410, G__15411, G__15412, G__15413, G__15414, G__15415, G__15416, G__15417, G__15418, G__15419, G__15420, G__15421) : target_fn.call(null, G__15405, G__15406, G__15407, G__15408, G__15409, G__15410, G__15411, G__15412, G__15413, G__15414, G__15415, G__15416, G__15417, G__15418, G__15419, G__15420, G__15421);
  };
  var G__15956__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__15422 = a;
      var G__15423 = b;
      var G__15424 = c;
      var G__15425 = d;
      var G__15426 = e;
      var G__15427 = f;
      var G__15428 = g;
      var G__15429 = h;
      var G__15430 = i;
      var G__15431 = j;
      var G__15432 = k;
      var G__15433 = l;
      var G__15434 = m;
      var G__15435 = n;
      var G__15436 = o;
      var G__15437 = p;
      var G__15438 = q;
      var G__15439 = r;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__15422, G__15423, G__15424, G__15425, G__15426, G__15427, G__15428, G__15429, G__15430, G__15431, G__15432, G__15433, G__15434, G__15435, G__15436, G__15437, G__15438, G__15439) : self__.dispatch_fn.call(null, G__15422, G__15423, G__15424, G__15425, G__15426, G__15427, G__15428, G__15429, G__15430, G__15431, G__15432, G__15433, G__15434, G__15435, G__15436, G__15437, G__15438, G__15439);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__15440 = a;
    var G__15441 = b;
    var G__15442 = c;
    var G__15443 = d;
    var G__15444 = e;
    var G__15445 = f;
    var G__15446 = g;
    var G__15447 = h;
    var G__15448 = i;
    var G__15449 = j;
    var G__15450 = k;
    var G__15451 = l;
    var G__15452 = m;
    var G__15453 = n;
    var G__15454 = o;
    var G__15455 = p;
    var G__15456 = q;
    var G__15457 = r;
    return target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__15440, G__15441, G__15442, G__15443, G__15444, G__15445, G__15446, G__15447, G__15448, G__15449, G__15450, G__15451, G__15452, G__15453, G__15454, G__15455, G__15456, G__15457) : target_fn.call(null, G__15440, G__15441, G__15442, G__15443, G__15444, G__15445, G__15446, G__15447, G__15448, G__15449, G__15450, G__15451, G__15452, G__15453, G__15454, G__15455, G__15456, G__15457);
  };
  var G__15956__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__15458 = a;
      var G__15459 = b;
      var G__15460 = c;
      var G__15461 = d;
      var G__15462 = e;
      var G__15463 = f;
      var G__15464 = g;
      var G__15465 = h;
      var G__15466 = i;
      var G__15467 = j;
      var G__15468 = k;
      var G__15469 = l;
      var G__15470 = m;
      var G__15471 = n;
      var G__15472 = o;
      var G__15473 = p;
      var G__15474 = q;
      var G__15475 = r;
      var G__15476 = s;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__15458, G__15459, G__15460, G__15461, G__15462, G__15463, G__15464, G__15465, G__15466, G__15467, G__15468, G__15469, G__15470, G__15471, G__15472, G__15473, G__15474, G__15475, G__15476) : self__.dispatch_fn.call(null, G__15458, G__15459, G__15460, G__15461, G__15462, G__15463, G__15464, G__15465, G__15466, G__15467, G__15468, G__15469, G__15470, G__15471, G__15472, G__15473, G__15474, 
      G__15475, G__15476);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__15477 = a;
    var G__15478 = b;
    var G__15479 = c;
    var G__15480 = d;
    var G__15481 = e;
    var G__15482 = f;
    var G__15483 = g;
    var G__15484 = h;
    var G__15485 = i;
    var G__15486 = j;
    var G__15487 = k;
    var G__15488 = l;
    var G__15489 = m;
    var G__15490 = n;
    var G__15491 = o;
    var G__15492 = p;
    var G__15493 = q;
    var G__15494 = r;
    var G__15495 = s;
    return target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__15477, G__15478, G__15479, G__15480, G__15481, G__15482, G__15483, G__15484, G__15485, G__15486, G__15487, G__15488, G__15489, G__15490, G__15491, G__15492, G__15493, G__15494, G__15495) : target_fn.call(null, G__15477, G__15478, G__15479, G__15480, G__15481, G__15482, G__15483, G__15484, G__15485, G__15486, G__15487, G__15488, G__15489, G__15490, G__15491, G__15492, G__15493, G__15494, G__15495);
  };
  var G__15956__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__15496 = a;
      var G__15497 = b;
      var G__15498 = c;
      var G__15499 = d;
      var G__15500 = e;
      var G__15501 = f;
      var G__15502 = g;
      var G__15503 = h;
      var G__15504 = i;
      var G__15505 = j;
      var G__15506 = k;
      var G__15507 = l;
      var G__15508 = m;
      var G__15509 = n;
      var G__15510 = o;
      var G__15511 = p;
      var G__15512 = q;
      var G__15513 = r;
      var G__15514 = s;
      var G__15515 = t;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__15496, G__15497, G__15498, G__15499, G__15500, G__15501, G__15502, G__15503, G__15504, G__15505, G__15506, G__15507, G__15508, G__15509, G__15510, G__15511, G__15512, G__15513, G__15514, G__15515) : self__.dispatch_fn.call(null, G__15496, G__15497, G__15498, G__15499, G__15500, G__15501, G__15502, G__15503, G__15504, G__15505, G__15506, G__15507, G__15508, G__15509, G__15510, G__15511, 
      G__15512, G__15513, G__15514, G__15515);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__15516 = a;
    var G__15517 = b;
    var G__15518 = c;
    var G__15519 = d;
    var G__15520 = e;
    var G__15521 = f;
    var G__15522 = g;
    var G__15523 = h;
    var G__15524 = i;
    var G__15525 = j;
    var G__15526 = k;
    var G__15527 = l;
    var G__15528 = m;
    var G__15529 = n;
    var G__15530 = o;
    var G__15531 = p;
    var G__15532 = q;
    var G__15533 = r;
    var G__15534 = s;
    var G__15535 = t;
    return target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__15516, G__15517, G__15518, G__15519, G__15520, G__15521, G__15522, G__15523, G__15524, G__15525, G__15526, G__15527, G__15528, G__15529, G__15530, G__15531, G__15532, G__15533, G__15534, G__15535) : target_fn.call(null, G__15516, G__15517, G__15518, G__15519, G__15520, G__15521, G__15522, G__15523, G__15524, G__15525, G__15526, G__15527, G__15528, G__15529, G__15530, G__15531, G__15532, G__15533, G__15534, 
    G__15535);
  };
  var G__15956__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  };
  G__15956 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__15956__1.call(this, self__);
      case 2:
        return G__15956__2.call(this, self__, a);
      case 3:
        return G__15956__3.call(this, self__, a, b);
      case 4:
        return G__15956__4.call(this, self__, a, b, c);
      case 5:
        return G__15956__5.call(this, self__, a, b, c, d);
      case 6:
        return G__15956__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__15956__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__15956__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__15956__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__15956__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__15956__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__15956__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__15956__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__15956__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__15956__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__15956__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__15956__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__15956__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__15956__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__15956__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__15956__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__15956__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__15956.cljs$core$IFn$_invoke$arity$1 = G__15956__1;
  G__15956.cljs$core$IFn$_invoke$arity$2 = G__15956__2;
  G__15956.cljs$core$IFn$_invoke$arity$3 = G__15956__3;
  G__15956.cljs$core$IFn$_invoke$arity$4 = G__15956__4;
  G__15956.cljs$core$IFn$_invoke$arity$5 = G__15956__5;
  G__15956.cljs$core$IFn$_invoke$arity$6 = G__15956__6;
  G__15956.cljs$core$IFn$_invoke$arity$7 = G__15956__7;
  G__15956.cljs$core$IFn$_invoke$arity$8 = G__15956__8;
  G__15956.cljs$core$IFn$_invoke$arity$9 = G__15956__9;
  G__15956.cljs$core$IFn$_invoke$arity$10 = G__15956__10;
  G__15956.cljs$core$IFn$_invoke$arity$11 = G__15956__11;
  G__15956.cljs$core$IFn$_invoke$arity$12 = G__15956__12;
  G__15956.cljs$core$IFn$_invoke$arity$13 = G__15956__13;
  G__15956.cljs$core$IFn$_invoke$arity$14 = G__15956__14;
  G__15956.cljs$core$IFn$_invoke$arity$15 = G__15956__15;
  G__15956.cljs$core$IFn$_invoke$arity$16 = G__15956__16;
  G__15956.cljs$core$IFn$_invoke$arity$17 = G__15956__17;
  G__15956.cljs$core$IFn$_invoke$arity$18 = G__15956__18;
  G__15956.cljs$core$IFn$_invoke$arity$19 = G__15956__19;
  G__15956.cljs$core$IFn$_invoke$arity$20 = G__15956__20;
  G__15956.cljs$core$IFn$_invoke$arity$21 = G__15956__21;
  G__15956.cljs$core$IFn$_invoke$arity$22 = G__15956__22;
  return G__15956;
}();
cljs.core.MultiFn.prototype.apply = function(self__, args15108) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args15108)));
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__15536 = a;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__15536) : self__.dispatch_fn.call(null, G__15536);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__15537 = a;
  return target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__15537) : target_fn.call(null, G__15537);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__15538 = a;
    var G__15539 = b;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__15538, G__15539) : self__.dispatch_fn.call(null, G__15538, G__15539);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__15540 = a;
  var G__15541 = b;
  return target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__15540, G__15541) : target_fn.call(null, G__15540, G__15541);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__15542 = a;
    var G__15543 = b;
    var G__15544 = c;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__15542, G__15543, G__15544) : self__.dispatch_fn.call(null, G__15542, G__15543, G__15544);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__15545 = a;
  var G__15546 = b;
  var G__15547 = c;
  return target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__15545, G__15546, G__15547) : target_fn.call(null, G__15545, G__15546, G__15547);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__15548 = a;
    var G__15549 = b;
    var G__15550 = c;
    var G__15551 = d;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__15548, G__15549, G__15550, G__15551) : self__.dispatch_fn.call(null, G__15548, G__15549, G__15550, G__15551);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__15552 = a;
  var G__15553 = b;
  var G__15554 = c;
  var G__15555 = d;
  return target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__15552, G__15553, G__15554, G__15555) : target_fn.call(null, G__15552, G__15553, G__15554, G__15555);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__15556 = a;
    var G__15557 = b;
    var G__15558 = c;
    var G__15559 = d;
    var G__15560 = e;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__15556, G__15557, G__15558, G__15559, G__15560) : self__.dispatch_fn.call(null, G__15556, G__15557, G__15558, G__15559, G__15560);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__15561 = a;
  var G__15562 = b;
  var G__15563 = c;
  var G__15564 = d;
  var G__15565 = e;
  return target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__15561, G__15562, G__15563, G__15564, G__15565) : target_fn.call(null, G__15561, G__15562, G__15563, G__15564, G__15565);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__15566 = a;
    var G__15567 = b;
    var G__15568 = c;
    var G__15569 = d;
    var G__15570 = e;
    var G__15571 = f;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__15566, G__15567, G__15568, G__15569, G__15570, G__15571) : self__.dispatch_fn.call(null, G__15566, G__15567, G__15568, G__15569, G__15570, G__15571);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__15572 = a;
  var G__15573 = b;
  var G__15574 = c;
  var G__15575 = d;
  var G__15576 = e;
  var G__15577 = f;
  return target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__15572, G__15573, G__15574, G__15575, G__15576, G__15577) : target_fn.call(null, G__15572, G__15573, G__15574, G__15575, G__15576, G__15577);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__15578 = a;
    var G__15579 = b;
    var G__15580 = c;
    var G__15581 = d;
    var G__15582 = e;
    var G__15583 = f;
    var G__15584 = g;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__15578, G__15579, G__15580, G__15581, G__15582, G__15583, G__15584) : self__.dispatch_fn.call(null, G__15578, G__15579, G__15580, G__15581, G__15582, G__15583, G__15584);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__15585 = a;
  var G__15586 = b;
  var G__15587 = c;
  var G__15588 = d;
  var G__15589 = e;
  var G__15590 = f;
  var G__15591 = g;
  return target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__15585, G__15586, G__15587, G__15588, G__15589, G__15590, G__15591) : target_fn.call(null, G__15585, G__15586, G__15587, G__15588, G__15589, G__15590, G__15591);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__15592 = a;
    var G__15593 = b;
    var G__15594 = c;
    var G__15595 = d;
    var G__15596 = e;
    var G__15597 = f;
    var G__15598 = g;
    var G__15599 = h;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__15592, G__15593, G__15594, G__15595, G__15596, G__15597, G__15598, G__15599) : self__.dispatch_fn.call(null, G__15592, G__15593, G__15594, G__15595, G__15596, G__15597, G__15598, G__15599);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__15600 = a;
  var G__15601 = b;
  var G__15602 = c;
  var G__15603 = d;
  var G__15604 = e;
  var G__15605 = f;
  var G__15606 = g;
  var G__15607 = h;
  return target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__15600, G__15601, G__15602, G__15603, G__15604, G__15605, G__15606, G__15607) : target_fn.call(null, G__15600, G__15601, G__15602, G__15603, G__15604, G__15605, G__15606, G__15607);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__15608 = a;
    var G__15609 = b;
    var G__15610 = c;
    var G__15611 = d;
    var G__15612 = e;
    var G__15613 = f;
    var G__15614 = g;
    var G__15615 = h;
    var G__15616 = i;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__15608, G__15609, G__15610, G__15611, G__15612, G__15613, G__15614, G__15615, G__15616) : self__.dispatch_fn.call(null, G__15608, G__15609, G__15610, G__15611, G__15612, G__15613, G__15614, G__15615, G__15616);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__15617 = a;
  var G__15618 = b;
  var G__15619 = c;
  var G__15620 = d;
  var G__15621 = e;
  var G__15622 = f;
  var G__15623 = g;
  var G__15624 = h;
  var G__15625 = i;
  return target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__15617, G__15618, G__15619, G__15620, G__15621, G__15622, G__15623, G__15624, G__15625) : target_fn.call(null, G__15617, G__15618, G__15619, G__15620, G__15621, G__15622, G__15623, G__15624, G__15625);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__15626 = a;
    var G__15627 = b;
    var G__15628 = c;
    var G__15629 = d;
    var G__15630 = e;
    var G__15631 = f;
    var G__15632 = g;
    var G__15633 = h;
    var G__15634 = i;
    var G__15635 = j;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__15626, G__15627, G__15628, G__15629, G__15630, G__15631, G__15632, G__15633, G__15634, G__15635) : self__.dispatch_fn.call(null, G__15626, G__15627, G__15628, G__15629, G__15630, G__15631, G__15632, G__15633, G__15634, G__15635);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__15636 = a;
  var G__15637 = b;
  var G__15638 = c;
  var G__15639 = d;
  var G__15640 = e;
  var G__15641 = f;
  var G__15642 = g;
  var G__15643 = h;
  var G__15644 = i;
  var G__15645 = j;
  return target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__15636, G__15637, G__15638, G__15639, G__15640, G__15641, G__15642, G__15643, G__15644, G__15645) : target_fn.call(null, G__15636, G__15637, G__15638, G__15639, G__15640, G__15641, G__15642, G__15643, G__15644, G__15645);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__15646 = a;
    var G__15647 = b;
    var G__15648 = c;
    var G__15649 = d;
    var G__15650 = e;
    var G__15651 = f;
    var G__15652 = g;
    var G__15653 = h;
    var G__15654 = i;
    var G__15655 = j;
    var G__15656 = k;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__15646, G__15647, G__15648, G__15649, G__15650, G__15651, G__15652, G__15653, G__15654, G__15655, G__15656) : self__.dispatch_fn.call(null, G__15646, G__15647, G__15648, G__15649, G__15650, G__15651, G__15652, G__15653, G__15654, G__15655, G__15656);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__15657 = a;
  var G__15658 = b;
  var G__15659 = c;
  var G__15660 = d;
  var G__15661 = e;
  var G__15662 = f;
  var G__15663 = g;
  var G__15664 = h;
  var G__15665 = i;
  var G__15666 = j;
  var G__15667 = k;
  return target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__15657, G__15658, G__15659, G__15660, G__15661, G__15662, G__15663, G__15664, G__15665, G__15666, G__15667) : target_fn.call(null, G__15657, G__15658, G__15659, G__15660, G__15661, G__15662, G__15663, G__15664, G__15665, G__15666, G__15667);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__15668 = a;
    var G__15669 = b;
    var G__15670 = c;
    var G__15671 = d;
    var G__15672 = e;
    var G__15673 = f;
    var G__15674 = g;
    var G__15675 = h;
    var G__15676 = i;
    var G__15677 = j;
    var G__15678 = k;
    var G__15679 = l;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__15668, G__15669, G__15670, G__15671, G__15672, G__15673, G__15674, G__15675, G__15676, G__15677, G__15678, G__15679) : self__.dispatch_fn.call(null, G__15668, G__15669, G__15670, G__15671, G__15672, G__15673, G__15674, G__15675, G__15676, G__15677, G__15678, G__15679);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__15680 = a;
  var G__15681 = b;
  var G__15682 = c;
  var G__15683 = d;
  var G__15684 = e;
  var G__15685 = f;
  var G__15686 = g;
  var G__15687 = h;
  var G__15688 = i;
  var G__15689 = j;
  var G__15690 = k;
  var G__15691 = l;
  return target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__15680, G__15681, G__15682, G__15683, G__15684, G__15685, G__15686, G__15687, G__15688, G__15689, G__15690, G__15691) : target_fn.call(null, G__15680, G__15681, G__15682, G__15683, G__15684, G__15685, G__15686, G__15687, G__15688, G__15689, G__15690, G__15691);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__15692 = a;
    var G__15693 = b;
    var G__15694 = c;
    var G__15695 = d;
    var G__15696 = e;
    var G__15697 = f;
    var G__15698 = g;
    var G__15699 = h;
    var G__15700 = i;
    var G__15701 = j;
    var G__15702 = k;
    var G__15703 = l;
    var G__15704 = m;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__15692, G__15693, G__15694, G__15695, G__15696, G__15697, G__15698, G__15699, G__15700, G__15701, G__15702, G__15703, G__15704) : self__.dispatch_fn.call(null, G__15692, G__15693, G__15694, G__15695, G__15696, G__15697, G__15698, G__15699, G__15700, G__15701, G__15702, G__15703, G__15704);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__15705 = a;
  var G__15706 = b;
  var G__15707 = c;
  var G__15708 = d;
  var G__15709 = e;
  var G__15710 = f;
  var G__15711 = g;
  var G__15712 = h;
  var G__15713 = i;
  var G__15714 = j;
  var G__15715 = k;
  var G__15716 = l;
  var G__15717 = m;
  return target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__15705, G__15706, G__15707, G__15708, G__15709, G__15710, G__15711, G__15712, G__15713, G__15714, G__15715, G__15716, G__15717) : target_fn.call(null, G__15705, G__15706, G__15707, G__15708, G__15709, G__15710, G__15711, G__15712, G__15713, G__15714, G__15715, G__15716, G__15717);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__15718 = a;
    var G__15719 = b;
    var G__15720 = c;
    var G__15721 = d;
    var G__15722 = e;
    var G__15723 = f;
    var G__15724 = g;
    var G__15725 = h;
    var G__15726 = i;
    var G__15727 = j;
    var G__15728 = k;
    var G__15729 = l;
    var G__15730 = m;
    var G__15731 = n;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__15718, G__15719, G__15720, G__15721, G__15722, G__15723, G__15724, G__15725, G__15726, G__15727, G__15728, G__15729, G__15730, G__15731) : self__.dispatch_fn.call(null, G__15718, G__15719, G__15720, G__15721, G__15722, G__15723, G__15724, G__15725, G__15726, G__15727, G__15728, G__15729, G__15730, G__15731);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__15732 = a;
  var G__15733 = b;
  var G__15734 = c;
  var G__15735 = d;
  var G__15736 = e;
  var G__15737 = f;
  var G__15738 = g;
  var G__15739 = h;
  var G__15740 = i;
  var G__15741 = j;
  var G__15742 = k;
  var G__15743 = l;
  var G__15744 = m;
  var G__15745 = n;
  return target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__15732, G__15733, G__15734, G__15735, G__15736, G__15737, G__15738, G__15739, G__15740, G__15741, G__15742, G__15743, G__15744, G__15745) : target_fn.call(null, G__15732, G__15733, G__15734, G__15735, G__15736, G__15737, G__15738, G__15739, G__15740, G__15741, G__15742, G__15743, G__15744, G__15745);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__15746 = a;
    var G__15747 = b;
    var G__15748 = c;
    var G__15749 = d;
    var G__15750 = e;
    var G__15751 = f;
    var G__15752 = g;
    var G__15753 = h;
    var G__15754 = i;
    var G__15755 = j;
    var G__15756 = k;
    var G__15757 = l;
    var G__15758 = m;
    var G__15759 = n;
    var G__15760 = o;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__15746, G__15747, G__15748, G__15749, G__15750, G__15751, G__15752, G__15753, G__15754, G__15755, G__15756, G__15757, G__15758, G__15759, G__15760) : self__.dispatch_fn.call(null, G__15746, G__15747, G__15748, G__15749, G__15750, G__15751, G__15752, G__15753, G__15754, G__15755, G__15756, G__15757, G__15758, G__15759, G__15760);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__15761 = a;
  var G__15762 = b;
  var G__15763 = c;
  var G__15764 = d;
  var G__15765 = e;
  var G__15766 = f;
  var G__15767 = g;
  var G__15768 = h;
  var G__15769 = i;
  var G__15770 = j;
  var G__15771 = k;
  var G__15772 = l;
  var G__15773 = m;
  var G__15774 = n;
  var G__15775 = o;
  return target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__15761, G__15762, G__15763, G__15764, G__15765, G__15766, G__15767, G__15768, G__15769, G__15770, G__15771, G__15772, G__15773, G__15774, G__15775) : target_fn.call(null, G__15761, G__15762, G__15763, G__15764, G__15765, G__15766, G__15767, G__15768, G__15769, G__15770, G__15771, G__15772, G__15773, G__15774, G__15775);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__15776 = a;
    var G__15777 = b;
    var G__15778 = c;
    var G__15779 = d;
    var G__15780 = e;
    var G__15781 = f;
    var G__15782 = g;
    var G__15783 = h;
    var G__15784 = i;
    var G__15785 = j;
    var G__15786 = k;
    var G__15787 = l;
    var G__15788 = m;
    var G__15789 = n;
    var G__15790 = o;
    var G__15791 = p;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__15776, G__15777, G__15778, G__15779, G__15780, G__15781, G__15782, G__15783, G__15784, G__15785, G__15786, G__15787, G__15788, G__15789, G__15790, G__15791) : self__.dispatch_fn.call(null, G__15776, G__15777, G__15778, G__15779, G__15780, G__15781, G__15782, G__15783, G__15784, G__15785, G__15786, G__15787, G__15788, G__15789, G__15790, G__15791);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__15792 = a;
  var G__15793 = b;
  var G__15794 = c;
  var G__15795 = d;
  var G__15796 = e;
  var G__15797 = f;
  var G__15798 = g;
  var G__15799 = h;
  var G__15800 = i;
  var G__15801 = j;
  var G__15802 = k;
  var G__15803 = l;
  var G__15804 = m;
  var G__15805 = n;
  var G__15806 = o;
  var G__15807 = p;
  return target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__15792, G__15793, G__15794, G__15795, G__15796, G__15797, G__15798, G__15799, G__15800, G__15801, G__15802, G__15803, G__15804, G__15805, G__15806, G__15807) : target_fn.call(null, G__15792, G__15793, G__15794, G__15795, G__15796, G__15797, G__15798, G__15799, G__15800, G__15801, G__15802, G__15803, G__15804, G__15805, G__15806, G__15807);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__15808 = a;
    var G__15809 = b;
    var G__15810 = c;
    var G__15811 = d;
    var G__15812 = e;
    var G__15813 = f;
    var G__15814 = g;
    var G__15815 = h;
    var G__15816 = i;
    var G__15817 = j;
    var G__15818 = k;
    var G__15819 = l;
    var G__15820 = m;
    var G__15821 = n;
    var G__15822 = o;
    var G__15823 = p;
    var G__15824 = q;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__15808, G__15809, G__15810, G__15811, G__15812, G__15813, G__15814, G__15815, G__15816, G__15817, G__15818, G__15819, G__15820, G__15821, G__15822, G__15823, G__15824) : self__.dispatch_fn.call(null, G__15808, G__15809, G__15810, G__15811, G__15812, G__15813, G__15814, G__15815, G__15816, G__15817, G__15818, G__15819, G__15820, G__15821, G__15822, G__15823, G__15824);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__15825 = a;
  var G__15826 = b;
  var G__15827 = c;
  var G__15828 = d;
  var G__15829 = e;
  var G__15830 = f;
  var G__15831 = g;
  var G__15832 = h;
  var G__15833 = i;
  var G__15834 = j;
  var G__15835 = k;
  var G__15836 = l;
  var G__15837 = m;
  var G__15838 = n;
  var G__15839 = o;
  var G__15840 = p;
  var G__15841 = q;
  return target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__15825, G__15826, G__15827, G__15828, G__15829, G__15830, G__15831, G__15832, G__15833, G__15834, G__15835, G__15836, G__15837, G__15838, G__15839, G__15840, G__15841) : target_fn.call(null, G__15825, G__15826, G__15827, G__15828, G__15829, G__15830, G__15831, G__15832, G__15833, G__15834, G__15835, G__15836, G__15837, G__15838, G__15839, G__15840, G__15841);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__15842 = a;
    var G__15843 = b;
    var G__15844 = c;
    var G__15845 = d;
    var G__15846 = e;
    var G__15847 = f;
    var G__15848 = g;
    var G__15849 = h;
    var G__15850 = i;
    var G__15851 = j;
    var G__15852 = k;
    var G__15853 = l;
    var G__15854 = m;
    var G__15855 = n;
    var G__15856 = o;
    var G__15857 = p;
    var G__15858 = q;
    var G__15859 = r;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__15842, G__15843, G__15844, G__15845, G__15846, G__15847, G__15848, G__15849, G__15850, G__15851, G__15852, G__15853, G__15854, G__15855, G__15856, G__15857, G__15858, G__15859) : self__.dispatch_fn.call(null, G__15842, G__15843, G__15844, G__15845, G__15846, G__15847, G__15848, G__15849, G__15850, G__15851, G__15852, G__15853, G__15854, G__15855, G__15856, G__15857, G__15858, G__15859);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__15860 = a;
  var G__15861 = b;
  var G__15862 = c;
  var G__15863 = d;
  var G__15864 = e;
  var G__15865 = f;
  var G__15866 = g;
  var G__15867 = h;
  var G__15868 = i;
  var G__15869 = j;
  var G__15870 = k;
  var G__15871 = l;
  var G__15872 = m;
  var G__15873 = n;
  var G__15874 = o;
  var G__15875 = p;
  var G__15876 = q;
  var G__15877 = r;
  return target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__15860, G__15861, G__15862, G__15863, G__15864, G__15865, G__15866, G__15867, G__15868, G__15869, G__15870, G__15871, G__15872, G__15873, G__15874, G__15875, G__15876, G__15877) : target_fn.call(null, G__15860, G__15861, G__15862, G__15863, G__15864, G__15865, G__15866, G__15867, G__15868, G__15869, G__15870, G__15871, G__15872, G__15873, G__15874, G__15875, G__15876, G__15877);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__15878 = a;
    var G__15879 = b;
    var G__15880 = c;
    var G__15881 = d;
    var G__15882 = e;
    var G__15883 = f;
    var G__15884 = g;
    var G__15885 = h;
    var G__15886 = i;
    var G__15887 = j;
    var G__15888 = k;
    var G__15889 = l;
    var G__15890 = m;
    var G__15891 = n;
    var G__15892 = o;
    var G__15893 = p;
    var G__15894 = q;
    var G__15895 = r;
    var G__15896 = s;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__15878, G__15879, G__15880, G__15881, G__15882, G__15883, G__15884, G__15885, G__15886, G__15887, G__15888, G__15889, G__15890, G__15891, G__15892, G__15893, G__15894, G__15895, G__15896) : self__.dispatch_fn.call(null, G__15878, G__15879, G__15880, G__15881, G__15882, G__15883, G__15884, G__15885, G__15886, G__15887, G__15888, G__15889, G__15890, G__15891, G__15892, G__15893, G__15894, 
    G__15895, G__15896);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__15897 = a;
  var G__15898 = b;
  var G__15899 = c;
  var G__15900 = d;
  var G__15901 = e;
  var G__15902 = f;
  var G__15903 = g;
  var G__15904 = h;
  var G__15905 = i;
  var G__15906 = j;
  var G__15907 = k;
  var G__15908 = l;
  var G__15909 = m;
  var G__15910 = n;
  var G__15911 = o;
  var G__15912 = p;
  var G__15913 = q;
  var G__15914 = r;
  var G__15915 = s;
  return target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__15897, G__15898, G__15899, G__15900, G__15901, G__15902, G__15903, G__15904, G__15905, G__15906, G__15907, G__15908, G__15909, G__15910, G__15911, G__15912, G__15913, G__15914, G__15915) : target_fn.call(null, G__15897, G__15898, G__15899, G__15900, G__15901, G__15902, G__15903, G__15904, G__15905, G__15906, G__15907, G__15908, G__15909, G__15910, G__15911, G__15912, G__15913, G__15914, G__15915);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__15916 = a;
    var G__15917 = b;
    var G__15918 = c;
    var G__15919 = d;
    var G__15920 = e;
    var G__15921 = f;
    var G__15922 = g;
    var G__15923 = h;
    var G__15924 = i;
    var G__15925 = j;
    var G__15926 = k;
    var G__15927 = l;
    var G__15928 = m;
    var G__15929 = n;
    var G__15930 = o;
    var G__15931 = p;
    var G__15932 = q;
    var G__15933 = r;
    var G__15934 = s;
    var G__15935 = t;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__15916, G__15917, G__15918, G__15919, G__15920, G__15921, G__15922, G__15923, G__15924, G__15925, G__15926, G__15927, G__15928, G__15929, G__15930, G__15931, G__15932, G__15933, G__15934, G__15935) : self__.dispatch_fn.call(null, G__15916, G__15917, G__15918, G__15919, G__15920, G__15921, G__15922, G__15923, G__15924, G__15925, G__15926, G__15927, G__15928, G__15929, G__15930, G__15931, 
    G__15932, G__15933, G__15934, G__15935);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__15936 = a;
  var G__15937 = b;
  var G__15938 = c;
  var G__15939 = d;
  var G__15940 = e;
  var G__15941 = f;
  var G__15942 = g;
  var G__15943 = h;
  var G__15944 = i;
  var G__15945 = j;
  var G__15946 = k;
  var G__15947 = l;
  var G__15948 = m;
  var G__15949 = n;
  var G__15950 = o;
  var G__15951 = p;
  var G__15952 = q;
  var G__15953 = r;
  var G__15954 = s;
  var G__15955 = t;
  return target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__15936, G__15937, G__15938, G__15939, G__15940, G__15941, G__15942, G__15943, G__15944, G__15945, G__15946, G__15947, G__15948, G__15949, G__15950, G__15951, G__15952, G__15953, G__15954, G__15955) : target_fn.call(null, G__15936, G__15937, G__15938, G__15939, G__15940, G__15941, G__15942, G__15943, G__15944, G__15945, G__15946, G__15947, G__15948, G__15949, G__15950, G__15951, G__15952, G__15953, G__15954, 
  G__15955);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var mf = this;
  var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";
cljs.core.MultiFn.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/MultiFn");
};
cljs.core.__GT_MultiFn = function __GT_MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  return new cljs.core.MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
};
cljs.core.remove_all_methods = function remove_all_methods(multifn) {
  return cljs.core._reset(multifn);
};
cljs.core.remove_method = function remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method(multifn, dispatch_val);
};
cljs.core.prefer_method = function prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method(multifn, dispatch_val_x, dispatch_val_y);
};
cljs.core.methods$ = function methods$(multifn) {
  return cljs.core._methods(multifn);
};
cljs.core.get_method = function get_method(multifn, dispatch_val) {
  return cljs.core._get_method(multifn, dispatch_val);
};
cljs.core.prefers = function prefers(multifn) {
  return cljs.core._prefers(multifn);
};
cljs.core.UUID = function(uuid) {
  this.uuid = uuid;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2153775104;
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var G__15957 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
  return goog.string.hashCode(G__15957);
};
cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, ___$1) {
  var self__ = this;
  var ___$2 = this;
  return cljs.core._write(writer, [cljs.core.str('#uuid "'), cljs.core.str(self__.uuid), cljs.core.str('"')].join(""));
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  return other instanceof cljs.core.UUID && self__.uuid === other.uuid;
};
cljs.core.UUID.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.uuid;
};
cljs.core.UUID.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";
cljs.core.UUID.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/UUID");
};
cljs.core.__GT_UUID = function __GT_UUID(uuid) {
  return new cljs.core.UUID(uuid);
};
cljs.core.ExceptionInfo = function(message, data, cause) {
  this.message = message;
  this.data = data;
  this.cause = cause;
};
cljs.core.ExceptionInfo.cljs$lang$type = true;
cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";
cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/ExceptionInfo");
};
cljs.core.__GT_ExceptionInfo = function __GT_ExceptionInfo(message, data, cause) {
  return new cljs.core.ExceptionInfo(message, data, cause);
};
cljs.core.pr_writer_ex_info = function pr_writer_ex_info(obj, writer, opts) {
  cljs.core._write(writer, "#ExceptionInfo{:message ");
  cljs.core.pr_writer(obj.message, writer, opts);
  if (cljs.core.truth_(obj.data)) {
    cljs.core._write(writer, ", :data ");
    cljs.core.pr_writer(obj.data, writer, opts);
  } else {
  }
  if (cljs.core.truth_(obj.cause)) {
    cljs.core._write(writer, ", :cause ");
    cljs.core.pr_writer(obj.cause, writer, opts);
  } else {
  }
  return cljs.core._write(writer, "}");
};
cljs.core.ex_info = function() {
  var ex_info = null;
  var ex_info__2 = function(msg, data) {
    return ex_info.cljs$core$IFn$_invoke$arity$3(msg, data, null);
  };
  var ex_info__3 = function(msg, data, cause) {
    cljs.core.ExceptionInfo.prototype = function() {
      var G__15962 = msg;
      return Error(G__15962);
    }();
    cljs.core.ExceptionInfo.prototype.name = "ExceptionInfo";
    cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;
    cljs.core.ExceptionInfo.prototype.toString = cljs.core.pr_str_STAR_;
    cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;
    cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(obj, writer, opts) {
      var obj__$1 = this;
      return cljs.core.pr_writer_ex_info(obj__$1, writer, opts);
    };
    return new cljs.core.ExceptionInfo(msg, data, cause);
  };
  ex_info = function(msg, data, cause) {
    switch(arguments.length) {
      case 2:
        return ex_info__2.call(this, msg, data);
      case 3:
        return ex_info__3.call(this, msg, data, cause);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
  ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
  return ex_info;
}();
cljs.core.ex_data = function ex_data(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.data;
  } else {
    return null;
  }
};
cljs.core.ex_message = function ex_message(ex) {
  if (ex instanceof Error) {
    return ex.message;
  } else {
    return null;
  }
};
cljs.core.ex_cause = function ex_cause(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.cause;
  } else {
    return null;
  }
};
cljs.core.comparator = function comparator(pred) {
  return function(x, y) {
    if (cljs.core.truth_(function() {
      var G__15967 = x;
      var G__15968 = y;
      return pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__15967, G__15968) : pred.call(null, G__15967, G__15968);
    }())) {
      return-1;
    } else {
      if (cljs.core.truth_(function() {
        var G__15969 = y;
        var G__15970 = x;
        return pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__15969, G__15970) : pred.call(null, G__15969, G__15970);
      }())) {
        return 1;
      } else {
        return 0;
      }
    }
  };
};
cljs.core.special_symbol_QMARK_ = function special_symbol_QMARK_(x) {
  return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null, "\x26", "\x26", -2144855648, null), null, new cljs.core.Symbol(null, "defrecord*", "defrecord*", -1936366207, null), null, new cljs.core.Symbol(null, "try", "try", -1273693247, null), null, new cljs.core.Symbol(null, "loop*", "loop*", 615029416, null), null, new cljs.core.Symbol(null, "do", "do", 1686842252, null), null, new cljs.core.Symbol(null, "letfn*", 
  "letfn*", -110097810, null), null, new cljs.core.Symbol(null, "if", "if", 1181717262, null), null, new cljs.core.Symbol(null, "new", "new", -444906321, null), null, new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), null, new cljs.core.Symbol(null, "deftype*", "deftype*", 962659890, null), null, new cljs.core.Symbol(null, "let*", "let*", 1920721458, null), null, new cljs.core.Symbol(null, "js*", "js*", -1134233646, null), null, new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), 
  null, new cljs.core.Symbol(null, "recur", "recur", 1202958259, null), null, new cljs.core.Symbol(null, "set!", "set!", 250714521, null), null, new cljs.core.Symbol(null, ".", ".", 1975675962, null), null, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), null, new cljs.core.Symbol(null, "throw", "throw", 595905694, null), null, new cljs.core.Symbol(null, "def", "def", 597100991, null), null], null), null), x);
};
cljs.core.test = function test(v) {
  var f = v.cljs$lang$test;
  if (cljs.core.truth_(f)) {
    f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    return new cljs.core.Keyword(null, "ok", "ok", 967785236);
  } else {
    return new cljs.core.Keyword(null, "no-test", "no-test", -1679482642);
  }
};
goog.provide("cljs.core.async.impl.protocols");
goog.require("cljs.core");
cljs.core.async.impl.protocols.MAX_QUEUE_SIZE = 1024;
cljs.core.async.impl.protocols.ReadPort = function() {
  var obj19136 = {};
  return obj19136;
}();
cljs.core.async.impl.protocols.take_BANG_ = function take_BANG_(port, fn1_handler) {
  if (function() {
    var and__3913__auto__ = port;
    if (and__3913__auto__) {
      return port.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return port.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2(port, fn1_handler);
  } else {
    var x__4569__auto__ = port == null ? null : port;
    return function() {
      var or__3925__auto__ = cljs.core.async.impl.protocols.take_BANG_[goog.typeOf(x__4569__auto__)];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core.async.impl.protocols.take_BANG_["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ReadPort.take!", port);
        }
      }
    }().call(null, port, fn1_handler);
  }
};
cljs.core.async.impl.protocols.WritePort = function() {
  var obj19138 = {};
  return obj19138;
}();
cljs.core.async.impl.protocols.put_BANG_ = function put_BANG_(port, val, fn1_handler) {
  if (function() {
    var and__3913__auto__ = port;
    if (and__3913__auto__) {
      return port.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return port.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3(port, val, fn1_handler);
  } else {
    var x__4569__auto__ = port == null ? null : port;
    return function() {
      var or__3925__auto__ = cljs.core.async.impl.protocols.put_BANG_[goog.typeOf(x__4569__auto__)];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core.async.impl.protocols.put_BANG_["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "WritePort.put!", port);
        }
      }
    }().call(null, port, val, fn1_handler);
  }
};
cljs.core.async.impl.protocols.Channel = function() {
  var obj19140 = {};
  return obj19140;
}();
cljs.core.async.impl.protocols.close_BANG_ = function close_BANG_(chan) {
  if (function() {
    var and__3913__auto__ = chan;
    if (and__3913__auto__) {
      return chan.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return chan.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1(chan);
  } else {
    var x__4569__auto__ = chan == null ? null : chan;
    return function() {
      var or__3925__auto__ = cljs.core.async.impl.protocols.close_BANG_[goog.typeOf(x__4569__auto__)];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core.async.impl.protocols.close_BANG_["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Channel.close!", chan);
        }
      }
    }().call(null, chan);
  }
};
cljs.core.async.impl.protocols.closed_QMARK_ = function closed_QMARK_(chan) {
  if (function() {
    var and__3913__auto__ = chan;
    if (and__3913__auto__) {
      return chan.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return chan.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1(chan);
  } else {
    var x__4569__auto__ = chan == null ? null : chan;
    return function() {
      var or__3925__auto__ = cljs.core.async.impl.protocols.closed_QMARK_[goog.typeOf(x__4569__auto__)];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core.async.impl.protocols.closed_QMARK_["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Channel.closed?", chan);
        }
      }
    }().call(null, chan);
  }
};
cljs.core.async.impl.protocols.Handler = function() {
  var obj19142 = {};
  return obj19142;
}();
cljs.core.async.impl.protocols.active_QMARK_ = function active_QMARK_(h) {
  if (function() {
    var and__3913__auto__ = h;
    if (and__3913__auto__) {
      return h.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return h.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1(h);
  } else {
    var x__4569__auto__ = h == null ? null : h;
    return function() {
      var or__3925__auto__ = cljs.core.async.impl.protocols.active_QMARK_[goog.typeOf(x__4569__auto__)];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core.async.impl.protocols.active_QMARK_["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Handler.active?", h);
        }
      }
    }().call(null, h);
  }
};
cljs.core.async.impl.protocols.commit = function commit(h) {
  if (function() {
    var and__3913__auto__ = h;
    if (and__3913__auto__) {
      return h.cljs$core$async$impl$protocols$Handler$commit$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return h.cljs$core$async$impl$protocols$Handler$commit$arity$1(h);
  } else {
    var x__4569__auto__ = h == null ? null : h;
    return function() {
      var or__3925__auto__ = cljs.core.async.impl.protocols.commit[goog.typeOf(x__4569__auto__)];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core.async.impl.protocols.commit["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Handler.commit", h);
        }
      }
    }().call(null, h);
  }
};
cljs.core.async.impl.protocols.Buffer = function() {
  var obj19144 = {};
  return obj19144;
}();
cljs.core.async.impl.protocols.full_QMARK_ = function full_QMARK_(b) {
  if (function() {
    var and__3913__auto__ = b;
    if (and__3913__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1(b);
  } else {
    var x__4569__auto__ = b == null ? null : b;
    return function() {
      var or__3925__auto__ = cljs.core.async.impl.protocols.full_QMARK_[goog.typeOf(x__4569__auto__)];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core.async.impl.protocols.full_QMARK_["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Buffer.full?", b);
        }
      }
    }().call(null, b);
  }
};
cljs.core.async.impl.protocols.remove_BANG_ = function remove_BANG_(b) {
  if (function() {
    var and__3913__auto__ = b;
    if (and__3913__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1(b);
  } else {
    var x__4569__auto__ = b == null ? null : b;
    return function() {
      var or__3925__auto__ = cljs.core.async.impl.protocols.remove_BANG_[goog.typeOf(x__4569__auto__)];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core.async.impl.protocols.remove_BANG_["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Buffer.remove!", b);
        }
      }
    }().call(null, b);
  }
};
cljs.core.async.impl.protocols.add_BANG__STAR_ = function add_BANG__STAR_(b, itm) {
  if (function() {
    var and__3913__auto__ = b;
    if (and__3913__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2(b, itm);
  } else {
    var x__4569__auto__ = b == null ? null : b;
    return function() {
      var or__3925__auto__ = cljs.core.async.impl.protocols.add_BANG__STAR_[goog.typeOf(x__4569__auto__)];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core.async.impl.protocols.add_BANG__STAR_["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Buffer.add!*", b);
        }
      }
    }().call(null, b, itm);
  }
};
cljs.core.async.impl.protocols.add_BANG_ = function() {
  var add_BANG_ = null;
  var add_BANG___1 = function(b) {
    return b;
  };
  var add_BANG___2 = function(b, itm) {
    if (!(itm == null)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "itm", "itm", -713282527, null)))))].join(""));
    }
    return cljs.core.async.impl.protocols.add_BANG__STAR_.call(null, b, itm);
  };
  add_BANG_ = function(b, itm) {
    switch(arguments.length) {
      case 1:
        return add_BANG___1.call(this, b);
      case 2:
        return add_BANG___2.call(this, b, itm);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  add_BANG_.cljs$core$IFn$_invoke$arity$1 = add_BANG___1;
  add_BANG_.cljs$core$IFn$_invoke$arity$2 = add_BANG___2;
  return add_BANG_;
}();
cljs.core.async.impl.protocols.UnblockingBuffer = function() {
  var obj19146 = {};
  return obj19146;
}();
goog.provide("cljs.core.async.impl.buffers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.buffers.acopy = function acopy(src, src_start, dest, dest_start, len) {
  var cnt = 0;
  while (true) {
    if (cnt < len) {
      dest[dest_start + cnt] = src[src_start + cnt];
      var G__19149 = cnt + 1;
      cnt = G__19149;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.async.impl.buffers.RingBuffer = function(head, tail, length, arr) {
  this.head = head;
  this.tail = tail;
  this.length = length;
  this.arr = arr;
};
cljs.core.async.impl.buffers.RingBuffer.prototype.pop = function() {
  var self__ = this;
  var _ = this;
  if (self__.length === 0) {
    return null;
  } else {
    var x = self__.arr[self__.tail];
    self__.arr[self__.tail] = null;
    self__.tail = (self__.tail + 1) % self__.arr.length;
    self__.length = self__.length - 1;
    return x;
  }
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unshift = function(x) {
  var self__ = this;
  var _ = this;
  self__.arr[self__.head] = x;
  self__.head = (self__.head + 1) % self__.arr.length;
  self__.length = self__.length + 1;
  return null;
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unbounded_unshift = function(x) {
  var self__ = this;
  var this$ = this;
  if (self__.length + 1 === self__.arr.length) {
    this$.resize();
  } else {
  }
  return this$.unshift(x);
};
cljs.core.async.impl.buffers.RingBuffer.prototype.resize = function() {
  var self__ = this;
  var _ = this;
  var new_arr_size = self__.arr.length * 2;
  var new_arr = new Array(new_arr_size);
  if (self__.tail < self__.head) {
    cljs.core.async.impl.buffers.acopy.call(null, self__.arr, self__.tail, new_arr, 0, self__.length);
    self__.tail = 0;
    self__.head = self__.length;
    return self__.arr = new_arr;
  } else {
    if (self__.tail > self__.head) {
      cljs.core.async.impl.buffers.acopy.call(null, self__.arr, self__.tail, new_arr, 0, self__.arr.length - self__.tail);
      cljs.core.async.impl.buffers.acopy.call(null, self__.arr, 0, new_arr, self__.arr.length - self__.tail, self__.head);
      self__.tail = 0;
      self__.head = self__.length;
      return self__.arr = new_arr;
    } else {
      if (self__.tail === self__.head) {
        self__.tail = 0;
        self__.head = 0;
        return self__.arr = new_arr;
      } else {
        return null;
      }
    }
  }
};
cljs.core.async.impl.buffers.RingBuffer.prototype.cleanup = function(keep_QMARK_) {
  var self__ = this;
  var this$ = this;
  var n__4812__auto__ = self__.length;
  var x = 0;
  while (true) {
    if (x < n__4812__auto__) {
      var v_19150 = this$.pop();
      if (keep_QMARK_.call(null, v_19150)) {
        this$.unshift(v_19150);
      } else {
      }
      var G__19151 = x + 1;
      x = G__19151;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/RingBuffer";
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write.call(null, writer__4513__auto__, "cljs.core.async.impl.buffers/RingBuffer");
};
cljs.core.async.impl.buffers.__GT_RingBuffer = function __GT_RingBuffer(head, tail, length, arr) {
  return new cljs.core.async.impl.buffers.RingBuffer(head, tail, length, arr);
};
cljs.core.async.impl.buffers.ring_buffer = function ring_buffer(n) {
  if (n > 0) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Can't create a ring buffer of size 0"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3e", "\x3e", 1085014381, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null), 0)))].join(""));
  }
  return new cljs.core.async.impl.buffers.RingBuffer(0, 0, 0, new Array(n));
};
cljs.core.async.impl.buffers.FixedBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length === self__.n;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  self__.buf.unbounded_unshift(itm);
  return this$__$1;
};
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/FixedBuffer";
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write.call(null, writer__4513__auto__, "cljs.core.async.impl.buffers/FixedBuffer");
};
cljs.core.async.impl.buffers.__GT_FixedBuffer = function __GT_FixedBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.FixedBuffer(buf, n);
};
cljs.core.async.impl.buffers.fixed_buffer = function fixed_buffer(n) {
  return new cljs.core.async.impl.buffers.FixedBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
cljs.core.async.impl.buffers.DroppingBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return false;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.buf.length === self__.n) {
  } else {
    self__.buf.unshift(itm);
  }
  return this$__$1;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$UnblockingBuffer$ = true;
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/DroppingBuffer";
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write.call(null, writer__4513__auto__, "cljs.core.async.impl.buffers/DroppingBuffer");
};
cljs.core.async.impl.buffers.__GT_DroppingBuffer = function __GT_DroppingBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(buf, n);
};
cljs.core.async.impl.buffers.dropping_buffer = function dropping_buffer(n) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
cljs.core.async.impl.buffers.SlidingBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return false;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.buf.length === self__.n) {
    cljs.core.async.impl.protocols.remove_BANG_.call(null, this$__$1);
  } else {
  }
  self__.buf.unshift(itm);
  return this$__$1;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$UnblockingBuffer$ = true;
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/SlidingBuffer";
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write.call(null, writer__4513__auto__, "cljs.core.async.impl.buffers/SlidingBuffer");
};
cljs.core.async.impl.buffers.__GT_SlidingBuffer = function __GT_SlidingBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(buf, n);
};
cljs.core.async.impl.buffers.sliding_buffer = function sliding_buffer(n) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
goog.provide("cljs.core.async.impl.dispatch");
goog.require("cljs.core");
goog.require("goog.async.nextTick");
goog.require("cljs.core.async.impl.buffers");
cljs.core.async.impl.dispatch.tasks = cljs.core.async.impl.buffers.ring_buffer.call(null, 32);
cljs.core.async.impl.dispatch.running_QMARK_ = false;
cljs.core.async.impl.dispatch.queued_QMARK_ = false;
cljs.core.async.impl.dispatch.TASK_BATCH_SIZE = 1024;
cljs.core.async.impl.dispatch.process_messages = function process_messages() {
  cljs.core.async.impl.dispatch.running_QMARK_ = true;
  cljs.core.async.impl.dispatch.queued_QMARK_ = false;
  var count_19154 = 0;
  while (true) {
    var m_19155 = cljs.core.async.impl.dispatch.tasks.pop();
    if (m_19155 == null) {
    } else {
      m_19155.call(null);
      if (count_19154 < cljs.core.async.impl.dispatch.TASK_BATCH_SIZE) {
        var G__19156 = count_19154 + 1;
        count_19154 = G__19156;
        continue;
      } else {
      }
    }
    break;
  }
  cljs.core.async.impl.dispatch.running_QMARK_ = false;
  if (cljs.core.async.impl.dispatch.tasks.length > 0) {
    return cljs.core.async.impl.dispatch.queue_dispatcher.call(null);
  } else {
    return null;
  }
};
cljs.core.async.impl.dispatch.queue_dispatcher = function queue_dispatcher() {
  if (cljs.core.truth_(function() {
    var and__3913__auto__ = cljs.core.async.impl.dispatch.queued_QMARK_;
    if (cljs.core.truth_(and__3913__auto__)) {
      return cljs.core.async.impl.dispatch.running_QMARK_;
    } else {
      return and__3913__auto__;
    }
  }())) {
    return null;
  } else {
    cljs.core.async.impl.dispatch.queued_QMARK_ = true;
    return goog.async.nextTick(cljs.core.async.impl.dispatch.process_messages);
  }
};
cljs.core.async.impl.dispatch.run = function run(f) {
  cljs.core.async.impl.dispatch.tasks.unbounded_unshift(f);
  return cljs.core.async.impl.dispatch.queue_dispatcher.call(null);
};
cljs.core.async.impl.dispatch.queue_delay = function queue_delay(f, delay) {
  return setTimeout(f, delay);
};
goog.provide("cljs.core.async.impl.channels");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.channels.box = function box(val) {
  if (typeof cljs.core.async.impl.channels.t19162 !== "undefined") {
  } else {
    cljs.core.async.impl.channels.t19162 = function(val, box, meta19163) {
      this.val = val;
      this.box = box;
      this.meta19163 = meta19163;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 425984;
    };
    cljs.core.async.impl.channels.t19162.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.val;
    };
    cljs.core.async.impl.channels.t19162.prototype.cljs$core$IMeta$_meta$arity$1 = function(_19164) {
      var self__ = this;
      var _19164__$1 = this;
      return self__.meta19163;
    };
    cljs.core.async.impl.channels.t19162.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_19164, meta19163__$1) {
      var self__ = this;
      var _19164__$1 = this;
      return new cljs.core.async.impl.channels.t19162(self__.val, self__.box, meta19163__$1);
    };
    cljs.core.async.impl.channels.t19162.cljs$lang$type = true;
    cljs.core.async.impl.channels.t19162.cljs$lang$ctorStr = "cljs.core.async.impl.channels/t19162";
    cljs.core.async.impl.channels.t19162.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
      return cljs.core._write.call(null, writer__4513__auto__, "cljs.core.async.impl.channels/t19162");
    };
    cljs.core.async.impl.channels.__GT_t19162 = function __GT_t19162(val__$1, box__$1, meta19163) {
      return new cljs.core.async.impl.channels.t19162(val__$1, box__$1, meta19163);
    };
  }
  return new cljs.core.async.impl.channels.t19162(val, box, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.impl.channels.PutBox = function(handler, val) {
  this.handler = handler;
  this.val = val;
};
cljs.core.async.impl.channels.PutBox.cljs$lang$type = true;
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorStr = "cljs.core.async.impl.channels/PutBox";
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write.call(null, writer__4513__auto__, "cljs.core.async.impl.channels/PutBox");
};
cljs.core.async.impl.channels.__GT_PutBox = function __GT_PutBox(handler, val) {
  return new cljs.core.async.impl.channels.PutBox(handler, val);
};
cljs.core.async.impl.channels.put_active_QMARK_ = function put_active_QMARK_(box) {
  return cljs.core.async.impl.protocols.active_QMARK_.call(null, box.handler);
};
cljs.core.async.impl.channels.MAX_DIRTY = 64;
cljs.core.async.impl.channels.MMC = function() {
  var obj19166 = {};
  return obj19166;
}();
cljs.core.async.impl.channels.abort = function abort(this$) {
  if (function() {
    var and__3913__auto__ = this$;
    if (and__3913__auto__) {
      return this$.cljs$core$async$impl$channels$MMC$abort$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return this$.cljs$core$async$impl$channels$MMC$abort$arity$1(this$);
  } else {
    var x__4569__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3925__auto__ = cljs.core.async.impl.channels.abort[goog.typeOf(x__4569__auto__)];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core.async.impl.channels.abort["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "MMC.abort", this$);
        }
      }
    }().call(null, this$);
  }
};
cljs.core.async.impl.channels.ManyToManyChannel = function(takes, dirty_takes, puts, dirty_puts, buf, closed, add_BANG_) {
  this.takes = takes;
  this.dirty_takes = dirty_takes;
  this.puts = puts;
  this.dirty_puts = dirty_puts;
  this.buf = buf;
  this.closed = closed;
  this.add_BANG_ = add_BANG_;
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.closed;
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.closed) {
    return null;
  } else {
    self__.closed = true;
    if (cljs.core.truth_(function() {
      var and__3913__auto__ = self__.buf;
      if (cljs.core.truth_(and__3913__auto__)) {
        return self__.puts.length === 0;
      } else {
        return and__3913__auto__;
      }
    }())) {
      self__.add_BANG_.call(null, self__.buf);
    } else {
    }
    while (true) {
      var taker_19167 = self__.takes.pop();
      if (taker_19167 == null) {
      } else {
        if (cljs.core.async.impl.protocols.active_QMARK_.call(null, taker_19167)) {
          var take_cb_19168 = cljs.core.async.impl.protocols.commit.call(null, taker_19167);
          var val_19169 = cljs.core.truth_(function() {
            var and__3913__auto__ = self__.buf;
            if (cljs.core.truth_(and__3913__auto__)) {
              return cljs.core.count.call(null, self__.buf) > 0;
            } else {
              return and__3913__auto__;
            }
          }()) ? cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf) : null;
          cljs.core.async.impl.dispatch.run.call(null, function(take_cb_19168, val_19169, taker_19167, this$__$1) {
            return function() {
              return take_cb_19168.call(null, val_19169);
            };
          }(take_cb_19168, val_19169, taker_19167, this$__$1));
        } else {
        }
        continue;
      }
      break;
    }
    return null;
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(this$, handler) {
  var self__ = this;
  var this$__$1 = this;
  if (!cljs.core.async.impl.protocols.active_QMARK_.call(null, handler)) {
    return null;
  } else {
    if (!(self__.buf == null) && cljs.core.count.call(null, self__.buf) > 0) {
      var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
      var retval = cljs.core.async.impl.channels.box.call(null, cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf));
      while (true) {
        if (cljs.core.truth_(cljs.core.async.impl.protocols.full_QMARK_.call(null, self__.buf))) {
        } else {
          var putter_19170 = self__.puts.pop();
          if (putter_19170 == null) {
          } else {
            var put_handler_19171 = putter_19170.handler;
            var val_19172 = putter_19170.val;
            if (cljs.core.async.impl.protocols.active_QMARK_.call(null, put_handler_19171)) {
              var put_cb_19173 = cljs.core.async.impl.protocols.commit.call(null, put_handler_19171);
              cljs.core.async.impl.protocols.commit.call(null, handler);
              cljs.core.async.impl.dispatch.run.call(null, function(put_cb_19173, put_handler_19171, val_19172, putter_19170, _, retval, this$__$1) {
                return function() {
                  return put_cb_19173.call(null, true);
                };
              }(put_cb_19173, put_handler_19171, val_19172, putter_19170, _, retval, this$__$1));
              if (cljs.core.reduced_QMARK_.call(null, self__.add_BANG_.call(null, self__.buf, val_19172))) {
                cljs.core.async.impl.channels.abort.call(null, this$__$1);
              } else {
              }
            } else {
            }
            continue;
          }
        }
        break;
      }
      return retval;
    } else {
      var putter = function() {
        while (true) {
          var putter = self__.puts.pop();
          if (cljs.core.truth_(putter)) {
            if (cljs.core.async.impl.protocols.active_QMARK_.call(null, putter.handler)) {
              return putter;
            } else {
              continue;
            }
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(putter)) {
        var put_cb = cljs.core.async.impl.protocols.commit.call(null, putter.handler);
        cljs.core.async.impl.protocols.commit.call(null, handler);
        cljs.core.async.impl.dispatch.run.call(null, function(put_cb, putter, this$__$1) {
          return function() {
            return put_cb.call(null, true);
          };
        }(put_cb, putter, this$__$1));
        return cljs.core.async.impl.channels.box.call(null, putter.val);
      } else {
        if (cljs.core.truth_(self__.closed)) {
          if (cljs.core.truth_(self__.buf)) {
            self__.add_BANG_.call(null, self__.buf);
          } else {
          }
          if (cljs.core.truth_(function() {
            var and__3913__auto__ = cljs.core.async.impl.protocols.active_QMARK_.call(null, handler);
            if (cljs.core.truth_(and__3913__auto__)) {
              return cljs.core.async.impl.protocols.commit.call(null, handler);
            } else {
              return and__3913__auto__;
            }
          }())) {
            var has_val = function() {
              var and__3913__auto__ = self__.buf;
              if (cljs.core.truth_(and__3913__auto__)) {
                return cljs.core.count.call(null, self__.buf) > 0;
              } else {
                return and__3913__auto__;
              }
            }();
            var val = cljs.core.truth_(has_val) ? cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf) : null;
            return cljs.core.async.impl.channels.box.call(null, val);
          } else {
            return null;
          }
        } else {
          if (self__.dirty_takes > cljs.core.async.impl.channels.MAX_DIRTY) {
            self__.dirty_takes = 0;
            self__.takes.cleanup(cljs.core.async.impl.protocols.active_QMARK_);
          } else {
            self__.dirty_takes = self__.dirty_takes + 1;
          }
          if (self__.takes.length < cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) {
          } else {
            throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("No more than "), cljs.core.str(cljs.core.async.impl.protocols.MAX_QUEUE_SIZE), cljs.core.str(" pending takes are allowed on a single channel.")].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3c", "\x3c", 993667236, null), cljs.core.list(new cljs.core.Symbol(null, ".-length", ".-length", -280799999, null), new cljs.core.Symbol(null, "takes", 
            "takes", 298247964, null)), new cljs.core.Symbol("impl", "MAX-QUEUE-SIZE", "impl/MAX-QUEUE-SIZE", 1508600732, null))))].join(""));
          }
          self__.takes.unbounded_unshift(handler);
          return null;
        }
      }
    }
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(this$, val, handler) {
  var self__ = this;
  var this$__$1 = this;
  if (!(val == null)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Can't put nil in on a channel"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null)))))].join(""));
  }
  var closed__$1 = self__.closed;
  if (closed__$1 || !cljs.core.async.impl.protocols.active_QMARK_.call(null, handler)) {
    return cljs.core.async.impl.channels.box.call(null, !closed__$1);
  } else {
    if (cljs.core.truth_(function() {
      var and__3913__auto__ = self__.buf;
      if (cljs.core.truth_(and__3913__auto__)) {
        return cljs.core.not.call(null, cljs.core.async.impl.protocols.full_QMARK_.call(null, self__.buf));
      } else {
        return and__3913__auto__;
      }
    }())) {
      cljs.core.async.impl.protocols.commit.call(null, handler);
      var done_QMARK_ = cljs.core.reduced_QMARK_.call(null, self__.add_BANG_.call(null, self__.buf, val));
      while (true) {
        if (self__.takes.length > 0 && cljs.core.count.call(null, self__.buf) > 0) {
          var taker_19174 = self__.takes.pop();
          if (cljs.core.async.impl.protocols.active_QMARK_.call(null, taker_19174)) {
            var take_cb_19175 = cljs.core.async.impl.protocols.commit.call(null, taker_19174);
            var val_19176__$1 = cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf);
            cljs.core.async.impl.dispatch.run.call(null, function(take_cb_19175, val_19176__$1, taker_19174, done_QMARK_, closed__$1, this$__$1) {
              return function() {
                return take_cb_19175.call(null, val_19176__$1);
              };
            }(take_cb_19175, val_19176__$1, taker_19174, done_QMARK_, closed__$1, this$__$1));
          } else {
            continue;
          }
        } else {
        }
        break;
      }
      if (done_QMARK_) {
        cljs.core.async.impl.channels.abort.call(null, this$__$1);
      } else {
      }
      return cljs.core.async.impl.channels.box.call(null, true);
    } else {
      var taker = function() {
        while (true) {
          var taker = self__.takes.pop();
          if (cljs.core.truth_(taker)) {
            if (cljs.core.truth_(cljs.core.async.impl.protocols.active_QMARK_.call(null, taker))) {
              return taker;
            } else {
              continue;
            }
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(taker)) {
        var take_cb = cljs.core.async.impl.protocols.commit.call(null, taker);
        cljs.core.async.impl.protocols.commit.call(null, handler);
        cljs.core.async.impl.dispatch.run.call(null, function(take_cb, taker, closed__$1, this$__$1) {
          return function() {
            return take_cb.call(null, val);
          };
        }(take_cb, taker, closed__$1, this$__$1));
        return cljs.core.async.impl.channels.box.call(null, true);
      } else {
        if (self__.dirty_puts > cljs.core.async.impl.channels.MAX_DIRTY) {
          self__.dirty_puts = 0;
          self__.puts.cleanup(cljs.core.async.impl.channels.put_active_QMARK_);
        } else {
          self__.dirty_puts = self__.dirty_puts + 1;
        }
        if (self__.puts.length < cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) {
        } else {
          throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("No more than "), cljs.core.str(cljs.core.async.impl.protocols.MAX_QUEUE_SIZE), cljs.core.str(" pending puts are allowed on a single channel."), cljs.core.str(" Consider using a windowed buffer.")].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3c", "\x3c", 993667236, null), cljs.core.list(new cljs.core.Symbol(null, ".-length", ".-length", 
          -280799999, null), new cljs.core.Symbol(null, "puts", "puts", -1883877054, null)), new cljs.core.Symbol("impl", "MAX-QUEUE-SIZE", "impl/MAX-QUEUE-SIZE", 1508600732, null))))].join(""));
        }
        self__.puts.unbounded_unshift(new cljs.core.async.impl.channels.PutBox(handler, val));
        return null;
      }
    }
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$channels$MMC$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$channels$MMC$abort$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  while (true) {
    var putter_19177 = self__.puts.pop();
    if (putter_19177 == null) {
    } else {
      var put_handler_19178 = putter_19177.handler;
      var val_19179 = putter_19177.val;
      if (cljs.core.async.impl.protocols.active_QMARK_.call(null, put_handler_19178)) {
        var put_cb_19180 = cljs.core.async.impl.protocols.commit.call(null, put_handler_19178);
        cljs.core.async.impl.dispatch.run.call(null, function(put_cb_19180, put_handler_19178, val_19179, putter_19177, this$__$1) {
          return function() {
            return put_cb_19180.call(null, true);
          };
        }(put_cb_19180, put_handler_19178, val_19179, putter_19177, this$__$1));
      } else {
        continue;
      }
    }
    break;
  }
  self__.puts.cleanup(cljs.core.constantly.call(null, false));
  return cljs.core.async.impl.protocols.close_BANG_.call(null, this$__$1);
};
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$type = true;
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorStr = "cljs.core.async.impl.channels/ManyToManyChannel";
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write.call(null, writer__4513__auto__, "cljs.core.async.impl.channels/ManyToManyChannel");
};
cljs.core.async.impl.channels.__GT_ManyToManyChannel = function __GT_ManyToManyChannel(takes, dirty_takes, puts, dirty_puts, buf, closed, add_BANG_) {
  return new cljs.core.async.impl.channels.ManyToManyChannel(takes, dirty_takes, puts, dirty_puts, buf, closed, add_BANG_);
};
cljs.core.async.impl.channels.ex_handler = function ex_handler(ex) {
  console.log(ex);
  return null;
};
cljs.core.async.impl.channels.handle = function handle(buf, exh, t) {
  var else$ = function() {
    var or__3925__auto__ = exh;
    if (cljs.core.truth_(or__3925__auto__)) {
      return or__3925__auto__;
    } else {
      return cljs.core.async.impl.channels.ex_handler;
    }
  }().call(null, t);
  if (else$ == null) {
    return buf;
  } else {
    return cljs.core.async.impl.protocols.add_BANG_.call(null, buf, else$);
  }
};
cljs.core.async.impl.channels.chan = function() {
  var chan = null;
  var chan__1 = function(buf) {
    return chan.call(null, buf, null);
  };
  var chan__2 = function(buf, xform) {
    return chan.call(null, buf, xform, null);
  };
  var chan__3 = function(buf, xform, exh) {
    return new cljs.core.async.impl.channels.ManyToManyChannel(cljs.core.async.impl.buffers.ring_buffer.call(null, 32), 0, cljs.core.async.impl.buffers.ring_buffer.call(null, 32), 0, buf, false, function() {
      var add_BANG_ = cljs.core.truth_(xform) ? xform.call(null, cljs.core.async.impl.protocols.add_BANG_) : cljs.core.async.impl.protocols.add_BANG_;
      return function(add_BANG_) {
        return function() {
          var G__19185 = null;
          var G__19185__1 = function(buf__$1) {
            try {
              return add_BANG_.call(null, buf__$1);
            } catch (e19183) {
              var t = e19183;
              return cljs.core.async.impl.channels.handle.call(null, buf__$1, exh, t);
            }
          };
          var G__19185__2 = function(buf__$1, val) {
            try {
              return add_BANG_.call(null, buf__$1, val);
            } catch (e19184) {
              var t = e19184;
              return cljs.core.async.impl.channels.handle.call(null, buf__$1, exh, t);
            }
          };
          G__19185 = function(buf__$1, val) {
            switch(arguments.length) {
              case 1:
                return G__19185__1.call(this, buf__$1);
              case 2:
                return G__19185__2.call(this, buf__$1, val);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__19185.cljs$core$IFn$_invoke$arity$1 = G__19185__1;
          G__19185.cljs$core$IFn$_invoke$arity$2 = G__19185__2;
          return G__19185;
        }();
      }(add_BANG_);
    }());
  };
  chan = function(buf, xform, exh) {
    switch(arguments.length) {
      case 1:
        return chan__1.call(this, buf);
      case 2:
        return chan__2.call(this, buf, xform);
      case 3:
        return chan__3.call(this, buf, xform, exh);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chan.cljs$core$IFn$_invoke$arity$1 = chan__1;
  chan.cljs$core$IFn$_invoke$arity$2 = chan__2;
  chan.cljs$core$IFn$_invoke$arity$3 = chan__3;
  return chan;
}();
goog.provide("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.ioc_helpers.FN_IDX = 0;
cljs.core.async.impl.ioc_helpers.STATE_IDX = 1;
cljs.core.async.impl.ioc_helpers.VALUE_IDX = 2;
cljs.core.async.impl.ioc_helpers.BINDINGS_IDX = 3;
cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES = 4;
cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION = 5;
cljs.core.async.impl.ioc_helpers.USER_START_IDX = 6;
cljs.core.async.impl.ioc_helpers.aset_object = function aset_object(arr, idx, o) {
  return arr[idx][o];
};
cljs.core.async.impl.ioc_helpers.aget_object = function aget_object(arr, idx) {
  return arr[idx];
};
cljs.core.async.impl.ioc_helpers.finished_QMARK_ = function finished_QMARK_(state_array) {
  return cljs.core.keyword_identical_QMARK_.call(null, state_array[cljs.core.async.impl.ioc_helpers.STATE_IDX], new cljs.core.Keyword(null, "finished", "finished", -1018867731));
};
cljs.core.async.impl.ioc_helpers.fn_handler = function fn_handler(f) {
  if (typeof cljs.core.async.impl.ioc_helpers.t19094 !== "undefined") {
  } else {
    cljs.core.async.impl.ioc_helpers.t19094 = function(f, fn_handler, meta19095) {
      this.f = f;
      this.fn_handler = fn_handler;
      this.meta19095 = meta19095;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.impl.ioc_helpers.t19094.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.impl.ioc_helpers.t19094.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return true;
    };
    cljs.core.async.impl.ioc_helpers.t19094.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.f;
    };
    cljs.core.async.impl.ioc_helpers.t19094.prototype.cljs$core$IMeta$_meta$arity$1 = function(_19096) {
      var self__ = this;
      var _19096__$1 = this;
      return self__.meta19095;
    };
    cljs.core.async.impl.ioc_helpers.t19094.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_19096, meta19095__$1) {
      var self__ = this;
      var _19096__$1 = this;
      return new cljs.core.async.impl.ioc_helpers.t19094(self__.f, self__.fn_handler, meta19095__$1);
    };
    cljs.core.async.impl.ioc_helpers.t19094.cljs$lang$type = true;
    cljs.core.async.impl.ioc_helpers.t19094.cljs$lang$ctorStr = "cljs.core.async.impl.ioc-helpers/t19094";
    cljs.core.async.impl.ioc_helpers.t19094.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
      return cljs.core._write.call(null, writer__4513__auto__, "cljs.core.async.impl.ioc-helpers/t19094");
    };
    cljs.core.async.impl.ioc_helpers.__GT_t19094 = function __GT_t19094(f__$1, fn_handler__$1, meta19095) {
      return new cljs.core.async.impl.ioc_helpers.t19094(f__$1, fn_handler__$1, meta19095);
    };
  }
  return new cljs.core.async.impl.ioc_helpers.t19094(f, fn_handler, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.impl.ioc_helpers.run_state_machine = function run_state_machine(state) {
  return cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.FN_IDX).call(null, state);
};
cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped = function run_state_machine_wrapped(state) {
  try {
    return cljs.core.async.impl.ioc_helpers.run_state_machine.call(null, state);
  } catch (e19098) {
    if (e19098 instanceof Object) {
      var ex = e19098;
      cljs.core.async.impl.protocols.close_BANG_.call(null, cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.USER_START_IDX));
      throw ex;
    } else {
      throw e19098;
    }
  }
};
cljs.core.async.impl.ioc_helpers.take_BANG_ = function take_BANG_(state, blk, c) {
  var temp__4124__auto__ = cljs.core.async.impl.protocols.take_BANG_.call(null, c, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(x) {
    var statearr_19101_19103 = state;
    statearr_19101_19103[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = x;
    statearr_19101_19103[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
  }));
  if (cljs.core.truth_(temp__4124__auto__)) {
    var cb = temp__4124__auto__;
    var statearr_19102_19104 = state;
    statearr_19102_19104[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    statearr_19102_19104[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
  } else {
    return null;
  }
};
cljs.core.async.impl.ioc_helpers.put_BANG_ = function put_BANG_(state, blk, c, val) {
  var temp__4124__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, c, val, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(ret_val) {
    var statearr_19107_19109 = state;
    statearr_19107_19109[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = ret_val;
    statearr_19107_19109[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
  }));
  if (cljs.core.truth_(temp__4124__auto__)) {
    var cb = temp__4124__auto__;
    var statearr_19108_19110 = state;
    statearr_19108_19110[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    statearr_19108_19110[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
  } else {
    return null;
  }
};
cljs.core.async.impl.ioc_helpers.return_chan = function return_chan(state, value) {
  var c = state[cljs.core.async.impl.ioc_helpers.USER_START_IDX];
  if (value == null) {
  } else {
    cljs.core.async.impl.protocols.put_BANG_.call(null, c, value, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(c) {
      return function() {
        return null;
      };
    }(c)));
  }
  cljs.core.async.impl.protocols.close_BANG_.call(null, c);
  return c;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame = function(catch_block, catch_exception, finally_block, continue_block, prev, __meta, __extmap, __hash) {
  this.catch_block = catch_block;
  this.catch_exception = catch_exception;
  this.finally_block = finally_block;
  this.continue_block = continue_block;
  this.prev = prev;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4528__auto__, k__4529__auto__) {
  var self__ = this;
  var this__4528__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4528__auto____$1, k__4529__auto__, null);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4530__auto__, k19112, else__4531__auto__) {
  var self__ = this;
  var this__4530__auto____$1 = this;
  var G__19114 = k19112 instanceof cljs.core.Keyword ? k19112.fqn : null;
  switch(G__19114) {
    case "prev":
      return self__.prev;
      break;
    case "continue-block":
      return self__.continue_block;
      break;
    case "finally-block":
      return self__.finally_block;
      break;
    case "catch-exception":
      return self__.catch_exception;
      break;
    case "catch-block":
      return self__.catch_block;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k19112, else__4531__auto__);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4542__auto__, writer__4543__auto__, opts__4544__auto__) {
  var self__ = this;
  var this__4542__auto____$1 = this;
  var pr_pair__4545__auto__ = function(this__4542__auto____$1) {
    return function(keyval__4546__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4543__auto__, cljs.core.pr_writer, "", " ", "", opts__4544__auto__, keyval__4546__auto__);
    };
  }(this__4542__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4543__auto__, pr_pair__4545__auto__, "#cljs.core.async.impl.ioc-helpers.ExceptionFrame{", ", ", "}", opts__4544__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), self__.catch_block], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), self__.catch_exception], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), self__.finally_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), 
  self__.continue_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prev", "prev", -1597069226), self__.prev], null)], null), self__.__extmap));
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4526__auto__) {
  var self__ = this;
  var this__4526__auto____$1 = this;
  return self__.__meta;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4522__auto__) {
  var self__ = this;
  var this__4522__auto____$1 = this;
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4532__auto__) {
  var self__ = this;
  var this__4532__auto____$1 = this;
  return 5 + cljs.core.count.call(null, self__.__extmap);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4523__auto__) {
  var self__ = this;
  var this__4523__auto____$1 = this;
  var h__4346__auto__ = self__.__hash;
  if (!(h__4346__auto__ == null)) {
    return h__4346__auto__;
  } else {
    var h__4346__auto____$1 = cljs.core.hash_imap.call(null, this__4523__auto____$1);
    self__.__hash = h__4346__auto____$1;
    return h__4346__auto____$1;
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4524__auto__, other__4525__auto__) {
  var self__ = this;
  var this__4524__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3913__auto__ = other__4525__auto__;
    if (cljs.core.truth_(and__3913__auto__)) {
      return this__4524__auto____$1.constructor === other__4525__auto__.constructor && cljs.core.equiv_map.call(null, this__4524__auto____$1, other__4525__auto__);
    } else {
      return and__3913__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4537__auto__, k__4538__auto__) {
  var self__ = this;
  var this__4537__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), null, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), null, new cljs.core.Keyword(null, "prev", "prev", -1597069226), null, new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), 
  null], null), null), k__4538__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4537__auto____$1), self__.__meta), k__4538__auto__);
  } else {
    return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4538__auto__)), null);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4535__auto__, k__4536__auto__, G__19111) {
  var self__ = this;
  var this__4535__auto____$1 = this;
  var pred__19115 = cljs.core.keyword_identical_QMARK_;
  var expr__19116 = k__4536__auto__;
  if (cljs.core.truth_(pred__19115.call(null, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), expr__19116))) {
    return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(G__19111, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__19115.call(null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), expr__19116))) {
      return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, G__19111, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__19115.call(null, new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), expr__19116))) {
        return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, G__19111, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__19115.call(null, new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), expr__19116))) {
          return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, G__19111, self__.prev, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__19115.call(null, new cljs.core.Keyword(null, "prev", "prev", -1597069226), expr__19116))) {
            return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, G__19111, self__.__meta, self__.__extmap, null);
          } else {
            return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4536__auto__, G__19111), null);
          }
        }
      }
    }
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4540__auto__) {
  var self__ = this;
  var this__4540__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), self__.catch_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), self__.catch_exception], 
  null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), self__.finally_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), self__.continue_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prev", 
  "prev", -1597069226), self__.prev], null)], null), self__.__extmap));
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4527__auto__, G__19111) {
  var self__ = this;
  var this__4527__auto____$1 = this;
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, G__19111, self__.__extmap, self__.__hash);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4533__auto__, entry__4534__auto__) {
  var self__ = this;
  var this__4533__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4534__auto__)) {
    return cljs.core._assoc.call(null, this__4533__auto____$1, cljs.core._nth.call(null, entry__4534__auto__, 0), cljs.core._nth.call(null, entry__4534__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4533__auto____$1, entry__4534__auto__);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$type = true;
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$ctorPrSeq = function(this__4562__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.core.async.impl.ioc-helpers/ExceptionFrame");
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$ctorPrWriter = function(this__4562__auto__, writer__4563__auto__) {
  return cljs.core._write.call(null, writer__4563__auto__, "cljs.core.async.impl.ioc-helpers/ExceptionFrame");
};
cljs.core.async.impl.ioc_helpers.__GT_ExceptionFrame = function __GT_ExceptionFrame(catch_block, catch_exception, finally_block, continue_block, prev) {
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(catch_block, catch_exception, finally_block, continue_block, prev, null, null, null);
};
cljs.core.async.impl.ioc_helpers.map__GT_ExceptionFrame = function map__GT_ExceptionFrame(G__19113) {
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame((new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748)).cljs$core$IFn$_invoke$arity$1(G__19113), (new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795)).cljs$core$IFn$_invoke$arity$1(G__19113), (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(G__19113), (new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850)).cljs$core$IFn$_invoke$arity$1(G__19113), 
  (new cljs.core.Keyword(null, "prev", "prev", -1597069226)).cljs$core$IFn$_invoke$arity$1(G__19113), null, cljs.core.dissoc.call(null, G__19113, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), new cljs.core.Keyword(null, "prev", "prev", -1597069226)), 
  null);
};
cljs.core.async.impl.ioc_helpers.add_exception_frame = function add_exception_frame(state, catch_block, catch_exception, finally_block, continue_block) {
  var statearr_19120 = state;
  statearr_19120[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.async.impl.ioc_helpers.__GT_ExceptionFrame.call(null, catch_block, catch_exception, finally_block, continue_block, cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES));
  return statearr_19120;
};
cljs.core.async.impl.ioc_helpers.process_exception = function process_exception(state) {
  while (true) {
    var exception_frame = cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES);
    var catch_block = (new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748)).cljs$core$IFn$_invoke$arity$1(exception_frame);
    var catch_exception = (new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795)).cljs$core$IFn$_invoke$arity$1(exception_frame);
    var exception = cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION);
    if (cljs.core.truth_(function() {
      var and__3913__auto__ = exception;
      if (cljs.core.truth_(and__3913__auto__)) {
        return cljs.core.not.call(null, exception_frame);
      } else {
        return and__3913__auto__;
      }
    }())) {
      throw exception;
    } else {
      if (cljs.core.truth_(function() {
        var and__3913__auto__ = exception;
        if (cljs.core.truth_(and__3913__auto__)) {
          var and__3913__auto____$1 = catch_block;
          if (cljs.core.truth_(and__3913__auto____$1)) {
            return exception instanceof catch_exception;
          } else {
            return and__3913__auto____$1;
          }
        } else {
          return and__3913__auto__;
        }
      }())) {
        var statearr_19126 = state;
        statearr_19126[cljs.core.async.impl.ioc_helpers.STATE_IDX] = catch_block;
        statearr_19126[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = exception;
        statearr_19126[cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION] = null;
        statearr_19126[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), null);
        return statearr_19126;
      } else {
        if (cljs.core.truth_(function() {
          var and__3913__auto__ = exception;
          if (cljs.core.truth_(and__3913__auto__)) {
            return cljs.core.not.call(null, catch_block) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame));
          } else {
            return and__3913__auto__;
          }
        }())) {
          var statearr_19127_19131 = state;
          statearr_19127_19131[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = (new cljs.core.Keyword(null, "prev", "prev", -1597069226)).cljs$core$IFn$_invoke$arity$1(exception_frame);
          var G__19132 = state;
          state = G__19132;
          continue;
        } else {
          if (cljs.core.truth_(function() {
            var and__3913__auto__ = exception;
            if (cljs.core.truth_(and__3913__auto__)) {
              var and__3913__auto____$1 = cljs.core.not.call(null, catch_block);
              if (and__3913__auto____$1) {
                return(new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              } else {
                return and__3913__auto____$1;
              }
            } else {
              return and__3913__auto__;
            }
          }())) {
            var statearr_19128 = state;
            statearr_19128[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
            statearr_19128[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), null);
            return statearr_19128;
          } else {
            if (cljs.core.truth_(function() {
              var and__3913__auto__ = cljs.core.not.call(null, exception);
              if (and__3913__auto__) {
                return(new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              } else {
                return and__3913__auto__;
              }
            }())) {
              var statearr_19129 = state;
              statearr_19129[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              statearr_19129[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), null);
              return statearr_19129;
            } else {
              if (cljs.core.not.call(null, exception) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame))) {
                var statearr_19130 = state;
                statearr_19130[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850)).cljs$core$IFn$_invoke$arity$1(exception_frame);
                statearr_19130[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = (new cljs.core.Keyword(null, "prev", "prev", -1597069226)).cljs$core$IFn$_invoke$arity$1(exception_frame);
                return statearr_19130;
              } else {
                throw new Error("No matching clause");
              }
            }
          }
        }
      }
    }
    break;
  }
};
goog.provide("cljs.core.async.impl.timers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.timers.MAX_LEVEL = 15;
cljs.core.async.impl.timers.P = 1 / 2;
cljs.core.async.impl.timers.random_level = function() {
  var random_level = null;
  var random_level__0 = function() {
    return random_level.call(null, 0);
  };
  var random_level__1 = function(level) {
    while (true) {
      if (Math.random() < cljs.core.async.impl.timers.P && level < cljs.core.async.impl.timers.MAX_LEVEL) {
        var G__19065 = level + 1;
        level = G__19065;
        continue;
      } else {
        return level;
      }
      break;
    }
  };
  random_level = function(level) {
    switch(arguments.length) {
      case 0:
        return random_level__0.call(this);
      case 1:
        return random_level__1.call(this, level);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  random_level.cljs$core$IFn$_invoke$arity$0 = random_level__0;
  random_level.cljs$core$IFn$_invoke$arity$1 = random_level__1;
  return random_level;
}();
cljs.core.async.impl.timers.SkipListNode = function(key, val, forward) {
  this.key = key;
  this.val = val;
  this.forward = forward;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256;
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.async.impl.timers.SkipListNode.cljs$lang$type = true;
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipListNode";
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write.call(null, writer__4513__auto__, "cljs.core.async.impl.timers/SkipListNode");
};
cljs.core.async.impl.timers.__GT_SkipListNode = function __GT_SkipListNode(key, val, forward) {
  return new cljs.core.async.impl.timers.SkipListNode(key, val, forward);
};
cljs.core.async.impl.timers.skip_list_node = function() {
  var skip_list_node = null;
  var skip_list_node__1 = function(level) {
    return skip_list_node.call(null, null, null, level);
  };
  var skip_list_node__3 = function(k, v, level) {
    var arr = new Array(level + 1);
    var i_19066 = 0;
    while (true) {
      if (i_19066 < arr.length) {
        arr[i_19066] = null;
        var G__19067 = i_19066 + 1;
        i_19066 = G__19067;
        continue;
      } else {
      }
      break;
    }
    return new cljs.core.async.impl.timers.SkipListNode(k, v, arr);
  };
  skip_list_node = function(k, v, level) {
    switch(arguments.length) {
      case 1:
        return skip_list_node__1.call(this, k);
      case 3:
        return skip_list_node__3.call(this, k, v, level);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  skip_list_node.cljs$core$IFn$_invoke$arity$1 = skip_list_node__1;
  skip_list_node.cljs$core$IFn$_invoke$arity$3 = skip_list_node__3;
  return skip_list_node;
}();
cljs.core.async.impl.timers.least_greater_node = function() {
  var least_greater_node = null;
  var least_greater_node__3 = function(x, k, level) {
    return least_greater_node.call(null, x, k, level, null);
  };
  var least_greater_node__4 = function(x, k, level, update) {
    while (true) {
      if (!(level < 0)) {
        var x__$1 = function() {
          var x__$1 = x;
          while (true) {
            var temp__4124__auto__ = x__$1.forward[level];
            if (cljs.core.truth_(temp__4124__auto__)) {
              var x_SINGLEQUOTE_ = temp__4124__auto__;
              if (x_SINGLEQUOTE_.key < k) {
                var G__19068 = x_SINGLEQUOTE_;
                x__$1 = G__19068;
                continue;
              } else {
                return x__$1;
              }
            } else {
              return x__$1;
            }
            break;
          }
        }();
        if (update == null) {
        } else {
          update[level] = x__$1;
        }
        var G__19069 = x__$1;
        var G__19070 = k;
        var G__19071 = level - 1;
        var G__19072 = update;
        x = G__19069;
        k = G__19070;
        level = G__19071;
        update = G__19072;
        continue;
      } else {
        return x;
      }
      break;
    }
  };
  least_greater_node = function(x, k, level, update) {
    switch(arguments.length) {
      case 3:
        return least_greater_node__3.call(this, x, k, level);
      case 4:
        return least_greater_node__4.call(this, x, k, level, update);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  least_greater_node.cljs$core$IFn$_invoke$arity$3 = least_greater_node__3;
  least_greater_node.cljs$core$IFn$_invoke$arity$4 = least_greater_node__4;
  return least_greater_node;
}();
cljs.core.async.impl.timers.SkipList = function(header, level) {
  this.header = header;
  this.level = level;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256;
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var self__ = this;
  var coll__$1 = this;
  var pr_pair = function(coll__$1) {
    return function(keyval) {
      return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval);
    };
  }(coll__$1);
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair, "{", ", ", "}", opts, coll__$1);
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var iter = function(coll__$1) {
    return function iter(node) {
      return new cljs.core.LazySeq(null, function(coll__$1) {
        return function() {
          if (node == null) {
            return null;
          } else {
            return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [node.key, node.val], null), iter.call(null, node.forward[0]));
          }
        };
      }(coll__$1), null, null);
    };
  }(coll__$1);
  return iter.call(null, self__.header.forward[0]);
};
cljs.core.async.impl.timers.SkipList.prototype.put = function(k, v) {
  var self__ = this;
  var coll = this;
  var update = new Array(cljs.core.async.impl.timers.MAX_LEVEL);
  var x = cljs.core.async.impl.timers.least_greater_node.call(null, self__.header, k, self__.level, update);
  var x__$1 = x.forward[0];
  if (!(x__$1 == null) && x__$1.key === k) {
    return x__$1.val = v;
  } else {
    var new_level = cljs.core.async.impl.timers.random_level.call(null);
    if (new_level > self__.level) {
      var i_19073 = self__.level + 1;
      while (true) {
        if (i_19073 <= new_level + 1) {
          update[i_19073] = self__.header;
          var G__19074 = i_19073 + 1;
          i_19073 = G__19074;
          continue;
        } else {
        }
        break;
      }
      self__.level = new_level;
    } else {
    }
    var x__$2 = cljs.core.async.impl.timers.skip_list_node.call(null, k, v, new Array(new_level));
    var i = 0;
    while (true) {
      if (i <= self__.level) {
        var links = update[i].forward;
        x__$2.forward[i] = links[i];
        return links[i] = x__$2;
      } else {
        return null;
      }
      break;
    }
  }
};
cljs.core.async.impl.timers.SkipList.prototype.remove = function(k) {
  var self__ = this;
  var coll = this;
  var update = new Array(cljs.core.async.impl.timers.MAX_LEVEL);
  var x = cljs.core.async.impl.timers.least_greater_node.call(null, self__.header, k, self__.level, update);
  var x__$1 = x.forward[0];
  if (!(x__$1 == null) && x__$1.key === k) {
    var i_19075 = 0;
    while (true) {
      if (i_19075 <= self__.level) {
        var links_19076 = update[i_19075].forward;
        if (links_19076[i_19075] === x__$1) {
          links_19076[i_19075] = x__$1.forward[i_19075];
          var G__19077 = i_19075 + 1;
          i_19075 = G__19077;
          continue;
        } else {
          var G__19078 = i_19075 + 1;
          i_19075 = G__19078;
          continue;
        }
      } else {
      }
      break;
    }
    while (true) {
      if (self__.level > 0 && self__.header.forward[self__.level] == null) {
        self__.level = self__.level - 1;
        continue;
      } else {
        return null;
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.async.impl.timers.SkipList.prototype.ceilingEntry = function(k) {
  var self__ = this;
  var coll = this;
  var x = self__.header;
  var level__$1 = self__.level;
  while (true) {
    if (!(level__$1 < 0)) {
      var nx = function() {
        var x__$1 = x;
        while (true) {
          var x_SINGLEQUOTE_ = x__$1.forward[level__$1];
          if (x_SINGLEQUOTE_ == null) {
            return null;
          } else {
            if (x_SINGLEQUOTE_.key >= k) {
              return x_SINGLEQUOTE_;
            } else {
              var G__19079 = x_SINGLEQUOTE_;
              x__$1 = G__19079;
              continue;
            }
          }
          break;
        }
      }();
      if (!(nx == null)) {
        var G__19080 = nx;
        var G__19081 = level__$1 - 1;
        x = G__19080;
        level__$1 = G__19081;
        continue;
      } else {
        var G__19082 = x;
        var G__19083 = level__$1 - 1;
        x = G__19082;
        level__$1 = G__19083;
        continue;
      }
    } else {
      if (x === self__.header) {
        return null;
      } else {
        return x;
      }
    }
    break;
  }
};
cljs.core.async.impl.timers.SkipList.prototype.floorEntry = function(k) {
  var self__ = this;
  var coll = this;
  var x = self__.header;
  var level__$1 = self__.level;
  while (true) {
    if (!(level__$1 < 0)) {
      var nx = function() {
        var x__$1 = x;
        while (true) {
          var x_SINGLEQUOTE_ = x__$1.forward[level__$1];
          if (!(x_SINGLEQUOTE_ == null)) {
            if (x_SINGLEQUOTE_.key > k) {
              return x__$1;
            } else {
              var G__19084 = x_SINGLEQUOTE_;
              x__$1 = G__19084;
              continue;
            }
          } else {
            if (level__$1 === 0) {
              return x__$1;
            } else {
              return null;
            }
          }
          break;
        }
      }();
      if (cljs.core.truth_(nx)) {
        var G__19085 = nx;
        var G__19086 = level__$1 - 1;
        x = G__19085;
        level__$1 = G__19086;
        continue;
      } else {
        var G__19087 = x;
        var G__19088 = level__$1 - 1;
        x = G__19087;
        level__$1 = G__19088;
        continue;
      }
    } else {
      if (x === self__.header) {
        return null;
      } else {
        return x;
      }
    }
    break;
  }
};
cljs.core.async.impl.timers.SkipList.cljs$lang$type = true;
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipList";
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write.call(null, writer__4513__auto__, "cljs.core.async.impl.timers/SkipList");
};
cljs.core.async.impl.timers.__GT_SkipList = function __GT_SkipList(header, level) {
  return new cljs.core.async.impl.timers.SkipList(header, level);
};
cljs.core.async.impl.timers.skip_list = function skip_list() {
  return new cljs.core.async.impl.timers.SkipList(cljs.core.async.impl.timers.skip_list_node.call(null, 0), 0);
};
cljs.core.async.impl.timers.timeouts_map = cljs.core.async.impl.timers.skip_list.call(null);
cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS = 10;
cljs.core.async.impl.timers.timeout = function timeout(msecs) {
  var timeout__$1 = (new Date).valueOf() + msecs;
  var me = cljs.core.async.impl.timers.timeouts_map.ceilingEntry(timeout__$1);
  var or__3925__auto__ = cljs.core.truth_(function() {
    var and__3913__auto__ = me;
    if (cljs.core.truth_(and__3913__auto__)) {
      return me.key < timeout__$1 + cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS;
    } else {
      return and__3913__auto__;
    }
  }()) ? me.val : null;
  if (cljs.core.truth_(or__3925__auto__)) {
    return or__3925__auto__;
  } else {
    var timeout_channel = cljs.core.async.impl.channels.chan.call(null, null);
    cljs.core.async.impl.timers.timeouts_map.put(timeout__$1, timeout_channel);
    cljs.core.async.impl.dispatch.queue_delay.call(null, function(timeout_channel, or__3925__auto__, timeout__$1, me) {
      return function() {
        cljs.core.async.impl.timers.timeouts_map.remove(timeout__$1);
        return cljs.core.async.impl.protocols.close_BANG_.call(null, timeout_channel);
      };
    }(timeout_channel, or__3925__auto__, timeout__$1, me), msecs);
    return timeout_channel;
  }
};
goog.provide("cljs.core.async");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.timers");
cljs.core.async.fn_handler = function fn_handler(f) {
  if (typeof cljs.core.async.t15976 !== "undefined") {
  } else {
    cljs.core.async.t15976 = function(f, fn_handler, meta15977) {
      this.f = f;
      this.fn_handler = fn_handler;
      this.meta15977 = meta15977;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t15976.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t15976.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return true;
    };
    cljs.core.async.t15976.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.f;
    };
    cljs.core.async.t15976.prototype.cljs$core$IMeta$_meta$arity$1 = function(_15978) {
      var self__ = this;
      var _15978__$1 = this;
      return self__.meta15977;
    };
    cljs.core.async.t15976.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_15978, meta15977__$1) {
      var self__ = this;
      var _15978__$1 = this;
      return new cljs.core.async.t15976(self__.f, self__.fn_handler, meta15977__$1);
    };
    cljs.core.async.t15976.cljs$lang$type = true;
    cljs.core.async.t15976.cljs$lang$ctorStr = "cljs.core.async/t15976";
    cljs.core.async.t15976.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
      return cljs.core._write.call(null, writer__4513__auto__, "cljs.core.async/t15976");
    };
    cljs.core.async.__GT_t15976 = function __GT_t15976(f__$1, fn_handler__$1, meta15977) {
      return new cljs.core.async.t15976(f__$1, fn_handler__$1, meta15977);
    };
  }
  return new cljs.core.async.t15976(f, fn_handler, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.buffer = function buffer(n) {
  return cljs.core.async.impl.buffers.fixed_buffer.call(null, n);
};
cljs.core.async.dropping_buffer = function dropping_buffer(n) {
  return cljs.core.async.impl.buffers.dropping_buffer.call(null, n);
};
cljs.core.async.sliding_buffer = function sliding_buffer(n) {
  return cljs.core.async.impl.buffers.sliding_buffer.call(null, n);
};
cljs.core.async.unblocking_buffer_QMARK_ = function unblocking_buffer_QMARK_(buff) {
  var G__15980 = buff;
  if (G__15980) {
    var bit__4606__auto__ = null;
    if (cljs.core.truth_(function() {
      var or__3925__auto__ = bit__4606__auto__;
      if (cljs.core.truth_(or__3925__auto__)) {
        return or__3925__auto__;
      } else {
        return G__15980.cljs$core$async$impl$protocols$UnblockingBuffer$;
      }
    }())) {
      return true;
    } else {
      if (!G__15980.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.async.impl.protocols.UnblockingBuffer, G__15980);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.async.impl.protocols.UnblockingBuffer, G__15980);
  }
};
cljs.core.async.chan = function() {
  var chan = null;
  var chan__0 = function() {
    return chan.call(null, null);
  };
  var chan__1 = function(buf_or_n) {
    return chan.call(null, buf_or_n, null, null);
  };
  var chan__2 = function(buf_or_n, xform) {
    return chan.call(null, buf_or_n, xform, null);
  };
  var chan__3 = function(buf_or_n, xform, ex_handler) {
    var buf_or_n__$1 = cljs.core._EQ_.call(null, buf_or_n, 0) ? null : buf_or_n;
    if (cljs.core.truth_(xform)) {
      if (cljs.core.truth_(buf_or_n__$1)) {
      } else {
        throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("buffer must be supplied when transducer is"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, new cljs.core.Symbol(null, "buf-or-n", "buf-or-n", -1646815050, null)))].join(""));
      }
    } else {
    }
    return cljs.core.async.impl.channels.chan.call(null, typeof buf_or_n__$1 === "number" ? cljs.core.async.buffer.call(null, buf_or_n__$1) : buf_or_n__$1, xform, ex_handler);
  };
  chan = function(buf_or_n, xform, ex_handler) {
    switch(arguments.length) {
      case 0:
        return chan__0.call(this);
      case 1:
        return chan__1.call(this, buf_or_n);
      case 2:
        return chan__2.call(this, buf_or_n, xform);
      case 3:
        return chan__3.call(this, buf_or_n, xform, ex_handler);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chan.cljs$core$IFn$_invoke$arity$0 = chan__0;
  chan.cljs$core$IFn$_invoke$arity$1 = chan__1;
  chan.cljs$core$IFn$_invoke$arity$2 = chan__2;
  chan.cljs$core$IFn$_invoke$arity$3 = chan__3;
  return chan;
}();
cljs.core.async.timeout = function timeout(msecs) {
  return cljs.core.async.impl.timers.timeout.call(null, msecs);
};
cljs.core.async._LT__BANG_ = function _LT__BANG_(port) {
  throw new Error("\x3c! used not in (go ...) block");
};
cljs.core.async.take_BANG_ = function() {
  var take_BANG_ = null;
  var take_BANG___2 = function(port, fn1) {
    return take_BANG_.call(null, port, fn1, true);
  };
  var take_BANG___3 = function(port, fn1, on_caller_QMARK_) {
    var ret = cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.fn_handler.call(null, fn1));
    if (cljs.core.truth_(ret)) {
      var val_15981 = cljs.core.deref.call(null, ret);
      if (cljs.core.truth_(on_caller_QMARK_)) {
        fn1.call(null, val_15981);
      } else {
        cljs.core.async.impl.dispatch.run.call(null, function(val_15981, ret) {
          return function() {
            return fn1.call(null, val_15981);
          };
        }(val_15981, ret));
      }
    } else {
    }
    return null;
  };
  take_BANG_ = function(port, fn1, on_caller_QMARK_) {
    switch(arguments.length) {
      case 2:
        return take_BANG___2.call(this, port, fn1);
      case 3:
        return take_BANG___3.call(this, port, fn1, on_caller_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take_BANG_.cljs$core$IFn$_invoke$arity$2 = take_BANG___2;
  take_BANG_.cljs$core$IFn$_invoke$arity$3 = take_BANG___3;
  return take_BANG_;
}();
cljs.core.async.nop = function nop(_) {
  return null;
};
cljs.core.async.fhnop = cljs.core.async.fn_handler.call(null, cljs.core.async.nop);
cljs.core.async._GT__BANG_ = function _GT__BANG_(port, val) {
  throw new Error("\x3e! used not in (go ...) block");
};
cljs.core.async.put_BANG_ = function() {
  var put_BANG_ = null;
  var put_BANG___2 = function(port, val) {
    var temp__4124__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, port, val, cljs.core.async.fhnop);
    if (cljs.core.truth_(temp__4124__auto__)) {
      var ret = temp__4124__auto__;
      return cljs.core.deref.call(null, ret);
    } else {
      return true;
    }
  };
  var put_BANG___3 = function(port, val, fn1) {
    return put_BANG_.call(null, port, val, fn1, true);
  };
  var put_BANG___4 = function(port, val, fn1, on_caller_QMARK_) {
    var temp__4124__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, port, val, cljs.core.async.fn_handler.call(null, fn1));
    if (cljs.core.truth_(temp__4124__auto__)) {
      var retb = temp__4124__auto__;
      var ret = cljs.core.deref.call(null, retb);
      if (cljs.core.truth_(on_caller_QMARK_)) {
        fn1.call(null, ret);
      } else {
        cljs.core.async.impl.dispatch.run.call(null, function(ret, retb, temp__4124__auto__) {
          return function() {
            return fn1.call(null, ret);
          };
        }(ret, retb, temp__4124__auto__));
      }
      return ret;
    } else {
      return true;
    }
  };
  put_BANG_ = function(port, val, fn1, on_caller_QMARK_) {
    switch(arguments.length) {
      case 2:
        return put_BANG___2.call(this, port, val);
      case 3:
        return put_BANG___3.call(this, port, val, fn1);
      case 4:
        return put_BANG___4.call(this, port, val, fn1, on_caller_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  put_BANG_.cljs$core$IFn$_invoke$arity$2 = put_BANG___2;
  put_BANG_.cljs$core$IFn$_invoke$arity$3 = put_BANG___3;
  put_BANG_.cljs$core$IFn$_invoke$arity$4 = put_BANG___4;
  return put_BANG_;
}();
cljs.core.async.close_BANG_ = function close_BANG_(port) {
  return cljs.core.async.impl.protocols.close_BANG_.call(null, port);
};
cljs.core.async.random_array = function random_array(n) {
  var a = new Array(n);
  var n__4812__auto___15982 = n;
  var x_15983 = 0;
  while (true) {
    if (x_15983 < n__4812__auto___15982) {
      a[x_15983] = 0;
      var G__15984 = x_15983 + 1;
      x_15983 = G__15984;
      continue;
    } else {
    }
    break;
  }
  var i = 1;
  while (true) {
    if (cljs.core._EQ_.call(null, i, n)) {
      return a;
    } else {
      var j = cljs.core.rand_int.call(null, i);
      a[i] = a[j];
      a[j] = i;
      var G__15985 = i + 1;
      i = G__15985;
      continue;
    }
    break;
  }
};
cljs.core.async.alt_flag = function alt_flag() {
  var flag = cljs.core.atom.call(null, true);
  if (typeof cljs.core.async.t15989 !== "undefined") {
  } else {
    cljs.core.async.t15989 = function(flag, alt_flag, meta15990) {
      this.flag = flag;
      this.alt_flag = alt_flag;
      this.meta15990 = meta15990;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t15989.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t15989.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(flag) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core.deref.call(null, self__.flag);
      };
    }(flag);
    cljs.core.async.t15989.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(flag) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        cljs.core.reset_BANG_.call(null, self__.flag, null);
        return true;
      };
    }(flag);
    cljs.core.async.t15989.prototype.cljs$core$IMeta$_meta$arity$1 = function(flag) {
      return function(_15991) {
        var self__ = this;
        var _15991__$1 = this;
        return self__.meta15990;
      };
    }(flag);
    cljs.core.async.t15989.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(flag) {
      return function(_15991, meta15990__$1) {
        var self__ = this;
        var _15991__$1 = this;
        return new cljs.core.async.t15989(self__.flag, self__.alt_flag, meta15990__$1);
      };
    }(flag);
    cljs.core.async.t15989.cljs$lang$type = true;
    cljs.core.async.t15989.cljs$lang$ctorStr = "cljs.core.async/t15989";
    cljs.core.async.t15989.cljs$lang$ctorPrWriter = function(flag) {
      return function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
        return cljs.core._write.call(null, writer__4513__auto__, "cljs.core.async/t15989");
      };
    }(flag);
    cljs.core.async.__GT_t15989 = function(flag) {
      return function __GT_t15989(flag__$1, alt_flag__$1, meta15990) {
        return new cljs.core.async.t15989(flag__$1, alt_flag__$1, meta15990);
      };
    }(flag);
  }
  return new cljs.core.async.t15989(flag, alt_flag, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.alt_handler = function alt_handler(flag, cb) {
  if (typeof cljs.core.async.t15995 !== "undefined") {
  } else {
    cljs.core.async.t15995 = function(cb, flag, alt_handler, meta15996) {
      this.cb = cb;
      this.flag = flag;
      this.alt_handler = alt_handler;
      this.meta15996 = meta15996;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t15995.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t15995.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.active_QMARK_.call(null, self__.flag);
    };
    cljs.core.async.t15995.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      cljs.core.async.impl.protocols.commit.call(null, self__.flag);
      return self__.cb;
    };
    cljs.core.async.t15995.prototype.cljs$core$IMeta$_meta$arity$1 = function(_15997) {
      var self__ = this;
      var _15997__$1 = this;
      return self__.meta15996;
    };
    cljs.core.async.t15995.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_15997, meta15996__$1) {
      var self__ = this;
      var _15997__$1 = this;
      return new cljs.core.async.t15995(self__.cb, self__.flag, self__.alt_handler, meta15996__$1);
    };
    cljs.core.async.t15995.cljs$lang$type = true;
    cljs.core.async.t15995.cljs$lang$ctorStr = "cljs.core.async/t15995";
    cljs.core.async.t15995.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
      return cljs.core._write.call(null, writer__4513__auto__, "cljs.core.async/t15995");
    };
    cljs.core.async.__GT_t15995 = function __GT_t15995(cb__$1, flag__$1, alt_handler__$1, meta15996) {
      return new cljs.core.async.t15995(cb__$1, flag__$1, alt_handler__$1, meta15996);
    };
  }
  return new cljs.core.async.t15995(cb, flag, alt_handler, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.do_alts = function do_alts(fret, ports, opts) {
  var flag = cljs.core.async.alt_flag.call(null);
  var n = cljs.core.count.call(null, ports);
  var idxs = cljs.core.async.random_array.call(null, n);
  var priority = (new cljs.core.Keyword(null, "priority", "priority", 1431093715)).cljs$core$IFn$_invoke$arity$1(opts);
  var ret = function() {
    var i = 0;
    while (true) {
      if (i < n) {
        var idx = cljs.core.truth_(priority) ? i : idxs[i];
        var port = cljs.core.nth.call(null, ports, idx);
        var wport = cljs.core.vector_QMARK_.call(null, port) ? port.call(null, 0) : null;
        var vbox = cljs.core.truth_(wport) ? function() {
          var val = port.call(null, 1);
          return cljs.core.async.impl.protocols.put_BANG_.call(null, wport, val, cljs.core.async.alt_handler.call(null, flag, function(i, val, idx, port, wport, flag, n, idxs, priority) {
            return function(p1__15998_SHARP_) {
              return fret.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__15998_SHARP_, wport], null));
            };
          }(i, val, idx, port, wport, flag, n, idxs, priority)));
        }() : cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.alt_handler.call(null, flag, function(i, idx, port, wport, flag, n, idxs, priority) {
          return function(p1__15999_SHARP_) {
            return fret.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__15999_SHARP_, port], null));
          };
        }(i, idx, port, wport, flag, n, idxs, priority)));
        if (cljs.core.truth_(vbox)) {
          return cljs.core.async.impl.channels.box.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.deref.call(null, vbox), function() {
            var or__3925__auto__ = wport;
            if (cljs.core.truth_(or__3925__auto__)) {
              return or__3925__auto__;
            } else {
              return port;
            }
          }()], null));
        } else {
          var G__16000 = i + 1;
          i = G__16000;
          continue;
        }
      } else {
        return null;
      }
      break;
    }
  }();
  var or__3925__auto__ = ret;
  if (cljs.core.truth_(or__3925__auto__)) {
    return or__3925__auto__;
  } else {
    if (cljs.core.contains_QMARK_.call(null, opts, new cljs.core.Keyword(null, "default", "default", -1987822328))) {
      var temp__4126__auto__ = function() {
        var and__3913__auto__ = cljs.core.async.impl.protocols.active_QMARK_.call(null, flag);
        if (cljs.core.truth_(and__3913__auto__)) {
          return cljs.core.async.impl.protocols.commit.call(null, flag);
        } else {
          return and__3913__auto__;
        }
      }();
      if (cljs.core.truth_(temp__4126__auto__)) {
        var got = temp__4126__auto__;
        return cljs.core.async.impl.channels.box.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword(null, "default", "default", -1987822328)).cljs$core$IFn$_invoke$arity$1(opts), new cljs.core.Keyword(null, "default", "default", -1987822328)], null));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }
};
cljs.core.async.alts_BANG_ = function() {
  var alts_BANG___delegate = function(ports, p__16001) {
    var map__16003 = p__16001;
    var map__16003__$1 = cljs.core.seq_QMARK_.call(null, map__16003) ? cljs.core.apply.call(null, cljs.core.hash_map, map__16003) : map__16003;
    var opts = map__16003__$1;
    throw new Error("alts! used not in (go ...) block");
  };
  var alts_BANG_ = function(ports, var_args) {
    var p__16001 = null;
    if (arguments.length > 1) {
      var G__16004__i = 0, G__16004__a = new Array(arguments.length - 1);
      while (G__16004__i < G__16004__a.length) {
        G__16004__a[G__16004__i] = arguments[G__16004__i + 1];
        ++G__16004__i;
      }
      p__16001 = new cljs.core.IndexedSeq(G__16004__a, 0);
    }
    return alts_BANG___delegate.call(this, ports, p__16001);
  };
  alts_BANG_.cljs$lang$maxFixedArity = 1;
  alts_BANG_.cljs$lang$applyTo = function(arglist__16005) {
    var ports = cljs.core.first(arglist__16005);
    var p__16001 = cljs.core.rest(arglist__16005);
    return alts_BANG___delegate(ports, p__16001);
  };
  alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = alts_BANG___delegate;
  return alts_BANG_;
}();
cljs.core.async.pipe = function() {
  var pipe = null;
  var pipe__2 = function(from, to) {
    return pipe.call(null, from, to, true);
  };
  var pipe__3 = function(from, to, close_QMARK_) {
    var c__6703__auto___16100 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6703__auto___16100) {
      return function() {
        var f__6704__auto__ = function() {
          var switch__6647__auto__ = function(c__6703__auto___16100) {
            return function(state_16076) {
              var state_val_16077 = state_16076[1];
              if (state_val_16077 === 7) {
                var inst_16072 = state_16076[2];
                var state_16076__$1 = state_16076;
                var statearr_16078_16101 = state_16076__$1;
                statearr_16078_16101[2] = inst_16072;
                statearr_16078_16101[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_16077 === 1) {
                  var state_16076__$1 = state_16076;
                  var statearr_16079_16102 = state_16076__$1;
                  statearr_16079_16102[2] = null;
                  statearr_16079_16102[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_16077 === 4) {
                    var inst_16055 = state_16076[7];
                    var inst_16055__$1 = state_16076[2];
                    var inst_16056 = inst_16055__$1 == null;
                    var state_16076__$1 = function() {
                      var statearr_16080 = state_16076;
                      statearr_16080[7] = inst_16055__$1;
                      return statearr_16080;
                    }();
                    if (cljs.core.truth_(inst_16056)) {
                      var statearr_16081_16103 = state_16076__$1;
                      statearr_16081_16103[1] = 5;
                    } else {
                      var statearr_16082_16104 = state_16076__$1;
                      statearr_16082_16104[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_16077 === 13) {
                      var state_16076__$1 = state_16076;
                      var statearr_16083_16105 = state_16076__$1;
                      statearr_16083_16105[2] = null;
                      statearr_16083_16105[1] = 14;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_16077 === 6) {
                        var inst_16055 = state_16076[7];
                        var state_16076__$1 = state_16076;
                        return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_16076__$1, 11, to, inst_16055);
                      } else {
                        if (state_val_16077 === 3) {
                          var inst_16074 = state_16076[2];
                          var state_16076__$1 = state_16076;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_16076__$1, inst_16074);
                        } else {
                          if (state_val_16077 === 12) {
                            var state_16076__$1 = state_16076;
                            var statearr_16084_16106 = state_16076__$1;
                            statearr_16084_16106[2] = null;
                            statearr_16084_16106[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_16077 === 2) {
                              var state_16076__$1 = state_16076;
                              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_16076__$1, 4, from);
                            } else {
                              if (state_val_16077 === 11) {
                                var inst_16065 = state_16076[2];
                                var state_16076__$1 = state_16076;
                                if (cljs.core.truth_(inst_16065)) {
                                  var statearr_16085_16107 = state_16076__$1;
                                  statearr_16085_16107[1] = 12;
                                } else {
                                  var statearr_16086_16108 = state_16076__$1;
                                  statearr_16086_16108[1] = 13;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_16077 === 9) {
                                  var state_16076__$1 = state_16076;
                                  var statearr_16087_16109 = state_16076__$1;
                                  statearr_16087_16109[2] = null;
                                  statearr_16087_16109[1] = 10;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_16077 === 5) {
                                    var state_16076__$1 = state_16076;
                                    if (cljs.core.truth_(close_QMARK_)) {
                                      var statearr_16088_16110 = state_16076__$1;
                                      statearr_16088_16110[1] = 8;
                                    } else {
                                      var statearr_16089_16111 = state_16076__$1;
                                      statearr_16089_16111[1] = 9;
                                    }
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_16077 === 14) {
                                      var inst_16070 = state_16076[2];
                                      var state_16076__$1 = state_16076;
                                      var statearr_16090_16112 = state_16076__$1;
                                      statearr_16090_16112[2] = inst_16070;
                                      statearr_16090_16112[1] = 7;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_16077 === 10) {
                                        var inst_16062 = state_16076[2];
                                        var state_16076__$1 = state_16076;
                                        var statearr_16091_16113 = state_16076__$1;
                                        statearr_16091_16113[2] = inst_16062;
                                        statearr_16091_16113[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_16077 === 8) {
                                          var inst_16059 = cljs.core.async.close_BANG_.call(null, to);
                                          var state_16076__$1 = state_16076;
                                          var statearr_16092_16114 = state_16076__$1;
                                          statearr_16092_16114[2] = inst_16059;
                                          statearr_16092_16114[1] = 10;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          return null;
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6703__auto___16100);
          return function(switch__6647__auto__, c__6703__auto___16100) {
            return function() {
              var state_machine__6648__auto__ = null;
              var state_machine__6648__auto____0 = function() {
                var statearr_16096 = [null, null, null, null, null, null, null, null];
                statearr_16096[0] = state_machine__6648__auto__;
                statearr_16096[1] = 1;
                return statearr_16096;
              };
              var state_machine__6648__auto____1 = function(state_16076) {
                while (true) {
                  var ret_value__6649__auto__ = function() {
                    try {
                      while (true) {
                        var result__6650__auto__ = switch__6647__auto__.call(null, state_16076);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6650__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6650__auto__;
                        }
                        break;
                      }
                    } catch (e16097) {
                      if (e16097 instanceof Object) {
                        var ex__6651__auto__ = e16097;
                        var statearr_16098_16115 = state_16076;
                        statearr_16098_16115[5] = ex__6651__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_16076);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e16097;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6649__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__16116 = state_16076;
                    state_16076 = G__16116;
                    continue;
                  } else {
                    return ret_value__6649__auto__;
                  }
                  break;
                }
              };
              state_machine__6648__auto__ = function(state_16076) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6648__auto____0.call(this);
                  case 1:
                    return state_machine__6648__auto____1.call(this, state_16076);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6648__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6648__auto____0;
              state_machine__6648__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6648__auto____1;
              return state_machine__6648__auto__;
            }();
          }(switch__6647__auto__, c__6703__auto___16100);
        }();
        var state__6705__auto__ = function() {
          var statearr_16099 = f__6704__auto__.call(null);
          statearr_16099[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6703__auto___16100;
          return statearr_16099;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6705__auto__);
      };
    }(c__6703__auto___16100));
    return to;
  };
  pipe = function(from, to, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return pipe__2.call(this, from, to);
      case 3:
        return pipe__3.call(this, from, to, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pipe.cljs$core$IFn$_invoke$arity$2 = pipe__2;
  pipe.cljs$core$IFn$_invoke$arity$3 = pipe__3;
  return pipe;
}();
cljs.core.async.pipeline_STAR_ = function pipeline_STAR_(n, to, xf, from, close_QMARK_, ex_handler, type) {
  if (n > 0) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "pos?", "pos?", -244377722, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null))))].join(""));
  }
  var jobs = cljs.core.async.chan.call(null, n);
  var results = cljs.core.async.chan.call(null, n);
  var process = function(jobs, results) {
    return function(p__16300) {
      var vec__16301 = p__16300;
      var v = cljs.core.nth.call(null, vec__16301, 0, null);
      var p = cljs.core.nth.call(null, vec__16301, 1, null);
      var job = vec__16301;
      if (job == null) {
        cljs.core.async.close_BANG_.call(null, results);
        return null;
      } else {
        var res = cljs.core.async.chan.call(null, 1, xf, ex_handler);
        var c__6703__auto___16483 = cljs.core.async.chan.call(null, 1);
        cljs.core.async.impl.dispatch.run.call(null, function(c__6703__auto___16483, res, vec__16301, v, p, job, jobs, results) {
          return function() {
            var f__6704__auto__ = function() {
              var switch__6647__auto__ = function(c__6703__auto___16483, res, vec__16301, v, p, job, jobs, results) {
                return function(state_16306) {
                  var state_val_16307 = state_16306[1];
                  if (state_val_16307 === 2) {
                    var inst_16303 = state_16306[2];
                    var inst_16304 = cljs.core.async.close_BANG_.call(null, res);
                    var state_16306__$1 = function() {
                      var statearr_16308 = state_16306;
                      statearr_16308[7] = inst_16303;
                      return statearr_16308;
                    }();
                    return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_16306__$1, inst_16304);
                  } else {
                    if (state_val_16307 === 1) {
                      var state_16306__$1 = state_16306;
                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_16306__$1, 2, res, v);
                    } else {
                      return null;
                    }
                  }
                };
              }(c__6703__auto___16483, res, vec__16301, v, p, job, jobs, results);
              return function(switch__6647__auto__, c__6703__auto___16483, res, vec__16301, v, p, job, jobs, results) {
                return function() {
                  var state_machine__6648__auto__ = null;
                  var state_machine__6648__auto____0 = function() {
                    var statearr_16312 = [null, null, null, null, null, null, null, null];
                    statearr_16312[0] = state_machine__6648__auto__;
                    statearr_16312[1] = 1;
                    return statearr_16312;
                  };
                  var state_machine__6648__auto____1 = function(state_16306) {
                    while (true) {
                      var ret_value__6649__auto__ = function() {
                        try {
                          while (true) {
                            var result__6650__auto__ = switch__6647__auto__.call(null, state_16306);
                            if (cljs.core.keyword_identical_QMARK_.call(null, result__6650__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                              continue;
                            } else {
                              return result__6650__auto__;
                            }
                            break;
                          }
                        } catch (e16313) {
                          if (e16313 instanceof Object) {
                            var ex__6651__auto__ = e16313;
                            var statearr_16314_16484 = state_16306;
                            statearr_16314_16484[5] = ex__6651__auto__;
                            cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_16306);
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            throw e16313;
                          }
                        }
                      }();
                      if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6649__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        var G__16485 = state_16306;
                        state_16306 = G__16485;
                        continue;
                      } else {
                        return ret_value__6649__auto__;
                      }
                      break;
                    }
                  };
                  state_machine__6648__auto__ = function(state_16306) {
                    switch(arguments.length) {
                      case 0:
                        return state_machine__6648__auto____0.call(this);
                      case 1:
                        return state_machine__6648__auto____1.call(this, state_16306);
                    }
                    throw new Error("Invalid arity: " + arguments.length);
                  };
                  state_machine__6648__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6648__auto____0;
                  state_machine__6648__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6648__auto____1;
                  return state_machine__6648__auto__;
                }();
              }(switch__6647__auto__, c__6703__auto___16483, res, vec__16301, v, p, job, jobs, results);
            }();
            var state__6705__auto__ = function() {
              var statearr_16315 = f__6704__auto__.call(null);
              statearr_16315[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6703__auto___16483;
              return statearr_16315;
            }();
            return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6705__auto__);
          };
        }(c__6703__auto___16483, res, vec__16301, v, p, job, jobs, results));
        cljs.core.async.put_BANG_.call(null, p, res);
        return true;
      }
    };
  }(jobs, results);
  var async = function(jobs, results, process) {
    return function(p__16316) {
      var vec__16317 = p__16316;
      var v = cljs.core.nth.call(null, vec__16317, 0, null);
      var p = cljs.core.nth.call(null, vec__16317, 1, null);
      var job = vec__16317;
      if (job == null) {
        cljs.core.async.close_BANG_.call(null, results);
        return null;
      } else {
        var res = cljs.core.async.chan.call(null, 1);
        xf.call(null, v, res);
        cljs.core.async.put_BANG_.call(null, p, res);
        return true;
      }
    };
  }(jobs, results, process);
  var n__4812__auto___16486 = n;
  var __16487 = 0;
  while (true) {
    if (__16487 < n__4812__auto___16486) {
      var G__16318_16488 = type instanceof cljs.core.Keyword ? type.fqn : null;
      switch(G__16318_16488) {
        case "async":
          var c__6703__auto___16490 = cljs.core.async.chan.call(null, 1);
          cljs.core.async.impl.dispatch.run.call(null, function(__16487, c__6703__auto___16490, G__16318_16488, n__4812__auto___16486, jobs, results, process, async) {
            return function() {
              var f__6704__auto__ = function() {
                var switch__6647__auto__ = function(__16487, c__6703__auto___16490, G__16318_16488, n__4812__auto___16486, jobs, results, process, async) {
                  return function(state_16331) {
                    var state_val_16332 = state_16331[1];
                    if (state_val_16332 === 7) {
                      var inst_16327 = state_16331[2];
                      var state_16331__$1 = state_16331;
                      var statearr_16333_16491 = state_16331__$1;
                      statearr_16333_16491[2] = inst_16327;
                      statearr_16333_16491[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_16332 === 6) {
                        var state_16331__$1 = state_16331;
                        var statearr_16334_16492 = state_16331__$1;
                        statearr_16334_16492[2] = null;
                        statearr_16334_16492[1] = 7;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_16332 === 5) {
                          var state_16331__$1 = state_16331;
                          var statearr_16335_16493 = state_16331__$1;
                          statearr_16335_16493[2] = null;
                          statearr_16335_16493[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_16332 === 4) {
                            var inst_16321 = state_16331[2];
                            var inst_16322 = async.call(null, inst_16321);
                            var state_16331__$1 = state_16331;
                            if (cljs.core.truth_(inst_16322)) {
                              var statearr_16336_16494 = state_16331__$1;
                              statearr_16336_16494[1] = 5;
                            } else {
                              var statearr_16337_16495 = state_16331__$1;
                              statearr_16337_16495[1] = 6;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_16332 === 3) {
                              var inst_16329 = state_16331[2];
                              var state_16331__$1 = state_16331;
                              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_16331__$1, inst_16329);
                            } else {
                              if (state_val_16332 === 2) {
                                var state_16331__$1 = state_16331;
                                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_16331__$1, 4, jobs);
                              } else {
                                if (state_val_16332 === 1) {
                                  var state_16331__$1 = state_16331;
                                  var statearr_16338_16496 = state_16331__$1;
                                  statearr_16338_16496[2] = null;
                                  statearr_16338_16496[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  };
                }(__16487, c__6703__auto___16490, G__16318_16488, n__4812__auto___16486, jobs, results, process, async);
                return function(__16487, switch__6647__auto__, c__6703__auto___16490, G__16318_16488, n__4812__auto___16486, jobs, results, process, async) {
                  return function() {
                    var state_machine__6648__auto__ = null;
                    var state_machine__6648__auto____0 = function() {
                      var statearr_16342 = [null, null, null, null, null, null, null];
                      statearr_16342[0] = state_machine__6648__auto__;
                      statearr_16342[1] = 1;
                      return statearr_16342;
                    };
                    var state_machine__6648__auto____1 = function(state_16331) {
                      while (true) {
                        var ret_value__6649__auto__ = function() {
                          try {
                            while (true) {
                              var result__6650__auto__ = switch__6647__auto__.call(null, state_16331);
                              if (cljs.core.keyword_identical_QMARK_.call(null, result__6650__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                                continue;
                              } else {
                                return result__6650__auto__;
                              }
                              break;
                            }
                          } catch (e16343) {
                            if (e16343 instanceof Object) {
                              var ex__6651__auto__ = e16343;
                              var statearr_16344_16497 = state_16331;
                              statearr_16344_16497[5] = ex__6651__auto__;
                              cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_16331);
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              throw e16343;
                            }
                          }
                        }();
                        if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6649__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          var G__16498 = state_16331;
                          state_16331 = G__16498;
                          continue;
                        } else {
                          return ret_value__6649__auto__;
                        }
                        break;
                      }
                    };
                    state_machine__6648__auto__ = function(state_16331) {
                      switch(arguments.length) {
                        case 0:
                          return state_machine__6648__auto____0.call(this);
                        case 1:
                          return state_machine__6648__auto____1.call(this, state_16331);
                      }
                      throw new Error("Invalid arity: " + arguments.length);
                    };
                    state_machine__6648__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6648__auto____0;
                    state_machine__6648__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6648__auto____1;
                    return state_machine__6648__auto__;
                  }();
                }(__16487, switch__6647__auto__, c__6703__auto___16490, G__16318_16488, n__4812__auto___16486, jobs, results, process, async);
              }();
              var state__6705__auto__ = function() {
                var statearr_16345 = f__6704__auto__.call(null);
                statearr_16345[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6703__auto___16490;
                return statearr_16345;
              }();
              return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6705__auto__);
            };
          }(__16487, c__6703__auto___16490, G__16318_16488, n__4812__auto___16486, jobs, results, process, async));
          break;
        case "compute":
          var c__6703__auto___16499 = cljs.core.async.chan.call(null, 1);
          cljs.core.async.impl.dispatch.run.call(null, function(__16487, c__6703__auto___16499, G__16318_16488, n__4812__auto___16486, jobs, results, process, async) {
            return function() {
              var f__6704__auto__ = function() {
                var switch__6647__auto__ = function(__16487, c__6703__auto___16499, G__16318_16488, n__4812__auto___16486, jobs, results, process, async) {
                  return function(state_16358) {
                    var state_val_16359 = state_16358[1];
                    if (state_val_16359 === 7) {
                      var inst_16354 = state_16358[2];
                      var state_16358__$1 = state_16358;
                      var statearr_16360_16500 = state_16358__$1;
                      statearr_16360_16500[2] = inst_16354;
                      statearr_16360_16500[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_16359 === 6) {
                        var state_16358__$1 = state_16358;
                        var statearr_16361_16501 = state_16358__$1;
                        statearr_16361_16501[2] = null;
                        statearr_16361_16501[1] = 7;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_16359 === 5) {
                          var state_16358__$1 = state_16358;
                          var statearr_16362_16502 = state_16358__$1;
                          statearr_16362_16502[2] = null;
                          statearr_16362_16502[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_16359 === 4) {
                            var inst_16348 = state_16358[2];
                            var inst_16349 = process.call(null, inst_16348);
                            var state_16358__$1 = state_16358;
                            if (cljs.core.truth_(inst_16349)) {
                              var statearr_16363_16503 = state_16358__$1;
                              statearr_16363_16503[1] = 5;
                            } else {
                              var statearr_16364_16504 = state_16358__$1;
                              statearr_16364_16504[1] = 6;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_16359 === 3) {
                              var inst_16356 = state_16358[2];
                              var state_16358__$1 = state_16358;
                              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_16358__$1, inst_16356);
                            } else {
                              if (state_val_16359 === 2) {
                                var state_16358__$1 = state_16358;
                                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_16358__$1, 4, jobs);
                              } else {
                                if (state_val_16359 === 1) {
                                  var state_16358__$1 = state_16358;
                                  var statearr_16365_16505 = state_16358__$1;
                                  statearr_16365_16505[2] = null;
                                  statearr_16365_16505[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  };
                }(__16487, c__6703__auto___16499, G__16318_16488, n__4812__auto___16486, jobs, results, process, async);
                return function(__16487, switch__6647__auto__, c__6703__auto___16499, G__16318_16488, n__4812__auto___16486, jobs, results, process, async) {
                  return function() {
                    var state_machine__6648__auto__ = null;
                    var state_machine__6648__auto____0 = function() {
                      var statearr_16369 = [null, null, null, null, null, null, null];
                      statearr_16369[0] = state_machine__6648__auto__;
                      statearr_16369[1] = 1;
                      return statearr_16369;
                    };
                    var state_machine__6648__auto____1 = function(state_16358) {
                      while (true) {
                        var ret_value__6649__auto__ = function() {
                          try {
                            while (true) {
                              var result__6650__auto__ = switch__6647__auto__.call(null, state_16358);
                              if (cljs.core.keyword_identical_QMARK_.call(null, result__6650__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                                continue;
                              } else {
                                return result__6650__auto__;
                              }
                              break;
                            }
                          } catch (e16370) {
                            if (e16370 instanceof Object) {
                              var ex__6651__auto__ = e16370;
                              var statearr_16371_16506 = state_16358;
                              statearr_16371_16506[5] = ex__6651__auto__;
                              cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_16358);
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              throw e16370;
                            }
                          }
                        }();
                        if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6649__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          var G__16507 = state_16358;
                          state_16358 = G__16507;
                          continue;
                        } else {
                          return ret_value__6649__auto__;
                        }
                        break;
                      }
                    };
                    state_machine__6648__auto__ = function(state_16358) {
                      switch(arguments.length) {
                        case 0:
                          return state_machine__6648__auto____0.call(this);
                        case 1:
                          return state_machine__6648__auto____1.call(this, state_16358);
                      }
                      throw new Error("Invalid arity: " + arguments.length);
                    };
                    state_machine__6648__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6648__auto____0;
                    state_machine__6648__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6648__auto____1;
                    return state_machine__6648__auto__;
                  }();
                }(__16487, switch__6647__auto__, c__6703__auto___16499, G__16318_16488, n__4812__auto___16486, jobs, results, process, async);
              }();
              var state__6705__auto__ = function() {
                var statearr_16372 = f__6704__auto__.call(null);
                statearr_16372[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6703__auto___16499;
                return statearr_16372;
              }();
              return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6705__auto__);
            };
          }(__16487, c__6703__auto___16499, G__16318_16488, n__4812__auto___16486, jobs, results, process, async));
          break;
        default:
          throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(type)].join(""));;
      }
      var G__16508 = __16487 + 1;
      __16487 = G__16508;
      continue;
    } else {
    }
    break;
  }
  var c__6703__auto___16509 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6703__auto___16509, jobs, results, process, async) {
    return function() {
      var f__6704__auto__ = function() {
        var switch__6647__auto__ = function(c__6703__auto___16509, jobs, results, process, async) {
          return function(state_16394) {
            var state_val_16395 = state_16394[1];
            if (state_val_16395 === 9) {
              var inst_16387 = state_16394[2];
              var state_16394__$1 = function() {
                var statearr_16396 = state_16394;
                statearr_16396[7] = inst_16387;
                return statearr_16396;
              }();
              var statearr_16397_16510 = state_16394__$1;
              statearr_16397_16510[2] = null;
              statearr_16397_16510[1] = 2;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_16395 === 8) {
                var inst_16380 = state_16394[8];
                var inst_16385 = state_16394[2];
                var state_16394__$1 = function() {
                  var statearr_16398 = state_16394;
                  statearr_16398[9] = inst_16385;
                  return statearr_16398;
                }();
                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_16394__$1, 9, results, inst_16380);
              } else {
                if (state_val_16395 === 7) {
                  var inst_16390 = state_16394[2];
                  var state_16394__$1 = state_16394;
                  var statearr_16399_16511 = state_16394__$1;
                  statearr_16399_16511[2] = inst_16390;
                  statearr_16399_16511[1] = 3;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_16395 === 6) {
                    var inst_16375 = state_16394[10];
                    var inst_16380 = state_16394[8];
                    var inst_16380__$1 = cljs.core.async.chan.call(null, 1);
                    var inst_16381 = cljs.core.PersistentVector.EMPTY_NODE;
                    var inst_16382 = [inst_16375, inst_16380__$1];
                    var inst_16383 = new cljs.core.PersistentVector(null, 2, 5, inst_16381, inst_16382, null);
                    var state_16394__$1 = function() {
                      var statearr_16400 = state_16394;
                      statearr_16400[8] = inst_16380__$1;
                      return statearr_16400;
                    }();
                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_16394__$1, 8, jobs, inst_16383);
                  } else {
                    if (state_val_16395 === 5) {
                      var inst_16378 = cljs.core.async.close_BANG_.call(null, jobs);
                      var state_16394__$1 = state_16394;
                      var statearr_16401_16512 = state_16394__$1;
                      statearr_16401_16512[2] = inst_16378;
                      statearr_16401_16512[1] = 7;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_16395 === 4) {
                        var inst_16375 = state_16394[10];
                        var inst_16375__$1 = state_16394[2];
                        var inst_16376 = inst_16375__$1 == null;
                        var state_16394__$1 = function() {
                          var statearr_16402 = state_16394;
                          statearr_16402[10] = inst_16375__$1;
                          return statearr_16402;
                        }();
                        if (cljs.core.truth_(inst_16376)) {
                          var statearr_16403_16513 = state_16394__$1;
                          statearr_16403_16513[1] = 5;
                        } else {
                          var statearr_16404_16514 = state_16394__$1;
                          statearr_16404_16514[1] = 6;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_16395 === 3) {
                          var inst_16392 = state_16394[2];
                          var state_16394__$1 = state_16394;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_16394__$1, inst_16392);
                        } else {
                          if (state_val_16395 === 2) {
                            var state_16394__$1 = state_16394;
                            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_16394__$1, 4, from);
                          } else {
                            if (state_val_16395 === 1) {
                              var state_16394__$1 = state_16394;
                              var statearr_16405_16515 = state_16394__$1;
                              statearr_16405_16515[2] = null;
                              statearr_16405_16515[1] = 2;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              return null;
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6703__auto___16509, jobs, results, process, async);
        return function(switch__6647__auto__, c__6703__auto___16509, jobs, results, process, async) {
          return function() {
            var state_machine__6648__auto__ = null;
            var state_machine__6648__auto____0 = function() {
              var statearr_16409 = [null, null, null, null, null, null, null, null, null, null, null];
              statearr_16409[0] = state_machine__6648__auto__;
              statearr_16409[1] = 1;
              return statearr_16409;
            };
            var state_machine__6648__auto____1 = function(state_16394) {
              while (true) {
                var ret_value__6649__auto__ = function() {
                  try {
                    while (true) {
                      var result__6650__auto__ = switch__6647__auto__.call(null, state_16394);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6650__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__6650__auto__;
                      }
                      break;
                    }
                  } catch (e16410) {
                    if (e16410 instanceof Object) {
                      var ex__6651__auto__ = e16410;
                      var statearr_16411_16516 = state_16394;
                      statearr_16411_16516[5] = ex__6651__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_16394);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e16410;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6649__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__16517 = state_16394;
                  state_16394 = G__16517;
                  continue;
                } else {
                  return ret_value__6649__auto__;
                }
                break;
              }
            };
            state_machine__6648__auto__ = function(state_16394) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6648__auto____0.call(this);
                case 1:
                  return state_machine__6648__auto____1.call(this, state_16394);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6648__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6648__auto____0;
            state_machine__6648__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6648__auto____1;
            return state_machine__6648__auto__;
          }();
        }(switch__6647__auto__, c__6703__auto___16509, jobs, results, process, async);
      }();
      var state__6705__auto__ = function() {
        var statearr_16412 = f__6704__auto__.call(null);
        statearr_16412[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6703__auto___16509;
        return statearr_16412;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6705__auto__);
    };
  }(c__6703__auto___16509, jobs, results, process, async));
  var c__6703__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6703__auto__, jobs, results, process, async) {
    return function() {
      var f__6704__auto__ = function() {
        var switch__6647__auto__ = function(c__6703__auto__, jobs, results, process, async) {
          return function(state_16450) {
            var state_val_16451 = state_16450[1];
            if (state_val_16451 === 7) {
              var inst_16446 = state_16450[2];
              var state_16450__$1 = state_16450;
              var statearr_16452_16518 = state_16450__$1;
              statearr_16452_16518[2] = inst_16446;
              statearr_16452_16518[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_16451 === 20) {
                var state_16450__$1 = state_16450;
                var statearr_16453_16519 = state_16450__$1;
                statearr_16453_16519[2] = null;
                statearr_16453_16519[1] = 21;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_16451 === 1) {
                  var state_16450__$1 = state_16450;
                  var statearr_16454_16520 = state_16450__$1;
                  statearr_16454_16520[2] = null;
                  statearr_16454_16520[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_16451 === 4) {
                    var inst_16415 = state_16450[7];
                    var inst_16415__$1 = state_16450[2];
                    var inst_16416 = inst_16415__$1 == null;
                    var state_16450__$1 = function() {
                      var statearr_16455 = state_16450;
                      statearr_16455[7] = inst_16415__$1;
                      return statearr_16455;
                    }();
                    if (cljs.core.truth_(inst_16416)) {
                      var statearr_16456_16521 = state_16450__$1;
                      statearr_16456_16521[1] = 5;
                    } else {
                      var statearr_16457_16522 = state_16450__$1;
                      statearr_16457_16522[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_16451 === 15) {
                      var inst_16428 = state_16450[8];
                      var state_16450__$1 = state_16450;
                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_16450__$1, 18, to, inst_16428);
                    } else {
                      if (state_val_16451 === 21) {
                        var inst_16441 = state_16450[2];
                        var state_16450__$1 = state_16450;
                        var statearr_16458_16523 = state_16450__$1;
                        statearr_16458_16523[2] = inst_16441;
                        statearr_16458_16523[1] = 13;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_16451 === 13) {
                          var inst_16443 = state_16450[2];
                          var state_16450__$1 = function() {
                            var statearr_16459 = state_16450;
                            statearr_16459[9] = inst_16443;
                            return statearr_16459;
                          }();
                          var statearr_16460_16524 = state_16450__$1;
                          statearr_16460_16524[2] = null;
                          statearr_16460_16524[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_16451 === 6) {
                            var inst_16415 = state_16450[7];
                            var state_16450__$1 = state_16450;
                            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_16450__$1, 11, inst_16415);
                          } else {
                            if (state_val_16451 === 17) {
                              var inst_16436 = state_16450[2];
                              var state_16450__$1 = state_16450;
                              if (cljs.core.truth_(inst_16436)) {
                                var statearr_16461_16525 = state_16450__$1;
                                statearr_16461_16525[1] = 19;
                              } else {
                                var statearr_16462_16526 = state_16450__$1;
                                statearr_16462_16526[1] = 20;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_16451 === 3) {
                                var inst_16448 = state_16450[2];
                                var state_16450__$1 = state_16450;
                                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_16450__$1, inst_16448);
                              } else {
                                if (state_val_16451 === 12) {
                                  var inst_16425 = state_16450[10];
                                  var state_16450__$1 = state_16450;
                                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_16450__$1, 14, inst_16425);
                                } else {
                                  if (state_val_16451 === 2) {
                                    var state_16450__$1 = state_16450;
                                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_16450__$1, 4, results);
                                  } else {
                                    if (state_val_16451 === 19) {
                                      var state_16450__$1 = state_16450;
                                      var statearr_16463_16527 = state_16450__$1;
                                      statearr_16463_16527[2] = null;
                                      statearr_16463_16527[1] = 12;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_16451 === 11) {
                                        var inst_16425 = state_16450[2];
                                        var state_16450__$1 = function() {
                                          var statearr_16464 = state_16450;
                                          statearr_16464[10] = inst_16425;
                                          return statearr_16464;
                                        }();
                                        var statearr_16465_16528 = state_16450__$1;
                                        statearr_16465_16528[2] = null;
                                        statearr_16465_16528[1] = 12;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_16451 === 9) {
                                          var state_16450__$1 = state_16450;
                                          var statearr_16466_16529 = state_16450__$1;
                                          statearr_16466_16529[2] = null;
                                          statearr_16466_16529[1] = 10;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_16451 === 5) {
                                            var state_16450__$1 = state_16450;
                                            if (cljs.core.truth_(close_QMARK_)) {
                                              var statearr_16467_16530 = state_16450__$1;
                                              statearr_16467_16530[1] = 8;
                                            } else {
                                              var statearr_16468_16531 = state_16450__$1;
                                              statearr_16468_16531[1] = 9;
                                            }
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_16451 === 14) {
                                              var inst_16430 = state_16450[11];
                                              var inst_16428 = state_16450[8];
                                              var inst_16428__$1 = state_16450[2];
                                              var inst_16429 = inst_16428__$1 == null;
                                              var inst_16430__$1 = cljs.core.not.call(null, inst_16429);
                                              var state_16450__$1 = function() {
                                                var statearr_16469 = state_16450;
                                                statearr_16469[11] = inst_16430__$1;
                                                statearr_16469[8] = inst_16428__$1;
                                                return statearr_16469;
                                              }();
                                              if (inst_16430__$1) {
                                                var statearr_16470_16532 = state_16450__$1;
                                                statearr_16470_16532[1] = 15;
                                              } else {
                                                var statearr_16471_16533 = state_16450__$1;
                                                statearr_16471_16533[1] = 16;
                                              }
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_16451 === 16) {
                                                var inst_16430 = state_16450[11];
                                                var state_16450__$1 = state_16450;
                                                var statearr_16472_16534 = state_16450__$1;
                                                statearr_16472_16534[2] = inst_16430;
                                                statearr_16472_16534[1] = 17;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_16451 === 10) {
                                                  var inst_16422 = state_16450[2];
                                                  var state_16450__$1 = state_16450;
                                                  var statearr_16473_16535 = state_16450__$1;
                                                  statearr_16473_16535[2] = inst_16422;
                                                  statearr_16473_16535[1] = 7;
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_16451 === 18) {
                                                    var inst_16433 = state_16450[2];
                                                    var state_16450__$1 = state_16450;
                                                    var statearr_16474_16536 = state_16450__$1;
                                                    statearr_16474_16536[2] = inst_16433;
                                                    statearr_16474_16536[1] = 17;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_16451 === 8) {
                                                      var inst_16419 = cljs.core.async.close_BANG_.call(null, to);
                                                      var state_16450__$1 = state_16450;
                                                      var statearr_16475_16537 = state_16450__$1;
                                                      statearr_16475_16537[2] = inst_16419;
                                                      statearr_16475_16537[1] = 10;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      return null;
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6703__auto__, jobs, results, process, async);
        return function(switch__6647__auto__, c__6703__auto__, jobs, results, process, async) {
          return function() {
            var state_machine__6648__auto__ = null;
            var state_machine__6648__auto____0 = function() {
              var statearr_16479 = [null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_16479[0] = state_machine__6648__auto__;
              statearr_16479[1] = 1;
              return statearr_16479;
            };
            var state_machine__6648__auto____1 = function(state_16450) {
              while (true) {
                var ret_value__6649__auto__ = function() {
                  try {
                    while (true) {
                      var result__6650__auto__ = switch__6647__auto__.call(null, state_16450);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6650__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__6650__auto__;
                      }
                      break;
                    }
                  } catch (e16480) {
                    if (e16480 instanceof Object) {
                      var ex__6651__auto__ = e16480;
                      var statearr_16481_16538 = state_16450;
                      statearr_16481_16538[5] = ex__6651__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_16450);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e16480;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6649__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__16539 = state_16450;
                  state_16450 = G__16539;
                  continue;
                } else {
                  return ret_value__6649__auto__;
                }
                break;
              }
            };
            state_machine__6648__auto__ = function(state_16450) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6648__auto____0.call(this);
                case 1:
                  return state_machine__6648__auto____1.call(this, state_16450);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6648__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6648__auto____0;
            state_machine__6648__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6648__auto____1;
            return state_machine__6648__auto__;
          }();
        }(switch__6647__auto__, c__6703__auto__, jobs, results, process, async);
      }();
      var state__6705__auto__ = function() {
        var statearr_16482 = f__6704__auto__.call(null);
        statearr_16482[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6703__auto__;
        return statearr_16482;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6705__auto__);
    };
  }(c__6703__auto__, jobs, results, process, async));
  return c__6703__auto__;
};
cljs.core.async.pipeline_async = function() {
  var pipeline_async = null;
  var pipeline_async__4 = function(n, to, af, from) {
    return pipeline_async.call(null, n, to, af, from, true);
  };
  var pipeline_async__5 = function(n, to, af, from, close_QMARK_) {
    return cljs.core.async.pipeline_STAR_.call(null, n, to, af, from, close_QMARK_, null, new cljs.core.Keyword(null, "async", "async", 1050769601));
  };
  pipeline_async = function(n, to, af, from, close_QMARK_) {
    switch(arguments.length) {
      case 4:
        return pipeline_async__4.call(this, n, to, af, from);
      case 5:
        return pipeline_async__5.call(this, n, to, af, from, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pipeline_async.cljs$core$IFn$_invoke$arity$4 = pipeline_async__4;
  pipeline_async.cljs$core$IFn$_invoke$arity$5 = pipeline_async__5;
  return pipeline_async;
}();
cljs.core.async.pipeline = function() {
  var pipeline = null;
  var pipeline__4 = function(n, to, xf, from) {
    return pipeline.call(null, n, to, xf, from, true);
  };
  var pipeline__5 = function(n, to, xf, from, close_QMARK_) {
    return pipeline.call(null, n, to, xf, from, close_QMARK_, null);
  };
  var pipeline__6 = function(n, to, xf, from, close_QMARK_, ex_handler) {
    return cljs.core.async.pipeline_STAR_.call(null, n, to, xf, from, close_QMARK_, ex_handler, new cljs.core.Keyword(null, "compute", "compute", 1555393130));
  };
  pipeline = function(n, to, xf, from, close_QMARK_, ex_handler) {
    switch(arguments.length) {
      case 4:
        return pipeline__4.call(this, n, to, xf, from);
      case 5:
        return pipeline__5.call(this, n, to, xf, from, close_QMARK_);
      case 6:
        return pipeline__6.call(this, n, to, xf, from, close_QMARK_, ex_handler);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pipeline.cljs$core$IFn$_invoke$arity$4 = pipeline__4;
  pipeline.cljs$core$IFn$_invoke$arity$5 = pipeline__5;
  pipeline.cljs$core$IFn$_invoke$arity$6 = pipeline__6;
  return pipeline;
}();
cljs.core.async.split = function() {
  var split = null;
  var split__2 = function(p, ch) {
    return split.call(null, p, ch, null, null);
  };
  var split__4 = function(p, ch, t_buf_or_n, f_buf_or_n) {
    var tc = cljs.core.async.chan.call(null, t_buf_or_n);
    var fc = cljs.core.async.chan.call(null, f_buf_or_n);
    var c__6703__auto___16640 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6703__auto___16640, tc, fc) {
      return function() {
        var f__6704__auto__ = function() {
          var switch__6647__auto__ = function(c__6703__auto___16640, tc, fc) {
            return function(state_16615) {
              var state_val_16616 = state_16615[1];
              if (state_val_16616 === 7) {
                var inst_16611 = state_16615[2];
                var state_16615__$1 = state_16615;
                var statearr_16617_16641 = state_16615__$1;
                statearr_16617_16641[2] = inst_16611;
                statearr_16617_16641[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_16616 === 1) {
                  var state_16615__$1 = state_16615;
                  var statearr_16618_16642 = state_16615__$1;
                  statearr_16618_16642[2] = null;
                  statearr_16618_16642[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_16616 === 4) {
                    var inst_16592 = state_16615[7];
                    var inst_16592__$1 = state_16615[2];
                    var inst_16593 = inst_16592__$1 == null;
                    var state_16615__$1 = function() {
                      var statearr_16619 = state_16615;
                      statearr_16619[7] = inst_16592__$1;
                      return statearr_16619;
                    }();
                    if (cljs.core.truth_(inst_16593)) {
                      var statearr_16620_16643 = state_16615__$1;
                      statearr_16620_16643[1] = 5;
                    } else {
                      var statearr_16621_16644 = state_16615__$1;
                      statearr_16621_16644[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_16616 === 13) {
                      var state_16615__$1 = state_16615;
                      var statearr_16622_16645 = state_16615__$1;
                      statearr_16622_16645[2] = null;
                      statearr_16622_16645[1] = 14;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_16616 === 6) {
                        var inst_16592 = state_16615[7];
                        var inst_16598 = p.call(null, inst_16592);
                        var state_16615__$1 = state_16615;
                        if (cljs.core.truth_(inst_16598)) {
                          var statearr_16623_16646 = state_16615__$1;
                          statearr_16623_16646[1] = 9;
                        } else {
                          var statearr_16624_16647 = state_16615__$1;
                          statearr_16624_16647[1] = 10;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_16616 === 3) {
                          var inst_16613 = state_16615[2];
                          var state_16615__$1 = state_16615;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_16615__$1, inst_16613);
                        } else {
                          if (state_val_16616 === 12) {
                            var state_16615__$1 = state_16615;
                            var statearr_16625_16648 = state_16615__$1;
                            statearr_16625_16648[2] = null;
                            statearr_16625_16648[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_16616 === 2) {
                              var state_16615__$1 = state_16615;
                              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_16615__$1, 4, ch);
                            } else {
                              if (state_val_16616 === 11) {
                                var inst_16592 = state_16615[7];
                                var inst_16602 = state_16615[2];
                                var state_16615__$1 = state_16615;
                                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_16615__$1, 8, inst_16602, inst_16592);
                              } else {
                                if (state_val_16616 === 9) {
                                  var state_16615__$1 = state_16615;
                                  var statearr_16626_16649 = state_16615__$1;
                                  statearr_16626_16649[2] = tc;
                                  statearr_16626_16649[1] = 11;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_16616 === 5) {
                                    var inst_16595 = cljs.core.async.close_BANG_.call(null, tc);
                                    var inst_16596 = cljs.core.async.close_BANG_.call(null, fc);
                                    var state_16615__$1 = function() {
                                      var statearr_16627 = state_16615;
                                      statearr_16627[8] = inst_16595;
                                      return statearr_16627;
                                    }();
                                    var statearr_16628_16650 = state_16615__$1;
                                    statearr_16628_16650[2] = inst_16596;
                                    statearr_16628_16650[1] = 7;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_16616 === 14) {
                                      var inst_16609 = state_16615[2];
                                      var state_16615__$1 = state_16615;
                                      var statearr_16629_16651 = state_16615__$1;
                                      statearr_16629_16651[2] = inst_16609;
                                      statearr_16629_16651[1] = 7;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_16616 === 10) {
                                        var state_16615__$1 = state_16615;
                                        var statearr_16630_16652 = state_16615__$1;
                                        statearr_16630_16652[2] = fc;
                                        statearr_16630_16652[1] = 11;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_16616 === 8) {
                                          var inst_16604 = state_16615[2];
                                          var state_16615__$1 = state_16615;
                                          if (cljs.core.truth_(inst_16604)) {
                                            var statearr_16631_16653 = state_16615__$1;
                                            statearr_16631_16653[1] = 12;
                                          } else {
                                            var statearr_16632_16654 = state_16615__$1;
                                            statearr_16632_16654[1] = 13;
                                          }
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          return null;
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6703__auto___16640, tc, fc);
          return function(switch__6647__auto__, c__6703__auto___16640, tc, fc) {
            return function() {
              var state_machine__6648__auto__ = null;
              var state_machine__6648__auto____0 = function() {
                var statearr_16636 = [null, null, null, null, null, null, null, null, null];
                statearr_16636[0] = state_machine__6648__auto__;
                statearr_16636[1] = 1;
                return statearr_16636;
              };
              var state_machine__6648__auto____1 = function(state_16615) {
                while (true) {
                  var ret_value__6649__auto__ = function() {
                    try {
                      while (true) {
                        var result__6650__auto__ = switch__6647__auto__.call(null, state_16615);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6650__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6650__auto__;
                        }
                        break;
                      }
                    } catch (e16637) {
                      if (e16637 instanceof Object) {
                        var ex__6651__auto__ = e16637;
                        var statearr_16638_16655 = state_16615;
                        statearr_16638_16655[5] = ex__6651__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_16615);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e16637;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6649__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__16656 = state_16615;
                    state_16615 = G__16656;
                    continue;
                  } else {
                    return ret_value__6649__auto__;
                  }
                  break;
                }
              };
              state_machine__6648__auto__ = function(state_16615) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6648__auto____0.call(this);
                  case 1:
                    return state_machine__6648__auto____1.call(this, state_16615);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6648__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6648__auto____0;
              state_machine__6648__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6648__auto____1;
              return state_machine__6648__auto__;
            }();
          }(switch__6647__auto__, c__6703__auto___16640, tc, fc);
        }();
        var state__6705__auto__ = function() {
          var statearr_16639 = f__6704__auto__.call(null);
          statearr_16639[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6703__auto___16640;
          return statearr_16639;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6705__auto__);
      };
    }(c__6703__auto___16640, tc, fc));
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [tc, fc], null);
  };
  split = function(p, ch, t_buf_or_n, f_buf_or_n) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, p, ch);
      case 4:
        return split__4.call(this, p, ch, t_buf_or_n, f_buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  split.cljs$core$IFn$_invoke$arity$2 = split__2;
  split.cljs$core$IFn$_invoke$arity$4 = split__4;
  return split;
}();
cljs.core.async.reduce = function reduce(f, init, ch) {
  var c__6703__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6703__auto__) {
    return function() {
      var f__6704__auto__ = function() {
        var switch__6647__auto__ = function(c__6703__auto__) {
          return function(state_16703) {
            var state_val_16704 = state_16703[1];
            if (state_val_16704 === 7) {
              var inst_16699 = state_16703[2];
              var state_16703__$1 = state_16703;
              var statearr_16705_16721 = state_16703__$1;
              statearr_16705_16721[2] = inst_16699;
              statearr_16705_16721[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_16704 === 6) {
                var inst_16692 = state_16703[7];
                var inst_16689 = state_16703[8];
                var inst_16696 = f.call(null, inst_16689, inst_16692);
                var inst_16689__$1 = inst_16696;
                var state_16703__$1 = function() {
                  var statearr_16706 = state_16703;
                  statearr_16706[8] = inst_16689__$1;
                  return statearr_16706;
                }();
                var statearr_16707_16722 = state_16703__$1;
                statearr_16707_16722[2] = null;
                statearr_16707_16722[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_16704 === 5) {
                  var inst_16689 = state_16703[8];
                  var state_16703__$1 = state_16703;
                  var statearr_16708_16723 = state_16703__$1;
                  statearr_16708_16723[2] = inst_16689;
                  statearr_16708_16723[1] = 7;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_16704 === 4) {
                    var inst_16692 = state_16703[7];
                    var inst_16692__$1 = state_16703[2];
                    var inst_16693 = inst_16692__$1 == null;
                    var state_16703__$1 = function() {
                      var statearr_16709 = state_16703;
                      statearr_16709[7] = inst_16692__$1;
                      return statearr_16709;
                    }();
                    if (cljs.core.truth_(inst_16693)) {
                      var statearr_16710_16724 = state_16703__$1;
                      statearr_16710_16724[1] = 5;
                    } else {
                      var statearr_16711_16725 = state_16703__$1;
                      statearr_16711_16725[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_16704 === 3) {
                      var inst_16701 = state_16703[2];
                      var state_16703__$1 = state_16703;
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_16703__$1, inst_16701);
                    } else {
                      if (state_val_16704 === 2) {
                        var state_16703__$1 = state_16703;
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_16703__$1, 4, ch);
                      } else {
                        if (state_val_16704 === 1) {
                          var inst_16689 = init;
                          var state_16703__$1 = function() {
                            var statearr_16712 = state_16703;
                            statearr_16712[8] = inst_16689;
                            return statearr_16712;
                          }();
                          var statearr_16713_16726 = state_16703__$1;
                          statearr_16713_16726[2] = null;
                          statearr_16713_16726[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          return null;
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6703__auto__);
        return function(switch__6647__auto__, c__6703__auto__) {
          return function() {
            var state_machine__6648__auto__ = null;
            var state_machine__6648__auto____0 = function() {
              var statearr_16717 = [null, null, null, null, null, null, null, null, null];
              statearr_16717[0] = state_machine__6648__auto__;
              statearr_16717[1] = 1;
              return statearr_16717;
            };
            var state_machine__6648__auto____1 = function(state_16703) {
              while (true) {
                var ret_value__6649__auto__ = function() {
                  try {
                    while (true) {
                      var result__6650__auto__ = switch__6647__auto__.call(null, state_16703);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6650__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__6650__auto__;
                      }
                      break;
                    }
                  } catch (e16718) {
                    if (e16718 instanceof Object) {
                      var ex__6651__auto__ = e16718;
                      var statearr_16719_16727 = state_16703;
                      statearr_16719_16727[5] = ex__6651__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_16703);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e16718;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6649__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__16728 = state_16703;
                  state_16703 = G__16728;
                  continue;
                } else {
                  return ret_value__6649__auto__;
                }
                break;
              }
            };
            state_machine__6648__auto__ = function(state_16703) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6648__auto____0.call(this);
                case 1:
                  return state_machine__6648__auto____1.call(this, state_16703);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6648__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6648__auto____0;
            state_machine__6648__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6648__auto____1;
            return state_machine__6648__auto__;
          }();
        }(switch__6647__auto__, c__6703__auto__);
      }();
      var state__6705__auto__ = function() {
        var statearr_16720 = f__6704__auto__.call(null);
        statearr_16720[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6703__auto__;
        return statearr_16720;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6705__auto__);
    };
  }(c__6703__auto__));
  return c__6703__auto__;
};
cljs.core.async.onto_chan = function() {
  var onto_chan = null;
  var onto_chan__2 = function(ch, coll) {
    return onto_chan.call(null, ch, coll, true);
  };
  var onto_chan__3 = function(ch, coll, close_QMARK_) {
    var c__6703__auto__ = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6703__auto__) {
      return function() {
        var f__6704__auto__ = function() {
          var switch__6647__auto__ = function(c__6703__auto__) {
            return function(state_16802) {
              var state_val_16803 = state_16802[1];
              if (state_val_16803 === 7) {
                var inst_16784 = state_16802[2];
                var state_16802__$1 = state_16802;
                var statearr_16804_16827 = state_16802__$1;
                statearr_16804_16827[2] = inst_16784;
                statearr_16804_16827[1] = 6;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_16803 === 1) {
                  var inst_16778 = cljs.core.seq.call(null, coll);
                  var inst_16779 = inst_16778;
                  var state_16802__$1 = function() {
                    var statearr_16805 = state_16802;
                    statearr_16805[7] = inst_16779;
                    return statearr_16805;
                  }();
                  var statearr_16806_16828 = state_16802__$1;
                  statearr_16806_16828[2] = null;
                  statearr_16806_16828[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_16803 === 4) {
                    var inst_16779 = state_16802[7];
                    var inst_16782 = cljs.core.first.call(null, inst_16779);
                    var state_16802__$1 = state_16802;
                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_16802__$1, 7, ch, inst_16782);
                  } else {
                    if (state_val_16803 === 13) {
                      var inst_16796 = state_16802[2];
                      var state_16802__$1 = state_16802;
                      var statearr_16807_16829 = state_16802__$1;
                      statearr_16807_16829[2] = inst_16796;
                      statearr_16807_16829[1] = 10;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_16803 === 6) {
                        var inst_16787 = state_16802[2];
                        var state_16802__$1 = state_16802;
                        if (cljs.core.truth_(inst_16787)) {
                          var statearr_16808_16830 = state_16802__$1;
                          statearr_16808_16830[1] = 8;
                        } else {
                          var statearr_16809_16831 = state_16802__$1;
                          statearr_16809_16831[1] = 9;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_16803 === 3) {
                          var inst_16800 = state_16802[2];
                          var state_16802__$1 = state_16802;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_16802__$1, inst_16800);
                        } else {
                          if (state_val_16803 === 12) {
                            var state_16802__$1 = state_16802;
                            var statearr_16810_16832 = state_16802__$1;
                            statearr_16810_16832[2] = null;
                            statearr_16810_16832[1] = 13;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_16803 === 2) {
                              var inst_16779 = state_16802[7];
                              var state_16802__$1 = state_16802;
                              if (cljs.core.truth_(inst_16779)) {
                                var statearr_16811_16833 = state_16802__$1;
                                statearr_16811_16833[1] = 4;
                              } else {
                                var statearr_16812_16834 = state_16802__$1;
                                statearr_16812_16834[1] = 5;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_16803 === 11) {
                                var inst_16793 = cljs.core.async.close_BANG_.call(null, ch);
                                var state_16802__$1 = state_16802;
                                var statearr_16813_16835 = state_16802__$1;
                                statearr_16813_16835[2] = inst_16793;
                                statearr_16813_16835[1] = 13;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_16803 === 9) {
                                  var state_16802__$1 = state_16802;
                                  if (cljs.core.truth_(close_QMARK_)) {
                                    var statearr_16814_16836 = state_16802__$1;
                                    statearr_16814_16836[1] = 11;
                                  } else {
                                    var statearr_16815_16837 = state_16802__$1;
                                    statearr_16815_16837[1] = 12;
                                  }
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_16803 === 5) {
                                    var inst_16779 = state_16802[7];
                                    var state_16802__$1 = state_16802;
                                    var statearr_16816_16838 = state_16802__$1;
                                    statearr_16816_16838[2] = inst_16779;
                                    statearr_16816_16838[1] = 6;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_16803 === 10) {
                                      var inst_16798 = state_16802[2];
                                      var state_16802__$1 = state_16802;
                                      var statearr_16817_16839 = state_16802__$1;
                                      statearr_16817_16839[2] = inst_16798;
                                      statearr_16817_16839[1] = 3;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_16803 === 8) {
                                        var inst_16779 = state_16802[7];
                                        var inst_16789 = cljs.core.next.call(null, inst_16779);
                                        var inst_16779__$1 = inst_16789;
                                        var state_16802__$1 = function() {
                                          var statearr_16818 = state_16802;
                                          statearr_16818[7] = inst_16779__$1;
                                          return statearr_16818;
                                        }();
                                        var statearr_16819_16840 = state_16802__$1;
                                        statearr_16819_16840[2] = null;
                                        statearr_16819_16840[1] = 2;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        return null;
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6703__auto__);
          return function(switch__6647__auto__, c__6703__auto__) {
            return function() {
              var state_machine__6648__auto__ = null;
              var state_machine__6648__auto____0 = function() {
                var statearr_16823 = [null, null, null, null, null, null, null, null];
                statearr_16823[0] = state_machine__6648__auto__;
                statearr_16823[1] = 1;
                return statearr_16823;
              };
              var state_machine__6648__auto____1 = function(state_16802) {
                while (true) {
                  var ret_value__6649__auto__ = function() {
                    try {
                      while (true) {
                        var result__6650__auto__ = switch__6647__auto__.call(null, state_16802);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6650__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6650__auto__;
                        }
                        break;
                      }
                    } catch (e16824) {
                      if (e16824 instanceof Object) {
                        var ex__6651__auto__ = e16824;
                        var statearr_16825_16841 = state_16802;
                        statearr_16825_16841[5] = ex__6651__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_16802);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e16824;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6649__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__16842 = state_16802;
                    state_16802 = G__16842;
                    continue;
                  } else {
                    return ret_value__6649__auto__;
                  }
                  break;
                }
              };
              state_machine__6648__auto__ = function(state_16802) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6648__auto____0.call(this);
                  case 1:
                    return state_machine__6648__auto____1.call(this, state_16802);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6648__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6648__auto____0;
              state_machine__6648__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6648__auto____1;
              return state_machine__6648__auto__;
            }();
          }(switch__6647__auto__, c__6703__auto__);
        }();
        var state__6705__auto__ = function() {
          var statearr_16826 = f__6704__auto__.call(null);
          statearr_16826[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6703__auto__;
          return statearr_16826;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6705__auto__);
      };
    }(c__6703__auto__));
    return c__6703__auto__;
  };
  onto_chan = function(ch, coll, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return onto_chan__2.call(this, ch, coll);
      case 3:
        return onto_chan__3.call(this, ch, coll, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  onto_chan.cljs$core$IFn$_invoke$arity$2 = onto_chan__2;
  onto_chan.cljs$core$IFn$_invoke$arity$3 = onto_chan__3;
  return onto_chan;
}();
cljs.core.async.to_chan = function to_chan(coll) {
  var ch = cljs.core.async.chan.call(null, cljs.core.bounded_count.call(null, 100, coll));
  cljs.core.async.onto_chan.call(null, ch, coll);
  return ch;
};
cljs.core.async.Mux = function() {
  var obj16844 = {};
  return obj16844;
}();
cljs.core.async.muxch_STAR_ = function muxch_STAR_(_) {
  if (function() {
    var and__3913__auto__ = _;
    if (and__3913__auto__) {
      return _.cljs$core$async$Mux$muxch_STAR_$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return _.cljs$core$async$Mux$muxch_STAR_$arity$1(_);
  } else {
    var x__4569__auto__ = _ == null ? null : _;
    return function() {
      var or__3925__auto__ = cljs.core.async.muxch_STAR_[goog.typeOf(x__4569__auto__)];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core.async.muxch_STAR_["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mux.muxch*", _);
        }
      }
    }().call(null, _);
  }
};
cljs.core.async.Mult = function() {
  var obj16846 = {};
  return obj16846;
}();
cljs.core.async.tap_STAR_ = function tap_STAR_(m, ch, close_QMARK_) {
  if (function() {
    var and__3913__auto__ = m;
    if (and__3913__auto__) {
      return m.cljs$core$async$Mult$tap_STAR_$arity$3;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return m.cljs$core$async$Mult$tap_STAR_$arity$3(m, ch, close_QMARK_);
  } else {
    var x__4569__auto__ = m == null ? null : m;
    return function() {
      var or__3925__auto__ = cljs.core.async.tap_STAR_[goog.typeOf(x__4569__auto__)];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core.async.tap_STAR_["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mult.tap*", m);
        }
      }
    }().call(null, m, ch, close_QMARK_);
  }
};
cljs.core.async.untap_STAR_ = function untap_STAR_(m, ch) {
  if (function() {
    var and__3913__auto__ = m;
    if (and__3913__auto__) {
      return m.cljs$core$async$Mult$untap_STAR_$arity$2;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return m.cljs$core$async$Mult$untap_STAR_$arity$2(m, ch);
  } else {
    var x__4569__auto__ = m == null ? null : m;
    return function() {
      var or__3925__auto__ = cljs.core.async.untap_STAR_[goog.typeOf(x__4569__auto__)];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core.async.untap_STAR_["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mult.untap*", m);
        }
      }
    }().call(null, m, ch);
  }
};
cljs.core.async.untap_all_STAR_ = function untap_all_STAR_(m) {
  if (function() {
    var and__3913__auto__ = m;
    if (and__3913__auto__) {
      return m.cljs$core$async$Mult$untap_all_STAR_$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return m.cljs$core$async$Mult$untap_all_STAR_$arity$1(m);
  } else {
    var x__4569__auto__ = m == null ? null : m;
    return function() {
      var or__3925__auto__ = cljs.core.async.untap_all_STAR_[goog.typeOf(x__4569__auto__)];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core.async.untap_all_STAR_["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mult.untap-all*", m);
        }
      }
    }().call(null, m);
  }
};
cljs.core.async.mult = function mult(ch) {
  var cs = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var m = function() {
    if (typeof cljs.core.async.t17068 !== "undefined") {
    } else {
      cljs.core.async.t17068 = function(cs, ch, mult, meta17069) {
        this.cs = cs;
        this.ch = ch;
        this.mult = mult;
        this.meta17069 = meta17069;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
      };
      cljs.core.async.t17068.prototype.cljs$core$async$Mult$ = true;
      cljs.core.async.t17068.prototype.cljs$core$async$Mult$tap_STAR_$arity$3 = function(cs) {
        return function(_, ch__$1, close_QMARK_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.assoc, ch__$1, close_QMARK_);
          return null;
        };
      }(cs);
      cljs.core.async.t17068.prototype.cljs$core$async$Mult$untap_STAR_$arity$2 = function(cs) {
        return function(_, ch__$1) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.dissoc, ch__$1);
          return null;
        };
      }(cs);
      cljs.core.async.t17068.prototype.cljs$core$async$Mult$untap_all_STAR_$arity$1 = function(cs) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.reset_BANG_.call(null, self__.cs, cljs.core.PersistentArrayMap.EMPTY);
          return null;
        };
      }(cs);
      cljs.core.async.t17068.prototype.cljs$core$async$Mux$ = true;
      cljs.core.async.t17068.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(cs) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.ch;
        };
      }(cs);
      cljs.core.async.t17068.prototype.cljs$core$IMeta$_meta$arity$1 = function(cs) {
        return function(_17070) {
          var self__ = this;
          var _17070__$1 = this;
          return self__.meta17069;
        };
      }(cs);
      cljs.core.async.t17068.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(cs) {
        return function(_17070, meta17069__$1) {
          var self__ = this;
          var _17070__$1 = this;
          return new cljs.core.async.t17068(self__.cs, self__.ch, self__.mult, meta17069__$1);
        };
      }(cs);
      cljs.core.async.t17068.cljs$lang$type = true;
      cljs.core.async.t17068.cljs$lang$ctorStr = "cljs.core.async/t17068";
      cljs.core.async.t17068.cljs$lang$ctorPrWriter = function(cs) {
        return function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
          return cljs.core._write.call(null, writer__4513__auto__, "cljs.core.async/t17068");
        };
      }(cs);
      cljs.core.async.__GT_t17068 = function(cs) {
        return function __GT_t17068(cs__$1, ch__$1, mult__$1, meta17069) {
          return new cljs.core.async.t17068(cs__$1, ch__$1, mult__$1, meta17069);
        };
      }(cs);
    }
    return new cljs.core.async.t17068(cs, ch, mult, cljs.core.PersistentArrayMap.EMPTY);
  }();
  var dchan = cljs.core.async.chan.call(null, 1);
  var dctr = cljs.core.atom.call(null, null);
  var done = function(cs, m, dchan, dctr) {
    return function(_) {
      if (cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec) === 0) {
        return cljs.core.async.put_BANG_.call(null, dchan, true);
      } else {
        return null;
      }
    };
  }(cs, m, dchan, dctr);
  var c__6703__auto___17289 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6703__auto___17289, cs, m, dchan, dctr, done) {
    return function() {
      var f__6704__auto__ = function() {
        var switch__6647__auto__ = function(c__6703__auto___17289, cs, m, dchan, dctr, done) {
          return function(state_17201) {
            var state_val_17202 = state_17201[1];
            if (state_val_17202 === 7) {
              var inst_17197 = state_17201[2];
              var state_17201__$1 = state_17201;
              var statearr_17203_17290 = state_17201__$1;
              statearr_17203_17290[2] = inst_17197;
              statearr_17203_17290[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_17202 === 20) {
                var inst_17102 = state_17201[7];
                var inst_17112 = cljs.core.first.call(null, inst_17102);
                var inst_17113 = cljs.core.nth.call(null, inst_17112, 0, null);
                var inst_17114 = cljs.core.nth.call(null, inst_17112, 1, null);
                var state_17201__$1 = function() {
                  var statearr_17204 = state_17201;
                  statearr_17204[8] = inst_17113;
                  return statearr_17204;
                }();
                if (cljs.core.truth_(inst_17114)) {
                  var statearr_17205_17291 = state_17201__$1;
                  statearr_17205_17291[1] = 22;
                } else {
                  var statearr_17206_17292 = state_17201__$1;
                  statearr_17206_17292[1] = 23;
                }
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_17202 === 27) {
                  var inst_17073 = state_17201[9];
                  var inst_17144 = state_17201[10];
                  var inst_17142 = state_17201[11];
                  var inst_17149 = state_17201[12];
                  var inst_17149__$1 = cljs.core._nth.call(null, inst_17142, inst_17144);
                  var inst_17150 = cljs.core.async.put_BANG_.call(null, inst_17149__$1, inst_17073, done);
                  var state_17201__$1 = function() {
                    var statearr_17207 = state_17201;
                    statearr_17207[12] = inst_17149__$1;
                    return statearr_17207;
                  }();
                  if (cljs.core.truth_(inst_17150)) {
                    var statearr_17208_17293 = state_17201__$1;
                    statearr_17208_17293[1] = 30;
                  } else {
                    var statearr_17209_17294 = state_17201__$1;
                    statearr_17209_17294[1] = 31;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_17202 === 1) {
                    var state_17201__$1 = state_17201;
                    var statearr_17210_17295 = state_17201__$1;
                    statearr_17210_17295[2] = null;
                    statearr_17210_17295[1] = 2;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_17202 === 24) {
                      var inst_17102 = state_17201[7];
                      var inst_17119 = state_17201[2];
                      var inst_17120 = cljs.core.next.call(null, inst_17102);
                      var inst_17082 = inst_17120;
                      var inst_17083 = null;
                      var inst_17084 = 0;
                      var inst_17085 = 0;
                      var state_17201__$1 = function() {
                        var statearr_17211 = state_17201;
                        statearr_17211[13] = inst_17083;
                        statearr_17211[14] = inst_17082;
                        statearr_17211[15] = inst_17085;
                        statearr_17211[16] = inst_17119;
                        statearr_17211[17] = inst_17084;
                        return statearr_17211;
                      }();
                      var statearr_17212_17296 = state_17201__$1;
                      statearr_17212_17296[2] = null;
                      statearr_17212_17296[1] = 8;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_17202 === 39) {
                        var state_17201__$1 = state_17201;
                        var statearr_17216_17297 = state_17201__$1;
                        statearr_17216_17297[2] = null;
                        statearr_17216_17297[1] = 41;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_17202 === 4) {
                          var inst_17073 = state_17201[9];
                          var inst_17073__$1 = state_17201[2];
                          var inst_17074 = inst_17073__$1 == null;
                          var state_17201__$1 = function() {
                            var statearr_17217 = state_17201;
                            statearr_17217[9] = inst_17073__$1;
                            return statearr_17217;
                          }();
                          if (cljs.core.truth_(inst_17074)) {
                            var statearr_17218_17298 = state_17201__$1;
                            statearr_17218_17298[1] = 5;
                          } else {
                            var statearr_17219_17299 = state_17201__$1;
                            statearr_17219_17299[1] = 6;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_17202 === 15) {
                            var inst_17083 = state_17201[13];
                            var inst_17082 = state_17201[14];
                            var inst_17085 = state_17201[15];
                            var inst_17084 = state_17201[17];
                            var inst_17098 = state_17201[2];
                            var inst_17099 = inst_17085 + 1;
                            var tmp17213 = inst_17083;
                            var tmp17214 = inst_17082;
                            var tmp17215 = inst_17084;
                            var inst_17082__$1 = tmp17214;
                            var inst_17083__$1 = tmp17213;
                            var inst_17084__$1 = tmp17215;
                            var inst_17085__$1 = inst_17099;
                            var state_17201__$1 = function() {
                              var statearr_17220 = state_17201;
                              statearr_17220[18] = inst_17098;
                              statearr_17220[13] = inst_17083__$1;
                              statearr_17220[14] = inst_17082__$1;
                              statearr_17220[15] = inst_17085__$1;
                              statearr_17220[17] = inst_17084__$1;
                              return statearr_17220;
                            }();
                            var statearr_17221_17300 = state_17201__$1;
                            statearr_17221_17300[2] = null;
                            statearr_17221_17300[1] = 8;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_17202 === 21) {
                              var inst_17123 = state_17201[2];
                              var state_17201__$1 = state_17201;
                              var statearr_17225_17301 = state_17201__$1;
                              statearr_17225_17301[2] = inst_17123;
                              statearr_17225_17301[1] = 18;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_17202 === 31) {
                                var inst_17149 = state_17201[12];
                                var inst_17153 = done.call(null, null);
                                var inst_17154 = cljs.core.async.untap_STAR_.call(null, m, inst_17149);
                                var state_17201__$1 = function() {
                                  var statearr_17226 = state_17201;
                                  statearr_17226[19] = inst_17153;
                                  return statearr_17226;
                                }();
                                var statearr_17227_17302 = state_17201__$1;
                                statearr_17227_17302[2] = inst_17154;
                                statearr_17227_17302[1] = 32;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_17202 === 32) {
                                  var inst_17144 = state_17201[10];
                                  var inst_17142 = state_17201[11];
                                  var inst_17141 = state_17201[20];
                                  var inst_17143 = state_17201[21];
                                  var inst_17156 = state_17201[2];
                                  var inst_17157 = inst_17144 + 1;
                                  var tmp17222 = inst_17142;
                                  var tmp17223 = inst_17141;
                                  var tmp17224 = inst_17143;
                                  var inst_17141__$1 = tmp17223;
                                  var inst_17142__$1 = tmp17222;
                                  var inst_17143__$1 = tmp17224;
                                  var inst_17144__$1 = inst_17157;
                                  var state_17201__$1 = function() {
                                    var statearr_17228 = state_17201;
                                    statearr_17228[22] = inst_17156;
                                    statearr_17228[10] = inst_17144__$1;
                                    statearr_17228[11] = inst_17142__$1;
                                    statearr_17228[20] = inst_17141__$1;
                                    statearr_17228[21] = inst_17143__$1;
                                    return statearr_17228;
                                  }();
                                  var statearr_17229_17303 = state_17201__$1;
                                  statearr_17229_17303[2] = null;
                                  statearr_17229_17303[1] = 25;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_17202 === 40) {
                                    var inst_17169 = state_17201[23];
                                    var inst_17173 = done.call(null, null);
                                    var inst_17174 = cljs.core.async.untap_STAR_.call(null, m, inst_17169);
                                    var state_17201__$1 = function() {
                                      var statearr_17230 = state_17201;
                                      statearr_17230[24] = inst_17173;
                                      return statearr_17230;
                                    }();
                                    var statearr_17231_17304 = state_17201__$1;
                                    statearr_17231_17304[2] = inst_17174;
                                    statearr_17231_17304[1] = 41;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_17202 === 33) {
                                      var inst_17160 = state_17201[25];
                                      var inst_17162 = cljs.core.chunked_seq_QMARK_.call(null, inst_17160);
                                      var state_17201__$1 = state_17201;
                                      if (inst_17162) {
                                        var statearr_17232_17305 = state_17201__$1;
                                        statearr_17232_17305[1] = 36;
                                      } else {
                                        var statearr_17233_17306 = state_17201__$1;
                                        statearr_17233_17306[1] = 37;
                                      }
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_17202 === 13) {
                                        var inst_17092 = state_17201[26];
                                        var inst_17095 = cljs.core.async.close_BANG_.call(null, inst_17092);
                                        var state_17201__$1 = state_17201;
                                        var statearr_17234_17307 = state_17201__$1;
                                        statearr_17234_17307[2] = inst_17095;
                                        statearr_17234_17307[1] = 15;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_17202 === 22) {
                                          var inst_17113 = state_17201[8];
                                          var inst_17116 = cljs.core.async.close_BANG_.call(null, inst_17113);
                                          var state_17201__$1 = state_17201;
                                          var statearr_17235_17308 = state_17201__$1;
                                          statearr_17235_17308[2] = inst_17116;
                                          statearr_17235_17308[1] = 24;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_17202 === 36) {
                                            var inst_17160 = state_17201[25];
                                            var inst_17164 = cljs.core.chunk_first.call(null, inst_17160);
                                            var inst_17165 = cljs.core.chunk_rest.call(null, inst_17160);
                                            var inst_17166 = cljs.core.count.call(null, inst_17164);
                                            var inst_17141 = inst_17165;
                                            var inst_17142 = inst_17164;
                                            var inst_17143 = inst_17166;
                                            var inst_17144 = 0;
                                            var state_17201__$1 = function() {
                                              var statearr_17236 = state_17201;
                                              statearr_17236[10] = inst_17144;
                                              statearr_17236[11] = inst_17142;
                                              statearr_17236[20] = inst_17141;
                                              statearr_17236[21] = inst_17143;
                                              return statearr_17236;
                                            }();
                                            var statearr_17237_17309 = state_17201__$1;
                                            statearr_17237_17309[2] = null;
                                            statearr_17237_17309[1] = 25;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_17202 === 41) {
                                              var inst_17160 = state_17201[25];
                                              var inst_17176 = state_17201[2];
                                              var inst_17177 = cljs.core.next.call(null, inst_17160);
                                              var inst_17141 = inst_17177;
                                              var inst_17142 = null;
                                              var inst_17143 = 0;
                                              var inst_17144 = 0;
                                              var state_17201__$1 = function() {
                                                var statearr_17238 = state_17201;
                                                statearr_17238[27] = inst_17176;
                                                statearr_17238[10] = inst_17144;
                                                statearr_17238[11] = inst_17142;
                                                statearr_17238[20] = inst_17141;
                                                statearr_17238[21] = inst_17143;
                                                return statearr_17238;
                                              }();
                                              var statearr_17239_17310 = state_17201__$1;
                                              statearr_17239_17310[2] = null;
                                              statearr_17239_17310[1] = 25;
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_17202 === 43) {
                                                var state_17201__$1 = state_17201;
                                                var statearr_17240_17311 = state_17201__$1;
                                                statearr_17240_17311[2] = null;
                                                statearr_17240_17311[1] = 44;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_17202 === 29) {
                                                  var inst_17185 = state_17201[2];
                                                  var state_17201__$1 = state_17201;
                                                  var statearr_17241_17312 = state_17201__$1;
                                                  statearr_17241_17312[2] = inst_17185;
                                                  statearr_17241_17312[1] = 26;
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_17202 === 44) {
                                                    var inst_17194 = state_17201[2];
                                                    var state_17201__$1 = function() {
                                                      var statearr_17242 = state_17201;
                                                      statearr_17242[28] = inst_17194;
                                                      return statearr_17242;
                                                    }();
                                                    var statearr_17243_17313 = state_17201__$1;
                                                    statearr_17243_17313[2] = null;
                                                    statearr_17243_17313[1] = 2;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_17202 === 6) {
                                                      var inst_17133 = state_17201[29];
                                                      var inst_17132 = cljs.core.deref.call(null, cs);
                                                      var inst_17133__$1 = cljs.core.keys.call(null, inst_17132);
                                                      var inst_17134 = cljs.core.count.call(null, inst_17133__$1);
                                                      var inst_17135 = cljs.core.reset_BANG_.call(null, dctr, inst_17134);
                                                      var inst_17140 = cljs.core.seq.call(null, inst_17133__$1);
                                                      var inst_17141 = inst_17140;
                                                      var inst_17142 = null;
                                                      var inst_17143 = 0;
                                                      var inst_17144 = 0;
                                                      var state_17201__$1 = function() {
                                                        var statearr_17244 = state_17201;
                                                        statearr_17244[29] = inst_17133__$1;
                                                        statearr_17244[10] = inst_17144;
                                                        statearr_17244[30] = inst_17135;
                                                        statearr_17244[11] = inst_17142;
                                                        statearr_17244[20] = inst_17141;
                                                        statearr_17244[21] = inst_17143;
                                                        return statearr_17244;
                                                      }();
                                                      var statearr_17245_17314 = state_17201__$1;
                                                      statearr_17245_17314[2] = null;
                                                      statearr_17245_17314[1] = 25;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      if (state_val_17202 === 28) {
                                                        var inst_17160 = state_17201[25];
                                                        var inst_17141 = state_17201[20];
                                                        var inst_17160__$1 = cljs.core.seq.call(null, inst_17141);
                                                        var state_17201__$1 = function() {
                                                          var statearr_17246 = state_17201;
                                                          statearr_17246[25] = inst_17160__$1;
                                                          return statearr_17246;
                                                        }();
                                                        if (inst_17160__$1) {
                                                          var statearr_17247_17315 = state_17201__$1;
                                                          statearr_17247_17315[1] = 33;
                                                        } else {
                                                          var statearr_17248_17316 = state_17201__$1;
                                                          statearr_17248_17316[1] = 34;
                                                        }
                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                      } else {
                                                        if (state_val_17202 === 25) {
                                                          var inst_17144 = state_17201[10];
                                                          var inst_17143 = state_17201[21];
                                                          var inst_17146 = inst_17144 < inst_17143;
                                                          var inst_17147 = inst_17146;
                                                          var state_17201__$1 = state_17201;
                                                          if (cljs.core.truth_(inst_17147)) {
                                                            var statearr_17249_17317 = state_17201__$1;
                                                            statearr_17249_17317[1] = 27;
                                                          } else {
                                                            var statearr_17250_17318 = state_17201__$1;
                                                            statearr_17250_17318[1] = 28;
                                                          }
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          if (state_val_17202 === 34) {
                                                            var state_17201__$1 = state_17201;
                                                            var statearr_17251_17319 = state_17201__$1;
                                                            statearr_17251_17319[2] = null;
                                                            statearr_17251_17319[1] = 35;
                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                          } else {
                                                            if (state_val_17202 === 17) {
                                                              var state_17201__$1 = state_17201;
                                                              var statearr_17252_17320 = state_17201__$1;
                                                              statearr_17252_17320[2] = null;
                                                              statearr_17252_17320[1] = 18;
                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                            } else {
                                                              if (state_val_17202 === 3) {
                                                                var inst_17199 = state_17201[2];
                                                                var state_17201__$1 = state_17201;
                                                                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_17201__$1, inst_17199);
                                                              } else {
                                                                if (state_val_17202 === 12) {
                                                                  var inst_17128 = state_17201[2];
                                                                  var state_17201__$1 = state_17201;
                                                                  var statearr_17253_17321 = state_17201__$1;
                                                                  statearr_17253_17321[2] = inst_17128;
                                                                  statearr_17253_17321[1] = 9;
                                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                } else {
                                                                  if (state_val_17202 === 2) {
                                                                    var state_17201__$1 = state_17201;
                                                                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_17201__$1, 4, ch);
                                                                  } else {
                                                                    if (state_val_17202 === 23) {
                                                                      var state_17201__$1 = state_17201;
                                                                      var statearr_17254_17322 = state_17201__$1;
                                                                      statearr_17254_17322[2] = null;
                                                                      statearr_17254_17322[1] = 24;
                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                    } else {
                                                                      if (state_val_17202 === 35) {
                                                                        var inst_17183 = state_17201[2];
                                                                        var state_17201__$1 = state_17201;
                                                                        var statearr_17255_17323 = state_17201__$1;
                                                                        statearr_17255_17323[2] = inst_17183;
                                                                        statearr_17255_17323[1] = 29;
                                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                      } else {
                                                                        if (state_val_17202 === 19) {
                                                                          var inst_17102 = state_17201[7];
                                                                          var inst_17106 = cljs.core.chunk_first.call(null, inst_17102);
                                                                          var inst_17107 = cljs.core.chunk_rest.call(null, inst_17102);
                                                                          var inst_17108 = cljs.core.count.call(null, inst_17106);
                                                                          var inst_17082 = inst_17107;
                                                                          var inst_17083 = inst_17106;
                                                                          var inst_17084 = inst_17108;
                                                                          var inst_17085 = 0;
                                                                          var state_17201__$1 = function() {
                                                                            var statearr_17256 = state_17201;
                                                                            statearr_17256[13] = inst_17083;
                                                                            statearr_17256[14] = inst_17082;
                                                                            statearr_17256[15] = inst_17085;
                                                                            statearr_17256[17] = inst_17084;
                                                                            return statearr_17256;
                                                                          }();
                                                                          var statearr_17257_17324 = state_17201__$1;
                                                                          statearr_17257_17324[2] = null;
                                                                          statearr_17257_17324[1] = 8;
                                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                        } else {
                                                                          if (state_val_17202 === 11) {
                                                                            var inst_17082 = state_17201[14];
                                                                            var inst_17102 = state_17201[7];
                                                                            var inst_17102__$1 = cljs.core.seq.call(null, inst_17082);
                                                                            var state_17201__$1 = function() {
                                                                              var statearr_17258 = state_17201;
                                                                              statearr_17258[7] = inst_17102__$1;
                                                                              return statearr_17258;
                                                                            }();
                                                                            if (inst_17102__$1) {
                                                                              var statearr_17259_17325 = state_17201__$1;
                                                                              statearr_17259_17325[1] = 16;
                                                                            } else {
                                                                              var statearr_17260_17326 = state_17201__$1;
                                                                              statearr_17260_17326[1] = 17;
                                                                            }
                                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                          } else {
                                                                            if (state_val_17202 === 9) {
                                                                              var inst_17130 = state_17201[2];
                                                                              var state_17201__$1 = state_17201;
                                                                              var statearr_17261_17327 = state_17201__$1;
                                                                              statearr_17261_17327[2] = inst_17130;
                                                                              statearr_17261_17327[1] = 7;
                                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                            } else {
                                                                              if (state_val_17202 === 5) {
                                                                                var inst_17080 = cljs.core.deref.call(null, cs);
                                                                                var inst_17081 = cljs.core.seq.call(null, inst_17080);
                                                                                var inst_17082 = inst_17081;
                                                                                var inst_17083 = null;
                                                                                var inst_17084 = 0;
                                                                                var inst_17085 = 0;
                                                                                var state_17201__$1 = function() {
                                                                                  var statearr_17262 = state_17201;
                                                                                  statearr_17262[13] = inst_17083;
                                                                                  statearr_17262[14] = inst_17082;
                                                                                  statearr_17262[15] = inst_17085;
                                                                                  statearr_17262[17] = inst_17084;
                                                                                  return statearr_17262;
                                                                                }();
                                                                                var statearr_17263_17328 = state_17201__$1;
                                                                                statearr_17263_17328[2] = null;
                                                                                statearr_17263_17328[1] = 8;
                                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                              } else {
                                                                                if (state_val_17202 === 14) {
                                                                                  var state_17201__$1 = state_17201;
                                                                                  var statearr_17264_17329 = state_17201__$1;
                                                                                  statearr_17264_17329[2] = null;
                                                                                  statearr_17264_17329[1] = 15;
                                                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                } else {
                                                                                  if (state_val_17202 === 45) {
                                                                                    var inst_17191 = state_17201[2];
                                                                                    var state_17201__$1 = state_17201;
                                                                                    var statearr_17265_17330 = state_17201__$1;
                                                                                    statearr_17265_17330[2] = inst_17191;
                                                                                    statearr_17265_17330[1] = 44;
                                                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                  } else {
                                                                                    if (state_val_17202 === 26) {
                                                                                      var inst_17133 = state_17201[29];
                                                                                      var inst_17187 = state_17201[2];
                                                                                      var inst_17188 = cljs.core.seq.call(null, inst_17133);
                                                                                      var state_17201__$1 = function() {
                                                                                        var statearr_17266 = state_17201;
                                                                                        statearr_17266[31] = inst_17187;
                                                                                        return statearr_17266;
                                                                                      }();
                                                                                      if (inst_17188) {
                                                                                        var statearr_17267_17331 = state_17201__$1;
                                                                                        statearr_17267_17331[1] = 42;
                                                                                      } else {
                                                                                        var statearr_17268_17332 = state_17201__$1;
                                                                                        statearr_17268_17332[1] = 43;
                                                                                      }
                                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                    } else {
                                                                                      if (state_val_17202 === 16) {
                                                                                        var inst_17102 = state_17201[7];
                                                                                        var inst_17104 = cljs.core.chunked_seq_QMARK_.call(null, inst_17102);
                                                                                        var state_17201__$1 = state_17201;
                                                                                        if (inst_17104) {
                                                                                          var statearr_17269_17333 = state_17201__$1;
                                                                                          statearr_17269_17333[1] = 19;
                                                                                        } else {
                                                                                          var statearr_17270_17334 = state_17201__$1;
                                                                                          statearr_17270_17334[1] = 20;
                                                                                        }
                                                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                      } else {
                                                                                        if (state_val_17202 === 38) {
                                                                                          var inst_17180 = state_17201[2];
                                                                                          var state_17201__$1 = state_17201;
                                                                                          var statearr_17271_17335 = state_17201__$1;
                                                                                          statearr_17271_17335[2] = inst_17180;
                                                                                          statearr_17271_17335[1] = 35;
                                                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                        } else {
                                                                                          if (state_val_17202 === 30) {
                                                                                            var state_17201__$1 = state_17201;
                                                                                            var statearr_17272_17336 = state_17201__$1;
                                                                                            statearr_17272_17336[2] = null;
                                                                                            statearr_17272_17336[1] = 32;
                                                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                          } else {
                                                                                            if (state_val_17202 === 10) {
                                                                                              var inst_17083 = state_17201[13];
                                                                                              var inst_17085 = state_17201[15];
                                                                                              var inst_17091 = cljs.core._nth.call(null, inst_17083, inst_17085);
                                                                                              var inst_17092 = cljs.core.nth.call(null, inst_17091, 0, null);
                                                                                              var inst_17093 = cljs.core.nth.call(null, inst_17091, 1, null);
                                                                                              var state_17201__$1 = function() {
                                                                                                var statearr_17273 = state_17201;
                                                                                                statearr_17273[26] = inst_17092;
                                                                                                return statearr_17273;
                                                                                              }();
                                                                                              if (cljs.core.truth_(inst_17093)) {
                                                                                                var statearr_17274_17337 = state_17201__$1;
                                                                                                statearr_17274_17337[1] = 13;
                                                                                              } else {
                                                                                                var statearr_17275_17338 = state_17201__$1;
                                                                                                statearr_17275_17338[1] = 14;
                                                                                              }
                                                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                            } else {
                                                                                              if (state_val_17202 === 18) {
                                                                                                var inst_17126 = state_17201[2];
                                                                                                var state_17201__$1 = state_17201;
                                                                                                var statearr_17276_17339 = state_17201__$1;
                                                                                                statearr_17276_17339[2] = inst_17126;
                                                                                                statearr_17276_17339[1] = 12;
                                                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                              } else {
                                                                                                if (state_val_17202 === 42) {
                                                                                                  var state_17201__$1 = state_17201;
                                                                                                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_17201__$1, 45, dchan);
                                                                                                } else {
                                                                                                  if (state_val_17202 === 37) {
                                                                                                    var inst_17169 = state_17201[23];
                                                                                                    var inst_17073 = state_17201[9];
                                                                                                    var inst_17160 = state_17201[25];
                                                                                                    var inst_17169__$1 = cljs.core.first.call(null, inst_17160);
                                                                                                    var inst_17170 = cljs.core.async.put_BANG_.call(null, inst_17169__$1, inst_17073, done);
                                                                                                    var state_17201__$1 = function() {
                                                                                                      var statearr_17277 = state_17201;
                                                                                                      statearr_17277[23] = inst_17169__$1;
                                                                                                      return statearr_17277;
                                                                                                    }();
                                                                                                    if (cljs.core.truth_(inst_17170)) {
                                                                                                      var statearr_17278_17340 = state_17201__$1;
                                                                                                      statearr_17278_17340[1] = 39;
                                                                                                    } else {
                                                                                                      var statearr_17279_17341 = state_17201__$1;
                                                                                                      statearr_17279_17341[1] = 40;
                                                                                                    }
                                                                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                                  } else {
                                                                                                    if (state_val_17202 === 8) {
                                                                                                      var inst_17085 = state_17201[15];
                                                                                                      var inst_17084 = state_17201[17];
                                                                                                      var inst_17087 = inst_17085 < inst_17084;
                                                                                                      var inst_17088 = inst_17087;
                                                                                                      var state_17201__$1 = state_17201;
                                                                                                      if (cljs.core.truth_(inst_17088)) {
                                                                                                        var statearr_17280_17342 = state_17201__$1;
                                                                                                        statearr_17280_17342[1] = 10;
                                                                                                      } else {
                                                                                                        var statearr_17281_17343 = state_17201__$1;
                                                                                                        statearr_17281_17343[1] = 11;
                                                                                                      }
                                                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                                    } else {
                                                                                                      return null;
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6703__auto___17289, cs, m, dchan, dctr, done);
        return function(switch__6647__auto__, c__6703__auto___17289, cs, m, dchan, dctr, done) {
          return function() {
            var state_machine__6648__auto__ = null;
            var state_machine__6648__auto____0 = function() {
              var statearr_17285 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_17285[0] = state_machine__6648__auto__;
              statearr_17285[1] = 1;
              return statearr_17285;
            };
            var state_machine__6648__auto____1 = function(state_17201) {
              while (true) {
                var ret_value__6649__auto__ = function() {
                  try {
                    while (true) {
                      var result__6650__auto__ = switch__6647__auto__.call(null, state_17201);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6650__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__6650__auto__;
                      }
                      break;
                    }
                  } catch (e17286) {
                    if (e17286 instanceof Object) {
                      var ex__6651__auto__ = e17286;
                      var statearr_17287_17344 = state_17201;
                      statearr_17287_17344[5] = ex__6651__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_17201);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e17286;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6649__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__17345 = state_17201;
                  state_17201 = G__17345;
                  continue;
                } else {
                  return ret_value__6649__auto__;
                }
                break;
              }
            };
            state_machine__6648__auto__ = function(state_17201) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6648__auto____0.call(this);
                case 1:
                  return state_machine__6648__auto____1.call(this, state_17201);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6648__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6648__auto____0;
            state_machine__6648__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6648__auto____1;
            return state_machine__6648__auto__;
          }();
        }(switch__6647__auto__, c__6703__auto___17289, cs, m, dchan, dctr, done);
      }();
      var state__6705__auto__ = function() {
        var statearr_17288 = f__6704__auto__.call(null);
        statearr_17288[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6703__auto___17289;
        return statearr_17288;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6705__auto__);
    };
  }(c__6703__auto___17289, cs, m, dchan, dctr, done));
  return m;
};
cljs.core.async.tap = function() {
  var tap = null;
  var tap__2 = function(mult, ch) {
    return tap.call(null, mult, ch, true);
  };
  var tap__3 = function(mult, ch, close_QMARK_) {
    cljs.core.async.tap_STAR_.call(null, mult, ch, close_QMARK_);
    return ch;
  };
  tap = function(mult, ch, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return tap__2.call(this, mult, ch);
      case 3:
        return tap__3.call(this, mult, ch, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  tap.cljs$core$IFn$_invoke$arity$2 = tap__2;
  tap.cljs$core$IFn$_invoke$arity$3 = tap__3;
  return tap;
}();
cljs.core.async.untap = function untap(mult, ch) {
  return cljs.core.async.untap_STAR_.call(null, mult, ch);
};
cljs.core.async.untap_all = function untap_all(mult) {
  return cljs.core.async.untap_all_STAR_.call(null, mult);
};
cljs.core.async.Mix = function() {
  var obj17347 = {};
  return obj17347;
}();
cljs.core.async.admix_STAR_ = function admix_STAR_(m, ch) {
  if (function() {
    var and__3913__auto__ = m;
    if (and__3913__auto__) {
      return m.cljs$core$async$Mix$admix_STAR_$arity$2;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$admix_STAR_$arity$2(m, ch);
  } else {
    var x__4569__auto__ = m == null ? null : m;
    return function() {
      var or__3925__auto__ = cljs.core.async.admix_STAR_[goog.typeOf(x__4569__auto__)];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core.async.admix_STAR_["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.admix*", m);
        }
      }
    }().call(null, m, ch);
  }
};
cljs.core.async.unmix_STAR_ = function unmix_STAR_(m, ch) {
  if (function() {
    var and__3913__auto__ = m;
    if (and__3913__auto__) {
      return m.cljs$core$async$Mix$unmix_STAR_$arity$2;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$unmix_STAR_$arity$2(m, ch);
  } else {
    var x__4569__auto__ = m == null ? null : m;
    return function() {
      var or__3925__auto__ = cljs.core.async.unmix_STAR_[goog.typeOf(x__4569__auto__)];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core.async.unmix_STAR_["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.unmix*", m);
        }
      }
    }().call(null, m, ch);
  }
};
cljs.core.async.unmix_all_STAR_ = function unmix_all_STAR_(m) {
  if (function() {
    var and__3913__auto__ = m;
    if (and__3913__auto__) {
      return m.cljs$core$async$Mix$unmix_all_STAR_$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$unmix_all_STAR_$arity$1(m);
  } else {
    var x__4569__auto__ = m == null ? null : m;
    return function() {
      var or__3925__auto__ = cljs.core.async.unmix_all_STAR_[goog.typeOf(x__4569__auto__)];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core.async.unmix_all_STAR_["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.unmix-all*", m);
        }
      }
    }().call(null, m);
  }
};
cljs.core.async.toggle_STAR_ = function toggle_STAR_(m, state_map) {
  if (function() {
    var and__3913__auto__ = m;
    if (and__3913__auto__) {
      return m.cljs$core$async$Mix$toggle_STAR_$arity$2;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$toggle_STAR_$arity$2(m, state_map);
  } else {
    var x__4569__auto__ = m == null ? null : m;
    return function() {
      var or__3925__auto__ = cljs.core.async.toggle_STAR_[goog.typeOf(x__4569__auto__)];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core.async.toggle_STAR_["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.toggle*", m);
        }
      }
    }().call(null, m, state_map);
  }
};
cljs.core.async.solo_mode_STAR_ = function solo_mode_STAR_(m, mode) {
  if (function() {
    var and__3913__auto__ = m;
    if (and__3913__auto__) {
      return m.cljs$core$async$Mix$solo_mode_STAR_$arity$2;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$solo_mode_STAR_$arity$2(m, mode);
  } else {
    var x__4569__auto__ = m == null ? null : m;
    return function() {
      var or__3925__auto__ = cljs.core.async.solo_mode_STAR_[goog.typeOf(x__4569__auto__)];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core.async.solo_mode_STAR_["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.solo-mode*", m);
        }
      }
    }().call(null, m, mode);
  }
};
cljs.core.async.ioc_alts_BANG_ = function() {
  var ioc_alts_BANG___delegate = function(state, cont_block, ports, p__17348) {
    var map__17353 = p__17348;
    var map__17353__$1 = cljs.core.seq_QMARK_.call(null, map__17353) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17353) : map__17353;
    var opts = map__17353__$1;
    var statearr_17354_17357 = state;
    statearr_17354_17357[cljs.core.async.impl.ioc_helpers.STATE_IDX] = cont_block;
    var temp__4126__auto__ = cljs.core.async.do_alts.call(null, function(map__17353, map__17353__$1, opts) {
      return function(val) {
        var statearr_17355_17358 = state;
        statearr_17355_17358[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = val;
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
      };
    }(map__17353, map__17353__$1, opts), ports, opts);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var cb = temp__4126__auto__;
      var statearr_17356_17359 = state;
      statearr_17356_17359[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
    } else {
      return null;
    }
  };
  var ioc_alts_BANG_ = function(state, cont_block, ports, var_args) {
    var p__17348 = null;
    if (arguments.length > 3) {
      var G__17360__i = 0, G__17360__a = new Array(arguments.length - 3);
      while (G__17360__i < G__17360__a.length) {
        G__17360__a[G__17360__i] = arguments[G__17360__i + 3];
        ++G__17360__i;
      }
      p__17348 = new cljs.core.IndexedSeq(G__17360__a, 0);
    }
    return ioc_alts_BANG___delegate.call(this, state, cont_block, ports, p__17348);
  };
  ioc_alts_BANG_.cljs$lang$maxFixedArity = 3;
  ioc_alts_BANG_.cljs$lang$applyTo = function(arglist__17361) {
    var state = cljs.core.first(arglist__17361);
    arglist__17361 = cljs.core.next(arglist__17361);
    var cont_block = cljs.core.first(arglist__17361);
    arglist__17361 = cljs.core.next(arglist__17361);
    var ports = cljs.core.first(arglist__17361);
    var p__17348 = cljs.core.rest(arglist__17361);
    return ioc_alts_BANG___delegate(state, cont_block, ports, p__17348);
  };
  ioc_alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = ioc_alts_BANG___delegate;
  return ioc_alts_BANG_;
}();
cljs.core.async.mix = function mix(out) {
  var cs = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var solo_modes = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "pause", "pause", -2095325672), null, new cljs.core.Keyword(null, "mute", "mute", 1151223646), null], null), null);
  var attrs = cljs.core.conj.call(null, solo_modes, new cljs.core.Keyword(null, "solo", "solo", -316350075));
  var solo_mode = cljs.core.atom.call(null, new cljs.core.Keyword(null, "mute", "mute", 1151223646));
  var change = cljs.core.async.chan.call(null);
  var changed = function(cs, solo_modes, attrs, solo_mode, change) {
    return function() {
      return cljs.core.async.put_BANG_.call(null, change, true);
    };
  }(cs, solo_modes, attrs, solo_mode, change);
  var pick = function(cs, solo_modes, attrs, solo_mode, change, changed) {
    return function(attr, chs) {
      return cljs.core.reduce_kv.call(null, function(cs, solo_modes, attrs, solo_mode, change, changed) {
        return function(ret, c, v) {
          if (cljs.core.truth_(attr.call(null, v))) {
            return cljs.core.conj.call(null, ret, c);
          } else {
            return ret;
          }
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed), cljs.core.PersistentHashSet.EMPTY, chs);
    };
  }(cs, solo_modes, attrs, solo_mode, change, changed);
  var calc_state = function(cs, solo_modes, attrs, solo_mode, change, changed, pick) {
    return function() {
      var chs = cljs.core.deref.call(null, cs);
      var mode = cljs.core.deref.call(null, solo_mode);
      var solos = pick.call(null, new cljs.core.Keyword(null, "solo", "solo", -316350075), chs);
      var pauses = pick.call(null, new cljs.core.Keyword(null, "pause", "pause", -2095325672), chs);
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "solos", "solos", 1441458643), solos, new cljs.core.Keyword(null, "mutes", "mutes", 1068806309), pick.call(null, new cljs.core.Keyword(null, "mute", "mute", 1151223646), chs), new cljs.core.Keyword(null, "reads", "reads", -1215067361), cljs.core.conj.call(null, cljs.core._EQ_.call(null, mode, new cljs.core.Keyword(null, "pause", "pause", -2095325672)) && !cljs.core.empty_QMARK_.call(null, solos) ? cljs.core.vec.call(null, 
      solos) : cljs.core.vec.call(null, cljs.core.remove.call(null, pauses, cljs.core.keys.call(null, chs))), change)], null);
    };
  }(cs, solo_modes, attrs, solo_mode, change, changed, pick);
  var m = function() {
    if (typeof cljs.core.async.t17481 !== "undefined") {
    } else {
      cljs.core.async.t17481 = function(change, mix, solo_mode, pick, cs, calc_state, out, changed, solo_modes, attrs, meta17482) {
        this.change = change;
        this.mix = mix;
        this.solo_mode = solo_mode;
        this.pick = pick;
        this.cs = cs;
        this.calc_state = calc_state;
        this.out = out;
        this.changed = changed;
        this.solo_modes = solo_modes;
        this.attrs = attrs;
        this.meta17482 = meta17482;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
      };
      cljs.core.async.t17481.prototype.cljs$core$async$Mix$ = true;
      cljs.core.async.t17481.prototype.cljs$core$async$Mix$admix_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, ch) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.assoc, ch, cljs.core.PersistentArrayMap.EMPTY);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t17481.prototype.cljs$core$async$Mix$unmix_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, ch) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.dissoc, ch);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t17481.prototype.cljs$core$async$Mix$unmix_all_STAR_$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.reset_BANG_.call(null, self__.cs, cljs.core.PersistentArrayMap.EMPTY);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t17481.prototype.cljs$core$async$Mix$toggle_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, state_map) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.partial.call(null, cljs.core.merge_with, cljs.core.merge), state_map);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t17481.prototype.cljs$core$async$Mix$solo_mode_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, mode) {
          var self__ = this;
          var ___$1 = this;
          if (cljs.core.truth_(self__.solo_modes.call(null, mode))) {
          } else {
            throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("mode must be one of: "), cljs.core.str(self__.solo_modes)].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "solo-modes", "solo-modes", 882180540, null), new cljs.core.Symbol(null, "mode", "mode", -2000032078, null))))].join(""));
          }
          cljs.core.reset_BANG_.call(null, self__.solo_mode, mode);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t17481.prototype.cljs$core$async$Mux$ = true;
      cljs.core.async.t17481.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.out;
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t17481.prototype.cljs$core$IMeta$_meta$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_17483) {
          var self__ = this;
          var _17483__$1 = this;
          return self__.meta17482;
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t17481.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_17483, meta17482__$1) {
          var self__ = this;
          var _17483__$1 = this;
          return new cljs.core.async.t17481(self__.change, self__.mix, self__.solo_mode, self__.pick, self__.cs, self__.calc_state, self__.out, self__.changed, self__.solo_modes, self__.attrs, meta17482__$1);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t17481.cljs$lang$type = true;
      cljs.core.async.t17481.cljs$lang$ctorStr = "cljs.core.async/t17481";
      cljs.core.async.t17481.cljs$lang$ctorPrWriter = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
          return cljs.core._write.call(null, writer__4513__auto__, "cljs.core.async/t17481");
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.__GT_t17481 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function __GT_t17481(change__$1, mix__$1, solo_mode__$1, pick__$1, cs__$1, calc_state__$1, out__$1, changed__$1, solo_modes__$1, attrs__$1, meta17482) {
          return new cljs.core.async.t17481(change__$1, mix__$1, solo_mode__$1, pick__$1, cs__$1, calc_state__$1, out__$1, changed__$1, solo_modes__$1, attrs__$1, meta17482);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
    }
    return new cljs.core.async.t17481(change, mix, solo_mode, pick, cs, calc_state, out, changed, solo_modes, attrs, cljs.core.PersistentArrayMap.EMPTY);
  }();
  var c__6703__auto___17600 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6703__auto___17600, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
    return function() {
      var f__6704__auto__ = function() {
        var switch__6647__auto__ = function(c__6703__auto___17600, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
          return function(state_17553) {
            var state_val_17554 = state_17553[1];
            if (state_val_17554 === 7) {
              var inst_17497 = state_17553[7];
              var inst_17502 = cljs.core.apply.call(null, cljs.core.hash_map, inst_17497);
              var state_17553__$1 = state_17553;
              var statearr_17555_17601 = state_17553__$1;
              statearr_17555_17601[2] = inst_17502;
              statearr_17555_17601[1] = 9;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_17554 === 20) {
                var inst_17512 = state_17553[8];
                var state_17553__$1 = state_17553;
                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_17553__$1, 23, out, inst_17512);
              } else {
                if (state_val_17554 === 1) {
                  var inst_17487 = state_17553[9];
                  var inst_17487__$1 = calc_state.call(null);
                  var inst_17488 = cljs.core.seq_QMARK_.call(null, inst_17487__$1);
                  var state_17553__$1 = function() {
                    var statearr_17556 = state_17553;
                    statearr_17556[9] = inst_17487__$1;
                    return statearr_17556;
                  }();
                  if (inst_17488) {
                    var statearr_17557_17602 = state_17553__$1;
                    statearr_17557_17602[1] = 2;
                  } else {
                    var statearr_17558_17603 = state_17553__$1;
                    statearr_17558_17603[1] = 3;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_17554 === 24) {
                    var inst_17505 = state_17553[10];
                    var inst_17497 = inst_17505;
                    var state_17553__$1 = function() {
                      var statearr_17559 = state_17553;
                      statearr_17559[7] = inst_17497;
                      return statearr_17559;
                    }();
                    var statearr_17560_17604 = state_17553__$1;
                    statearr_17560_17604[2] = null;
                    statearr_17560_17604[1] = 5;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_17554 === 4) {
                      var inst_17487 = state_17553[9];
                      var inst_17493 = state_17553[2];
                      var inst_17494 = cljs.core.get.call(null, inst_17493, new cljs.core.Keyword(null, "reads", "reads", -1215067361));
                      var inst_17495 = cljs.core.get.call(null, inst_17493, new cljs.core.Keyword(null, "mutes", "mutes", 1068806309));
                      var inst_17496 = cljs.core.get.call(null, inst_17493, new cljs.core.Keyword(null, "solos", "solos", 1441458643));
                      var inst_17497 = inst_17487;
                      var state_17553__$1 = function() {
                        var statearr_17561 = state_17553;
                        statearr_17561[11] = inst_17495;
                        statearr_17561[7] = inst_17497;
                        statearr_17561[12] = inst_17494;
                        statearr_17561[13] = inst_17496;
                        return statearr_17561;
                      }();
                      var statearr_17562_17605 = state_17553__$1;
                      statearr_17562_17605[2] = null;
                      statearr_17562_17605[1] = 5;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_17554 === 15) {
                        var state_17553__$1 = state_17553;
                        var statearr_17563_17606 = state_17553__$1;
                        statearr_17563_17606[2] = null;
                        statearr_17563_17606[1] = 16;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_17554 === 21) {
                          var inst_17505 = state_17553[10];
                          var inst_17497 = inst_17505;
                          var state_17553__$1 = function() {
                            var statearr_17564 = state_17553;
                            statearr_17564[7] = inst_17497;
                            return statearr_17564;
                          }();
                          var statearr_17565_17607 = state_17553__$1;
                          statearr_17565_17607[2] = null;
                          statearr_17565_17607[1] = 5;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_17554 === 13) {
                            var inst_17549 = state_17553[2];
                            var state_17553__$1 = state_17553;
                            var statearr_17566_17608 = state_17553__$1;
                            statearr_17566_17608[2] = inst_17549;
                            statearr_17566_17608[1] = 6;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_17554 === 22) {
                              var inst_17547 = state_17553[2];
                              var state_17553__$1 = state_17553;
                              var statearr_17567_17609 = state_17553__$1;
                              statearr_17567_17609[2] = inst_17547;
                              statearr_17567_17609[1] = 13;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_17554 === 6) {
                                var inst_17551 = state_17553[2];
                                var state_17553__$1 = state_17553;
                                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_17553__$1, inst_17551);
                              } else {
                                if (state_val_17554 === 25) {
                                  var state_17553__$1 = state_17553;
                                  var statearr_17568_17610 = state_17553__$1;
                                  statearr_17568_17610[2] = null;
                                  statearr_17568_17610[1] = 26;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_17554 === 17) {
                                    var inst_17527 = state_17553[14];
                                    var state_17553__$1 = state_17553;
                                    var statearr_17569_17611 = state_17553__$1;
                                    statearr_17569_17611[2] = inst_17527;
                                    statearr_17569_17611[1] = 19;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_17554 === 3) {
                                      var inst_17487 = state_17553[9];
                                      var state_17553__$1 = state_17553;
                                      var statearr_17570_17612 = state_17553__$1;
                                      statearr_17570_17612[2] = inst_17487;
                                      statearr_17570_17612[1] = 4;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_17554 === 12) {
                                        var inst_17527 = state_17553[14];
                                        var inst_17508 = state_17553[15];
                                        var inst_17513 = state_17553[16];
                                        var inst_17527__$1 = inst_17508.call(null, inst_17513);
                                        var state_17553__$1 = function() {
                                          var statearr_17571 = state_17553;
                                          statearr_17571[14] = inst_17527__$1;
                                          return statearr_17571;
                                        }();
                                        if (cljs.core.truth_(inst_17527__$1)) {
                                          var statearr_17572_17613 = state_17553__$1;
                                          statearr_17572_17613[1] = 17;
                                        } else {
                                          var statearr_17573_17614 = state_17553__$1;
                                          statearr_17573_17614[1] = 18;
                                        }
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_17554 === 2) {
                                          var inst_17487 = state_17553[9];
                                          var inst_17490 = cljs.core.apply.call(null, cljs.core.hash_map, inst_17487);
                                          var state_17553__$1 = state_17553;
                                          var statearr_17574_17615 = state_17553__$1;
                                          statearr_17574_17615[2] = inst_17490;
                                          statearr_17574_17615[1] = 4;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_17554 === 23) {
                                            var inst_17538 = state_17553[2];
                                            var state_17553__$1 = state_17553;
                                            if (cljs.core.truth_(inst_17538)) {
                                              var statearr_17575_17616 = state_17553__$1;
                                              statearr_17575_17616[1] = 24;
                                            } else {
                                              var statearr_17576_17617 = state_17553__$1;
                                              statearr_17576_17617[1] = 25;
                                            }
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_17554 === 19) {
                                              var inst_17535 = state_17553[2];
                                              var state_17553__$1 = state_17553;
                                              if (cljs.core.truth_(inst_17535)) {
                                                var statearr_17577_17618 = state_17553__$1;
                                                statearr_17577_17618[1] = 20;
                                              } else {
                                                var statearr_17578_17619 = state_17553__$1;
                                                statearr_17578_17619[1] = 21;
                                              }
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_17554 === 11) {
                                                var inst_17512 = state_17553[8];
                                                var inst_17518 = inst_17512 == null;
                                                var state_17553__$1 = state_17553;
                                                if (cljs.core.truth_(inst_17518)) {
                                                  var statearr_17579_17620 = state_17553__$1;
                                                  statearr_17579_17620[1] = 14;
                                                } else {
                                                  var statearr_17580_17621 = state_17553__$1;
                                                  statearr_17580_17621[1] = 15;
                                                }
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_17554 === 9) {
                                                  var inst_17505 = state_17553[10];
                                                  var inst_17505__$1 = state_17553[2];
                                                  var inst_17506 = cljs.core.get.call(null, inst_17505__$1, new cljs.core.Keyword(null, "reads", "reads", -1215067361));
                                                  var inst_17507 = cljs.core.get.call(null, inst_17505__$1, new cljs.core.Keyword(null, "mutes", "mutes", 1068806309));
                                                  var inst_17508 = cljs.core.get.call(null, inst_17505__$1, new cljs.core.Keyword(null, "solos", "solos", 1441458643));
                                                  var state_17553__$1 = function() {
                                                    var statearr_17581 = state_17553;
                                                    statearr_17581[10] = inst_17505__$1;
                                                    statearr_17581[17] = inst_17507;
                                                    statearr_17581[15] = inst_17508;
                                                    return statearr_17581;
                                                  }();
                                                  return cljs.core.async.ioc_alts_BANG_.call(null, state_17553__$1, 10, inst_17506);
                                                } else {
                                                  if (state_val_17554 === 5) {
                                                    var inst_17497 = state_17553[7];
                                                    var inst_17500 = cljs.core.seq_QMARK_.call(null, inst_17497);
                                                    var state_17553__$1 = state_17553;
                                                    if (inst_17500) {
                                                      var statearr_17582_17622 = state_17553__$1;
                                                      statearr_17582_17622[1] = 7;
                                                    } else {
                                                      var statearr_17583_17623 = state_17553__$1;
                                                      statearr_17583_17623[1] = 8;
                                                    }
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_17554 === 14) {
                                                      var inst_17513 = state_17553[16];
                                                      var inst_17520 = cljs.core.swap_BANG_.call(null, cs, cljs.core.dissoc, inst_17513);
                                                      var state_17553__$1 = state_17553;
                                                      var statearr_17584_17624 = state_17553__$1;
                                                      statearr_17584_17624[2] = inst_17520;
                                                      statearr_17584_17624[1] = 16;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      if (state_val_17554 === 26) {
                                                        var inst_17543 = state_17553[2];
                                                        var state_17553__$1 = state_17553;
                                                        var statearr_17585_17625 = state_17553__$1;
                                                        statearr_17585_17625[2] = inst_17543;
                                                        statearr_17585_17625[1] = 22;
                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                      } else {
                                                        if (state_val_17554 === 16) {
                                                          var inst_17523 = state_17553[2];
                                                          var inst_17524 = calc_state.call(null);
                                                          var inst_17497 = inst_17524;
                                                          var state_17553__$1 = function() {
                                                            var statearr_17586 = state_17553;
                                                            statearr_17586[18] = inst_17523;
                                                            statearr_17586[7] = inst_17497;
                                                            return statearr_17586;
                                                          }();
                                                          var statearr_17587_17626 = state_17553__$1;
                                                          statearr_17587_17626[2] = null;
                                                          statearr_17587_17626[1] = 5;
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          if (state_val_17554 === 10) {
                                                            var inst_17512 = state_17553[8];
                                                            var inst_17513 = state_17553[16];
                                                            var inst_17511 = state_17553[2];
                                                            var inst_17512__$1 = cljs.core.nth.call(null, inst_17511, 0, null);
                                                            var inst_17513__$1 = cljs.core.nth.call(null, inst_17511, 1, null);
                                                            var inst_17514 = inst_17512__$1 == null;
                                                            var inst_17515 = cljs.core._EQ_.call(null, inst_17513__$1, change);
                                                            var inst_17516 = inst_17514 || inst_17515;
                                                            var state_17553__$1 = function() {
                                                              var statearr_17588 = state_17553;
                                                              statearr_17588[8] = inst_17512__$1;
                                                              statearr_17588[16] = inst_17513__$1;
                                                              return statearr_17588;
                                                            }();
                                                            if (cljs.core.truth_(inst_17516)) {
                                                              var statearr_17589_17627 = state_17553__$1;
                                                              statearr_17589_17627[1] = 11;
                                                            } else {
                                                              var statearr_17590_17628 = state_17553__$1;
                                                              statearr_17590_17628[1] = 12;
                                                            }
                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                          } else {
                                                            if (state_val_17554 === 18) {
                                                              var inst_17507 = state_17553[17];
                                                              var inst_17508 = state_17553[15];
                                                              var inst_17513 = state_17553[16];
                                                              var inst_17530 = cljs.core.empty_QMARK_.call(null, inst_17508);
                                                              var inst_17531 = inst_17507.call(null, inst_17513);
                                                              var inst_17532 = cljs.core.not.call(null, inst_17531);
                                                              var inst_17533 = inst_17530 && inst_17532;
                                                              var state_17553__$1 = state_17553;
                                                              var statearr_17591_17629 = state_17553__$1;
                                                              statearr_17591_17629[2] = inst_17533;
                                                              statearr_17591_17629[1] = 19;
                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                            } else {
                                                              if (state_val_17554 === 8) {
                                                                var inst_17497 = state_17553[7];
                                                                var state_17553__$1 = state_17553;
                                                                var statearr_17592_17630 = state_17553__$1;
                                                                statearr_17592_17630[2] = inst_17497;
                                                                statearr_17592_17630[1] = 9;
                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                              } else {
                                                                return null;
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6703__auto___17600, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m);
        return function(switch__6647__auto__, c__6703__auto___17600, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
          return function() {
            var state_machine__6648__auto__ = null;
            var state_machine__6648__auto____0 = function() {
              var statearr_17596 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_17596[0] = state_machine__6648__auto__;
              statearr_17596[1] = 1;
              return statearr_17596;
            };
            var state_machine__6648__auto____1 = function(state_17553) {
              while (true) {
                var ret_value__6649__auto__ = function() {
                  try {
                    while (true) {
                      var result__6650__auto__ = switch__6647__auto__.call(null, state_17553);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6650__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__6650__auto__;
                      }
                      break;
                    }
                  } catch (e17597) {
                    if (e17597 instanceof Object) {
                      var ex__6651__auto__ = e17597;
                      var statearr_17598_17631 = state_17553;
                      statearr_17598_17631[5] = ex__6651__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_17553);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e17597;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6649__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__17632 = state_17553;
                  state_17553 = G__17632;
                  continue;
                } else {
                  return ret_value__6649__auto__;
                }
                break;
              }
            };
            state_machine__6648__auto__ = function(state_17553) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6648__auto____0.call(this);
                case 1:
                  return state_machine__6648__auto____1.call(this, state_17553);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6648__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6648__auto____0;
            state_machine__6648__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6648__auto____1;
            return state_machine__6648__auto__;
          }();
        }(switch__6647__auto__, c__6703__auto___17600, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m);
      }();
      var state__6705__auto__ = function() {
        var statearr_17599 = f__6704__auto__.call(null);
        statearr_17599[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6703__auto___17600;
        return statearr_17599;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6705__auto__);
    };
  }(c__6703__auto___17600, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m));
  return m;
};
cljs.core.async.admix = function admix(mix, ch) {
  return cljs.core.async.admix_STAR_.call(null, mix, ch);
};
cljs.core.async.unmix = function unmix(mix, ch) {
  return cljs.core.async.unmix_STAR_.call(null, mix, ch);
};
cljs.core.async.unmix_all = function unmix_all(mix) {
  return cljs.core.async.unmix_all_STAR_.call(null, mix);
};
cljs.core.async.toggle = function toggle(mix, state_map) {
  return cljs.core.async.toggle_STAR_.call(null, mix, state_map);
};
cljs.core.async.solo_mode = function solo_mode(mix, mode) {
  return cljs.core.async.solo_mode_STAR_.call(null, mix, mode);
};
cljs.core.async.Pub = function() {
  var obj17634 = {};
  return obj17634;
}();
cljs.core.async.sub_STAR_ = function sub_STAR_(p, v, ch, close_QMARK_) {
  if (function() {
    var and__3913__auto__ = p;
    if (and__3913__auto__) {
      return p.cljs$core$async$Pub$sub_STAR_$arity$4;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return p.cljs$core$async$Pub$sub_STAR_$arity$4(p, v, ch, close_QMARK_);
  } else {
    var x__4569__auto__ = p == null ? null : p;
    return function() {
      var or__3925__auto__ = cljs.core.async.sub_STAR_[goog.typeOf(x__4569__auto__)];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core.async.sub_STAR_["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Pub.sub*", p);
        }
      }
    }().call(null, p, v, ch, close_QMARK_);
  }
};
cljs.core.async.unsub_STAR_ = function unsub_STAR_(p, v, ch) {
  if (function() {
    var and__3913__auto__ = p;
    if (and__3913__auto__) {
      return p.cljs$core$async$Pub$unsub_STAR_$arity$3;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return p.cljs$core$async$Pub$unsub_STAR_$arity$3(p, v, ch);
  } else {
    var x__4569__auto__ = p == null ? null : p;
    return function() {
      var or__3925__auto__ = cljs.core.async.unsub_STAR_[goog.typeOf(x__4569__auto__)];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core.async.unsub_STAR_["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Pub.unsub*", p);
        }
      }
    }().call(null, p, v, ch);
  }
};
cljs.core.async.unsub_all_STAR_ = function() {
  var unsub_all_STAR_ = null;
  var unsub_all_STAR___1 = function(p) {
    if (function() {
      var and__3913__auto__ = p;
      if (and__3913__auto__) {
        return p.cljs$core$async$Pub$unsub_all_STAR_$arity$1;
      } else {
        return and__3913__auto__;
      }
    }()) {
      return p.cljs$core$async$Pub$unsub_all_STAR_$arity$1(p);
    } else {
      var x__4569__auto__ = p == null ? null : p;
      return function() {
        var or__3925__auto__ = cljs.core.async.unsub_all_STAR_[goog.typeOf(x__4569__auto__)];
        if (or__3925__auto__) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = cljs.core.async.unsub_all_STAR_["_"];
          if (or__3925__auto____$1) {
            return or__3925__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "Pub.unsub-all*", p);
          }
        }
      }().call(null, p);
    }
  };
  var unsub_all_STAR___2 = function(p, v) {
    if (function() {
      var and__3913__auto__ = p;
      if (and__3913__auto__) {
        return p.cljs$core$async$Pub$unsub_all_STAR_$arity$2;
      } else {
        return and__3913__auto__;
      }
    }()) {
      return p.cljs$core$async$Pub$unsub_all_STAR_$arity$2(p, v);
    } else {
      var x__4569__auto__ = p == null ? null : p;
      return function() {
        var or__3925__auto__ = cljs.core.async.unsub_all_STAR_[goog.typeOf(x__4569__auto__)];
        if (or__3925__auto__) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = cljs.core.async.unsub_all_STAR_["_"];
          if (or__3925__auto____$1) {
            return or__3925__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "Pub.unsub-all*", p);
          }
        }
      }().call(null, p, v);
    }
  };
  unsub_all_STAR_ = function(p, v) {
    switch(arguments.length) {
      case 1:
        return unsub_all_STAR___1.call(this, p);
      case 2:
        return unsub_all_STAR___2.call(this, p, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unsub_all_STAR_.cljs$core$IFn$_invoke$arity$1 = unsub_all_STAR___1;
  unsub_all_STAR_.cljs$core$IFn$_invoke$arity$2 = unsub_all_STAR___2;
  return unsub_all_STAR_;
}();
cljs.core.async.pub = function() {
  var pub = null;
  var pub__2 = function(ch, topic_fn) {
    return pub.call(null, ch, topic_fn, cljs.core.constantly.call(null, null));
  };
  var pub__3 = function(ch, topic_fn, buf_fn) {
    var mults = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var ensure_mult = function(mults) {
      return function(topic) {
        var or__3925__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, mults), topic);
        if (cljs.core.truth_(or__3925__auto__)) {
          return or__3925__auto__;
        } else {
          return cljs.core.get.call(null, cljs.core.swap_BANG_.call(null, mults, function(or__3925__auto__, mults) {
            return function(p1__17635_SHARP_) {
              if (cljs.core.truth_(p1__17635_SHARP_.call(null, topic))) {
                return p1__17635_SHARP_;
              } else {
                return cljs.core.assoc.call(null, p1__17635_SHARP_, topic, cljs.core.async.mult.call(null, cljs.core.async.chan.call(null, buf_fn.call(null, topic))));
              }
            };
          }(or__3925__auto__, mults)), topic);
        }
      };
    }(mults);
    var p = function() {
      if (typeof cljs.core.async.t17758 !== "undefined") {
      } else {
        cljs.core.async.t17758 = function(ensure_mult, mults, buf_fn, topic_fn, ch, pub, meta17759) {
          this.ensure_mult = ensure_mult;
          this.mults = mults;
          this.buf_fn = buf_fn;
          this.topic_fn = topic_fn;
          this.ch = ch;
          this.pub = pub;
          this.meta17759 = meta17759;
          this.cljs$lang$protocol_mask$partition1$ = 0;
          this.cljs$lang$protocol_mask$partition0$ = 393216;
        };
        cljs.core.async.t17758.prototype.cljs$core$async$Pub$ = true;
        cljs.core.async.t17758.prototype.cljs$core$async$Pub$sub_STAR_$arity$4 = function(mults, ensure_mult) {
          return function(p, topic, ch__$1, close_QMARK_) {
            var self__ = this;
            var p__$1 = this;
            var m = self__.ensure_mult.call(null, topic);
            return cljs.core.async.tap.call(null, m, ch__$1, close_QMARK_);
          };
        }(mults, ensure_mult);
        cljs.core.async.t17758.prototype.cljs$core$async$Pub$unsub_STAR_$arity$3 = function(mults, ensure_mult) {
          return function(p, topic, ch__$1) {
            var self__ = this;
            var p__$1 = this;
            var temp__4126__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, self__.mults), topic);
            if (cljs.core.truth_(temp__4126__auto__)) {
              var m = temp__4126__auto__;
              return cljs.core.async.untap.call(null, m, ch__$1);
            } else {
              return null;
            }
          };
        }(mults, ensure_mult);
        cljs.core.async.t17758.prototype.cljs$core$async$Pub$unsub_all_STAR_$arity$1 = function(mults, ensure_mult) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return cljs.core.reset_BANG_.call(null, self__.mults, cljs.core.PersistentArrayMap.EMPTY);
          };
        }(mults, ensure_mult);
        cljs.core.async.t17758.prototype.cljs$core$async$Pub$unsub_all_STAR_$arity$2 = function(mults, ensure_mult) {
          return function(_, topic) {
            var self__ = this;
            var ___$1 = this;
            return cljs.core.swap_BANG_.call(null, self__.mults, cljs.core.dissoc, topic);
          };
        }(mults, ensure_mult);
        cljs.core.async.t17758.prototype.cljs$core$async$Mux$ = true;
        cljs.core.async.t17758.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(mults, ensure_mult) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.ch;
          };
        }(mults, ensure_mult);
        cljs.core.async.t17758.prototype.cljs$core$IMeta$_meta$arity$1 = function(mults, ensure_mult) {
          return function(_17760) {
            var self__ = this;
            var _17760__$1 = this;
            return self__.meta17759;
          };
        }(mults, ensure_mult);
        cljs.core.async.t17758.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(mults, ensure_mult) {
          return function(_17760, meta17759__$1) {
            var self__ = this;
            var _17760__$1 = this;
            return new cljs.core.async.t17758(self__.ensure_mult, self__.mults, self__.buf_fn, self__.topic_fn, self__.ch, self__.pub, meta17759__$1);
          };
        }(mults, ensure_mult);
        cljs.core.async.t17758.cljs$lang$type = true;
        cljs.core.async.t17758.cljs$lang$ctorStr = "cljs.core.async/t17758";
        cljs.core.async.t17758.cljs$lang$ctorPrWriter = function(mults, ensure_mult) {
          return function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
            return cljs.core._write.call(null, writer__4513__auto__, "cljs.core.async/t17758");
          };
        }(mults, ensure_mult);
        cljs.core.async.__GT_t17758 = function(mults, ensure_mult) {
          return function __GT_t17758(ensure_mult__$1, mults__$1, buf_fn__$1, topic_fn__$1, ch__$1, pub__$1, meta17759) {
            return new cljs.core.async.t17758(ensure_mult__$1, mults__$1, buf_fn__$1, topic_fn__$1, ch__$1, pub__$1, meta17759);
          };
        }(mults, ensure_mult);
      }
      return new cljs.core.async.t17758(ensure_mult, mults, buf_fn, topic_fn, ch, pub, cljs.core.PersistentArrayMap.EMPTY);
    }();
    var c__6703__auto___17880 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6703__auto___17880, mults, ensure_mult, p) {
      return function() {
        var f__6704__auto__ = function() {
          var switch__6647__auto__ = function(c__6703__auto___17880, mults, ensure_mult, p) {
            return function(state_17832) {
              var state_val_17833 = state_17832[1];
              if (state_val_17833 === 7) {
                var inst_17828 = state_17832[2];
                var state_17832__$1 = state_17832;
                var statearr_17834_17881 = state_17832__$1;
                statearr_17834_17881[2] = inst_17828;
                statearr_17834_17881[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_17833 === 20) {
                  var state_17832__$1 = state_17832;
                  var statearr_17835_17882 = state_17832__$1;
                  statearr_17835_17882[2] = null;
                  statearr_17835_17882[1] = 21;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_17833 === 1) {
                    var state_17832__$1 = state_17832;
                    var statearr_17836_17883 = state_17832__$1;
                    statearr_17836_17883[2] = null;
                    statearr_17836_17883[1] = 2;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_17833 === 24) {
                      var inst_17811 = state_17832[7];
                      var inst_17820 = cljs.core.swap_BANG_.call(null, mults, cljs.core.dissoc, inst_17811);
                      var state_17832__$1 = state_17832;
                      var statearr_17837_17884 = state_17832__$1;
                      statearr_17837_17884[2] = inst_17820;
                      statearr_17837_17884[1] = 25;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_17833 === 4) {
                        var inst_17763 = state_17832[8];
                        var inst_17763__$1 = state_17832[2];
                        var inst_17764 = inst_17763__$1 == null;
                        var state_17832__$1 = function() {
                          var statearr_17838 = state_17832;
                          statearr_17838[8] = inst_17763__$1;
                          return statearr_17838;
                        }();
                        if (cljs.core.truth_(inst_17764)) {
                          var statearr_17839_17885 = state_17832__$1;
                          statearr_17839_17885[1] = 5;
                        } else {
                          var statearr_17840_17886 = state_17832__$1;
                          statearr_17840_17886[1] = 6;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_17833 === 15) {
                          var inst_17805 = state_17832[2];
                          var state_17832__$1 = state_17832;
                          var statearr_17841_17887 = state_17832__$1;
                          statearr_17841_17887[2] = inst_17805;
                          statearr_17841_17887[1] = 12;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_17833 === 21) {
                            var inst_17825 = state_17832[2];
                            var state_17832__$1 = function() {
                              var statearr_17842 = state_17832;
                              statearr_17842[9] = inst_17825;
                              return statearr_17842;
                            }();
                            var statearr_17843_17888 = state_17832__$1;
                            statearr_17843_17888[2] = null;
                            statearr_17843_17888[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_17833 === 13) {
                              var inst_17787 = state_17832[10];
                              var inst_17789 = cljs.core.chunked_seq_QMARK_.call(null, inst_17787);
                              var state_17832__$1 = state_17832;
                              if (inst_17789) {
                                var statearr_17844_17889 = state_17832__$1;
                                statearr_17844_17889[1] = 16;
                              } else {
                                var statearr_17845_17890 = state_17832__$1;
                                statearr_17845_17890[1] = 17;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_17833 === 22) {
                                var inst_17817 = state_17832[2];
                                var state_17832__$1 = state_17832;
                                if (cljs.core.truth_(inst_17817)) {
                                  var statearr_17846_17891 = state_17832__$1;
                                  statearr_17846_17891[1] = 23;
                                } else {
                                  var statearr_17847_17892 = state_17832__$1;
                                  statearr_17847_17892[1] = 24;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_17833 === 6) {
                                  var inst_17811 = state_17832[7];
                                  var inst_17763 = state_17832[8];
                                  var inst_17813 = state_17832[11];
                                  var inst_17811__$1 = topic_fn.call(null, inst_17763);
                                  var inst_17812 = cljs.core.deref.call(null, mults);
                                  var inst_17813__$1 = cljs.core.get.call(null, inst_17812, inst_17811__$1);
                                  var state_17832__$1 = function() {
                                    var statearr_17848 = state_17832;
                                    statearr_17848[7] = inst_17811__$1;
                                    statearr_17848[11] = inst_17813__$1;
                                    return statearr_17848;
                                  }();
                                  if (cljs.core.truth_(inst_17813__$1)) {
                                    var statearr_17849_17893 = state_17832__$1;
                                    statearr_17849_17893[1] = 19;
                                  } else {
                                    var statearr_17850_17894 = state_17832__$1;
                                    statearr_17850_17894[1] = 20;
                                  }
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_17833 === 25) {
                                    var inst_17822 = state_17832[2];
                                    var state_17832__$1 = state_17832;
                                    var statearr_17851_17895 = state_17832__$1;
                                    statearr_17851_17895[2] = inst_17822;
                                    statearr_17851_17895[1] = 21;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_17833 === 17) {
                                      var inst_17787 = state_17832[10];
                                      var inst_17796 = cljs.core.first.call(null, inst_17787);
                                      var inst_17797 = cljs.core.async.muxch_STAR_.call(null, inst_17796);
                                      var inst_17798 = cljs.core.async.close_BANG_.call(null, inst_17797);
                                      var inst_17799 = cljs.core.next.call(null, inst_17787);
                                      var inst_17773 = inst_17799;
                                      var inst_17774 = null;
                                      var inst_17775 = 0;
                                      var inst_17776 = 0;
                                      var state_17832__$1 = function() {
                                        var statearr_17852 = state_17832;
                                        statearr_17852[12] = inst_17775;
                                        statearr_17852[13] = inst_17798;
                                        statearr_17852[14] = inst_17773;
                                        statearr_17852[15] = inst_17774;
                                        statearr_17852[16] = inst_17776;
                                        return statearr_17852;
                                      }();
                                      var statearr_17853_17896 = state_17832__$1;
                                      statearr_17853_17896[2] = null;
                                      statearr_17853_17896[1] = 8;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_17833 === 3) {
                                        var inst_17830 = state_17832[2];
                                        var state_17832__$1 = state_17832;
                                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_17832__$1, inst_17830);
                                      } else {
                                        if (state_val_17833 === 12) {
                                          var inst_17807 = state_17832[2];
                                          var state_17832__$1 = state_17832;
                                          var statearr_17854_17897 = state_17832__$1;
                                          statearr_17854_17897[2] = inst_17807;
                                          statearr_17854_17897[1] = 9;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_17833 === 2) {
                                            var state_17832__$1 = state_17832;
                                            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_17832__$1, 4, ch);
                                          } else {
                                            if (state_val_17833 === 23) {
                                              var state_17832__$1 = state_17832;
                                              var statearr_17855_17898 = state_17832__$1;
                                              statearr_17855_17898[2] = null;
                                              statearr_17855_17898[1] = 25;
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_17833 === 19) {
                                                var inst_17763 = state_17832[8];
                                                var inst_17813 = state_17832[11];
                                                var inst_17815 = cljs.core.async.muxch_STAR_.call(null, inst_17813);
                                                var state_17832__$1 = state_17832;
                                                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_17832__$1, 22, inst_17815, inst_17763);
                                              } else {
                                                if (state_val_17833 === 11) {
                                                  var inst_17787 = state_17832[10];
                                                  var inst_17773 = state_17832[14];
                                                  var inst_17787__$1 = cljs.core.seq.call(null, inst_17773);
                                                  var state_17832__$1 = function() {
                                                    var statearr_17856 = state_17832;
                                                    statearr_17856[10] = inst_17787__$1;
                                                    return statearr_17856;
                                                  }();
                                                  if (inst_17787__$1) {
                                                    var statearr_17857_17899 = state_17832__$1;
                                                    statearr_17857_17899[1] = 13;
                                                  } else {
                                                    var statearr_17858_17900 = state_17832__$1;
                                                    statearr_17858_17900[1] = 14;
                                                  }
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_17833 === 9) {
                                                    var inst_17809 = state_17832[2];
                                                    var state_17832__$1 = state_17832;
                                                    var statearr_17859_17901 = state_17832__$1;
                                                    statearr_17859_17901[2] = inst_17809;
                                                    statearr_17859_17901[1] = 7;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_17833 === 5) {
                                                      var inst_17770 = cljs.core.deref.call(null, mults);
                                                      var inst_17771 = cljs.core.vals.call(null, inst_17770);
                                                      var inst_17772 = cljs.core.seq.call(null, inst_17771);
                                                      var inst_17773 = inst_17772;
                                                      var inst_17774 = null;
                                                      var inst_17775 = 0;
                                                      var inst_17776 = 0;
                                                      var state_17832__$1 = function() {
                                                        var statearr_17860 = state_17832;
                                                        statearr_17860[12] = inst_17775;
                                                        statearr_17860[14] = inst_17773;
                                                        statearr_17860[15] = inst_17774;
                                                        statearr_17860[16] = inst_17776;
                                                        return statearr_17860;
                                                      }();
                                                      var statearr_17861_17902 = state_17832__$1;
                                                      statearr_17861_17902[2] = null;
                                                      statearr_17861_17902[1] = 8;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      if (state_val_17833 === 14) {
                                                        var state_17832__$1 = state_17832;
                                                        var statearr_17865_17903 = state_17832__$1;
                                                        statearr_17865_17903[2] = null;
                                                        statearr_17865_17903[1] = 15;
                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                      } else {
                                                        if (state_val_17833 === 16) {
                                                          var inst_17787 = state_17832[10];
                                                          var inst_17791 = cljs.core.chunk_first.call(null, inst_17787);
                                                          var inst_17792 = cljs.core.chunk_rest.call(null, inst_17787);
                                                          var inst_17793 = cljs.core.count.call(null, inst_17791);
                                                          var inst_17773 = inst_17792;
                                                          var inst_17774 = inst_17791;
                                                          var inst_17775 = inst_17793;
                                                          var inst_17776 = 0;
                                                          var state_17832__$1 = function() {
                                                            var statearr_17866 = state_17832;
                                                            statearr_17866[12] = inst_17775;
                                                            statearr_17866[14] = inst_17773;
                                                            statearr_17866[15] = inst_17774;
                                                            statearr_17866[16] = inst_17776;
                                                            return statearr_17866;
                                                          }();
                                                          var statearr_17867_17904 = state_17832__$1;
                                                          statearr_17867_17904[2] = null;
                                                          statearr_17867_17904[1] = 8;
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          if (state_val_17833 === 10) {
                                                            var inst_17775 = state_17832[12];
                                                            var inst_17773 = state_17832[14];
                                                            var inst_17774 = state_17832[15];
                                                            var inst_17776 = state_17832[16];
                                                            var inst_17781 = cljs.core._nth.call(null, inst_17774, inst_17776);
                                                            var inst_17782 = cljs.core.async.muxch_STAR_.call(null, inst_17781);
                                                            var inst_17783 = cljs.core.async.close_BANG_.call(null, inst_17782);
                                                            var inst_17784 = inst_17776 + 1;
                                                            var tmp17862 = inst_17775;
                                                            var tmp17863 = inst_17773;
                                                            var tmp17864 = inst_17774;
                                                            var inst_17773__$1 = tmp17863;
                                                            var inst_17774__$1 = tmp17864;
                                                            var inst_17775__$1 = tmp17862;
                                                            var inst_17776__$1 = inst_17784;
                                                            var state_17832__$1 = function() {
                                                              var statearr_17868 = state_17832;
                                                              statearr_17868[17] = inst_17783;
                                                              statearr_17868[12] = inst_17775__$1;
                                                              statearr_17868[14] = inst_17773__$1;
                                                              statearr_17868[15] = inst_17774__$1;
                                                              statearr_17868[16] = inst_17776__$1;
                                                              return statearr_17868;
                                                            }();
                                                            var statearr_17869_17905 = state_17832__$1;
                                                            statearr_17869_17905[2] = null;
                                                            statearr_17869_17905[1] = 8;
                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                          } else {
                                                            if (state_val_17833 === 18) {
                                                              var inst_17802 = state_17832[2];
                                                              var state_17832__$1 = state_17832;
                                                              var statearr_17870_17906 = state_17832__$1;
                                                              statearr_17870_17906[2] = inst_17802;
                                                              statearr_17870_17906[1] = 15;
                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                            } else {
                                                              if (state_val_17833 === 8) {
                                                                var inst_17775 = state_17832[12];
                                                                var inst_17776 = state_17832[16];
                                                                var inst_17778 = inst_17776 < inst_17775;
                                                                var inst_17779 = inst_17778;
                                                                var state_17832__$1 = state_17832;
                                                                if (cljs.core.truth_(inst_17779)) {
                                                                  var statearr_17871_17907 = state_17832__$1;
                                                                  statearr_17871_17907[1] = 10;
                                                                } else {
                                                                  var statearr_17872_17908 = state_17832__$1;
                                                                  statearr_17872_17908[1] = 11;
                                                                }
                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                              } else {
                                                                return null;
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6703__auto___17880, mults, ensure_mult, p);
          return function(switch__6647__auto__, c__6703__auto___17880, mults, ensure_mult, p) {
            return function() {
              var state_machine__6648__auto__ = null;
              var state_machine__6648__auto____0 = function() {
                var statearr_17876 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_17876[0] = state_machine__6648__auto__;
                statearr_17876[1] = 1;
                return statearr_17876;
              };
              var state_machine__6648__auto____1 = function(state_17832) {
                while (true) {
                  var ret_value__6649__auto__ = function() {
                    try {
                      while (true) {
                        var result__6650__auto__ = switch__6647__auto__.call(null, state_17832);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6650__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6650__auto__;
                        }
                        break;
                      }
                    } catch (e17877) {
                      if (e17877 instanceof Object) {
                        var ex__6651__auto__ = e17877;
                        var statearr_17878_17909 = state_17832;
                        statearr_17878_17909[5] = ex__6651__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_17832);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e17877;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6649__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__17910 = state_17832;
                    state_17832 = G__17910;
                    continue;
                  } else {
                    return ret_value__6649__auto__;
                  }
                  break;
                }
              };
              state_machine__6648__auto__ = function(state_17832) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6648__auto____0.call(this);
                  case 1:
                    return state_machine__6648__auto____1.call(this, state_17832);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6648__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6648__auto____0;
              state_machine__6648__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6648__auto____1;
              return state_machine__6648__auto__;
            }();
          }(switch__6647__auto__, c__6703__auto___17880, mults, ensure_mult, p);
        }();
        var state__6705__auto__ = function() {
          var statearr_17879 = f__6704__auto__.call(null);
          statearr_17879[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6703__auto___17880;
          return statearr_17879;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6705__auto__);
      };
    }(c__6703__auto___17880, mults, ensure_mult, p));
    return p;
  };
  pub = function(ch, topic_fn, buf_fn) {
    switch(arguments.length) {
      case 2:
        return pub__2.call(this, ch, topic_fn);
      case 3:
        return pub__3.call(this, ch, topic_fn, buf_fn);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pub.cljs$core$IFn$_invoke$arity$2 = pub__2;
  pub.cljs$core$IFn$_invoke$arity$3 = pub__3;
  return pub;
}();
cljs.core.async.sub = function() {
  var sub = null;
  var sub__3 = function(p, topic, ch) {
    return sub.call(null, p, topic, ch, true);
  };
  var sub__4 = function(p, topic, ch, close_QMARK_) {
    return cljs.core.async.sub_STAR_.call(null, p, topic, ch, close_QMARK_);
  };
  sub = function(p, topic, ch, close_QMARK_) {
    switch(arguments.length) {
      case 3:
        return sub__3.call(this, p, topic, ch);
      case 4:
        return sub__4.call(this, p, topic, ch, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sub.cljs$core$IFn$_invoke$arity$3 = sub__3;
  sub.cljs$core$IFn$_invoke$arity$4 = sub__4;
  return sub;
}();
cljs.core.async.unsub = function unsub(p, topic, ch) {
  return cljs.core.async.unsub_STAR_.call(null, p, topic, ch);
};
cljs.core.async.unsub_all = function() {
  var unsub_all = null;
  var unsub_all__1 = function(p) {
    return cljs.core.async.unsub_all_STAR_.call(null, p);
  };
  var unsub_all__2 = function(p, topic) {
    return cljs.core.async.unsub_all_STAR_.call(null, p, topic);
  };
  unsub_all = function(p, topic) {
    switch(arguments.length) {
      case 1:
        return unsub_all__1.call(this, p);
      case 2:
        return unsub_all__2.call(this, p, topic);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unsub_all.cljs$core$IFn$_invoke$arity$1 = unsub_all__1;
  unsub_all.cljs$core$IFn$_invoke$arity$2 = unsub_all__2;
  return unsub_all;
}();
cljs.core.async.map = function() {
  var map = null;
  var map__2 = function(f, chs) {
    return map.call(null, f, chs, null);
  };
  var map__3 = function(f, chs, buf_or_n) {
    var chs__$1 = cljs.core.vec.call(null, chs);
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var cnt = cljs.core.count.call(null, chs__$1);
    var rets = cljs.core.object_array.call(null, cnt);
    var dchan = cljs.core.async.chan.call(null, 1);
    var dctr = cljs.core.atom.call(null, null);
    var done = cljs.core.mapv.call(null, function(chs__$1, out, cnt, rets, dchan, dctr) {
      return function(i) {
        return function(chs__$1, out, cnt, rets, dchan, dctr) {
          return function(ret) {
            rets[i] = ret;
            if (cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec) === 0) {
              return cljs.core.async.put_BANG_.call(null, dchan, rets.slice(0));
            } else {
              return null;
            }
          };
        }(chs__$1, out, cnt, rets, dchan, dctr);
      };
    }(chs__$1, out, cnt, rets, dchan, dctr), cljs.core.range.call(null, cnt));
    var c__6703__auto___18047 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6703__auto___18047, chs__$1, out, cnt, rets, dchan, dctr, done) {
      return function() {
        var f__6704__auto__ = function() {
          var switch__6647__auto__ = function(c__6703__auto___18047, chs__$1, out, cnt, rets, dchan, dctr, done) {
            return function(state_18017) {
              var state_val_18018 = state_18017[1];
              if (state_val_18018 === 7) {
                var state_18017__$1 = state_18017;
                var statearr_18019_18048 = state_18017__$1;
                statearr_18019_18048[2] = null;
                statearr_18019_18048[1] = 8;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_18018 === 1) {
                  var state_18017__$1 = state_18017;
                  var statearr_18020_18049 = state_18017__$1;
                  statearr_18020_18049[2] = null;
                  statearr_18020_18049[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_18018 === 4) {
                    var inst_17981 = state_18017[7];
                    var inst_17983 = inst_17981 < cnt;
                    var state_18017__$1 = state_18017;
                    if (cljs.core.truth_(inst_17983)) {
                      var statearr_18021_18050 = state_18017__$1;
                      statearr_18021_18050[1] = 6;
                    } else {
                      var statearr_18022_18051 = state_18017__$1;
                      statearr_18022_18051[1] = 7;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_18018 === 15) {
                      var inst_18013 = state_18017[2];
                      var state_18017__$1 = state_18017;
                      var statearr_18023_18052 = state_18017__$1;
                      statearr_18023_18052[2] = inst_18013;
                      statearr_18023_18052[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_18018 === 13) {
                        var inst_18006 = cljs.core.async.close_BANG_.call(null, out);
                        var state_18017__$1 = state_18017;
                        var statearr_18024_18053 = state_18017__$1;
                        statearr_18024_18053[2] = inst_18006;
                        statearr_18024_18053[1] = 15;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_18018 === 6) {
                          var state_18017__$1 = state_18017;
                          var statearr_18025_18054 = state_18017__$1;
                          statearr_18025_18054[2] = null;
                          statearr_18025_18054[1] = 11;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_18018 === 3) {
                            var inst_18015 = state_18017[2];
                            var state_18017__$1 = state_18017;
                            return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_18017__$1, inst_18015);
                          } else {
                            if (state_val_18018 === 12) {
                              var inst_18003 = state_18017[8];
                              var inst_18003__$1 = state_18017[2];
                              var inst_18004 = cljs.core.some.call(null, cljs.core.nil_QMARK_, inst_18003__$1);
                              var state_18017__$1 = function() {
                                var statearr_18026 = state_18017;
                                statearr_18026[8] = inst_18003__$1;
                                return statearr_18026;
                              }();
                              if (cljs.core.truth_(inst_18004)) {
                                var statearr_18027_18055 = state_18017__$1;
                                statearr_18027_18055[1] = 13;
                              } else {
                                var statearr_18028_18056 = state_18017__$1;
                                statearr_18028_18056[1] = 14;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_18018 === 2) {
                                var inst_17980 = cljs.core.reset_BANG_.call(null, dctr, cnt);
                                var inst_17981 = 0;
                                var state_18017__$1 = function() {
                                  var statearr_18029 = state_18017;
                                  statearr_18029[7] = inst_17981;
                                  statearr_18029[9] = inst_17980;
                                  return statearr_18029;
                                }();
                                var statearr_18030_18057 = state_18017__$1;
                                statearr_18030_18057[2] = null;
                                statearr_18030_18057[1] = 4;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_18018 === 11) {
                                  var inst_17981 = state_18017[7];
                                  var _ = cljs.core.async.impl.ioc_helpers.add_exception_frame.call(null, state_18017, 10, Object, null, 9);
                                  var inst_17990 = chs__$1.call(null, inst_17981);
                                  var inst_17991 = done.call(null, inst_17981);
                                  var inst_17992 = cljs.core.async.take_BANG_.call(null, inst_17990, inst_17991);
                                  var state_18017__$1 = state_18017;
                                  var statearr_18031_18058 = state_18017__$1;
                                  statearr_18031_18058[2] = inst_17992;
                                  cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_18017__$1);
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_18018 === 9) {
                                    var inst_17981 = state_18017[7];
                                    var inst_17994 = state_18017[2];
                                    var inst_17995 = inst_17981 + 1;
                                    var inst_17981__$1 = inst_17995;
                                    var state_18017__$1 = function() {
                                      var statearr_18032 = state_18017;
                                      statearr_18032[10] = inst_17994;
                                      statearr_18032[7] = inst_17981__$1;
                                      return statearr_18032;
                                    }();
                                    var statearr_18033_18059 = state_18017__$1;
                                    statearr_18033_18059[2] = null;
                                    statearr_18033_18059[1] = 4;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_18018 === 5) {
                                      var inst_18001 = state_18017[2];
                                      var state_18017__$1 = function() {
                                        var statearr_18034 = state_18017;
                                        statearr_18034[11] = inst_18001;
                                        return statearr_18034;
                                      }();
                                      return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_18017__$1, 12, dchan);
                                    } else {
                                      if (state_val_18018 === 14) {
                                        var inst_18003 = state_18017[8];
                                        var inst_18008 = cljs.core.apply.call(null, f, inst_18003);
                                        var state_18017__$1 = state_18017;
                                        return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_18017__$1, 16, out, inst_18008);
                                      } else {
                                        if (state_val_18018 === 16) {
                                          var inst_18010 = state_18017[2];
                                          var state_18017__$1 = function() {
                                            var statearr_18035 = state_18017;
                                            statearr_18035[12] = inst_18010;
                                            return statearr_18035;
                                          }();
                                          var statearr_18036_18060 = state_18017__$1;
                                          statearr_18036_18060[2] = null;
                                          statearr_18036_18060[1] = 2;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_18018 === 10) {
                                            var inst_17985 = state_18017[2];
                                            var inst_17986 = cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec);
                                            var state_18017__$1 = function() {
                                              var statearr_18037 = state_18017;
                                              statearr_18037[13] = inst_17985;
                                              return statearr_18037;
                                            }();
                                            var statearr_18038_18061 = state_18017__$1;
                                            statearr_18038_18061[2] = inst_17986;
                                            cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_18017__$1);
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_18018 === 8) {
                                              var inst_17999 = state_18017[2];
                                              var state_18017__$1 = state_18017;
                                              var statearr_18039_18062 = state_18017__$1;
                                              statearr_18039_18062[2] = inst_17999;
                                              statearr_18039_18062[1] = 5;
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              return null;
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6703__auto___18047, chs__$1, out, cnt, rets, dchan, dctr, done);
          return function(switch__6647__auto__, c__6703__auto___18047, chs__$1, out, cnt, rets, dchan, dctr, done) {
            return function() {
              var state_machine__6648__auto__ = null;
              var state_machine__6648__auto____0 = function() {
                var statearr_18043 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_18043[0] = state_machine__6648__auto__;
                statearr_18043[1] = 1;
                return statearr_18043;
              };
              var state_machine__6648__auto____1 = function(state_18017) {
                while (true) {
                  var ret_value__6649__auto__ = function() {
                    try {
                      while (true) {
                        var result__6650__auto__ = switch__6647__auto__.call(null, state_18017);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6650__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6650__auto__;
                        }
                        break;
                      }
                    } catch (e18044) {
                      if (e18044 instanceof Object) {
                        var ex__6651__auto__ = e18044;
                        var statearr_18045_18063 = state_18017;
                        statearr_18045_18063[5] = ex__6651__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_18017);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e18044;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6649__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__18064 = state_18017;
                    state_18017 = G__18064;
                    continue;
                  } else {
                    return ret_value__6649__auto__;
                  }
                  break;
                }
              };
              state_machine__6648__auto__ = function(state_18017) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6648__auto____0.call(this);
                  case 1:
                    return state_machine__6648__auto____1.call(this, state_18017);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6648__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6648__auto____0;
              state_machine__6648__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6648__auto____1;
              return state_machine__6648__auto__;
            }();
          }(switch__6647__auto__, c__6703__auto___18047, chs__$1, out, cnt, rets, dchan, dctr, done);
        }();
        var state__6705__auto__ = function() {
          var statearr_18046 = f__6704__auto__.call(null);
          statearr_18046[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6703__auto___18047;
          return statearr_18046;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6705__auto__);
      };
    }(c__6703__auto___18047, chs__$1, out, cnt, rets, dchan, dctr, done));
    return out;
  };
  map = function(f, chs, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return map__2.call(this, f, chs);
      case 3:
        return map__3.call(this, f, chs, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  map.cljs$core$IFn$_invoke$arity$2 = map__2;
  map.cljs$core$IFn$_invoke$arity$3 = map__3;
  return map;
}();
cljs.core.async.merge = function() {
  var merge = null;
  var merge__1 = function(chs) {
    return merge.call(null, chs, null);
  };
  var merge__2 = function(chs, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6703__auto___18172 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6703__auto___18172, out) {
      return function() {
        var f__6704__auto__ = function() {
          var switch__6647__auto__ = function(c__6703__auto___18172, out) {
            return function(state_18148) {
              var state_val_18149 = state_18148[1];
              if (state_val_18149 === 7) {
                var inst_18128 = state_18148[7];
                var inst_18127 = state_18148[8];
                var inst_18127__$1 = state_18148[2];
                var inst_18128__$1 = cljs.core.nth.call(null, inst_18127__$1, 0, null);
                var inst_18129 = cljs.core.nth.call(null, inst_18127__$1, 1, null);
                var inst_18130 = inst_18128__$1 == null;
                var state_18148__$1 = function() {
                  var statearr_18150 = state_18148;
                  statearr_18150[7] = inst_18128__$1;
                  statearr_18150[9] = inst_18129;
                  statearr_18150[8] = inst_18127__$1;
                  return statearr_18150;
                }();
                if (cljs.core.truth_(inst_18130)) {
                  var statearr_18151_18173 = state_18148__$1;
                  statearr_18151_18173[1] = 8;
                } else {
                  var statearr_18152_18174 = state_18148__$1;
                  statearr_18152_18174[1] = 9;
                }
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_18149 === 1) {
                  var inst_18119 = cljs.core.vec.call(null, chs);
                  var inst_18120 = inst_18119;
                  var state_18148__$1 = function() {
                    var statearr_18153 = state_18148;
                    statearr_18153[10] = inst_18120;
                    return statearr_18153;
                  }();
                  var statearr_18154_18175 = state_18148__$1;
                  statearr_18154_18175[2] = null;
                  statearr_18154_18175[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_18149 === 4) {
                    var inst_18120 = state_18148[10];
                    var state_18148__$1 = state_18148;
                    return cljs.core.async.ioc_alts_BANG_.call(null, state_18148__$1, 7, inst_18120);
                  } else {
                    if (state_val_18149 === 6) {
                      var inst_18144 = state_18148[2];
                      var state_18148__$1 = state_18148;
                      var statearr_18155_18176 = state_18148__$1;
                      statearr_18155_18176[2] = inst_18144;
                      statearr_18155_18176[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_18149 === 3) {
                        var inst_18146 = state_18148[2];
                        var state_18148__$1 = state_18148;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_18148__$1, inst_18146);
                      } else {
                        if (state_val_18149 === 2) {
                          var inst_18120 = state_18148[10];
                          var inst_18122 = cljs.core.count.call(null, inst_18120);
                          var inst_18123 = inst_18122 > 0;
                          var state_18148__$1 = state_18148;
                          if (cljs.core.truth_(inst_18123)) {
                            var statearr_18157_18177 = state_18148__$1;
                            statearr_18157_18177[1] = 4;
                          } else {
                            var statearr_18158_18178 = state_18148__$1;
                            statearr_18158_18178[1] = 5;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_18149 === 11) {
                            var inst_18120 = state_18148[10];
                            var inst_18137 = state_18148[2];
                            var tmp18156 = inst_18120;
                            var inst_18120__$1 = tmp18156;
                            var state_18148__$1 = function() {
                              var statearr_18159 = state_18148;
                              statearr_18159[11] = inst_18137;
                              statearr_18159[10] = inst_18120__$1;
                              return statearr_18159;
                            }();
                            var statearr_18160_18179 = state_18148__$1;
                            statearr_18160_18179[2] = null;
                            statearr_18160_18179[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_18149 === 9) {
                              var inst_18128 = state_18148[7];
                              var state_18148__$1 = state_18148;
                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_18148__$1, 11, out, inst_18128);
                            } else {
                              if (state_val_18149 === 5) {
                                var inst_18142 = cljs.core.async.close_BANG_.call(null, out);
                                var state_18148__$1 = state_18148;
                                var statearr_18161_18180 = state_18148__$1;
                                statearr_18161_18180[2] = inst_18142;
                                statearr_18161_18180[1] = 6;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_18149 === 10) {
                                  var inst_18140 = state_18148[2];
                                  var state_18148__$1 = state_18148;
                                  var statearr_18162_18181 = state_18148__$1;
                                  statearr_18162_18181[2] = inst_18140;
                                  statearr_18162_18181[1] = 6;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_18149 === 8) {
                                    var inst_18128 = state_18148[7];
                                    var inst_18120 = state_18148[10];
                                    var inst_18129 = state_18148[9];
                                    var inst_18127 = state_18148[8];
                                    var inst_18132 = function() {
                                      var c = inst_18129;
                                      var v = inst_18128;
                                      var vec__18125 = inst_18127;
                                      var cs = inst_18120;
                                      return function(c, v, vec__18125, cs, inst_18128, inst_18120, inst_18129, inst_18127, state_val_18149, c__6703__auto___18172, out) {
                                        return function(p1__18065_SHARP_) {
                                          return cljs.core.not_EQ_.call(null, c, p1__18065_SHARP_);
                                        };
                                      }(c, v, vec__18125, cs, inst_18128, inst_18120, inst_18129, inst_18127, state_val_18149, c__6703__auto___18172, out);
                                    }();
                                    var inst_18133 = cljs.core.filterv.call(null, inst_18132, inst_18120);
                                    var inst_18120__$1 = inst_18133;
                                    var state_18148__$1 = function() {
                                      var statearr_18163 = state_18148;
                                      statearr_18163[10] = inst_18120__$1;
                                      return statearr_18163;
                                    }();
                                    var statearr_18164_18182 = state_18148__$1;
                                    statearr_18164_18182[2] = null;
                                    statearr_18164_18182[1] = 2;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6703__auto___18172, out);
          return function(switch__6647__auto__, c__6703__auto___18172, out) {
            return function() {
              var state_machine__6648__auto__ = null;
              var state_machine__6648__auto____0 = function() {
                var statearr_18168 = [null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_18168[0] = state_machine__6648__auto__;
                statearr_18168[1] = 1;
                return statearr_18168;
              };
              var state_machine__6648__auto____1 = function(state_18148) {
                while (true) {
                  var ret_value__6649__auto__ = function() {
                    try {
                      while (true) {
                        var result__6650__auto__ = switch__6647__auto__.call(null, state_18148);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6650__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6650__auto__;
                        }
                        break;
                      }
                    } catch (e18169) {
                      if (e18169 instanceof Object) {
                        var ex__6651__auto__ = e18169;
                        var statearr_18170_18183 = state_18148;
                        statearr_18170_18183[5] = ex__6651__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_18148);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e18169;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6649__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__18184 = state_18148;
                    state_18148 = G__18184;
                    continue;
                  } else {
                    return ret_value__6649__auto__;
                  }
                  break;
                }
              };
              state_machine__6648__auto__ = function(state_18148) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6648__auto____0.call(this);
                  case 1:
                    return state_machine__6648__auto____1.call(this, state_18148);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6648__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6648__auto____0;
              state_machine__6648__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6648__auto____1;
              return state_machine__6648__auto__;
            }();
          }(switch__6647__auto__, c__6703__auto___18172, out);
        }();
        var state__6705__auto__ = function() {
          var statearr_18171 = f__6704__auto__.call(null);
          statearr_18171[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6703__auto___18172;
          return statearr_18171;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6705__auto__);
      };
    }(c__6703__auto___18172, out));
    return out;
  };
  merge = function(chs, buf_or_n) {
    switch(arguments.length) {
      case 1:
        return merge__1.call(this, chs);
      case 2:
        return merge__2.call(this, chs, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  merge.cljs$core$IFn$_invoke$arity$1 = merge__1;
  merge.cljs$core$IFn$_invoke$arity$2 = merge__2;
  return merge;
}();
cljs.core.async.into = function into(coll, ch) {
  return cljs.core.async.reduce.call(null, cljs.core.conj, coll, ch);
};
cljs.core.async.take = function() {
  var take = null;
  var take__2 = function(n, ch) {
    return take.call(null, n, ch, null);
  };
  var take__3 = function(n, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6703__auto___18277 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6703__auto___18277, out) {
      return function() {
        var f__6704__auto__ = function() {
          var switch__6647__auto__ = function(c__6703__auto___18277, out) {
            return function(state_18254) {
              var state_val_18255 = state_18254[1];
              if (state_val_18255 === 7) {
                var inst_18236 = state_18254[7];
                var inst_18236__$1 = state_18254[2];
                var inst_18237 = inst_18236__$1 == null;
                var inst_18238 = cljs.core.not.call(null, inst_18237);
                var state_18254__$1 = function() {
                  var statearr_18256 = state_18254;
                  statearr_18256[7] = inst_18236__$1;
                  return statearr_18256;
                }();
                if (inst_18238) {
                  var statearr_18257_18278 = state_18254__$1;
                  statearr_18257_18278[1] = 8;
                } else {
                  var statearr_18258_18279 = state_18254__$1;
                  statearr_18258_18279[1] = 9;
                }
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_18255 === 1) {
                  var inst_18231 = 0;
                  var state_18254__$1 = function() {
                    var statearr_18259 = state_18254;
                    statearr_18259[8] = inst_18231;
                    return statearr_18259;
                  }();
                  var statearr_18260_18280 = state_18254__$1;
                  statearr_18260_18280[2] = null;
                  statearr_18260_18280[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_18255 === 4) {
                    var state_18254__$1 = state_18254;
                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_18254__$1, 7, ch);
                  } else {
                    if (state_val_18255 === 6) {
                      var inst_18249 = state_18254[2];
                      var state_18254__$1 = state_18254;
                      var statearr_18261_18281 = state_18254__$1;
                      statearr_18261_18281[2] = inst_18249;
                      statearr_18261_18281[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_18255 === 3) {
                        var inst_18251 = state_18254[2];
                        var inst_18252 = cljs.core.async.close_BANG_.call(null, out);
                        var state_18254__$1 = function() {
                          var statearr_18262 = state_18254;
                          statearr_18262[9] = inst_18251;
                          return statearr_18262;
                        }();
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_18254__$1, inst_18252);
                      } else {
                        if (state_val_18255 === 2) {
                          var inst_18231 = state_18254[8];
                          var inst_18233 = inst_18231 < n;
                          var state_18254__$1 = state_18254;
                          if (cljs.core.truth_(inst_18233)) {
                            var statearr_18263_18282 = state_18254__$1;
                            statearr_18263_18282[1] = 4;
                          } else {
                            var statearr_18264_18283 = state_18254__$1;
                            statearr_18264_18283[1] = 5;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_18255 === 11) {
                            var inst_18231 = state_18254[8];
                            var inst_18241 = state_18254[2];
                            var inst_18242 = inst_18231 + 1;
                            var inst_18231__$1 = inst_18242;
                            var state_18254__$1 = function() {
                              var statearr_18265 = state_18254;
                              statearr_18265[8] = inst_18231__$1;
                              statearr_18265[10] = inst_18241;
                              return statearr_18265;
                            }();
                            var statearr_18266_18284 = state_18254__$1;
                            statearr_18266_18284[2] = null;
                            statearr_18266_18284[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_18255 === 9) {
                              var state_18254__$1 = state_18254;
                              var statearr_18267_18285 = state_18254__$1;
                              statearr_18267_18285[2] = null;
                              statearr_18267_18285[1] = 10;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_18255 === 5) {
                                var state_18254__$1 = state_18254;
                                var statearr_18268_18286 = state_18254__$1;
                                statearr_18268_18286[2] = null;
                                statearr_18268_18286[1] = 6;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_18255 === 10) {
                                  var inst_18246 = state_18254[2];
                                  var state_18254__$1 = state_18254;
                                  var statearr_18269_18287 = state_18254__$1;
                                  statearr_18269_18287[2] = inst_18246;
                                  statearr_18269_18287[1] = 6;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_18255 === 8) {
                                    var inst_18236 = state_18254[7];
                                    var state_18254__$1 = state_18254;
                                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_18254__$1, 11, out, inst_18236);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6703__auto___18277, out);
          return function(switch__6647__auto__, c__6703__auto___18277, out) {
            return function() {
              var state_machine__6648__auto__ = null;
              var state_machine__6648__auto____0 = function() {
                var statearr_18273 = [null, null, null, null, null, null, null, null, null, null, null];
                statearr_18273[0] = state_machine__6648__auto__;
                statearr_18273[1] = 1;
                return statearr_18273;
              };
              var state_machine__6648__auto____1 = function(state_18254) {
                while (true) {
                  var ret_value__6649__auto__ = function() {
                    try {
                      while (true) {
                        var result__6650__auto__ = switch__6647__auto__.call(null, state_18254);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6650__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6650__auto__;
                        }
                        break;
                      }
                    } catch (e18274) {
                      if (e18274 instanceof Object) {
                        var ex__6651__auto__ = e18274;
                        var statearr_18275_18288 = state_18254;
                        statearr_18275_18288[5] = ex__6651__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_18254);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e18274;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6649__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__18289 = state_18254;
                    state_18254 = G__18289;
                    continue;
                  } else {
                    return ret_value__6649__auto__;
                  }
                  break;
                }
              };
              state_machine__6648__auto__ = function(state_18254) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6648__auto____0.call(this);
                  case 1:
                    return state_machine__6648__auto____1.call(this, state_18254);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6648__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6648__auto____0;
              state_machine__6648__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6648__auto____1;
              return state_machine__6648__auto__;
            }();
          }(switch__6647__auto__, c__6703__auto___18277, out);
        }();
        var state__6705__auto__ = function() {
          var statearr_18276 = f__6704__auto__.call(null);
          statearr_18276[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6703__auto___18277;
          return statearr_18276;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6705__auto__);
      };
    }(c__6703__auto___18277, out));
    return out;
  };
  take = function(n, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return take__2.call(this, n, ch);
      case 3:
        return take__3.call(this, n, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take.cljs$core$IFn$_invoke$arity$2 = take__2;
  take.cljs$core$IFn$_invoke$arity$3 = take__3;
  return take;
}();
cljs.core.async.map_LT_ = function map_LT_(f, ch) {
  if (typeof cljs.core.async.t18297 !== "undefined") {
  } else {
    cljs.core.async.t18297 = function(ch, f, map_LT_, meta18298) {
      this.ch = ch;
      this.f = f;
      this.map_LT_ = map_LT_;
      this.meta18298 = meta18298;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t18297.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t18297.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, val, fn1);
    };
    cljs.core.async.t18297.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t18297.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      var ret = cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, function() {
        if (typeof cljs.core.async.t18300 !== "undefined") {
        } else {
          cljs.core.async.t18300 = function(fn1, _, meta18298, map_LT_, f, ch, meta18301) {
            this.fn1 = fn1;
            this._ = _;
            this.meta18298 = meta18298;
            this.map_LT_ = map_LT_;
            this.f = f;
            this.ch = ch;
            this.meta18301 = meta18301;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          cljs.core.async.t18300.prototype.cljs$core$async$impl$protocols$Handler$ = true;
          cljs.core.async.t18300.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(___$1) {
            return function(___$1) {
              var self__ = this;
              var ___$2 = this;
              return cljs.core.async.impl.protocols.active_QMARK_.call(null, self__.fn1);
            };
          }(___$1);
          cljs.core.async.t18300.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(___$1) {
            return function(___$1) {
              var self__ = this;
              var ___$2 = this;
              var f1 = cljs.core.async.impl.protocols.commit.call(null, self__.fn1);
              return function(f1, ___$2, ___$1) {
                return function(p1__18290_SHARP_) {
                  return f1.call(null, p1__18290_SHARP_ == null ? null : self__.f.call(null, p1__18290_SHARP_));
                };
              }(f1, ___$2, ___$1);
            };
          }(___$1);
          cljs.core.async.t18300.prototype.cljs$core$IMeta$_meta$arity$1 = function(___$1) {
            return function(_18302) {
              var self__ = this;
              var _18302__$1 = this;
              return self__.meta18301;
            };
          }(___$1);
          cljs.core.async.t18300.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(___$1) {
            return function(_18302, meta18301__$1) {
              var self__ = this;
              var _18302__$1 = this;
              return new cljs.core.async.t18300(self__.fn1, self__._, self__.meta18298, self__.map_LT_, self__.f, self__.ch, meta18301__$1);
            };
          }(___$1);
          cljs.core.async.t18300.cljs$lang$type = true;
          cljs.core.async.t18300.cljs$lang$ctorStr = "cljs.core.async/t18300";
          cljs.core.async.t18300.cljs$lang$ctorPrWriter = function(___$1) {
            return function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
              return cljs.core._write.call(null, writer__4513__auto__, "cljs.core.async/t18300");
            };
          }(___$1);
          cljs.core.async.__GT_t18300 = function(___$1) {
            return function __GT_t18300(fn1__$1, ___$2, meta18298__$1, map_LT___$1, f__$1, ch__$1, meta18301) {
              return new cljs.core.async.t18300(fn1__$1, ___$2, meta18298__$1, map_LT___$1, f__$1, ch__$1, meta18301);
            };
          }(___$1);
        }
        return new cljs.core.async.t18300(fn1, ___$1, self__.meta18298, self__.map_LT_, self__.f, self__.ch, cljs.core.PersistentArrayMap.EMPTY);
      }());
      if (cljs.core.truth_(function() {
        var and__3913__auto__ = ret;
        if (cljs.core.truth_(and__3913__auto__)) {
          return!(cljs.core.deref.call(null, ret) == null);
        } else {
          return and__3913__auto__;
        }
      }())) {
        return cljs.core.async.impl.channels.box.call(null, self__.f.call(null, cljs.core.deref.call(null, ret)));
      } else {
        return ret;
      }
    };
    cljs.core.async.t18297.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t18297.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t18297.prototype.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.closed_QMARK_.call(null, self__.ch);
    };
    cljs.core.async.t18297.prototype.cljs$core$IMeta$_meta$arity$1 = function(_18299) {
      var self__ = this;
      var _18299__$1 = this;
      return self__.meta18298;
    };
    cljs.core.async.t18297.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_18299, meta18298__$1) {
      var self__ = this;
      var _18299__$1 = this;
      return new cljs.core.async.t18297(self__.ch, self__.f, self__.map_LT_, meta18298__$1);
    };
    cljs.core.async.t18297.cljs$lang$type = true;
    cljs.core.async.t18297.cljs$lang$ctorStr = "cljs.core.async/t18297";
    cljs.core.async.t18297.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
      return cljs.core._write.call(null, writer__4513__auto__, "cljs.core.async/t18297");
    };
    cljs.core.async.__GT_t18297 = function __GT_t18297(ch__$1, f__$1, map_LT___$1, meta18298) {
      return new cljs.core.async.t18297(ch__$1, f__$1, map_LT___$1, meta18298);
    };
  }
  return new cljs.core.async.t18297(ch, f, map_LT_, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.map_GT_ = function map_GT_(f, ch) {
  if (typeof cljs.core.async.t18306 !== "undefined") {
  } else {
    cljs.core.async.t18306 = function(ch, f, map_GT_, meta18307) {
      this.ch = ch;
      this.f = f;
      this.map_GT_ = map_GT_;
      this.meta18307 = meta18307;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t18306.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t18306.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, self__.f.call(null, val), fn1);
    };
    cljs.core.async.t18306.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t18306.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, fn1);
    };
    cljs.core.async.t18306.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t18306.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t18306.prototype.cljs$core$IMeta$_meta$arity$1 = function(_18308) {
      var self__ = this;
      var _18308__$1 = this;
      return self__.meta18307;
    };
    cljs.core.async.t18306.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_18308, meta18307__$1) {
      var self__ = this;
      var _18308__$1 = this;
      return new cljs.core.async.t18306(self__.ch, self__.f, self__.map_GT_, meta18307__$1);
    };
    cljs.core.async.t18306.cljs$lang$type = true;
    cljs.core.async.t18306.cljs$lang$ctorStr = "cljs.core.async/t18306";
    cljs.core.async.t18306.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
      return cljs.core._write.call(null, writer__4513__auto__, "cljs.core.async/t18306");
    };
    cljs.core.async.__GT_t18306 = function __GT_t18306(ch__$1, f__$1, map_GT___$1, meta18307) {
      return new cljs.core.async.t18306(ch__$1, f__$1, map_GT___$1, meta18307);
    };
  }
  return new cljs.core.async.t18306(ch, f, map_GT_, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.filter_GT_ = function filter_GT_(p, ch) {
  if (typeof cljs.core.async.t18312 !== "undefined") {
  } else {
    cljs.core.async.t18312 = function(ch, p, filter_GT_, meta18313) {
      this.ch = ch;
      this.p = p;
      this.filter_GT_ = filter_GT_;
      this.meta18313 = meta18313;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t18312.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t18312.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn1) {
      var self__ = this;
      var ___$1 = this;
      if (cljs.core.truth_(self__.p.call(null, val))) {
        return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, val, fn1);
      } else {
        return cljs.core.async.impl.channels.box.call(null, cljs.core.not.call(null, cljs.core.async.impl.protocols.closed_QMARK_.call(null, self__.ch)));
      }
    };
    cljs.core.async.t18312.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t18312.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, fn1);
    };
    cljs.core.async.t18312.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t18312.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t18312.prototype.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.closed_QMARK_.call(null, self__.ch);
    };
    cljs.core.async.t18312.prototype.cljs$core$IMeta$_meta$arity$1 = function(_18314) {
      var self__ = this;
      var _18314__$1 = this;
      return self__.meta18313;
    };
    cljs.core.async.t18312.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_18314, meta18313__$1) {
      var self__ = this;
      var _18314__$1 = this;
      return new cljs.core.async.t18312(self__.ch, self__.p, self__.filter_GT_, meta18313__$1);
    };
    cljs.core.async.t18312.cljs$lang$type = true;
    cljs.core.async.t18312.cljs$lang$ctorStr = "cljs.core.async/t18312";
    cljs.core.async.t18312.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
      return cljs.core._write.call(null, writer__4513__auto__, "cljs.core.async/t18312");
    };
    cljs.core.async.__GT_t18312 = function __GT_t18312(ch__$1, p__$1, filter_GT___$1, meta18313) {
      return new cljs.core.async.t18312(ch__$1, p__$1, filter_GT___$1, meta18313);
    };
  }
  return new cljs.core.async.t18312(ch, p, filter_GT_, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.remove_GT_ = function remove_GT_(p, ch) {
  return cljs.core.async.filter_GT_.call(null, cljs.core.complement.call(null, p), ch);
};
cljs.core.async.filter_LT_ = function() {
  var filter_LT_ = null;
  var filter_LT___2 = function(p, ch) {
    return filter_LT_.call(null, p, ch, null);
  };
  var filter_LT___3 = function(p, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6703__auto___18397 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6703__auto___18397, out) {
      return function() {
        var f__6704__auto__ = function() {
          var switch__6647__auto__ = function(c__6703__auto___18397, out) {
            return function(state_18376) {
              var state_val_18377 = state_18376[1];
              if (state_val_18377 === 7) {
                var inst_18372 = state_18376[2];
                var state_18376__$1 = state_18376;
                var statearr_18378_18398 = state_18376__$1;
                statearr_18378_18398[2] = inst_18372;
                statearr_18378_18398[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_18377 === 1) {
                  var state_18376__$1 = state_18376;
                  var statearr_18379_18399 = state_18376__$1;
                  statearr_18379_18399[2] = null;
                  statearr_18379_18399[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_18377 === 4) {
                    var inst_18358 = state_18376[7];
                    var inst_18358__$1 = state_18376[2];
                    var inst_18359 = inst_18358__$1 == null;
                    var state_18376__$1 = function() {
                      var statearr_18380 = state_18376;
                      statearr_18380[7] = inst_18358__$1;
                      return statearr_18380;
                    }();
                    if (cljs.core.truth_(inst_18359)) {
                      var statearr_18381_18400 = state_18376__$1;
                      statearr_18381_18400[1] = 5;
                    } else {
                      var statearr_18382_18401 = state_18376__$1;
                      statearr_18382_18401[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_18377 === 6) {
                      var inst_18358 = state_18376[7];
                      var inst_18363 = p.call(null, inst_18358);
                      var state_18376__$1 = state_18376;
                      if (cljs.core.truth_(inst_18363)) {
                        var statearr_18383_18402 = state_18376__$1;
                        statearr_18383_18402[1] = 8;
                      } else {
                        var statearr_18384_18403 = state_18376__$1;
                        statearr_18384_18403[1] = 9;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_18377 === 3) {
                        var inst_18374 = state_18376[2];
                        var state_18376__$1 = state_18376;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_18376__$1, inst_18374);
                      } else {
                        if (state_val_18377 === 2) {
                          var state_18376__$1 = state_18376;
                          return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_18376__$1, 4, ch);
                        } else {
                          if (state_val_18377 === 11) {
                            var inst_18366 = state_18376[2];
                            var state_18376__$1 = state_18376;
                            var statearr_18385_18404 = state_18376__$1;
                            statearr_18385_18404[2] = inst_18366;
                            statearr_18385_18404[1] = 10;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_18377 === 9) {
                              var state_18376__$1 = state_18376;
                              var statearr_18386_18405 = state_18376__$1;
                              statearr_18386_18405[2] = null;
                              statearr_18386_18405[1] = 10;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_18377 === 5) {
                                var inst_18361 = cljs.core.async.close_BANG_.call(null, out);
                                var state_18376__$1 = state_18376;
                                var statearr_18387_18406 = state_18376__$1;
                                statearr_18387_18406[2] = inst_18361;
                                statearr_18387_18406[1] = 7;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_18377 === 10) {
                                  var inst_18369 = state_18376[2];
                                  var state_18376__$1 = function() {
                                    var statearr_18388 = state_18376;
                                    statearr_18388[8] = inst_18369;
                                    return statearr_18388;
                                  }();
                                  var statearr_18389_18407 = state_18376__$1;
                                  statearr_18389_18407[2] = null;
                                  statearr_18389_18407[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_18377 === 8) {
                                    var inst_18358 = state_18376[7];
                                    var state_18376__$1 = state_18376;
                                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_18376__$1, 11, out, inst_18358);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6703__auto___18397, out);
          return function(switch__6647__auto__, c__6703__auto___18397, out) {
            return function() {
              var state_machine__6648__auto__ = null;
              var state_machine__6648__auto____0 = function() {
                var statearr_18393 = [null, null, null, null, null, null, null, null, null];
                statearr_18393[0] = state_machine__6648__auto__;
                statearr_18393[1] = 1;
                return statearr_18393;
              };
              var state_machine__6648__auto____1 = function(state_18376) {
                while (true) {
                  var ret_value__6649__auto__ = function() {
                    try {
                      while (true) {
                        var result__6650__auto__ = switch__6647__auto__.call(null, state_18376);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6650__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6650__auto__;
                        }
                        break;
                      }
                    } catch (e18394) {
                      if (e18394 instanceof Object) {
                        var ex__6651__auto__ = e18394;
                        var statearr_18395_18408 = state_18376;
                        statearr_18395_18408[5] = ex__6651__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_18376);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e18394;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6649__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__18409 = state_18376;
                    state_18376 = G__18409;
                    continue;
                  } else {
                    return ret_value__6649__auto__;
                  }
                  break;
                }
              };
              state_machine__6648__auto__ = function(state_18376) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6648__auto____0.call(this);
                  case 1:
                    return state_machine__6648__auto____1.call(this, state_18376);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6648__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6648__auto____0;
              state_machine__6648__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6648__auto____1;
              return state_machine__6648__auto__;
            }();
          }(switch__6647__auto__, c__6703__auto___18397, out);
        }();
        var state__6705__auto__ = function() {
          var statearr_18396 = f__6704__auto__.call(null);
          statearr_18396[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6703__auto___18397;
          return statearr_18396;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6705__auto__);
      };
    }(c__6703__auto___18397, out));
    return out;
  };
  filter_LT_ = function(p, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return filter_LT___2.call(this, p, ch);
      case 3:
        return filter_LT___3.call(this, p, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  filter_LT_.cljs$core$IFn$_invoke$arity$2 = filter_LT___2;
  filter_LT_.cljs$core$IFn$_invoke$arity$3 = filter_LT___3;
  return filter_LT_;
}();
cljs.core.async.remove_LT_ = function() {
  var remove_LT_ = null;
  var remove_LT___2 = function(p, ch) {
    return remove_LT_.call(null, p, ch, null);
  };
  var remove_LT___3 = function(p, ch, buf_or_n) {
    return cljs.core.async.filter_LT_.call(null, cljs.core.complement.call(null, p), ch, buf_or_n);
  };
  remove_LT_ = function(p, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return remove_LT___2.call(this, p, ch);
      case 3:
        return remove_LT___3.call(this, p, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  remove_LT_.cljs$core$IFn$_invoke$arity$2 = remove_LT___2;
  remove_LT_.cljs$core$IFn$_invoke$arity$3 = remove_LT___3;
  return remove_LT_;
}();
cljs.core.async.mapcat_STAR_ = function mapcat_STAR_(f, in$, out) {
  var c__6703__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6703__auto__) {
    return function() {
      var f__6704__auto__ = function() {
        var switch__6647__auto__ = function(c__6703__auto__) {
          return function(state_18575) {
            var state_val_18576 = state_18575[1];
            if (state_val_18576 === 7) {
              var inst_18571 = state_18575[2];
              var state_18575__$1 = state_18575;
              var statearr_18577_18618 = state_18575__$1;
              statearr_18577_18618[2] = inst_18571;
              statearr_18577_18618[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_18576 === 20) {
                var inst_18541 = state_18575[7];
                var inst_18552 = state_18575[2];
                var inst_18553 = cljs.core.next.call(null, inst_18541);
                var inst_18527 = inst_18553;
                var inst_18528 = null;
                var inst_18529 = 0;
                var inst_18530 = 0;
                var state_18575__$1 = function() {
                  var statearr_18578 = state_18575;
                  statearr_18578[8] = inst_18530;
                  statearr_18578[9] = inst_18552;
                  statearr_18578[10] = inst_18529;
                  statearr_18578[11] = inst_18527;
                  statearr_18578[12] = inst_18528;
                  return statearr_18578;
                }();
                var statearr_18579_18619 = state_18575__$1;
                statearr_18579_18619[2] = null;
                statearr_18579_18619[1] = 8;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_18576 === 1) {
                  var state_18575__$1 = state_18575;
                  var statearr_18580_18620 = state_18575__$1;
                  statearr_18580_18620[2] = null;
                  statearr_18580_18620[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_18576 === 4) {
                    var inst_18516 = state_18575[13];
                    var inst_18516__$1 = state_18575[2];
                    var inst_18517 = inst_18516__$1 == null;
                    var state_18575__$1 = function() {
                      var statearr_18581 = state_18575;
                      statearr_18581[13] = inst_18516__$1;
                      return statearr_18581;
                    }();
                    if (cljs.core.truth_(inst_18517)) {
                      var statearr_18582_18621 = state_18575__$1;
                      statearr_18582_18621[1] = 5;
                    } else {
                      var statearr_18583_18622 = state_18575__$1;
                      statearr_18583_18622[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_18576 === 15) {
                      var state_18575__$1 = state_18575;
                      var statearr_18587_18623 = state_18575__$1;
                      statearr_18587_18623[2] = null;
                      statearr_18587_18623[1] = 16;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_18576 === 21) {
                        var state_18575__$1 = state_18575;
                        var statearr_18588_18624 = state_18575__$1;
                        statearr_18588_18624[2] = null;
                        statearr_18588_18624[1] = 23;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_18576 === 13) {
                          var inst_18530 = state_18575[8];
                          var inst_18529 = state_18575[10];
                          var inst_18527 = state_18575[11];
                          var inst_18528 = state_18575[12];
                          var inst_18537 = state_18575[2];
                          var inst_18538 = inst_18530 + 1;
                          var tmp18584 = inst_18529;
                          var tmp18585 = inst_18527;
                          var tmp18586 = inst_18528;
                          var inst_18527__$1 = tmp18585;
                          var inst_18528__$1 = tmp18586;
                          var inst_18529__$1 = tmp18584;
                          var inst_18530__$1 = inst_18538;
                          var state_18575__$1 = function() {
                            var statearr_18589 = state_18575;
                            statearr_18589[8] = inst_18530__$1;
                            statearr_18589[14] = inst_18537;
                            statearr_18589[10] = inst_18529__$1;
                            statearr_18589[11] = inst_18527__$1;
                            statearr_18589[12] = inst_18528__$1;
                            return statearr_18589;
                          }();
                          var statearr_18590_18625 = state_18575__$1;
                          statearr_18590_18625[2] = null;
                          statearr_18590_18625[1] = 8;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_18576 === 22) {
                            var state_18575__$1 = state_18575;
                            var statearr_18591_18626 = state_18575__$1;
                            statearr_18591_18626[2] = null;
                            statearr_18591_18626[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_18576 === 6) {
                              var inst_18516 = state_18575[13];
                              var inst_18525 = f.call(null, inst_18516);
                              var inst_18526 = cljs.core.seq.call(null, inst_18525);
                              var inst_18527 = inst_18526;
                              var inst_18528 = null;
                              var inst_18529 = 0;
                              var inst_18530 = 0;
                              var state_18575__$1 = function() {
                                var statearr_18592 = state_18575;
                                statearr_18592[8] = inst_18530;
                                statearr_18592[10] = inst_18529;
                                statearr_18592[11] = inst_18527;
                                statearr_18592[12] = inst_18528;
                                return statearr_18592;
                              }();
                              var statearr_18593_18627 = state_18575__$1;
                              statearr_18593_18627[2] = null;
                              statearr_18593_18627[1] = 8;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_18576 === 17) {
                                var inst_18541 = state_18575[7];
                                var inst_18545 = cljs.core.chunk_first.call(null, inst_18541);
                                var inst_18546 = cljs.core.chunk_rest.call(null, inst_18541);
                                var inst_18547 = cljs.core.count.call(null, inst_18545);
                                var inst_18527 = inst_18546;
                                var inst_18528 = inst_18545;
                                var inst_18529 = inst_18547;
                                var inst_18530 = 0;
                                var state_18575__$1 = function() {
                                  var statearr_18594 = state_18575;
                                  statearr_18594[8] = inst_18530;
                                  statearr_18594[10] = inst_18529;
                                  statearr_18594[11] = inst_18527;
                                  statearr_18594[12] = inst_18528;
                                  return statearr_18594;
                                }();
                                var statearr_18595_18628 = state_18575__$1;
                                statearr_18595_18628[2] = null;
                                statearr_18595_18628[1] = 8;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_18576 === 3) {
                                  var inst_18573 = state_18575[2];
                                  var state_18575__$1 = state_18575;
                                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_18575__$1, inst_18573);
                                } else {
                                  if (state_val_18576 === 12) {
                                    var inst_18561 = state_18575[2];
                                    var state_18575__$1 = state_18575;
                                    var statearr_18596_18629 = state_18575__$1;
                                    statearr_18596_18629[2] = inst_18561;
                                    statearr_18596_18629[1] = 9;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_18576 === 2) {
                                      var state_18575__$1 = state_18575;
                                      return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_18575__$1, 4, in$);
                                    } else {
                                      if (state_val_18576 === 23) {
                                        var inst_18569 = state_18575[2];
                                        var state_18575__$1 = state_18575;
                                        var statearr_18597_18630 = state_18575__$1;
                                        statearr_18597_18630[2] = inst_18569;
                                        statearr_18597_18630[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_18576 === 19) {
                                          var inst_18556 = state_18575[2];
                                          var state_18575__$1 = state_18575;
                                          var statearr_18598_18631 = state_18575__$1;
                                          statearr_18598_18631[2] = inst_18556;
                                          statearr_18598_18631[1] = 16;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_18576 === 11) {
                                            var inst_18527 = state_18575[11];
                                            var inst_18541 = state_18575[7];
                                            var inst_18541__$1 = cljs.core.seq.call(null, inst_18527);
                                            var state_18575__$1 = function() {
                                              var statearr_18599 = state_18575;
                                              statearr_18599[7] = inst_18541__$1;
                                              return statearr_18599;
                                            }();
                                            if (inst_18541__$1) {
                                              var statearr_18600_18632 = state_18575__$1;
                                              statearr_18600_18632[1] = 14;
                                            } else {
                                              var statearr_18601_18633 = state_18575__$1;
                                              statearr_18601_18633[1] = 15;
                                            }
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_18576 === 9) {
                                              var inst_18563 = state_18575[2];
                                              var inst_18564 = cljs.core.async.impl.protocols.closed_QMARK_.call(null, out);
                                              var state_18575__$1 = function() {
                                                var statearr_18602 = state_18575;
                                                statearr_18602[15] = inst_18563;
                                                return statearr_18602;
                                              }();
                                              if (cljs.core.truth_(inst_18564)) {
                                                var statearr_18603_18634 = state_18575__$1;
                                                statearr_18603_18634[1] = 21;
                                              } else {
                                                var statearr_18604_18635 = state_18575__$1;
                                                statearr_18604_18635[1] = 22;
                                              }
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_18576 === 5) {
                                                var inst_18519 = cljs.core.async.close_BANG_.call(null, out);
                                                var state_18575__$1 = state_18575;
                                                var statearr_18605_18636 = state_18575__$1;
                                                statearr_18605_18636[2] = inst_18519;
                                                statearr_18605_18636[1] = 7;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_18576 === 14) {
                                                  var inst_18541 = state_18575[7];
                                                  var inst_18543 = cljs.core.chunked_seq_QMARK_.call(null, inst_18541);
                                                  var state_18575__$1 = state_18575;
                                                  if (inst_18543) {
                                                    var statearr_18606_18637 = state_18575__$1;
                                                    statearr_18606_18637[1] = 17;
                                                  } else {
                                                    var statearr_18607_18638 = state_18575__$1;
                                                    statearr_18607_18638[1] = 18;
                                                  }
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_18576 === 16) {
                                                    var inst_18559 = state_18575[2];
                                                    var state_18575__$1 = state_18575;
                                                    var statearr_18608_18639 = state_18575__$1;
                                                    statearr_18608_18639[2] = inst_18559;
                                                    statearr_18608_18639[1] = 12;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_18576 === 10) {
                                                      var inst_18530 = state_18575[8];
                                                      var inst_18528 = state_18575[12];
                                                      var inst_18535 = cljs.core._nth.call(null, inst_18528, inst_18530);
                                                      var state_18575__$1 = state_18575;
                                                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_18575__$1, 13, out, inst_18535);
                                                    } else {
                                                      if (state_val_18576 === 18) {
                                                        var inst_18541 = state_18575[7];
                                                        var inst_18550 = cljs.core.first.call(null, inst_18541);
                                                        var state_18575__$1 = state_18575;
                                                        return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_18575__$1, 20, out, inst_18550);
                                                      } else {
                                                        if (state_val_18576 === 8) {
                                                          var inst_18530 = state_18575[8];
                                                          var inst_18529 = state_18575[10];
                                                          var inst_18532 = inst_18530 < inst_18529;
                                                          var inst_18533 = inst_18532;
                                                          var state_18575__$1 = state_18575;
                                                          if (cljs.core.truth_(inst_18533)) {
                                                            var statearr_18609_18640 = state_18575__$1;
                                                            statearr_18609_18640[1] = 10;
                                                          } else {
                                                            var statearr_18610_18641 = state_18575__$1;
                                                            statearr_18610_18641[1] = 11;
                                                          }
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          return null;
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6703__auto__);
        return function(switch__6647__auto__, c__6703__auto__) {
          return function() {
            var state_machine__6648__auto__ = null;
            var state_machine__6648__auto____0 = function() {
              var statearr_18614 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_18614[0] = state_machine__6648__auto__;
              statearr_18614[1] = 1;
              return statearr_18614;
            };
            var state_machine__6648__auto____1 = function(state_18575) {
              while (true) {
                var ret_value__6649__auto__ = function() {
                  try {
                    while (true) {
                      var result__6650__auto__ = switch__6647__auto__.call(null, state_18575);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6650__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__6650__auto__;
                      }
                      break;
                    }
                  } catch (e18615) {
                    if (e18615 instanceof Object) {
                      var ex__6651__auto__ = e18615;
                      var statearr_18616_18642 = state_18575;
                      statearr_18616_18642[5] = ex__6651__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_18575);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e18615;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6649__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__18643 = state_18575;
                  state_18575 = G__18643;
                  continue;
                } else {
                  return ret_value__6649__auto__;
                }
                break;
              }
            };
            state_machine__6648__auto__ = function(state_18575) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6648__auto____0.call(this);
                case 1:
                  return state_machine__6648__auto____1.call(this, state_18575);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6648__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6648__auto____0;
            state_machine__6648__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6648__auto____1;
            return state_machine__6648__auto__;
          }();
        }(switch__6647__auto__, c__6703__auto__);
      }();
      var state__6705__auto__ = function() {
        var statearr_18617 = f__6704__auto__.call(null);
        statearr_18617[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6703__auto__;
        return statearr_18617;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6705__auto__);
    };
  }(c__6703__auto__));
  return c__6703__auto__;
};
cljs.core.async.mapcat_LT_ = function() {
  var mapcat_LT_ = null;
  var mapcat_LT___2 = function(f, in$) {
    return mapcat_LT_.call(null, f, in$, null);
  };
  var mapcat_LT___3 = function(f, in$, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    cljs.core.async.mapcat_STAR_.call(null, f, in$, out);
    return out;
  };
  mapcat_LT_ = function(f, in$, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return mapcat_LT___2.call(this, f, in$);
      case 3:
        return mapcat_LT___3.call(this, f, in$, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat_LT_.cljs$core$IFn$_invoke$arity$2 = mapcat_LT___2;
  mapcat_LT_.cljs$core$IFn$_invoke$arity$3 = mapcat_LT___3;
  return mapcat_LT_;
}();
cljs.core.async.mapcat_GT_ = function() {
  var mapcat_GT_ = null;
  var mapcat_GT___2 = function(f, out) {
    return mapcat_GT_.call(null, f, out, null);
  };
  var mapcat_GT___3 = function(f, out, buf_or_n) {
    var in$ = cljs.core.async.chan.call(null, buf_or_n);
    cljs.core.async.mapcat_STAR_.call(null, f, in$, out);
    return in$;
  };
  mapcat_GT_ = function(f, out, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return mapcat_GT___2.call(this, f, out);
      case 3:
        return mapcat_GT___3.call(this, f, out, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat_GT_.cljs$core$IFn$_invoke$arity$2 = mapcat_GT___2;
  mapcat_GT_.cljs$core$IFn$_invoke$arity$3 = mapcat_GT___3;
  return mapcat_GT_;
}();
cljs.core.async.unique = function() {
  var unique = null;
  var unique__1 = function(ch) {
    return unique.call(null, ch, null);
  };
  var unique__2 = function(ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6703__auto___18740 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6703__auto___18740, out) {
      return function() {
        var f__6704__auto__ = function() {
          var switch__6647__auto__ = function(c__6703__auto___18740, out) {
            return function(state_18715) {
              var state_val_18716 = state_18715[1];
              if (state_val_18716 === 7) {
                var inst_18710 = state_18715[2];
                var state_18715__$1 = state_18715;
                var statearr_18717_18741 = state_18715__$1;
                statearr_18717_18741[2] = inst_18710;
                statearr_18717_18741[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_18716 === 1) {
                  var inst_18692 = null;
                  var state_18715__$1 = function() {
                    var statearr_18718 = state_18715;
                    statearr_18718[7] = inst_18692;
                    return statearr_18718;
                  }();
                  var statearr_18719_18742 = state_18715__$1;
                  statearr_18719_18742[2] = null;
                  statearr_18719_18742[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_18716 === 4) {
                    var inst_18695 = state_18715[8];
                    var inst_18695__$1 = state_18715[2];
                    var inst_18696 = inst_18695__$1 == null;
                    var inst_18697 = cljs.core.not.call(null, inst_18696);
                    var state_18715__$1 = function() {
                      var statearr_18720 = state_18715;
                      statearr_18720[8] = inst_18695__$1;
                      return statearr_18720;
                    }();
                    if (inst_18697) {
                      var statearr_18721_18743 = state_18715__$1;
                      statearr_18721_18743[1] = 5;
                    } else {
                      var statearr_18722_18744 = state_18715__$1;
                      statearr_18722_18744[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_18716 === 6) {
                      var state_18715__$1 = state_18715;
                      var statearr_18723_18745 = state_18715__$1;
                      statearr_18723_18745[2] = null;
                      statearr_18723_18745[1] = 7;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_18716 === 3) {
                        var inst_18712 = state_18715[2];
                        var inst_18713 = cljs.core.async.close_BANG_.call(null, out);
                        var state_18715__$1 = function() {
                          var statearr_18724 = state_18715;
                          statearr_18724[9] = inst_18712;
                          return statearr_18724;
                        }();
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_18715__$1, inst_18713);
                      } else {
                        if (state_val_18716 === 2) {
                          var state_18715__$1 = state_18715;
                          return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_18715__$1, 4, ch);
                        } else {
                          if (state_val_18716 === 11) {
                            var inst_18695 = state_18715[8];
                            var inst_18704 = state_18715[2];
                            var inst_18692 = inst_18695;
                            var state_18715__$1 = function() {
                              var statearr_18725 = state_18715;
                              statearr_18725[7] = inst_18692;
                              statearr_18725[10] = inst_18704;
                              return statearr_18725;
                            }();
                            var statearr_18726_18746 = state_18715__$1;
                            statearr_18726_18746[2] = null;
                            statearr_18726_18746[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_18716 === 9) {
                              var inst_18695 = state_18715[8];
                              var state_18715__$1 = state_18715;
                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_18715__$1, 11, out, inst_18695);
                            } else {
                              if (state_val_18716 === 5) {
                                var inst_18695 = state_18715[8];
                                var inst_18692 = state_18715[7];
                                var inst_18699 = cljs.core._EQ_.call(null, inst_18695, inst_18692);
                                var state_18715__$1 = state_18715;
                                if (inst_18699) {
                                  var statearr_18728_18747 = state_18715__$1;
                                  statearr_18728_18747[1] = 8;
                                } else {
                                  var statearr_18729_18748 = state_18715__$1;
                                  statearr_18729_18748[1] = 9;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_18716 === 10) {
                                  var inst_18707 = state_18715[2];
                                  var state_18715__$1 = state_18715;
                                  var statearr_18730_18749 = state_18715__$1;
                                  statearr_18730_18749[2] = inst_18707;
                                  statearr_18730_18749[1] = 7;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_18716 === 8) {
                                    var inst_18692 = state_18715[7];
                                    var tmp18727 = inst_18692;
                                    var inst_18692__$1 = tmp18727;
                                    var state_18715__$1 = function() {
                                      var statearr_18731 = state_18715;
                                      statearr_18731[7] = inst_18692__$1;
                                      return statearr_18731;
                                    }();
                                    var statearr_18732_18750 = state_18715__$1;
                                    statearr_18732_18750[2] = null;
                                    statearr_18732_18750[1] = 2;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6703__auto___18740, out);
          return function(switch__6647__auto__, c__6703__auto___18740, out) {
            return function() {
              var state_machine__6648__auto__ = null;
              var state_machine__6648__auto____0 = function() {
                var statearr_18736 = [null, null, null, null, null, null, null, null, null, null, null];
                statearr_18736[0] = state_machine__6648__auto__;
                statearr_18736[1] = 1;
                return statearr_18736;
              };
              var state_machine__6648__auto____1 = function(state_18715) {
                while (true) {
                  var ret_value__6649__auto__ = function() {
                    try {
                      while (true) {
                        var result__6650__auto__ = switch__6647__auto__.call(null, state_18715);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6650__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6650__auto__;
                        }
                        break;
                      }
                    } catch (e18737) {
                      if (e18737 instanceof Object) {
                        var ex__6651__auto__ = e18737;
                        var statearr_18738_18751 = state_18715;
                        statearr_18738_18751[5] = ex__6651__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_18715);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e18737;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6649__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__18752 = state_18715;
                    state_18715 = G__18752;
                    continue;
                  } else {
                    return ret_value__6649__auto__;
                  }
                  break;
                }
              };
              state_machine__6648__auto__ = function(state_18715) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6648__auto____0.call(this);
                  case 1:
                    return state_machine__6648__auto____1.call(this, state_18715);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6648__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6648__auto____0;
              state_machine__6648__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6648__auto____1;
              return state_machine__6648__auto__;
            }();
          }(switch__6647__auto__, c__6703__auto___18740, out);
        }();
        var state__6705__auto__ = function() {
          var statearr_18739 = f__6704__auto__.call(null);
          statearr_18739[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6703__auto___18740;
          return statearr_18739;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6705__auto__);
      };
    }(c__6703__auto___18740, out));
    return out;
  };
  unique = function(ch, buf_or_n) {
    switch(arguments.length) {
      case 1:
        return unique__1.call(this, ch);
      case 2:
        return unique__2.call(this, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unique.cljs$core$IFn$_invoke$arity$1 = unique__1;
  unique.cljs$core$IFn$_invoke$arity$2 = unique__2;
  return unique;
}();
cljs.core.async.partition = function() {
  var partition = null;
  var partition__2 = function(n, ch) {
    return partition.call(null, n, ch, null);
  };
  var partition__3 = function(n, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6703__auto___18887 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6703__auto___18887, out) {
      return function() {
        var f__6704__auto__ = function() {
          var switch__6647__auto__ = function(c__6703__auto___18887, out) {
            return function(state_18857) {
              var state_val_18858 = state_18857[1];
              if (state_val_18858 === 7) {
                var inst_18853 = state_18857[2];
                var state_18857__$1 = state_18857;
                var statearr_18859_18888 = state_18857__$1;
                statearr_18859_18888[2] = inst_18853;
                statearr_18859_18888[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_18858 === 1) {
                  var inst_18820 = new Array(n);
                  var inst_18821 = inst_18820;
                  var inst_18822 = 0;
                  var state_18857__$1 = function() {
                    var statearr_18860 = state_18857;
                    statearr_18860[7] = inst_18822;
                    statearr_18860[8] = inst_18821;
                    return statearr_18860;
                  }();
                  var statearr_18861_18889 = state_18857__$1;
                  statearr_18861_18889[2] = null;
                  statearr_18861_18889[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_18858 === 4) {
                    var inst_18825 = state_18857[9];
                    var inst_18825__$1 = state_18857[2];
                    var inst_18826 = inst_18825__$1 == null;
                    var inst_18827 = cljs.core.not.call(null, inst_18826);
                    var state_18857__$1 = function() {
                      var statearr_18862 = state_18857;
                      statearr_18862[9] = inst_18825__$1;
                      return statearr_18862;
                    }();
                    if (inst_18827) {
                      var statearr_18863_18890 = state_18857__$1;
                      statearr_18863_18890[1] = 5;
                    } else {
                      var statearr_18864_18891 = state_18857__$1;
                      statearr_18864_18891[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_18858 === 15) {
                      var inst_18847 = state_18857[2];
                      var state_18857__$1 = state_18857;
                      var statearr_18865_18892 = state_18857__$1;
                      statearr_18865_18892[2] = inst_18847;
                      statearr_18865_18892[1] = 14;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_18858 === 13) {
                        var state_18857__$1 = state_18857;
                        var statearr_18866_18893 = state_18857__$1;
                        statearr_18866_18893[2] = null;
                        statearr_18866_18893[1] = 14;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_18858 === 6) {
                          var inst_18822 = state_18857[7];
                          var inst_18843 = inst_18822 > 0;
                          var state_18857__$1 = state_18857;
                          if (cljs.core.truth_(inst_18843)) {
                            var statearr_18867_18894 = state_18857__$1;
                            statearr_18867_18894[1] = 12;
                          } else {
                            var statearr_18868_18895 = state_18857__$1;
                            statearr_18868_18895[1] = 13;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_18858 === 3) {
                            var inst_18855 = state_18857[2];
                            var state_18857__$1 = state_18857;
                            return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_18857__$1, inst_18855);
                          } else {
                            if (state_val_18858 === 12) {
                              var inst_18821 = state_18857[8];
                              var inst_18845 = cljs.core.vec.call(null, inst_18821);
                              var state_18857__$1 = state_18857;
                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_18857__$1, 15, out, inst_18845);
                            } else {
                              if (state_val_18858 === 2) {
                                var state_18857__$1 = state_18857;
                                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_18857__$1, 4, ch);
                              } else {
                                if (state_val_18858 === 11) {
                                  var inst_18837 = state_18857[2];
                                  var inst_18838 = new Array(n);
                                  var inst_18821 = inst_18838;
                                  var inst_18822 = 0;
                                  var state_18857__$1 = function() {
                                    var statearr_18869 = state_18857;
                                    statearr_18869[10] = inst_18837;
                                    statearr_18869[7] = inst_18822;
                                    statearr_18869[8] = inst_18821;
                                    return statearr_18869;
                                  }();
                                  var statearr_18870_18896 = state_18857__$1;
                                  statearr_18870_18896[2] = null;
                                  statearr_18870_18896[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_18858 === 9) {
                                    var inst_18821 = state_18857[8];
                                    var inst_18835 = cljs.core.vec.call(null, inst_18821);
                                    var state_18857__$1 = state_18857;
                                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_18857__$1, 11, out, inst_18835);
                                  } else {
                                    if (state_val_18858 === 5) {
                                      var inst_18830 = state_18857[11];
                                      var inst_18822 = state_18857[7];
                                      var inst_18821 = state_18857[8];
                                      var inst_18825 = state_18857[9];
                                      var inst_18829 = inst_18821[inst_18822] = inst_18825;
                                      var inst_18830__$1 = inst_18822 + 1;
                                      var inst_18831 = inst_18830__$1 < n;
                                      var state_18857__$1 = function() {
                                        var statearr_18871 = state_18857;
                                        statearr_18871[12] = inst_18829;
                                        statearr_18871[11] = inst_18830__$1;
                                        return statearr_18871;
                                      }();
                                      if (cljs.core.truth_(inst_18831)) {
                                        var statearr_18872_18897 = state_18857__$1;
                                        statearr_18872_18897[1] = 8;
                                      } else {
                                        var statearr_18873_18898 = state_18857__$1;
                                        statearr_18873_18898[1] = 9;
                                      }
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_18858 === 14) {
                                        var inst_18850 = state_18857[2];
                                        var inst_18851 = cljs.core.async.close_BANG_.call(null, out);
                                        var state_18857__$1 = function() {
                                          var statearr_18875 = state_18857;
                                          statearr_18875[13] = inst_18850;
                                          return statearr_18875;
                                        }();
                                        var statearr_18876_18899 = state_18857__$1;
                                        statearr_18876_18899[2] = inst_18851;
                                        statearr_18876_18899[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_18858 === 10) {
                                          var inst_18841 = state_18857[2];
                                          var state_18857__$1 = state_18857;
                                          var statearr_18877_18900 = state_18857__$1;
                                          statearr_18877_18900[2] = inst_18841;
                                          statearr_18877_18900[1] = 7;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_18858 === 8) {
                                            var inst_18830 = state_18857[11];
                                            var inst_18821 = state_18857[8];
                                            var tmp18874 = inst_18821;
                                            var inst_18821__$1 = tmp18874;
                                            var inst_18822 = inst_18830;
                                            var state_18857__$1 = function() {
                                              var statearr_18878 = state_18857;
                                              statearr_18878[7] = inst_18822;
                                              statearr_18878[8] = inst_18821__$1;
                                              return statearr_18878;
                                            }();
                                            var statearr_18879_18901 = state_18857__$1;
                                            statearr_18879_18901[2] = null;
                                            statearr_18879_18901[1] = 2;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            return null;
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6703__auto___18887, out);
          return function(switch__6647__auto__, c__6703__auto___18887, out) {
            return function() {
              var state_machine__6648__auto__ = null;
              var state_machine__6648__auto____0 = function() {
                var statearr_18883 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_18883[0] = state_machine__6648__auto__;
                statearr_18883[1] = 1;
                return statearr_18883;
              };
              var state_machine__6648__auto____1 = function(state_18857) {
                while (true) {
                  var ret_value__6649__auto__ = function() {
                    try {
                      while (true) {
                        var result__6650__auto__ = switch__6647__auto__.call(null, state_18857);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6650__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6650__auto__;
                        }
                        break;
                      }
                    } catch (e18884) {
                      if (e18884 instanceof Object) {
                        var ex__6651__auto__ = e18884;
                        var statearr_18885_18902 = state_18857;
                        statearr_18885_18902[5] = ex__6651__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_18857);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e18884;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6649__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__18903 = state_18857;
                    state_18857 = G__18903;
                    continue;
                  } else {
                    return ret_value__6649__auto__;
                  }
                  break;
                }
              };
              state_machine__6648__auto__ = function(state_18857) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6648__auto____0.call(this);
                  case 1:
                    return state_machine__6648__auto____1.call(this, state_18857);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6648__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6648__auto____0;
              state_machine__6648__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6648__auto____1;
              return state_machine__6648__auto__;
            }();
          }(switch__6647__auto__, c__6703__auto___18887, out);
        }();
        var state__6705__auto__ = function() {
          var statearr_18886 = f__6704__auto__.call(null);
          statearr_18886[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6703__auto___18887;
          return statearr_18886;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6705__auto__);
      };
    }(c__6703__auto___18887, out));
    return out;
  };
  partition = function(n, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, ch);
      case 3:
        return partition__3.call(this, n, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
  partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
  return partition;
}();
cljs.core.async.partition_by = function() {
  var partition_by = null;
  var partition_by__2 = function(f, ch) {
    return partition_by.call(null, f, ch, null);
  };
  var partition_by__3 = function(f, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6703__auto___19046 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6703__auto___19046, out) {
      return function() {
        var f__6704__auto__ = function() {
          var switch__6647__auto__ = function(c__6703__auto___19046, out) {
            return function(state_19016) {
              var state_val_19017 = state_19016[1];
              if (state_val_19017 === 7) {
                var inst_19012 = state_19016[2];
                var state_19016__$1 = state_19016;
                var statearr_19018_19047 = state_19016__$1;
                statearr_19018_19047[2] = inst_19012;
                statearr_19018_19047[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_19017 === 1) {
                  var inst_18975 = [];
                  var inst_18976 = inst_18975;
                  var inst_18977 = new cljs.core.Keyword("cljs.core.async", "nothing", "cljs.core.async/nothing", -69252123);
                  var state_19016__$1 = function() {
                    var statearr_19019 = state_19016;
                    statearr_19019[7] = inst_18976;
                    statearr_19019[8] = inst_18977;
                    return statearr_19019;
                  }();
                  var statearr_19020_19048 = state_19016__$1;
                  statearr_19020_19048[2] = null;
                  statearr_19020_19048[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_19017 === 4) {
                    var inst_18980 = state_19016[9];
                    var inst_18980__$1 = state_19016[2];
                    var inst_18981 = inst_18980__$1 == null;
                    var inst_18982 = cljs.core.not.call(null, inst_18981);
                    var state_19016__$1 = function() {
                      var statearr_19021 = state_19016;
                      statearr_19021[9] = inst_18980__$1;
                      return statearr_19021;
                    }();
                    if (inst_18982) {
                      var statearr_19022_19049 = state_19016__$1;
                      statearr_19022_19049[1] = 5;
                    } else {
                      var statearr_19023_19050 = state_19016__$1;
                      statearr_19023_19050[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_19017 === 15) {
                      var inst_19006 = state_19016[2];
                      var state_19016__$1 = state_19016;
                      var statearr_19024_19051 = state_19016__$1;
                      statearr_19024_19051[2] = inst_19006;
                      statearr_19024_19051[1] = 14;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_19017 === 13) {
                        var state_19016__$1 = state_19016;
                        var statearr_19025_19052 = state_19016__$1;
                        statearr_19025_19052[2] = null;
                        statearr_19025_19052[1] = 14;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_19017 === 6) {
                          var inst_18976 = state_19016[7];
                          var inst_19001 = inst_18976.length;
                          var inst_19002 = inst_19001 > 0;
                          var state_19016__$1 = state_19016;
                          if (cljs.core.truth_(inst_19002)) {
                            var statearr_19026_19053 = state_19016__$1;
                            statearr_19026_19053[1] = 12;
                          } else {
                            var statearr_19027_19054 = state_19016__$1;
                            statearr_19027_19054[1] = 13;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_19017 === 3) {
                            var inst_19014 = state_19016[2];
                            var state_19016__$1 = state_19016;
                            return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_19016__$1, inst_19014);
                          } else {
                            if (state_val_19017 === 12) {
                              var inst_18976 = state_19016[7];
                              var inst_19004 = cljs.core.vec.call(null, inst_18976);
                              var state_19016__$1 = state_19016;
                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_19016__$1, 15, out, inst_19004);
                            } else {
                              if (state_val_19017 === 2) {
                                var state_19016__$1 = state_19016;
                                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_19016__$1, 4, ch);
                              } else {
                                if (state_val_19017 === 11) {
                                  var inst_18984 = state_19016[10];
                                  var inst_18980 = state_19016[9];
                                  var inst_18994 = state_19016[2];
                                  var inst_18995 = [];
                                  var inst_18996 = inst_18995.push(inst_18980);
                                  var inst_18976 = inst_18995;
                                  var inst_18977 = inst_18984;
                                  var state_19016__$1 = function() {
                                    var statearr_19028 = state_19016;
                                    statearr_19028[7] = inst_18976;
                                    statearr_19028[11] = inst_18996;
                                    statearr_19028[8] = inst_18977;
                                    statearr_19028[12] = inst_18994;
                                    return statearr_19028;
                                  }();
                                  var statearr_19029_19055 = state_19016__$1;
                                  statearr_19029_19055[2] = null;
                                  statearr_19029_19055[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_19017 === 9) {
                                    var inst_18976 = state_19016[7];
                                    var inst_18992 = cljs.core.vec.call(null, inst_18976);
                                    var state_19016__$1 = state_19016;
                                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_19016__$1, 11, out, inst_18992);
                                  } else {
                                    if (state_val_19017 === 5) {
                                      var inst_18984 = state_19016[10];
                                      var inst_18977 = state_19016[8];
                                      var inst_18980 = state_19016[9];
                                      var inst_18984__$1 = f.call(null, inst_18980);
                                      var inst_18985 = cljs.core._EQ_.call(null, inst_18984__$1, inst_18977);
                                      var inst_18986 = cljs.core.keyword_identical_QMARK_.call(null, inst_18977, new cljs.core.Keyword("cljs.core.async", "nothing", "cljs.core.async/nothing", -69252123));
                                      var inst_18987 = inst_18985 || inst_18986;
                                      var state_19016__$1 = function() {
                                        var statearr_19030 = state_19016;
                                        statearr_19030[10] = inst_18984__$1;
                                        return statearr_19030;
                                      }();
                                      if (cljs.core.truth_(inst_18987)) {
                                        var statearr_19031_19056 = state_19016__$1;
                                        statearr_19031_19056[1] = 8;
                                      } else {
                                        var statearr_19032_19057 = state_19016__$1;
                                        statearr_19032_19057[1] = 9;
                                      }
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_19017 === 14) {
                                        var inst_19009 = state_19016[2];
                                        var inst_19010 = cljs.core.async.close_BANG_.call(null, out);
                                        var state_19016__$1 = function() {
                                          var statearr_19034 = state_19016;
                                          statearr_19034[13] = inst_19009;
                                          return statearr_19034;
                                        }();
                                        var statearr_19035_19058 = state_19016__$1;
                                        statearr_19035_19058[2] = inst_19010;
                                        statearr_19035_19058[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_19017 === 10) {
                                          var inst_18999 = state_19016[2];
                                          var state_19016__$1 = state_19016;
                                          var statearr_19036_19059 = state_19016__$1;
                                          statearr_19036_19059[2] = inst_18999;
                                          statearr_19036_19059[1] = 7;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_19017 === 8) {
                                            var inst_18976 = state_19016[7];
                                            var inst_18984 = state_19016[10];
                                            var inst_18980 = state_19016[9];
                                            var inst_18989 = inst_18976.push(inst_18980);
                                            var tmp19033 = inst_18976;
                                            var inst_18976__$1 = tmp19033;
                                            var inst_18977 = inst_18984;
                                            var state_19016__$1 = function() {
                                              var statearr_19037 = state_19016;
                                              statearr_19037[7] = inst_18976__$1;
                                              statearr_19037[14] = inst_18989;
                                              statearr_19037[8] = inst_18977;
                                              return statearr_19037;
                                            }();
                                            var statearr_19038_19060 = state_19016__$1;
                                            statearr_19038_19060[2] = null;
                                            statearr_19038_19060[1] = 2;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            return null;
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6703__auto___19046, out);
          return function(switch__6647__auto__, c__6703__auto___19046, out) {
            return function() {
              var state_machine__6648__auto__ = null;
              var state_machine__6648__auto____0 = function() {
                var statearr_19042 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_19042[0] = state_machine__6648__auto__;
                statearr_19042[1] = 1;
                return statearr_19042;
              };
              var state_machine__6648__auto____1 = function(state_19016) {
                while (true) {
                  var ret_value__6649__auto__ = function() {
                    try {
                      while (true) {
                        var result__6650__auto__ = switch__6647__auto__.call(null, state_19016);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6650__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6650__auto__;
                        }
                        break;
                      }
                    } catch (e19043) {
                      if (e19043 instanceof Object) {
                        var ex__6651__auto__ = e19043;
                        var statearr_19044_19061 = state_19016;
                        statearr_19044_19061[5] = ex__6651__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_19016);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e19043;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6649__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__19062 = state_19016;
                    state_19016 = G__19062;
                    continue;
                  } else {
                    return ret_value__6649__auto__;
                  }
                  break;
                }
              };
              state_machine__6648__auto__ = function(state_19016) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6648__auto____0.call(this);
                  case 1:
                    return state_machine__6648__auto____1.call(this, state_19016);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6648__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6648__auto____0;
              state_machine__6648__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6648__auto____1;
              return state_machine__6648__auto__;
            }();
          }(switch__6647__auto__, c__6703__auto___19046, out);
        }();
        var state__6705__auto__ = function() {
          var statearr_19045 = f__6704__auto__.call(null);
          statearr_19045[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6703__auto___19046;
          return statearr_19045;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6705__auto__);
      };
    }(c__6703__auto___19046, out));
    return out;
  };
  partition_by = function(f, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return partition_by__2.call(this, f, ch);
      case 3:
        return partition_by__3.call(this, f, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
  partition_by.cljs$core$IFn$_invoke$arity$3 = partition_by__3;
  return partition_by;
}();
goog.provide("clojure.string");
goog.require("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
clojure.string.seq_reverse = function seq_reverse(coll) {
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll);
};
clojure.string.re_surrogate_pair = new RegExp("([\\uD800-\\uDBFF])([\\uDC00-\\uDFFF])", "g");
clojure.string.reverse = function reverse(s) {
  return s.replace(clojure.string.re_surrogate_pair, "$2$1").split("").reverse().join("");
};
clojure.string.replace = function replace(s, match, replacement) {
  if (typeof match === "string") {
    return s.replace(new RegExp(goog.string.regExpEscape(match), "g"), replacement);
  } else {
    if (cljs.core.truth_(match.hasOwnProperty("source"))) {
      return s.replace(new RegExp(match.source, "g"), replacement);
    } else {
      throw[cljs.core.str("Invalid match arg: "), cljs.core.str(match)].join("");
    }
  }
};
clojure.string.replace_first = function replace_first(s, match, replacement) {
  return s.replace(match, replacement);
};
clojure.string.join = function() {
  var join = null;
  var join__1 = function(coll) {
    var sb = new goog.string.StringBuffer;
    var coll__$1 = cljs.core.seq.call(null, coll);
    while (true) {
      if (coll__$1) {
        var G__19188 = sb.append([cljs.core.str(cljs.core.first.call(null, coll__$1))].join(""));
        var G__19189 = cljs.core.next.call(null, coll__$1);
        sb = G__19188;
        coll__$1 = G__19189;
        continue;
      } else {
        return sb.toString();
      }
      break;
    }
  };
  var join__2 = function(separator, coll) {
    var sb = new goog.string.StringBuffer;
    var coll__$1 = cljs.core.seq.call(null, coll);
    while (true) {
      if (coll__$1) {
        sb.append([cljs.core.str(cljs.core.first.call(null, coll__$1))].join(""));
        var coll__$2 = cljs.core.next.call(null, coll__$1);
        if (coll__$2 == null) {
        } else {
          sb.append(separator);
        }
        var G__19190 = sb;
        var G__19191 = coll__$2;
        sb = G__19190;
        coll__$1 = G__19191;
        continue;
      } else {
        return sb.toString();
      }
      break;
    }
  };
  join = function(separator, coll) {
    switch(arguments.length) {
      case 1:
        return join__1.call(this, separator);
      case 2:
        return join__2.call(this, separator, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  join.cljs$core$IFn$_invoke$arity$1 = join__1;
  join.cljs$core$IFn$_invoke$arity$2 = join__2;
  return join;
}();
clojure.string.upper_case = function upper_case(s) {
  return s.toUpperCase();
};
clojure.string.lower_case = function lower_case(s) {
  return s.toLowerCase();
};
clojure.string.capitalize = function capitalize(s) {
  if (cljs.core.count.call(null, s) < 2) {
    return clojure.string.upper_case.call(null, s);
  } else {
    return[cljs.core.str(clojure.string.upper_case.call(null, cljs.core.subs.call(null, s, 0, 1))), cljs.core.str(clojure.string.lower_case.call(null, cljs.core.subs.call(null, s, 1)))].join("");
  }
};
clojure.string.pop_last_while_empty = function pop_last_while_empty(v) {
  var v__$1 = v;
  while (true) {
    if (cljs.core._EQ_.call(null, "", cljs.core.peek.call(null, v__$1))) {
      var G__19192 = cljs.core.pop.call(null, v__$1);
      v__$1 = G__19192;
      continue;
    } else {
      return v__$1;
    }
    break;
  }
};
clojure.string.discard_trailing_if_needed = function discard_trailing_if_needed(limit, v) {
  if (cljs.core._EQ_.call(null, 0, limit)) {
    return clojure.string.pop_last_while_empty.call(null, v);
  } else {
    return v;
  }
};
clojure.string.split_with_empty_regex = function split_with_empty_regex(s, limit) {
  if (limit <= 0 || limit >= 2 + cljs.core.count.call(null, s)) {
    return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s)))), "");
  } else {
    var pred__19196 = cljs.core._EQ_;
    var expr__19197 = limit;
    if (cljs.core.truth_(pred__19196.call(null, 1, expr__19197))) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [s], null);
    } else {
      if (cljs.core.truth_(pred__19196.call(null, 2, expr__19197))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", s], null);
      } else {
        var c = limit - 2;
        return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.subvec.call(null, cljs.core.vec.call(null, cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s))), 0, c))), cljs.core.subs.call(null, s, c));
      }
    }
  }
};
clojure.string.split = function() {
  var split = null;
  var split__2 = function(s, re) {
    return split.call(null, s, re, 0);
  };
  var split__3 = function(s, re, limit) {
    return clojure.string.discard_trailing_if_needed.call(null, limit, cljs.core._EQ_.call(null, [cljs.core.str(re)].join(""), "/(?:)/") ? clojure.string.split_with_empty_regex.call(null, s, limit) : limit < 1 ? cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re)) : function() {
      var s__$1 = s;
      var limit__$1 = limit;
      var parts = cljs.core.PersistentVector.EMPTY;
      while (true) {
        if (cljs.core._EQ_.call(null, limit__$1, 1)) {
          return cljs.core.conj.call(null, parts, s__$1);
        } else {
          var temp__4124__auto__ = cljs.core.re_find.call(null, re, s__$1);
          if (cljs.core.truth_(temp__4124__auto__)) {
            var m = temp__4124__auto__;
            var index = s__$1.indexOf(m);
            var G__19199 = s__$1.substring(index + cljs.core.count.call(null, m));
            var G__19200 = limit__$1 - 1;
            var G__19201 = cljs.core.conj.call(null, parts, s__$1.substring(0, index));
            s__$1 = G__19199;
            limit__$1 = G__19200;
            parts = G__19201;
            continue;
          } else {
            return cljs.core.conj.call(null, parts, s__$1);
          }
        }
        break;
      }
    }());
  };
  split = function(s, re, limit) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, s, re);
      case 3:
        return split__3.call(this, s, re, limit);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  split.cljs$core$IFn$_invoke$arity$2 = split__2;
  split.cljs$core$IFn$_invoke$arity$3 = split__3;
  return split;
}();
clojure.string.split_lines = function split_lines(s) {
  return clojure.string.split.call(null, s, /\n|\r\n/);
};
clojure.string.trim = function trim(s) {
  return goog.string.trim(s);
};
clojure.string.triml = function triml(s) {
  return goog.string.trimLeft(s);
};
clojure.string.trimr = function trimr(s) {
  return goog.string.trimRight(s);
};
clojure.string.trim_newline = function trim_newline(s) {
  var index = s.length;
  while (true) {
    if (index === 0) {
      return "";
    } else {
      var ch = cljs.core.get.call(null, s, index - 1);
      if (cljs.core._EQ_.call(null, ch, "\n") || cljs.core._EQ_.call(null, ch, "\r")) {
        var G__19202 = index - 1;
        index = G__19202;
        continue;
      } else {
        return s.substring(0, index);
      }
    }
    break;
  }
};
clojure.string.blank_QMARK_ = function blank_QMARK_(s) {
  return goog.string.isEmptySafe(s);
};
clojure.string.escape = function escape__$1(s, cmap) {
  var buffer = new goog.string.StringBuffer;
  var length = s.length;
  var index = 0;
  while (true) {
    if (cljs.core._EQ_.call(null, length, index)) {
      return buffer.toString();
    } else {
      var ch = s.charAt(index);
      var temp__4124__auto___19203 = cljs.core.get.call(null, cmap, ch);
      if (cljs.core.truth_(temp__4124__auto___19203)) {
        var replacement_19204 = temp__4124__auto___19203;
        buffer.append([cljs.core.str(replacement_19204)].join(""));
      } else {
        buffer.append(ch);
      }
      var G__19205 = index + 1;
      index = G__19205;
      continue;
    }
    break;
  }
};
goog.provide("cljs_demo.lib");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("cljs.core.async");
goog.require("goog.Uri");
goog.require("goog.net.Jsonp");
cljs_demo.lib.dom_atom = function dom_atom(atom) {
  if (atom instanceof cljs.core.Keyword) {
    return document.createElement(cljs.core.name.call(null, atom));
  } else {
    return document.createTextNode(atom);
  }
};
cljs_demo.lib.set_attr = function set_attr(node, attr_name, value) {
  if (cljs.core.map_QMARK_.call(null, value)) {
    var seq__9556 = cljs.core.seq.call(null, value);
    var chunk__9557 = null;
    var count__9558 = 0;
    var i__9559 = 0;
    while (true) {
      if (i__9559 < count__9558) {
        var vec__9560 = cljs.core._nth.call(null, chunk__9557, i__9559);
        var nname = cljs.core.nth.call(null, vec__9560, 0, null);
        var nvalue = cljs.core.nth.call(null, vec__9560, 1, null);
        node[attr_name][cljs.core.name.call(null, nname)] = nvalue;
        var G__9562 = seq__9556;
        var G__9563 = chunk__9557;
        var G__9564 = count__9558;
        var G__9565 = i__9559 + 1;
        seq__9556 = G__9562;
        chunk__9557 = G__9563;
        count__9558 = G__9564;
        i__9559 = G__9565;
        continue;
      } else {
        var temp__4126__auto__ = cljs.core.seq.call(null, seq__9556);
        if (temp__4126__auto__) {
          var seq__9556__$1 = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__9556__$1)) {
            var c__4712__auto__ = cljs.core.chunk_first.call(null, seq__9556__$1);
            var G__9566 = cljs.core.chunk_rest.call(null, seq__9556__$1);
            var G__9567 = c__4712__auto__;
            var G__9568 = cljs.core.count.call(null, c__4712__auto__);
            var G__9569 = 0;
            seq__9556 = G__9566;
            chunk__9557 = G__9567;
            count__9558 = G__9568;
            i__9559 = G__9569;
            continue;
          } else {
            var vec__9561 = cljs.core.first.call(null, seq__9556__$1);
            var nname = cljs.core.nth.call(null, vec__9561, 0, null);
            var nvalue = cljs.core.nth.call(null, vec__9561, 1, null);
            node[attr_name][cljs.core.name.call(null, nname)] = nvalue;
            var G__9570 = cljs.core.next.call(null, seq__9556__$1);
            var G__9571 = null;
            var G__9572 = 0;
            var G__9573 = 0;
            seq__9556 = G__9570;
            chunk__9557 = G__9571;
            count__9558 = G__9572;
            i__9559 = G__9573;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  } else {
    if (cljs.core._EQ_.call(null, "on-", cljs.core.subs.call(null, attr_name, 0, 3))) {
      var evn = cljs.core.subs.call(null, attr_name, 3);
      return node.addEventListener(evn, value);
    } else {
      if (cljs.core._EQ_.call(null, "class", attr_name)) {
        return node["className"] = value;
      } else {
        return node[attr_name] = value;
      }
    }
  }
};
cljs_demo.lib.set_attrs = function set_attrs(node, attrMap) {
  var seq__9580 = cljs.core.seq.call(null, attrMap);
  var chunk__9581 = null;
  var count__9582 = 0;
  var i__9583 = 0;
  while (true) {
    if (i__9583 < count__9582) {
      var vec__9584 = cljs.core._nth.call(null, chunk__9581, i__9583);
      var key_name = cljs.core.nth.call(null, vec__9584, 0, null);
      var value = cljs.core.nth.call(null, vec__9584, 1, null);
      cljs_demo.lib.set_attr.call(null, node, cljs.core.name.call(null, key_name), value);
      var G__9586 = seq__9580;
      var G__9587 = chunk__9581;
      var G__9588 = count__9582;
      var G__9589 = i__9583 + 1;
      seq__9580 = G__9586;
      chunk__9581 = G__9587;
      count__9582 = G__9588;
      i__9583 = G__9589;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__9580);
      if (temp__4126__auto__) {
        var seq__9580__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__9580__$1)) {
          var c__4712__auto__ = cljs.core.chunk_first.call(null, seq__9580__$1);
          var G__9590 = cljs.core.chunk_rest.call(null, seq__9580__$1);
          var G__9591 = c__4712__auto__;
          var G__9592 = cljs.core.count.call(null, c__4712__auto__);
          var G__9593 = 0;
          seq__9580 = G__9590;
          chunk__9581 = G__9591;
          count__9582 = G__9592;
          i__9583 = G__9593;
          continue;
        } else {
          var vec__9585 = cljs.core.first.call(null, seq__9580__$1);
          var key_name = cljs.core.nth.call(null, vec__9585, 0, null);
          var value = cljs.core.nth.call(null, vec__9585, 1, null);
          cljs_demo.lib.set_attr.call(null, node, cljs.core.name.call(null, key_name), value);
          var G__9594 = cljs.core.next.call(null, seq__9580__$1);
          var G__9595 = null;
          var G__9596 = 0;
          var G__9597 = 0;
          seq__9580 = G__9594;
          chunk__9581 = G__9595;
          count__9582 = G__9596;
          i__9583 = G__9597;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs_demo.lib.get_tag_attr = function get_tag_attr(keyword_elem) {
  var splits = clojure.string.split.call(null, cljs.core.name.call(null, keyword_elem), /\./);
  var classes = cljs.core.rest.call(null, splits);
  var cls_str = clojure.string.join.call(null, " ", classes);
  var init_map = cljs.core.truth_(clojure.string.blank_QMARK_.call(null, cls_str)) ? cljs.core.PersistentArrayMap.EMPTY : new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), cls_str], null);
  var tag_id = clojure.string.split.call(null, cljs.core.first.call(null, splits), /#/);
  if (cljs.core._EQ_.call(null, 2, cljs.core.count.call(null, tag_id))) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, tag_id), cljs.core.assoc.call(null, init_map, new cljs.core.Keyword(null, "id", "id", -1388402092), cljs.core.last.call(null, tag_id))], null);
  } else {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, splits), init_map], null);
  }
};
cljs_demo.lib.dom = function dom(spec) {
  if (cljs.core.sequential_QMARK_.call(null, spec)) {
    var temp__4126__auto__ = cljs.core.first.call(null, spec);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var head = temp__4126__auto__;
      if (head instanceof cljs.core.Keyword) {
        var vec__9603 = cljs_demo.lib.get_tag_attr.call(null, head);
        var tag = cljs.core.nth.call(null, vec__9603, 0, null);
        var init_attr = cljs.core.nth.call(null, vec__9603, 1, null);
        var node = document.createElement(tag);
        var attr = cljs.core.map_QMARK_.call(null, cljs.core.first.call(null, cljs.core.rest.call(null, spec))) ? cljs.core.first.call(null, cljs.core.rest.call(null, spec)) : null;
        var tail = cljs.core.truth_(attr) ? cljs.core.rest.call(null, cljs.core.rest.call(null, spec)) : cljs.core.rest.call(null, spec);
        if (cljs.core.truth_(function() {
          var or__3925__auto__ = attr;
          if (cljs.core.truth_(or__3925__auto__)) {
            return or__3925__auto__;
          } else {
            return init_attr;
          }
        }())) {
          cljs_demo.lib.set_attrs.call(null, node, cljs.core.merge.call(null, init_attr, attr));
        } else {
        }
        var seq__9604_9608 = cljs.core.seq.call(null, cljs.core.mapcat.call(null, dom, tail));
        var chunk__9605_9609 = null;
        var count__9606_9610 = 0;
        var i__9607_9611 = 0;
        while (true) {
          if (i__9607_9611 < count__9606_9610) {
            var child_element_9612 = cljs.core._nth.call(null, chunk__9605_9609, i__9607_9611);
            node.appendChild(child_element_9612);
            var G__9613 = seq__9604_9608;
            var G__9614 = chunk__9605_9609;
            var G__9615 = count__9606_9610;
            var G__9616 = i__9607_9611 + 1;
            seq__9604_9608 = G__9613;
            chunk__9605_9609 = G__9614;
            count__9606_9610 = G__9615;
            i__9607_9611 = G__9616;
            continue;
          } else {
            var temp__4126__auto___9617__$1 = cljs.core.seq.call(null, seq__9604_9608);
            if (temp__4126__auto___9617__$1) {
              var seq__9604_9618__$1 = temp__4126__auto___9617__$1;
              if (cljs.core.chunked_seq_QMARK_.call(null, seq__9604_9618__$1)) {
                var c__4712__auto___9619 = cljs.core.chunk_first.call(null, seq__9604_9618__$1);
                var G__9620 = cljs.core.chunk_rest.call(null, seq__9604_9618__$1);
                var G__9621 = c__4712__auto___9619;
                var G__9622 = cljs.core.count.call(null, c__4712__auto___9619);
                var G__9623 = 0;
                seq__9604_9608 = G__9620;
                chunk__9605_9609 = G__9621;
                count__9606_9610 = G__9622;
                i__9607_9611 = G__9623;
                continue;
              } else {
                var child_element_9624 = cljs.core.first.call(null, seq__9604_9618__$1);
                node.appendChild(child_element_9624);
                var G__9625 = cljs.core.next.call(null, seq__9604_9618__$1);
                var G__9626 = null;
                var G__9627 = 0;
                var G__9628 = 0;
                seq__9604_9608 = G__9625;
                chunk__9605_9609 = G__9626;
                count__9606_9610 = G__9627;
                i__9607_9611 = G__9628;
                continue;
              }
            } else {
            }
          }
          break;
        }
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [node], null);
      } else {
        var headElem = dom.call(null, head);
        var tailElems = cljs.core.apply.call(null, cljs.core.concat, cljs.core.map.call(null, dom, cljs.core.rest.call(null, spec)));
        if (cljs.core.sequential_QMARK_.call(null, headElem)) {
          return cljs.core.concat.call(null, headElem, tailElems);
        } else {
          return cljs.core.cons.call(null, headElem, tailElems);
        }
      }
    } else {
      return null;
    }
  } else {
    return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs_demo.lib.dom_atom.call(null, spec)], null);
  }
};
cljs_demo.lib.jsonp = function() {
  var jsonp = null;
  var jsonp__1 = function(uri) {
    return jsonp.call(null, cljs.core.async.chan.call(null), uri);
  };
  var jsonp__2 = function(c, uri) {
    var gjsonp = new goog.net.Jsonp(new goog.Uri(uri));
    gjsonp.send(null, function(gjsonp) {
      return function(p1__9629_SHARP_) {
        return cljs.core.async.put_BANG_.call(null, c, p1__9629_SHARP_);
      };
    }(gjsonp));
    return c;
  };
  jsonp = function(c, uri) {
    switch(arguments.length) {
      case 1:
        return jsonp__1.call(this, c);
      case 2:
        return jsonp__2.call(this, c, uri);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  jsonp.cljs$core$IFn$_invoke$arity$1 = jsonp__1;
  jsonp.cljs$core$IFn$_invoke$arity$2 = jsonp__2;
  return jsonp;
}();
cljs_demo.lib.by_id = function by_id(id) {
  return document.getElementById(id);
};
cljs_demo.lib.replace_dom = function replace_dom(id, elements) {
  var elem = function() {
    var temp__4124__auto__ = cljs.core.name.call(null, id);
    if (cljs.core.truth_(temp__4124__auto__)) {
      var k__9473__auto__ = temp__4124__auto__;
      var pred__9637 = cljs.core._EQ_;
      var expr__9638 = cljs.core.first.call(null, cljs.core.seq.call(null, k__9473__auto__));
      if (cljs.core.truth_(pred__9637.call(null, "#", expr__9638))) {
        return document.getElementById(cljs.core.subs.call(null, k__9473__auto__, 1));
      } else {
        if (cljs.core.truth_(pred__9637.call(null, ".", expr__9638))) {
          return document.getElementsByClassName(cljs.core.subs.call(null, k__9473__auto__, 1));
        } else {
          throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(expr__9638)].join(""));
        }
      }
    } else {
      return null;
    }
  }();
  var temp__4124__auto___9644 = elem["children"];
  if (cljs.core.truth_(temp__4124__auto___9644)) {
    var oldChildren_9645 = temp__4124__auto___9644;
    var oldChild_9646 = elem["children"][0];
    while (true) {
      if (cljs.core.truth_(oldChild_9646)) {
        elem.removeChild(oldChild_9646);
        var G__9647 = elem["children"][0];
        oldChild_9646 = G__9647;
        continue;
      } else {
      }
      break;
    }
  } else {
  }
  var seq__9640 = cljs.core.seq.call(null, elements);
  var chunk__9641 = null;
  var count__9642 = 0;
  var i__9643 = 0;
  while (true) {
    if (i__9643 < count__9642) {
      var child = cljs.core._nth.call(null, chunk__9641, i__9643);
      elem.appendChild(child);
      var G__9648 = seq__9640;
      var G__9649 = chunk__9641;
      var G__9650 = count__9642;
      var G__9651 = i__9643 + 1;
      seq__9640 = G__9648;
      chunk__9641 = G__9649;
      count__9642 = G__9650;
      i__9643 = G__9651;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__9640);
      if (temp__4126__auto__) {
        var seq__9640__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__9640__$1)) {
          var c__4712__auto__ = cljs.core.chunk_first.call(null, seq__9640__$1);
          var G__9652 = cljs.core.chunk_rest.call(null, seq__9640__$1);
          var G__9653 = c__4712__auto__;
          var G__9654 = cljs.core.count.call(null, c__4712__auto__);
          var G__9655 = 0;
          seq__9640 = G__9652;
          chunk__9641 = G__9653;
          count__9642 = G__9654;
          i__9643 = G__9655;
          continue;
        } else {
          var child = cljs.core.first.call(null, seq__9640__$1);
          elem.appendChild(child);
          var G__9656 = cljs.core.next.call(null, seq__9640__$1);
          var G__9657 = null;
          var G__9658 = 0;
          var G__9659 = 0;
          seq__9640 = G__9656;
          chunk__9641 = G__9657;
          count__9642 = G__9658;
          i__9643 = G__9659;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
goog.provide("cljs_demo.core");
goog.require("cljs.core");
goog.require("cljs_demo.lib");
cljs_demo.core.isX = function isX(x, status) {
  return cljs.core._EQ_.call(null, x, status);
};
cljs_demo.core.isNew = cljs.core.partial.call(null, cljs_demo.core.isX, "New");
cljs_demo.core.isSent = cljs.core.partial.call(null, cljs_demo.core.isX, "Sent");
cljs_demo.core.isClosed = cljs.core.partial.call(null, cljs_demo.core.isX, "Closed");
cljs_demo.core.get_status_summary = function get_status_summary(quotes) {
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "newCount", "newCount", 253903917), cljs.core.count.call(null, cljs.core.filter.call(null, function(p1__9533_SHARP_) {
    return cljs_demo.core.isNew.call(null, (new cljs.core.Keyword(null, "status", "status", -1997798413)).cljs$core$IFn$_invoke$arity$1(p1__9533_SHARP_));
  }, quotes)), new cljs.core.Keyword(null, "sentCount", "sentCount", 447976836), cljs.core.count.call(null, cljs.core.filter.call(null, function(p1__9534_SHARP_) {
    return cljs_demo.core.isSent.call(null, (new cljs.core.Keyword(null, "status", "status", -1997798413)).cljs$core$IFn$_invoke$arity$1(p1__9534_SHARP_));
  }, quotes)), new cljs.core.Keyword(null, "closedCount", "closedCount", -887787208), cljs.core.count.call(null, cljs.core.filter.call(null, function(p1__9535_SHARP_) {
    return cljs_demo.core.isClosed.call(null, (new cljs.core.Keyword(null, "status", "status", -1997798413)).cljs$core$IFn$_invoke$arity$1(p1__9535_SHARP_));
  }, quotes))], null);
};
cljs_demo.core.nextStatus = function nextStatus(status) {
  var pred__9539 = cljs.core._EQ_;
  var expr__9540 = status;
  if (cljs.core.truth_(pred__9539.call(null, "New", expr__9540))) {
    return "Sent";
  } else {
    if (cljs.core.truth_(pred__9539.call(null, "Sent", expr__9540))) {
      return "Closed";
    } else {
      return "";
    }
  }
};
cljs_demo.core.nextAction = function nextAction(status) {
  var pred__9545 = cljs.core._EQ_;
  var expr__9546 = status;
  if (cljs.core.truth_(pred__9545.call(null, "New", expr__9546))) {
    return "Send";
  } else {
    if (cljs.core.truth_(pred__9545.call(null, "Sent", expr__9546))) {
      return "Close";
    } else {
      return "";
    }
  }
};
cljs_demo.core.link_button_style = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "color", "color", 1011675173), "rgb(45, 107, 158)", new cljs.core.Keyword(null, "float", "float", -1732389368), "right", new cljs.core.Keyword(null, "cursor", "cursor", 1011937484), "pointer", new cljs.core.Keyword(null, "border", "border", 1444987323), "none", new cljs.core.Keyword(null, "background", "background", -863952629), "none"], null);
cljs_demo.core.linkButton = function() {
  var linkButton = null;
  var linkButton__1 = function(elem) {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "button", "button", 1456579943), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "style", "style", -496642736), cljs_demo.core.link_button_style], null), elem], null);
  };
  var linkButton__2 = function(elem, onclick) {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "button", "button", 1456579943), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "style", "style", -496642736), cljs_demo.core.link_button_style, new cljs.core.Keyword(null, "on-click", "on-click", 1632826543), onclick], null), elem], null);
  };
  linkButton = function(elem, onclick) {
    switch(arguments.length) {
      case 1:
        return linkButton__1.call(this, elem);
      case 2:
        return linkButton__2.call(this, elem, onclick);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  linkButton.cljs$core$IFn$_invoke$arity$1 = linkButton__1;
  linkButton.cljs$core$IFn$_invoke$arity$2 = linkButton__2;
  return linkButton;
}();
cljs_demo.core.trans_quote = function trans_quote(quote, state) {
  var qs = (new cljs.core.Keyword(null, "quotes", "quotes", -844987790)).cljs$core$IFn$_invoke$arity$1(state);
  return cljs.core.assoc.call(null, state, new cljs.core.Keyword(null, "quotes", "quotes", -844987790), cljs.core.replace.call(null, new cljs.core.PersistentArrayMap.fromArray([quote, cljs.core.assoc.call(null, quote, new cljs.core.Keyword(null, "status", "status", -1997798413), cljs_demo.core.nextStatus.call(null, (new cljs.core.Keyword(null, "status", "status", -1997798413)).cljs$core$IFn$_invoke$arity$1(quote)))], true, false), qs));
};
cljs_demo.core.quote = function quote(quote__$1) {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "li", "li", 723558921), (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(quote__$1), " \u2014 ", new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "small", "small", 2133478704), (new cljs.core.Keyword(null, "status", "status", -1997798413)).cljs$core$IFn$_invoke$arity$1(quote__$1)], 
  null), cljs_demo.core.linkButton.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span", "span", 1394872991), cljs_demo.core.nextAction.call(null, (new cljs.core.Keyword(null, "status", "status", -1997798413)).cljs$core$IFn$_invoke$arity$1(quote__$1))], null))], null);
};
cljs_demo.core.quote_list = function quote_list(quote_list__$1) {
  if (cljs.core.empty_QMARK_.call(null, quote_list__$1)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "h2", "h2", -372662728), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "style", "style", -496642736), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "color", "color", 1011675173), "#c0c0c0", new cljs.core.Keyword(null, 
    "text-align", "text-align", 1786091845), "center"], null)], null), "Nothing is here?"], null)], null);
  } else {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ul", "ul", -1349521403), cljs.core.map.call(null, cljs_demo.core.quote, quote_list__$1)], null);
  }
};
cljs_demo.core.summary = function summary(quotes) {
  var status_summary = cljs_demo.core.get_status_summary.call(null, quotes);
  return new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "style", "style", -496642736), new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "border", "border", 1444987323), "1px solid #bbb", new cljs.core.Keyword(null, "padding-top", "padding-top", 1929675955), "20px", new cljs.core.Keyword(null, "padding-bottom", "padding-bottom", 
  -1899795591), "20px", new cljs.core.Keyword(null, "padding-left", "padding-left", -1180879053), "12px", new cljs.core.Keyword(null, "padding-right", "padding-right", -1250249681), "12px", new cljs.core.Keyword(null, "fontSize", "fontSize", 919623033), "12px", new cljs.core.Keyword(null, "backgroundColor", "backgroundColor", 1738438491), "#eee"], null)], null), (new cljs.core.Keyword(null, "newCount", "newCount", 253903917)).cljs$core$IFn$_invoke$arity$1(status_summary), " New Quotes, ", (new cljs.core.Keyword(null, 
  "sentCount", "sentCount", 447976836)).cljs$core$IFn$_invoke$arity$1(status_summary), " Sent Quotes, and ", (new cljs.core.Keyword(null, "closedCount", "closedCount", -887787208)).cljs$core$IFn$_invoke$arity$1(status_summary), " Closed Quotes", cljs_demo.core.linkButton.call(null, "Close All")], null);
};
cljs_demo.core.app_view = function app_view(state) {
  return cljs_demo.lib.dom.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), cljs_demo.core.summary.call(null, (new cljs.core.Keyword(null, "quotes", "quotes", -844987790)).cljs$core$IFn$_invoke$arity$1(state)), cljs_demo.core.quote_list.call(null, (new cljs.core.Keyword(null, "quotes", "quotes", -844987790)).cljs$core$IFn$_invoke$arity$1(state))], null));
};
cljs_demo.core.insert = function insert(state) {
  return cljs_demo.lib.replace_dom.call(null, new cljs.core.Keyword(null, "#app-root", "#app-root", 1813789094), cljs_demo.core.app_view.call(null, state));
};
cljs_demo.core.state = new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "quotes", "quotes", -844987790), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "id", "id", -1388402092), 1, new cljs.core.Keyword(null, "name", "name", 1843675177), "First Quote", new cljs.core.Keyword(null, "status", "status", -1997798413), "New"], null), new cljs.core.PersistentArrayMap(null, 3, 
[new cljs.core.Keyword(null, "id", "id", -1388402092), 2, new cljs.core.Keyword(null, "name", "name", 1843675177), "Second Quote", new cljs.core.Keyword(null, "status", "status", -1997798413), "New"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "id", "id", -1388402092), 3, new cljs.core.Keyword(null, "name", "name", 1843675177), "Third Quote", new cljs.core.Keyword(null, "status", "status", -1997798413), "New"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, 
"id", "id", -1388402092), 4, new cljs.core.Keyword(null, "name", "name", 1843675177), "Forth Quote", new cljs.core.Keyword(null, "status", "status", -1997798413), "New"], null)], null)], null);
cljs_demo.core.insert.call(null, cljs_demo.core.state);
