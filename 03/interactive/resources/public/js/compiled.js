if(typeof Math.imul == "undefined" || (Math.imul(0xffffffff,5) == 0)) {
    Math.imul = function (a, b) {
        var ah  = (a >>> 16) & 0xffff;
        var al = a & 0xffff;
        var bh  = (b >>> 16) & 0xffff;
        var bl = b & 0xffff;
        // the shift by 0 fixes the sign on the high part
        // the final |0 converts the unsigned value into a signed value
        return ((al * bl) + (((ah * bl + al * bh) << 16) >>> 0)|0);
    }
}


var CLOSURE_NO_DEPS = true;
var COMPILED = false;
var goog = goog || {};
goog.global = this;
goog.global.CLOSURE_UNCOMPILED_DEFINES;
goog.global.CLOSURE_DEFINES;
goog.isDef = function(val) {
  return val !== void 0;
};
goog.exportPath_ = function(name, opt_object, opt_objectToExportTo) {
  var parts = name.split(".");
  var cur = opt_objectToExportTo || goog.global;
  if (!(parts[0] in cur) && cur.execScript) {
    cur.execScript("var " + parts[0]);
  }
  for (var part;parts.length && (part = parts.shift());) {
    if (!parts.length && goog.isDef(opt_object)) {
      cur[part] = opt_object;
    } else {
      if (cur[part]) {
        cur = cur[part];
      } else {
        cur = cur[part] = {};
      }
    }
  }
};
goog.define = function(name, defaultValue) {
  var value = defaultValue;
  if (!COMPILED) {
    if (goog.global.CLOSURE_UNCOMPILED_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_UNCOMPILED_DEFINES, name)) {
      value = goog.global.CLOSURE_UNCOMPILED_DEFINES[name];
    } else {
      if (goog.global.CLOSURE_DEFINES && Object.prototype.hasOwnProperty.call(goog.global.CLOSURE_DEFINES, name)) {
        value = goog.global.CLOSURE_DEFINES[name];
      }
    }
  }
  goog.exportPath_(name, value);
};
goog.DEBUG = true;
goog.define("goog.LOCALE", "en");
goog.define("goog.TRUSTED_SITE", true);
goog.define("goog.STRICT_MODE_COMPATIBLE", false);
goog.provide = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      throw Error('Namespace "' + name + '" already declared.');
    }
    delete goog.implicitNamespaces_[name];
    var namespace = name;
    while (namespace = namespace.substring(0, namespace.lastIndexOf("."))) {
      if (goog.getObjectByName(namespace)) {
        break;
      }
      goog.implicitNamespaces_[namespace] = true;
    }
  }
  goog.exportPath_(name);
};
goog.setTestOnly = function(opt_message) {
  if (COMPILED && !goog.DEBUG) {
    opt_message = opt_message || "";
    throw Error("Importing test-only code into non-debug environment" + (opt_message ? ": " + opt_message : "."));
  }
};
goog.forwardDeclare = function(name) {
};
if (!COMPILED) {
  goog.isProvided_ = function(name) {
    return!goog.implicitNamespaces_[name] && goog.isDefAndNotNull(goog.getObjectByName(name));
  };
  goog.implicitNamespaces_ = {};
}
goog.getObjectByName = function(name, opt_obj) {
  var parts = name.split(".");
  var cur = opt_obj || goog.global;
  for (var part;part = parts.shift();) {
    if (goog.isDefAndNotNull(cur[part])) {
      cur = cur[part];
    } else {
      return null;
    }
  }
  return cur;
};
goog.globalize = function(obj, opt_global) {
  var global = opt_global || goog.global;
  for (var x in obj) {
    global[x] = obj[x];
  }
};
goog.addDependency = function(relPath, provides, requires) {
  if (goog.DEPENDENCIES_ENABLED) {
    var provide, require;
    var path = relPath.replace(/\\/g, "/");
    var deps = goog.dependencies_;
    for (var i = 0;provide = provides[i];i++) {
      deps.nameToPath[provide] = path;
      if (!(path in deps.pathToNames)) {
        deps.pathToNames[path] = {};
      }
      deps.pathToNames[path][provide] = true;
    }
    for (var j = 0;require = requires[j];j++) {
      if (!(path in deps.requires)) {
        deps.requires[path] = {};
      }
      deps.requires[path][require] = true;
    }
  }
};
goog.define("goog.ENABLE_DEBUG_LOADER", true);
goog.require = function(name) {
  if (!COMPILED) {
    if (goog.isProvided_(name)) {
      return;
    }
    if (goog.ENABLE_DEBUG_LOADER) {
      var path = goog.getPathFromDeps_(name);
      if (path) {
        goog.included_[path] = true;
        goog.writeScripts_();
        return;
      }
    }
    var errorMessage = "goog.require could not find: " + name;
    if (goog.global.console) {
      goog.global.console["error"](errorMessage);
    }
    throw Error(errorMessage);
  }
};
goog.basePath = "";
goog.global.CLOSURE_BASE_PATH;
goog.global.CLOSURE_NO_DEPS;
goog.global.CLOSURE_IMPORT_SCRIPT;
goog.nullFunction = function() {
};
goog.identityFunction = function(opt_returnValue, var_args) {
  return opt_returnValue;
};
goog.abstractMethod = function() {
  throw Error("unimplemented abstract method");
};
goog.addSingletonGetter = function(ctor) {
  ctor.getInstance = function() {
    if (ctor.instance_) {
      return ctor.instance_;
    }
    if (goog.DEBUG) {
      goog.instantiatedSingletons_[goog.instantiatedSingletons_.length] = ctor;
    }
    return ctor.instance_ = new ctor;
  };
};
goog.instantiatedSingletons_ = [];
goog.DEPENDENCIES_ENABLED = !COMPILED && goog.ENABLE_DEBUG_LOADER;
if (goog.DEPENDENCIES_ENABLED) {
  goog.included_ = {};
  goog.dependencies_ = {pathToNames:{}, nameToPath:{}, requires:{}, visited:{}, written:{}};
  goog.inHtmlDocument_ = function() {
    var doc = goog.global.document;
    return typeof doc != "undefined" && "write" in doc;
  };
  goog.findBasePath_ = function() {
    if (goog.global.CLOSURE_BASE_PATH) {
      goog.basePath = goog.global.CLOSURE_BASE_PATH;
      return;
    } else {
      if (!goog.inHtmlDocument_()) {
        return;
      }
    }
    var doc = goog.global.document;
    var scripts = doc.getElementsByTagName("script");
    for (var i = scripts.length - 1;i >= 0;--i) {
      var src = scripts[i].src;
      var qmark = src.lastIndexOf("?");
      var l = qmark == -1 ? src.length : qmark;
      if (src.substr(l - 7, 7) == "base.js") {
        goog.basePath = src.substr(0, l - 7);
        return;
      }
    }
  };
  goog.importScript_ = function(src) {
    var importScript = goog.global.CLOSURE_IMPORT_SCRIPT || goog.writeScriptTag_;
    if (!goog.dependencies_.written[src] && importScript(src)) {
      goog.dependencies_.written[src] = true;
    }
  };
  goog.writeScriptTag_ = function(src) {
    if (goog.inHtmlDocument_()) {
      var doc = goog.global.document;
      if (doc.readyState == "complete") {
        var isDeps = /\bdeps.js$/.test(src);
        if (isDeps) {
          return false;
        } else {
          throw Error('Cannot write "' + src + '" after document load');
        }
      }
      doc.write('\x3cscript type\x3d"text/javascript" src\x3d"' + src + '"\x3e\x3c/' + "script\x3e");
      return true;
    } else {
      return false;
    }
  };
  goog.writeScripts_ = function() {
    var scripts = [];
    var seenScript = {};
    var deps = goog.dependencies_;
    function visitNode(path) {
      if (path in deps.written) {
        return;
      }
      if (path in deps.visited) {
        if (!(path in seenScript)) {
          seenScript[path] = true;
          scripts.push(path);
        }
        return;
      }
      deps.visited[path] = true;
      if (path in deps.requires) {
        for (var requireName in deps.requires[path]) {
          if (!goog.isProvided_(requireName)) {
            if (requireName in deps.nameToPath) {
              visitNode(deps.nameToPath[requireName]);
            } else {
              throw Error("Undefined nameToPath for " + requireName);
            }
          }
        }
      }
      if (!(path in seenScript)) {
        seenScript[path] = true;
        scripts.push(path);
      }
    }
    for (var path in goog.included_) {
      if (!deps.written[path]) {
        visitNode(path);
      }
    }
    for (var i = 0;i < scripts.length;i++) {
      if (scripts[i]) {
        goog.importScript_(goog.basePath + scripts[i]);
      } else {
        throw Error("Undefined script input");
      }
    }
  };
  goog.getPathFromDeps_ = function(rule) {
    if (rule in goog.dependencies_.nameToPath) {
      return goog.dependencies_.nameToPath[rule];
    } else {
      return null;
    }
  };
  goog.findBasePath_();
  if (!goog.global.CLOSURE_NO_DEPS) {
    goog.importScript_(goog.basePath + "deps.js");
  }
}
goog.typeOf = function(value) {
  var s = typeof value;
  if (s == "object") {
    if (value) {
      if (value instanceof Array) {
        return "array";
      } else {
        if (value instanceof Object) {
          return s;
        }
      }
      var className = Object.prototype.toString.call((value));
      if (className == "[object Window]") {
        return "object";
      }
      if (className == "[object Array]" || typeof value.length == "number" && typeof value.splice != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("splice")) {
        return "array";
      }
      if (className == "[object Function]" || typeof value.call != "undefined" && typeof value.propertyIsEnumerable != "undefined" && !value.propertyIsEnumerable("call")) {
        return "function";
      }
    } else {
      return "null";
    }
  } else {
    if (s == "function" && typeof value.call == "undefined") {
      return "object";
    }
  }
  return s;
};
goog.isNull = function(val) {
  return val === null;
};
goog.isDefAndNotNull = function(val) {
  return val != null;
};
goog.isArray = function(val) {
  return goog.typeOf(val) == "array";
};
goog.isArrayLike = function(val) {
  var type = goog.typeOf(val);
  return type == "array" || type == "object" && typeof val.length == "number";
};
goog.isDateLike = function(val) {
  return goog.isObject(val) && typeof val.getFullYear == "function";
};
goog.isString = function(val) {
  return typeof val == "string";
};
goog.isBoolean = function(val) {
  return typeof val == "boolean";
};
goog.isNumber = function(val) {
  return typeof val == "number";
};
goog.isFunction = function(val) {
  return goog.typeOf(val) == "function";
};
goog.isObject = function(val) {
  var type = typeof val;
  return type == "object" && val != null || type == "function";
};
goog.getUid = function(obj) {
  return obj[goog.UID_PROPERTY_] || (obj[goog.UID_PROPERTY_] = ++goog.uidCounter_);
};
goog.hasUid = function(obj) {
  return!!obj[goog.UID_PROPERTY_];
};
goog.removeUid = function(obj) {
  if ("removeAttribute" in obj) {
    obj.removeAttribute(goog.UID_PROPERTY_);
  }
  try {
    delete obj[goog.UID_PROPERTY_];
  } catch (ex) {
  }
};
goog.UID_PROPERTY_ = "closure_uid_" + (Math.random() * 1E9 >>> 0);
goog.uidCounter_ = 0;
goog.getHashCode = goog.getUid;
goog.removeHashCode = goog.removeUid;
goog.cloneObject = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.cloneObject(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.bindNative_ = function(fn, selfObj, var_args) {
  return(fn.call.apply(fn.bind, arguments));
};
goog.bindJs_ = function(fn, selfObj, var_args) {
  if (!fn) {
    throw new Error;
  }
  if (arguments.length > 2) {
    var boundArgs = Array.prototype.slice.call(arguments, 2);
    return function() {
      var newArgs = Array.prototype.slice.call(arguments);
      Array.prototype.unshift.apply(newArgs, boundArgs);
      return fn.apply(selfObj, newArgs);
    };
  } else {
    return function() {
      return fn.apply(selfObj, arguments);
    };
  }
};
goog.bind = function(fn, selfObj, var_args) {
  if (Function.prototype.bind && Function.prototype.bind.toString().indexOf("native code") != -1) {
    goog.bind = goog.bindNative_;
  } else {
    goog.bind = goog.bindJs_;
  }
  return goog.bind.apply(null, arguments);
};
goog.partial = function(fn, var_args) {
  var args = Array.prototype.slice.call(arguments, 1);
  return function() {
    var newArgs = args.slice();
    newArgs.push.apply(newArgs, arguments);
    return fn.apply(this, newArgs);
  };
};
goog.mixin = function(target, source) {
  for (var x in source) {
    target[x] = source[x];
  }
};
goog.now = goog.TRUSTED_SITE && Date.now || function() {
  return+new Date;
};
goog.globalEval = function(script) {
  if (goog.global.execScript) {
    goog.global.execScript(script, "JavaScript");
  } else {
    if (goog.global.eval) {
      if (goog.evalWorksForGlobals_ == null) {
        goog.global.eval("var _et_ \x3d 1;");
        if (typeof goog.global["_et_"] != "undefined") {
          delete goog.global["_et_"];
          goog.evalWorksForGlobals_ = true;
        } else {
          goog.evalWorksForGlobals_ = false;
        }
      }
      if (goog.evalWorksForGlobals_) {
        goog.global.eval(script);
      } else {
        var doc = goog.global.document;
        var scriptElt = doc.createElement("script");
        scriptElt.type = "text/javascript";
        scriptElt.defer = false;
        scriptElt.appendChild(doc.createTextNode(script));
        doc.body.appendChild(scriptElt);
        doc.body.removeChild(scriptElt);
      }
    } else {
      throw Error("goog.globalEval not available");
    }
  }
};
goog.evalWorksForGlobals_ = null;
goog.cssNameMapping_;
goog.cssNameMappingStyle_;
goog.getCssName = function(className, opt_modifier) {
  var getMapping = function(cssName) {
    return goog.cssNameMapping_[cssName] || cssName;
  };
  var renameByParts = function(cssName) {
    var parts = cssName.split("-");
    var mapped = [];
    for (var i = 0;i < parts.length;i++) {
      mapped.push(getMapping(parts[i]));
    }
    return mapped.join("-");
  };
  var rename;
  if (goog.cssNameMapping_) {
    rename = goog.cssNameMappingStyle_ == "BY_WHOLE" ? getMapping : renameByParts;
  } else {
    rename = function(a) {
      return a;
    };
  }
  if (opt_modifier) {
    return className + "-" + rename(opt_modifier);
  } else {
    return rename(className);
  }
};
goog.setCssNameMapping = function(mapping, opt_style) {
  goog.cssNameMapping_ = mapping;
  goog.cssNameMappingStyle_ = opt_style;
};
goog.global.CLOSURE_CSS_NAME_MAPPING;
if (!COMPILED && goog.global.CLOSURE_CSS_NAME_MAPPING) {
  goog.cssNameMapping_ = goog.global.CLOSURE_CSS_NAME_MAPPING;
}
goog.getMsg = function(str, opt_values) {
  if (opt_values) {
    str = str.replace(/\{\$([^}]+)}/g, function(match, key) {
      return key in opt_values ? opt_values[key] : match;
    });
  }
  return str;
};
goog.getMsgWithFallback = function(a, b) {
  return a;
};
goog.exportSymbol = function(publicPath, object, opt_objectToExportTo) {
  goog.exportPath_(publicPath, object, opt_objectToExportTo);
};
goog.exportProperty = function(object, publicName, symbol) {
  object[publicName] = symbol;
};
goog.inherits = function(childCtor, parentCtor) {
  function tempCtor() {
  }
  tempCtor.prototype = parentCtor.prototype;
  childCtor.superClass_ = parentCtor.prototype;
  childCtor.prototype = new tempCtor;
  childCtor.prototype.constructor = childCtor;
  childCtor.base = function(me, methodName, var_args) {
    var args = Array.prototype.slice.call(arguments, 2);
    return parentCtor.prototype[methodName].apply(me, args);
  };
};
goog.base = function(me, opt_methodName, var_args) {
  var caller = arguments.callee.caller;
  if (goog.STRICT_MODE_COMPATIBLE || goog.DEBUG && !caller) {
    throw Error("arguments.caller not defined.  goog.base() cannot be used " + "with strict mode code. See " + "http://www.ecma-international.org/ecma-262/5.1/#sec-C");
  }
  if (caller.superClass_) {
    return caller.superClass_.constructor.apply(me, Array.prototype.slice.call(arguments, 1));
  }
  var args = Array.prototype.slice.call(arguments, 2);
  var foundCaller = false;
  for (var ctor = me.constructor;ctor;ctor = ctor.superClass_ && ctor.superClass_.constructor) {
    if (ctor.prototype[opt_methodName] === caller) {
      foundCaller = true;
    } else {
      if (foundCaller) {
        return ctor.prototype[opt_methodName].apply(me, args);
      }
    }
  }
  if (me[opt_methodName] === caller) {
    return me.constructor.prototype[opt_methodName].apply(me, args);
  } else {
    throw Error("goog.base called from a method of one name " + "to a method of a different name");
  }
};
goog.scope = function(fn) {
  fn.call(goog.global);
};
if (!COMPILED) {
  goog.global["COMPILED"] = COMPILED;
}
goog.defineClass = function(superClass, def) {
  var constructor = def.constructor;
  var statics = def.statics;
  if (!constructor || constructor == Object.prototype.constructor) {
    constructor = function() {
      throw Error("cannot instantiate an interface (no constructor defined).");
    };
  }
  var cls = goog.defineClass.createSealingConstructor_(constructor, superClass);
  if (superClass) {
    goog.inherits(cls, superClass);
  }
  delete def.constructor;
  delete def.statics;
  goog.defineClass.applyProperties_(cls.prototype, def);
  if (statics != null) {
    if (statics instanceof Function) {
      statics(cls);
    } else {
      goog.defineClass.applyProperties_(cls, statics);
    }
  }
  return cls;
};
goog.defineClass.ClassDescriptor;
goog.define("goog.defineClass.SEAL_CLASS_INSTANCES", goog.DEBUG);
goog.defineClass.createSealingConstructor_ = function(ctr, superClass) {
  if (goog.defineClass.SEAL_CLASS_INSTANCES && Object.seal instanceof Function) {
    if (superClass && superClass.prototype && superClass.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_]) {
      return ctr;
    }
    var wrappedCtr = function() {
      var instance = ctr.apply(this, arguments) || this;
      if (this.constructor === wrappedCtr) {
        Object.seal(instance);
      }
      return instance;
    };
    return wrappedCtr;
  }
  return ctr;
};
goog.defineClass.OBJECT_PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.defineClass.applyProperties_ = function(target, source) {
  var key;
  for (key in source) {
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
  for (var i = 0;i < goog.defineClass.OBJECT_PROTOTYPE_FIELDS_.length;i++) {
    key = goog.defineClass.OBJECT_PROTOTYPE_FIELDS_[i];
    if (Object.prototype.hasOwnProperty.call(source, key)) {
      target[key] = source[key];
    }
  }
};
goog.tagUnsealableClass = function(ctr) {
  if (!COMPILED && goog.defineClass.SEAL_CLASS_INSTANCES) {
    ctr.prototype[goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_] = true;
  }
};
goog.UNSEALABLE_CONSTRUCTOR_PROPERTY_ = "goog_defineClass_legacy_unsealable";
goog.provide("goog.debug.Error");
goog.debug.Error = function(opt_msg) {
  if (Error.captureStackTrace) {
    Error.captureStackTrace(this, goog.debug.Error);
  } else {
    var stack = (new Error).stack;
    if (stack) {
      this.stack = stack;
    }
  }
  if (opt_msg) {
    this.message = String(opt_msg);
  }
};
goog.inherits(goog.debug.Error, Error);
goog.debug.Error.prototype.name = "CustomError";
goog.provide("goog.dom.NodeType");
goog.dom.NodeType = {ELEMENT:1, ATTRIBUTE:2, TEXT:3, CDATA_SECTION:4, ENTITY_REFERENCE:5, ENTITY:6, PROCESSING_INSTRUCTION:7, COMMENT:8, DOCUMENT:9, DOCUMENT_TYPE:10, DOCUMENT_FRAGMENT:11, NOTATION:12};
goog.provide("goog.string");
goog.provide("goog.string.Unicode");
goog.define("goog.string.DETECT_DOUBLE_ESCAPING", false);
goog.string.Unicode = {NBSP:"\u00a0"};
goog.string.startsWith = function(str, prefix) {
  return str.lastIndexOf(prefix, 0) == 0;
};
goog.string.endsWith = function(str, suffix) {
  var l = str.length - suffix.length;
  return l >= 0 && str.indexOf(suffix, l) == l;
};
goog.string.caseInsensitiveStartsWith = function(str, prefix) {
  return goog.string.caseInsensitiveCompare(prefix, str.substr(0, prefix.length)) == 0;
};
goog.string.caseInsensitiveEndsWith = function(str, suffix) {
  return goog.string.caseInsensitiveCompare(suffix, str.substr(str.length - suffix.length, suffix.length)) == 0;
};
goog.string.caseInsensitiveEquals = function(str1, str2) {
  return str1.toLowerCase() == str2.toLowerCase();
};
goog.string.subs = function(str, var_args) {
  var splitParts = str.split("%s");
  var returnString = "";
  var subsArguments = Array.prototype.slice.call(arguments, 1);
  while (subsArguments.length && splitParts.length > 1) {
    returnString += splitParts.shift() + subsArguments.shift();
  }
  return returnString + splitParts.join("%s");
};
goog.string.collapseWhitespace = function(str) {
  return str.replace(/[\s\xa0]+/g, " ").replace(/^\s+|\s+$/g, "");
};
goog.string.isEmpty = function(str) {
  return/^[\s\xa0]*$/.test(str);
};
goog.string.isEmptySafe = function(str) {
  return goog.string.isEmpty(goog.string.makeSafe(str));
};
goog.string.isBreakingWhitespace = function(str) {
  return!/[^\t\n\r ]/.test(str);
};
goog.string.isAlpha = function(str) {
  return!/[^a-zA-Z]/.test(str);
};
goog.string.isNumeric = function(str) {
  return!/[^0-9]/.test(str);
};
goog.string.isAlphaNumeric = function(str) {
  return!/[^a-zA-Z0-9]/.test(str);
};
goog.string.isSpace = function(ch) {
  return ch == " ";
};
goog.string.isUnicodeChar = function(ch) {
  return ch.length == 1 && ch >= " " && ch <= "~" || ch >= "\u0080" && ch <= "\ufffd";
};
goog.string.stripNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)+/g, " ");
};
goog.string.canonicalizeNewlines = function(str) {
  return str.replace(/(\r\n|\r|\n)/g, "\n");
};
goog.string.normalizeWhitespace = function(str) {
  return str.replace(/\xa0|\s/g, " ");
};
goog.string.normalizeSpaces = function(str) {
  return str.replace(/\xa0|[ \t]+/g, " ");
};
goog.string.collapseBreakingSpaces = function(str) {
  return str.replace(/[\t\r\n ]+/g, " ").replace(/^[\t\r\n ]+|[\t\r\n ]+$/g, "");
};
goog.string.trim = function(str) {
  return str.replace(/^[\s\xa0]+|[\s\xa0]+$/g, "");
};
goog.string.trimLeft = function(str) {
  return str.replace(/^[\s\xa0]+/, "");
};
goog.string.trimRight = function(str) {
  return str.replace(/[\s\xa0]+$/, "");
};
goog.string.caseInsensitiveCompare = function(str1, str2) {
  var test1 = String(str1).toLowerCase();
  var test2 = String(str2).toLowerCase();
  if (test1 < test2) {
    return-1;
  } else {
    if (test1 == test2) {
      return 0;
    } else {
      return 1;
    }
  }
};
goog.string.numerateCompareRegExp_ = /(\.\d+)|(\d+)|(\D+)/g;
goog.string.numerateCompare = function(str1, str2) {
  if (str1 == str2) {
    return 0;
  }
  if (!str1) {
    return-1;
  }
  if (!str2) {
    return 1;
  }
  var tokens1 = str1.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var tokens2 = str2.toLowerCase().match(goog.string.numerateCompareRegExp_);
  var count = Math.min(tokens1.length, tokens2.length);
  for (var i = 0;i < count;i++) {
    var a = tokens1[i];
    var b = tokens2[i];
    if (a != b) {
      var num1 = parseInt(a, 10);
      if (!isNaN(num1)) {
        var num2 = parseInt(b, 10);
        if (!isNaN(num2) && num1 - num2) {
          return num1 - num2;
        }
      }
      return a < b ? -1 : 1;
    }
  }
  if (tokens1.length != tokens2.length) {
    return tokens1.length - tokens2.length;
  }
  return str1 < str2 ? -1 : 1;
};
goog.string.urlEncode = function(str) {
  return encodeURIComponent(String(str));
};
goog.string.urlDecode = function(str) {
  return decodeURIComponent(str.replace(/\+/g, " "));
};
goog.string.newLineToBr = function(str, opt_xml) {
  return str.replace(/(\r\n|\r|\n)/g, opt_xml ? "\x3cbr /\x3e" : "\x3cbr\x3e");
};
goog.string.htmlEscape = function(str, opt_isLikelyToContainHtmlChars) {
  if (opt_isLikelyToContainHtmlChars) {
    str = str.replace(goog.string.AMP_RE_, "\x26amp;").replace(goog.string.LT_RE_, "\x26lt;").replace(goog.string.GT_RE_, "\x26gt;").replace(goog.string.QUOT_RE_, "\x26quot;").replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;").replace(goog.string.NULL_RE_, "\x26#0;");
    if (goog.string.DETECT_DOUBLE_ESCAPING) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  } else {
    if (!goog.string.ALL_RE_.test(str)) {
      return str;
    }
    if (str.indexOf("\x26") != -1) {
      str = str.replace(goog.string.AMP_RE_, "\x26amp;");
    }
    if (str.indexOf("\x3c") != -1) {
      str = str.replace(goog.string.LT_RE_, "\x26lt;");
    }
    if (str.indexOf("\x3e") != -1) {
      str = str.replace(goog.string.GT_RE_, "\x26gt;");
    }
    if (str.indexOf('"') != -1) {
      str = str.replace(goog.string.QUOT_RE_, "\x26quot;");
    }
    if (str.indexOf("'") != -1) {
      str = str.replace(goog.string.SINGLE_QUOTE_RE_, "\x26#39;");
    }
    if (str.indexOf("\x00") != -1) {
      str = str.replace(goog.string.NULL_RE_, "\x26#0;");
    }
    if (goog.string.DETECT_DOUBLE_ESCAPING && str.indexOf("e") != -1) {
      str = str.replace(goog.string.E_RE_, "\x26#101;");
    }
    return str;
  }
};
goog.string.AMP_RE_ = /&/g;
goog.string.LT_RE_ = /</g;
goog.string.GT_RE_ = />/g;
goog.string.QUOT_RE_ = /"/g;
goog.string.SINGLE_QUOTE_RE_ = /'/g;
goog.string.NULL_RE_ = /\x00/g;
goog.string.E_RE_ = /e/g;
goog.string.ALL_RE_ = goog.string.DETECT_DOUBLE_ESCAPING ? /[\x00&<>"'e]/ : /[\x00&<>"']/;
goog.string.unescapeEntities = function(str) {
  if (goog.string.contains(str, "\x26")) {
    if ("document" in goog.global) {
      return goog.string.unescapeEntitiesUsingDom_(str);
    } else {
      return goog.string.unescapePureXmlEntities_(str);
    }
  }
  return str;
};
goog.string.unescapeEntitiesWithDocument = function(str, document) {
  if (goog.string.contains(str, "\x26")) {
    return goog.string.unescapeEntitiesUsingDom_(str, document);
  }
  return str;
};
goog.string.unescapeEntitiesUsingDom_ = function(str, opt_document) {
  var seen = {"\x26amp;":"\x26", "\x26lt;":"\x3c", "\x26gt;":"\x3e", "\x26quot;":'"'};
  var div;
  if (opt_document) {
    div = opt_document.createElement("div");
  } else {
    div = goog.global.document.createElement("div");
  }
  return str.replace(goog.string.HTML_ENTITY_PATTERN_, function(s, entity) {
    var value = seen[s];
    if (value) {
      return value;
    }
    if (entity.charAt(0) == "#") {
      var n = Number("0" + entity.substr(1));
      if (!isNaN(n)) {
        value = String.fromCharCode(n);
      }
    }
    if (!value) {
      div.innerHTML = s + " ";
      value = div.firstChild.nodeValue.slice(0, -1);
    }
    return seen[s] = value;
  });
};
goog.string.unescapePureXmlEntities_ = function(str) {
  return str.replace(/&([^;]+);/g, function(s, entity) {
    switch(entity) {
      case "amp":
        return "\x26";
      case "lt":
        return "\x3c";
      case "gt":
        return "\x3e";
      case "quot":
        return'"';
      default:
        if (entity.charAt(0) == "#") {
          var n = Number("0" + entity.substr(1));
          if (!isNaN(n)) {
            return String.fromCharCode(n);
          }
        }
        return s;
    }
  });
};
goog.string.HTML_ENTITY_PATTERN_ = /&([^;\s<&]+);?/g;
goog.string.whitespaceEscape = function(str, opt_xml) {
  return goog.string.newLineToBr(str.replace(/  /g, " \x26#160;"), opt_xml);
};
goog.string.preserveSpaces = function(str) {
  return str.replace(/(^|[\n ]) /g, "$1" + goog.string.Unicode.NBSP);
};
goog.string.stripQuotes = function(str, quoteChars) {
  var length = quoteChars.length;
  for (var i = 0;i < length;i++) {
    var quoteChar = length == 1 ? quoteChars : quoteChars.charAt(i);
    if (str.charAt(0) == quoteChar && str.charAt(str.length - 1) == quoteChar) {
      return str.substring(1, str.length - 1);
    }
  }
  return str;
};
goog.string.truncate = function(str, chars, opt_protectEscapedCharacters) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (str.length > chars) {
    str = str.substring(0, chars - 3) + "...";
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.truncateMiddle = function(str, chars, opt_protectEscapedCharacters, opt_trailingChars) {
  if (opt_protectEscapedCharacters) {
    str = goog.string.unescapeEntities(str);
  }
  if (opt_trailingChars && str.length > chars) {
    if (opt_trailingChars > chars) {
      opt_trailingChars = chars;
    }
    var endPoint = str.length - opt_trailingChars;
    var startPoint = chars - opt_trailingChars;
    str = str.substring(0, startPoint) + "..." + str.substring(endPoint);
  } else {
    if (str.length > chars) {
      var half = Math.floor(chars / 2);
      var endPos = str.length - half;
      half += chars % 2;
      str = str.substring(0, half) + "..." + str.substring(endPos);
    }
  }
  if (opt_protectEscapedCharacters) {
    str = goog.string.htmlEscape(str);
  }
  return str;
};
goog.string.specialEscapeChars_ = {"\x00":"\\0", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t", "\x0B":"\\x0B", '"':'\\"', "\\":"\\\\"};
goog.string.jsEscapeCache_ = {"'":"\\'"};
goog.string.quote = function(s) {
  s = String(s);
  if (s.quote) {
    return s.quote();
  } else {
    var sb = ['"'];
    for (var i = 0;i < s.length;i++) {
      var ch = s.charAt(i);
      var cc = ch.charCodeAt(0);
      sb[i + 1] = goog.string.specialEscapeChars_[ch] || (cc > 31 && cc < 127 ? ch : goog.string.escapeChar(ch));
    }
    sb.push('"');
    return sb.join("");
  }
};
goog.string.escapeString = function(str) {
  var sb = [];
  for (var i = 0;i < str.length;i++) {
    sb[i] = goog.string.escapeChar(str.charAt(i));
  }
  return sb.join("");
};
goog.string.escapeChar = function(c) {
  if (c in goog.string.jsEscapeCache_) {
    return goog.string.jsEscapeCache_[c];
  }
  if (c in goog.string.specialEscapeChars_) {
    return goog.string.jsEscapeCache_[c] = goog.string.specialEscapeChars_[c];
  }
  var rv = c;
  var cc = c.charCodeAt(0);
  if (cc > 31 && cc < 127) {
    rv = c;
  } else {
    if (cc < 256) {
      rv = "\\x";
      if (cc < 16 || cc > 256) {
        rv += "0";
      }
    } else {
      rv = "\\u";
      if (cc < 4096) {
        rv += "0";
      }
    }
    rv += cc.toString(16).toUpperCase();
  }
  return goog.string.jsEscapeCache_[c] = rv;
};
goog.string.toMap = function(s) {
  var rv = {};
  for (var i = 0;i < s.length;i++) {
    rv[s.charAt(i)] = true;
  }
  return rv;
};
goog.string.contains = function(str, subString) {
  return str.indexOf(subString) != -1;
};
goog.string.caseInsensitiveContains = function(str, subString) {
  return goog.string.contains(str.toLowerCase(), subString.toLowerCase());
};
goog.string.countOf = function(s, ss) {
  return s && ss ? s.split(ss).length - 1 : 0;
};
goog.string.removeAt = function(s, index, stringLength) {
  var resultStr = s;
  if (index >= 0 && index < s.length && stringLength > 0) {
    resultStr = s.substr(0, index) + s.substr(index + stringLength, s.length - index - stringLength);
  }
  return resultStr;
};
goog.string.remove = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "");
  return s.replace(re, "");
};
goog.string.removeAll = function(s, ss) {
  var re = new RegExp(goog.string.regExpEscape(ss), "g");
  return s.replace(re, "");
};
goog.string.regExpEscape = function(s) {
  return String(s).replace(/([-()\[\]{}+?*.$\^|,:#<!\\])/g, "\\$1").replace(/\x08/g, "\\x08");
};
goog.string.repeat = function(string, length) {
  return(new Array(length + 1)).join(string);
};
goog.string.padNumber = function(num, length, opt_precision) {
  var s = goog.isDef(opt_precision) ? num.toFixed(opt_precision) : String(num);
  var index = s.indexOf(".");
  if (index == -1) {
    index = s.length;
  }
  return goog.string.repeat("0", Math.max(0, length - index)) + s;
};
goog.string.makeSafe = function(obj) {
  return obj == null ? "" : String(obj);
};
goog.string.buildString = function(var_args) {
  return Array.prototype.join.call(arguments, "");
};
goog.string.getRandomString = function() {
  var x = 2147483648;
  return Math.floor(Math.random() * x).toString(36) + Math.abs(Math.floor(Math.random() * x) ^ goog.now()).toString(36);
};
goog.string.compareVersions = function(version1, version2) {
  var order = 0;
  var v1Subs = goog.string.trim(String(version1)).split(".");
  var v2Subs = goog.string.trim(String(version2)).split(".");
  var subCount = Math.max(v1Subs.length, v2Subs.length);
  for (var subIdx = 0;order == 0 && subIdx < subCount;subIdx++) {
    var v1Sub = v1Subs[subIdx] || "";
    var v2Sub = v2Subs[subIdx] || "";
    var v1CompParser = new RegExp("(\\d*)(\\D*)", "g");
    var v2CompParser = new RegExp("(\\d*)(\\D*)", "g");
    do {
      var v1Comp = v1CompParser.exec(v1Sub) || ["", "", ""];
      var v2Comp = v2CompParser.exec(v2Sub) || ["", "", ""];
      if (v1Comp[0].length == 0 && v2Comp[0].length == 0) {
        break;
      }
      var v1CompNum = v1Comp[1].length == 0 ? 0 : parseInt(v1Comp[1], 10);
      var v2CompNum = v2Comp[1].length == 0 ? 0 : parseInt(v2Comp[1], 10);
      order = goog.string.compareElements_(v1CompNum, v2CompNum) || goog.string.compareElements_(v1Comp[2].length == 0, v2Comp[2].length == 0) || goog.string.compareElements_(v1Comp[2], v2Comp[2]);
    } while (order == 0);
  }
  return order;
};
goog.string.compareElements_ = function(left, right) {
  if (left < right) {
    return-1;
  } else {
    if (left > right) {
      return 1;
    }
  }
  return 0;
};
goog.string.HASHCODE_MAX_ = 4294967296;
goog.string.hashCode = function(str) {
  var result = 0;
  for (var i = 0;i < str.length;++i) {
    result = 31 * result + str.charCodeAt(i);
    result %= goog.string.HASHCODE_MAX_;
  }
  return result;
};
goog.string.uniqueStringCounter_ = Math.random() * 2147483648 | 0;
goog.string.createUniqueString = function() {
  return "goog_" + goog.string.uniqueStringCounter_++;
};
goog.string.toNumber = function(str) {
  var num = Number(str);
  if (num == 0 && goog.string.isEmpty(str)) {
    return NaN;
  }
  return num;
};
goog.string.isLowerCamelCase = function(str) {
  return/^[a-z]+([A-Z][a-z]*)*$/.test(str);
};
goog.string.isUpperCamelCase = function(str) {
  return/^([A-Z][a-z]*)+$/.test(str);
};
goog.string.toCamelCase = function(str) {
  return String(str).replace(/\-([a-z])/g, function(all, match) {
    return match.toUpperCase();
  });
};
goog.string.toSelectorCase = function(str) {
  return String(str).replace(/([A-Z])/g, "-$1").toLowerCase();
};
goog.string.toTitleCase = function(str, opt_delimiters) {
  var delimiters = goog.isString(opt_delimiters) ? goog.string.regExpEscape(opt_delimiters) : "\\s";
  delimiters = delimiters ? "|[" + delimiters + "]+" : "";
  var regexp = new RegExp("(^" + delimiters + ")([a-z])", "g");
  return str.replace(regexp, function(all, p1, p2) {
    return p1 + p2.toUpperCase();
  });
};
goog.string.parseInt = function(value) {
  if (isFinite(value)) {
    value = String(value);
  }
  if (goog.isString(value)) {
    return/^\s*-?0x/i.test(value) ? parseInt(value, 16) : parseInt(value, 10);
  }
  return NaN;
};
goog.string.splitLimit = function(str, separator, limit) {
  var parts = str.split(separator);
  var returnVal = [];
  while (limit > 0 && parts.length) {
    returnVal.push(parts.shift());
    limit--;
  }
  if (parts.length) {
    returnVal.push(parts.join(separator));
  }
  return returnVal;
};
goog.provide("goog.asserts");
goog.provide("goog.asserts.AssertionError");
goog.require("goog.debug.Error");
goog.require("goog.dom.NodeType");
goog.require("goog.string");
goog.define("goog.asserts.ENABLE_ASSERTS", goog.DEBUG);
goog.asserts.AssertionError = function(messagePattern, messageArgs) {
  messageArgs.unshift(messagePattern);
  goog.debug.Error.call(this, goog.string.subs.apply(null, messageArgs));
  messageArgs.shift();
  this.messagePattern = messagePattern;
};
goog.inherits(goog.asserts.AssertionError, goog.debug.Error);
goog.asserts.AssertionError.prototype.name = "AssertionError";
goog.asserts.DEFAULT_ERROR_HANDLER = function(e) {
  throw e;
};
goog.asserts.errorHandler_ = goog.asserts.DEFAULT_ERROR_HANDLER;
goog.asserts.doAssertFailure_ = function(defaultMessage, defaultArgs, givenMessage, givenArgs) {
  var message = "Assertion failed";
  if (givenMessage) {
    message += ": " + givenMessage;
    var args = givenArgs;
  } else {
    if (defaultMessage) {
      message += ": " + defaultMessage;
      args = defaultArgs;
    }
  }
  var e = new goog.asserts.AssertionError("" + message, args || []);
  goog.asserts.errorHandler_(e);
};
goog.asserts.setErrorHandler = function(errorHandler) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_ = errorHandler;
  }
};
goog.asserts.assert = function(condition, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !condition) {
    goog.asserts.doAssertFailure_("", null, opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return condition;
};
goog.asserts.fail = function(opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS) {
    goog.asserts.errorHandler_(new goog.asserts.AssertionError("Failure" + (opt_message ? ": " + opt_message : ""), Array.prototype.slice.call(arguments, 1)));
  }
};
goog.asserts.assertNumber = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isNumber(value)) {
    goog.asserts.doAssertFailure_("Expected number but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertString = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isString(value)) {
    goog.asserts.doAssertFailure_("Expected string but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertFunction = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isFunction(value)) {
    goog.asserts.doAssertFailure_("Expected function but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertObject = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isObject(value)) {
    goog.asserts.doAssertFailure_("Expected object but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertArray = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isArray(value)) {
    goog.asserts.doAssertFailure_("Expected array but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertBoolean = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !goog.isBoolean(value)) {
    goog.asserts.doAssertFailure_("Expected boolean but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertElement = function(value, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && (!goog.isObject(value) || value.nodeType != goog.dom.NodeType.ELEMENT)) {
    goog.asserts.doAssertFailure_("Expected Element but got %s: %s.", [goog.typeOf(value), value], opt_message, Array.prototype.slice.call(arguments, 2));
  }
  return(value);
};
goog.asserts.assertInstanceof = function(value, type, opt_message, var_args) {
  if (goog.asserts.ENABLE_ASSERTS && !(value instanceof type)) {
    goog.asserts.doAssertFailure_("instanceof check failed.", null, opt_message, Array.prototype.slice.call(arguments, 3));
  }
  return value;
};
goog.asserts.assertObjectPrototypeIsIntact = function() {
  for (var key in Object.prototype) {
    goog.asserts.fail(key + " should not be enumerable in Object.prototype.");
  }
};
goog.provide("goog.array");
goog.provide("goog.array.ArrayLike");
goog.require("goog.asserts");
goog.define("goog.NATIVE_ARRAY_PROTOTYPES", goog.TRUSTED_SITE);
goog.define("goog.array.ASSUME_NATIVE_FUNCTIONS", false);
goog.array.ArrayLike;
goog.array.peek = function(array) {
  return array[array.length - 1];
};
goog.array.last = goog.array.peek;
goog.array.ARRAY_PROTOTYPE_ = Array.prototype;
goog.array.indexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.indexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.indexOf.call(arr, obj, opt_fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? 0 : opt_fromIndex < 0 ? Math.max(0, arr.length + opt_fromIndex) : opt_fromIndex;
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return-1;
    }
    return arr.indexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i < arr.length;i++) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return-1;
};
goog.array.lastIndexOf = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.lastIndexOf) ? function(arr, obj, opt_fromIndex) {
  goog.asserts.assert(arr.length != null);
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  return goog.array.ARRAY_PROTOTYPE_.lastIndexOf.call(arr, obj, fromIndex);
} : function(arr, obj, opt_fromIndex) {
  var fromIndex = opt_fromIndex == null ? arr.length - 1 : opt_fromIndex;
  if (fromIndex < 0) {
    fromIndex = Math.max(0, arr.length + fromIndex);
  }
  if (goog.isString(arr)) {
    if (!goog.isString(obj) || obj.length != 1) {
      return-1;
    }
    return arr.lastIndexOf(obj, fromIndex);
  }
  for (var i = fromIndex;i >= 0;i--) {
    if (i in arr && arr[i] === obj) {
      return i;
    }
  }
  return-1;
};
goog.array.forEach = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.forEach) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  goog.array.ARRAY_PROTOTYPE_.forEach.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.forEachRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;--i) {
    if (i in arr2) {
      f.call(opt_obj, arr2[i], i, arr);
    }
  }
};
goog.array.filter = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.filter) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.filter.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = [];
  var resLength = 0;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      var val = arr2[i];
      if (f.call(opt_obj, val, i, arr)) {
        res[resLength++] = val;
      }
    }
  }
  return res;
};
goog.array.map = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.map) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.map.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var res = new Array(l);
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2) {
      res[i] = f.call(opt_obj, arr2[i], i, arr);
    }
  }
  return res;
};
goog.array.reduce = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduce) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduce.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEach(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.reduceRight = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.reduceRight) ? function(arr, f, val, opt_obj) {
  goog.asserts.assert(arr.length != null);
  if (opt_obj) {
    f = goog.bind(f, opt_obj);
  }
  return goog.array.ARRAY_PROTOTYPE_.reduceRight.call(arr, f, val);
} : function(arr, f, val, opt_obj) {
  var rval = val;
  goog.array.forEachRight(arr, function(val, index) {
    rval = f.call(opt_obj, rval, val, index, arr);
  });
  return rval;
};
goog.array.some = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.some) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.some.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return true;
    }
  }
  return false;
};
goog.array.every = goog.NATIVE_ARRAY_PROTOTYPES && (goog.array.ASSUME_NATIVE_FUNCTIONS || goog.array.ARRAY_PROTOTYPE_.every) ? function(arr, f, opt_obj) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.every.call(arr, f, opt_obj);
} : function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && !f.call(opt_obj, arr2[i], i, arr)) {
      return false;
    }
  }
  return true;
};
goog.array.count = function(arr, f, opt_obj) {
  var count = 0;
  goog.array.forEach(arr, function(element, index, arr) {
    if (f.call(opt_obj, element, index, arr)) {
      ++count;
    }
  }, opt_obj);
  return count;
};
goog.array.find = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndex = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = 0;i < l;i++) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return-1;
};
goog.array.findRight = function(arr, f, opt_obj) {
  var i = goog.array.findIndexRight(arr, f, opt_obj);
  return i < 0 ? null : goog.isString(arr) ? arr.charAt(i) : arr[i];
};
goog.array.findIndexRight = function(arr, f, opt_obj) {
  var l = arr.length;
  var arr2 = goog.isString(arr) ? arr.split("") : arr;
  for (var i = l - 1;i >= 0;i--) {
    if (i in arr2 && f.call(opt_obj, arr2[i], i, arr)) {
      return i;
    }
  }
  return-1;
};
goog.array.contains = function(arr, obj) {
  return goog.array.indexOf(arr, obj) >= 0;
};
goog.array.isEmpty = function(arr) {
  return arr.length == 0;
};
goog.array.clear = function(arr) {
  if (!goog.isArray(arr)) {
    for (var i = arr.length - 1;i >= 0;i--) {
      delete arr[i];
    }
  }
  arr.length = 0;
};
goog.array.insert = function(arr, obj) {
  if (!goog.array.contains(arr, obj)) {
    arr.push(obj);
  }
};
goog.array.insertAt = function(arr, obj, opt_i) {
  goog.array.splice(arr, opt_i, 0, obj);
};
goog.array.insertArrayAt = function(arr, elementsToAdd, opt_i) {
  goog.partial(goog.array.splice, arr, opt_i, 0).apply(null, elementsToAdd);
};
goog.array.insertBefore = function(arr, obj, opt_obj2) {
  var i;
  if (arguments.length == 2 || (i = goog.array.indexOf(arr, opt_obj2)) < 0) {
    arr.push(obj);
  } else {
    goog.array.insertAt(arr, obj, i);
  }
};
goog.array.remove = function(arr, obj) {
  var i = goog.array.indexOf(arr, obj);
  var rv;
  if (rv = i >= 0) {
    goog.array.removeAt(arr, i);
  }
  return rv;
};
goog.array.removeAt = function(arr, i) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.call(arr, i, 1).length == 1;
};
goog.array.removeIf = function(arr, f, opt_obj) {
  var i = goog.array.findIndex(arr, f, opt_obj);
  if (i >= 0) {
    goog.array.removeAt(arr, i);
    return true;
  }
  return false;
};
goog.array.concat = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.join = function(var_args) {
  return goog.array.ARRAY_PROTOTYPE_.concat.apply(goog.array.ARRAY_PROTOTYPE_, arguments);
};
goog.array.toArray = function(object) {
  var length = object.length;
  if (length > 0) {
    var rv = new Array(length);
    for (var i = 0;i < length;i++) {
      rv[i] = object[i];
    }
    return rv;
  }
  return[];
};
goog.array.clone = goog.array.toArray;
goog.array.extend = function(arr1, var_args) {
  for (var i = 1;i < arguments.length;i++) {
    var arr2 = arguments[i];
    var isArrayLike;
    if (goog.isArray(arr2) || (isArrayLike = goog.isArrayLike(arr2)) && Object.prototype.hasOwnProperty.call(arr2, "callee")) {
      arr1.push.apply(arr1, arr2);
    } else {
      if (isArrayLike) {
        var len1 = arr1.length;
        var len2 = arr2.length;
        for (var j = 0;j < len2;j++) {
          arr1[len1 + j] = arr2[j];
        }
      } else {
        arr1.push(arr2);
      }
    }
  }
};
goog.array.splice = function(arr, index, howMany, var_args) {
  goog.asserts.assert(arr.length != null);
  return goog.array.ARRAY_PROTOTYPE_.splice.apply(arr, goog.array.slice(arguments, 1));
};
goog.array.slice = function(arr, start, opt_end) {
  goog.asserts.assert(arr.length != null);
  if (arguments.length <= 2) {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start);
  } else {
    return goog.array.ARRAY_PROTOTYPE_.slice.call(arr, start, opt_end);
  }
};
goog.array.removeDuplicates = function(arr, opt_rv, opt_hashFn) {
  var returnArray = opt_rv || arr;
  var defaultHashFn = function(item) {
    return goog.isObject(current) ? "o" + goog.getUid(current) : (typeof current).charAt(0) + current;
  };
  var hashFn = opt_hashFn || defaultHashFn;
  var seen = {}, cursorInsert = 0, cursorRead = 0;
  while (cursorRead < arr.length) {
    var current = arr[cursorRead++];
    var key = hashFn(current);
    if (!Object.prototype.hasOwnProperty.call(seen, key)) {
      seen[key] = true;
      returnArray[cursorInsert++] = current;
    }
  }
  returnArray.length = cursorInsert;
};
goog.array.binarySearch = function(arr, target, opt_compareFn) {
  return goog.array.binarySearch_(arr, opt_compareFn || goog.array.defaultCompare, false, target);
};
goog.array.binarySelect = function(arr, evaluator, opt_obj) {
  return goog.array.binarySearch_(arr, evaluator, true, undefined, opt_obj);
};
goog.array.binarySearch_ = function(arr, compareFn, isEvaluator, opt_target, opt_selfObj) {
  var left = 0;
  var right = arr.length;
  var found;
  while (left < right) {
    var middle = left + right >> 1;
    var compareResult;
    if (isEvaluator) {
      compareResult = compareFn.call(opt_selfObj, arr[middle], middle, arr);
    } else {
      compareResult = compareFn(opt_target, arr[middle]);
    }
    if (compareResult > 0) {
      left = middle + 1;
    } else {
      right = middle;
      found = !compareResult;
    }
  }
  return found ? left : ~left;
};
goog.array.sort = function(arr, opt_compareFn) {
  arr.sort(opt_compareFn || goog.array.defaultCompare);
};
goog.array.stableSort = function(arr, opt_compareFn) {
  for (var i = 0;i < arr.length;i++) {
    arr[i] = {index:i, value:arr[i]};
  }
  var valueCompareFn = opt_compareFn || goog.array.defaultCompare;
  function stableCompareFn(obj1, obj2) {
    return valueCompareFn(obj1.value, obj2.value) || obj1.index - obj2.index;
  }
  goog.array.sort(arr, stableCompareFn);
  for (var i = 0;i < arr.length;i++) {
    arr[i] = arr[i].value;
  }
};
goog.array.sortObjectsByKey = function(arr, key, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  goog.array.sort(arr, function(a, b) {
    return compare(a[key], b[key]);
  });
};
goog.array.isSorted = function(arr, opt_compareFn, opt_strict) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  for (var i = 1;i < arr.length;i++) {
    var compareResult = compare(arr[i - 1], arr[i]);
    if (compareResult > 0 || compareResult == 0 && opt_strict) {
      return false;
    }
  }
  return true;
};
goog.array.equals = function(arr1, arr2, opt_equalsFn) {
  if (!goog.isArrayLike(arr1) || !goog.isArrayLike(arr2) || arr1.length != arr2.length) {
    return false;
  }
  var l = arr1.length;
  var equalsFn = opt_equalsFn || goog.array.defaultCompareEquality;
  for (var i = 0;i < l;i++) {
    if (!equalsFn(arr1[i], arr2[i])) {
      return false;
    }
  }
  return true;
};
goog.array.compare3 = function(arr1, arr2, opt_compareFn) {
  var compare = opt_compareFn || goog.array.defaultCompare;
  var l = Math.min(arr1.length, arr2.length);
  for (var i = 0;i < l;i++) {
    var result = compare(arr1[i], arr2[i]);
    if (result != 0) {
      return result;
    }
  }
  return goog.array.defaultCompare(arr1.length, arr2.length);
};
goog.array.defaultCompare = function(a, b) {
  return a > b ? 1 : a < b ? -1 : 0;
};
goog.array.defaultCompareEquality = function(a, b) {
  return a === b;
};
goog.array.binaryInsert = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  if (index < 0) {
    goog.array.insertAt(array, value, -(index + 1));
    return true;
  }
  return false;
};
goog.array.binaryRemove = function(array, value, opt_compareFn) {
  var index = goog.array.binarySearch(array, value, opt_compareFn);
  return index >= 0 ? goog.array.removeAt(array, index) : false;
};
goog.array.bucket = function(array, sorter, opt_obj) {
  var buckets = {};
  for (var i = 0;i < array.length;i++) {
    var value = array[i];
    var key = sorter.call(opt_obj, value, i, array);
    if (goog.isDef(key)) {
      var bucket = buckets[key] || (buckets[key] = []);
      bucket.push(value);
    }
  }
  return buckets;
};
goog.array.toObject = function(arr, keyFunc, opt_obj) {
  var ret = {};
  goog.array.forEach(arr, function(element, index) {
    ret[keyFunc.call(opt_obj, element, index, arr)] = element;
  });
  return ret;
};
goog.array.range = function(startOrEnd, opt_end, opt_step) {
  var array = [];
  var start = 0;
  var end = startOrEnd;
  var step = opt_step || 1;
  if (opt_end !== undefined) {
    start = startOrEnd;
    end = opt_end;
  }
  if (step * (end - start) < 0) {
    return[];
  }
  if (step > 0) {
    for (var i = start;i < end;i += step) {
      array.push(i);
    }
  } else {
    for (var i = start;i > end;i += step) {
      array.push(i);
    }
  }
  return array;
};
goog.array.repeat = function(value, n) {
  var array = [];
  for (var i = 0;i < n;i++) {
    array[i] = value;
  }
  return array;
};
goog.array.flatten = function(var_args) {
  var result = [];
  for (var i = 0;i < arguments.length;i++) {
    var element = arguments[i];
    if (goog.isArray(element)) {
      result.push.apply(result, goog.array.flatten.apply(null, element));
    } else {
      result.push(element);
    }
  }
  return result;
};
goog.array.rotate = function(array, n) {
  goog.asserts.assert(array.length != null);
  if (array.length) {
    n %= array.length;
    if (n > 0) {
      goog.array.ARRAY_PROTOTYPE_.unshift.apply(array, array.splice(-n, n));
    } else {
      if (n < 0) {
        goog.array.ARRAY_PROTOTYPE_.push.apply(array, array.splice(0, -n));
      }
    }
  }
  return array;
};
goog.array.moveItem = function(arr, fromIndex, toIndex) {
  goog.asserts.assert(fromIndex >= 0 && fromIndex < arr.length);
  goog.asserts.assert(toIndex >= 0 && toIndex < arr.length);
  var removedItems = goog.array.ARRAY_PROTOTYPE_.splice.call(arr, fromIndex, 1);
  goog.array.ARRAY_PROTOTYPE_.splice.call(arr, toIndex, 0, removedItems[0]);
};
goog.array.zip = function(var_args) {
  if (!arguments.length) {
    return[];
  }
  var result = [];
  for (var i = 0;true;i++) {
    var value = [];
    for (var j = 0;j < arguments.length;j++) {
      var arr = arguments[j];
      if (i >= arr.length) {
        return result;
      }
      value.push(arr[i]);
    }
    result.push(value);
  }
};
goog.array.shuffle = function(arr, opt_randFn) {
  var randFn = opt_randFn || Math.random;
  for (var i = arr.length - 1;i > 0;i--) {
    var j = Math.floor(randFn() * (i + 1));
    var tmp = arr[i];
    arr[i] = arr[j];
    arr[j] = tmp;
  }
};
goog.provide("goog.object");
goog.object.forEach = function(obj, f, opt_obj) {
  for (var key in obj) {
    f.call(opt_obj, obj[key], key, obj);
  }
};
goog.object.filter = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      res[key] = obj[key];
    }
  }
  return res;
};
goog.object.map = function(obj, f, opt_obj) {
  var res = {};
  for (var key in obj) {
    res[key] = f.call(opt_obj, obj[key], key, obj);
  }
  return res;
};
goog.object.some = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (f.call(opt_obj, obj[key], key, obj)) {
      return true;
    }
  }
  return false;
};
goog.object.every = function(obj, f, opt_obj) {
  for (var key in obj) {
    if (!f.call(opt_obj, obj[key], key, obj)) {
      return false;
    }
  }
  return true;
};
goog.object.getCount = function(obj) {
  var rv = 0;
  for (var key in obj) {
    rv++;
  }
  return rv;
};
goog.object.getAnyKey = function(obj) {
  for (var key in obj) {
    return key;
  }
};
goog.object.getAnyValue = function(obj) {
  for (var key in obj) {
    return obj[key];
  }
};
goog.object.contains = function(obj, val) {
  return goog.object.containsValue(obj, val);
};
goog.object.getValues = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = obj[key];
  }
  return res;
};
goog.object.getKeys = function(obj) {
  var res = [];
  var i = 0;
  for (var key in obj) {
    res[i++] = key;
  }
  return res;
};
goog.object.getValueByKeys = function(obj, var_args) {
  var isArrayLike = goog.isArrayLike(var_args);
  var keys = isArrayLike ? var_args : arguments;
  for (var i = isArrayLike ? 0 : 1;i < keys.length;i++) {
    obj = obj[keys[i]];
    if (!goog.isDef(obj)) {
      break;
    }
  }
  return obj;
};
goog.object.containsKey = function(obj, key) {
  return key in obj;
};
goog.object.containsValue = function(obj, val) {
  for (var key in obj) {
    if (obj[key] == val) {
      return true;
    }
  }
  return false;
};
goog.object.findKey = function(obj, f, opt_this) {
  for (var key in obj) {
    if (f.call(opt_this, obj[key], key, obj)) {
      return key;
    }
  }
  return undefined;
};
goog.object.findValue = function(obj, f, opt_this) {
  var key = goog.object.findKey(obj, f, opt_this);
  return key && obj[key];
};
goog.object.isEmpty = function(obj) {
  for (var key in obj) {
    return false;
  }
  return true;
};
goog.object.clear = function(obj) {
  for (var i in obj) {
    delete obj[i];
  }
};
goog.object.remove = function(obj, key) {
  var rv;
  if (rv = key in obj) {
    delete obj[key];
  }
  return rv;
};
goog.object.add = function(obj, key, val) {
  if (key in obj) {
    throw Error('The object already contains the key "' + key + '"');
  }
  goog.object.set(obj, key, val);
};
goog.object.get = function(obj, key, opt_val) {
  if (key in obj) {
    return obj[key];
  }
  return opt_val;
};
goog.object.set = function(obj, key, value) {
  obj[key] = value;
};
goog.object.setIfUndefined = function(obj, key, value) {
  return key in obj ? obj[key] : obj[key] = value;
};
goog.object.clone = function(obj) {
  var res = {};
  for (var key in obj) {
    res[key] = obj[key];
  }
  return res;
};
goog.object.unsafeClone = function(obj) {
  var type = goog.typeOf(obj);
  if (type == "object" || type == "array") {
    if (obj.clone) {
      return obj.clone();
    }
    var clone = type == "array" ? [] : {};
    for (var key in obj) {
      clone[key] = goog.object.unsafeClone(obj[key]);
    }
    return clone;
  }
  return obj;
};
goog.object.transpose = function(obj) {
  var transposed = {};
  for (var key in obj) {
    transposed[obj[key]] = key;
  }
  return transposed;
};
goog.object.PROTOTYPE_FIELDS_ = ["constructor", "hasOwnProperty", "isPrototypeOf", "propertyIsEnumerable", "toLocaleString", "toString", "valueOf"];
goog.object.extend = function(target, var_args) {
  var key, source;
  for (var i = 1;i < arguments.length;i++) {
    source = arguments[i];
    for (key in source) {
      target[key] = source[key];
    }
    for (var j = 0;j < goog.object.PROTOTYPE_FIELDS_.length;j++) {
      key = goog.object.PROTOTYPE_FIELDS_[j];
      if (Object.prototype.hasOwnProperty.call(source, key)) {
        target[key] = source[key];
      }
    }
  }
};
goog.object.create = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.create.apply(null, arguments[0]);
  }
  if (argLength % 2) {
    throw Error("Uneven number of arguments");
  }
  var rv = {};
  for (var i = 0;i < argLength;i += 2) {
    rv[arguments[i]] = arguments[i + 1];
  }
  return rv;
};
goog.object.createSet = function(var_args) {
  var argLength = arguments.length;
  if (argLength == 1 && goog.isArray(arguments[0])) {
    return goog.object.createSet.apply(null, arguments[0]);
  }
  var rv = {};
  for (var i = 0;i < argLength;i++) {
    rv[arguments[i]] = true;
  }
  return rv;
};
goog.object.createImmutableView = function(obj) {
  var result = obj;
  if (Object.isFrozen && !Object.isFrozen(obj)) {
    result = Object.create(obj);
    Object.freeze(result);
  }
  return result;
};
goog.object.isImmutableView = function(obj) {
  return!!Object.isFrozen && Object.isFrozen(obj);
};
goog.provide("goog.structs");
goog.require("goog.array");
goog.require("goog.object");
goog.structs.getCount = function(col) {
  if (typeof col.getCount == "function") {
    return col.getCount();
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return col.length;
  }
  return goog.object.getCount(col);
};
goog.structs.getValues = function(col) {
  if (typeof col.getValues == "function") {
    return col.getValues();
  }
  if (goog.isString(col)) {
    return col.split("");
  }
  if (goog.isArrayLike(col)) {
    var rv = [];
    var l = col.length;
    for (var i = 0;i < l;i++) {
      rv.push(col[i]);
    }
    return rv;
  }
  return goog.object.getValues(col);
};
goog.structs.getKeys = function(col) {
  if (typeof col.getKeys == "function") {
    return col.getKeys();
  }
  if (typeof col.getValues == "function") {
    return undefined;
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    var rv = [];
    var l = col.length;
    for (var i = 0;i < l;i++) {
      rv.push(i);
    }
    return rv;
  }
  return goog.object.getKeys(col);
};
goog.structs.contains = function(col, val) {
  if (typeof col.contains == "function") {
    return col.contains(val);
  }
  if (typeof col.containsValue == "function") {
    return col.containsValue(val);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.contains((col), val);
  }
  return goog.object.containsValue(col, val);
};
goog.structs.isEmpty = function(col) {
  if (typeof col.isEmpty == "function") {
    return col.isEmpty();
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.isEmpty((col));
  }
  return goog.object.isEmpty(col);
};
goog.structs.clear = function(col) {
  if (typeof col.clear == "function") {
    col.clear();
  } else {
    if (goog.isArrayLike(col)) {
      goog.array.clear((col));
    } else {
      goog.object.clear(col);
    }
  }
};
goog.structs.forEach = function(col, f, opt_obj) {
  if (typeof col.forEach == "function") {
    col.forEach(f, opt_obj);
  } else {
    if (goog.isArrayLike(col) || goog.isString(col)) {
      goog.array.forEach((col), f, opt_obj);
    } else {
      var keys = goog.structs.getKeys(col);
      var values = goog.structs.getValues(col);
      var l = values.length;
      for (var i = 0;i < l;i++) {
        f.call(opt_obj, values[i], keys && keys[i], col);
      }
    }
  }
};
goog.structs.filter = function(col, f, opt_obj) {
  if (typeof col.filter == "function") {
    return col.filter(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.filter((col), f, opt_obj);
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if (keys) {
    rv = {};
    for (var i = 0;i < l;i++) {
      if (f.call(opt_obj, values[i], keys[i], col)) {
        rv[keys[i]] = values[i];
      }
    }
  } else {
    rv = [];
    for (var i = 0;i < l;i++) {
      if (f.call(opt_obj, values[i], undefined, col)) {
        rv.push(values[i]);
      }
    }
  }
  return rv;
};
goog.structs.map = function(col, f, opt_obj) {
  if (typeof col.map == "function") {
    return col.map(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.map((col), f, opt_obj);
  }
  var rv;
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  if (keys) {
    rv = {};
    for (var i = 0;i < l;i++) {
      rv[keys[i]] = f.call(opt_obj, values[i], keys[i], col);
    }
  } else {
    rv = [];
    for (var i = 0;i < l;i++) {
      rv[i] = f.call(opt_obj, values[i], undefined, col);
    }
  }
  return rv;
};
goog.structs.some = function(col, f, opt_obj) {
  if (typeof col.some == "function") {
    return col.some(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.some((col), f, opt_obj);
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0;i < l;i++) {
    if (f.call(opt_obj, values[i], keys && keys[i], col)) {
      return true;
    }
  }
  return false;
};
goog.structs.every = function(col, f, opt_obj) {
  if (typeof col.every == "function") {
    return col.every(f, opt_obj);
  }
  if (goog.isArrayLike(col) || goog.isString(col)) {
    return goog.array.every((col), f, opt_obj);
  }
  var keys = goog.structs.getKeys(col);
  var values = goog.structs.getValues(col);
  var l = values.length;
  for (var i = 0;i < l;i++) {
    if (!f.call(opt_obj, values[i], keys && keys[i], col)) {
      return false;
    }
  }
  return true;
};
goog.provide("goog.functions");
goog.functions.constant = function(retValue) {
  return function() {
    return retValue;
  };
};
goog.functions.FALSE = goog.functions.constant(false);
goog.functions.TRUE = goog.functions.constant(true);
goog.functions.NULL = goog.functions.constant(null);
goog.functions.identity = function(opt_returnValue, var_args) {
  return opt_returnValue;
};
goog.functions.error = function(message) {
  return function() {
    throw Error(message);
  };
};
goog.functions.fail = function(err) {
  return function() {
    throw err;
  };
};
goog.functions.lock = function(f, opt_numArgs) {
  opt_numArgs = opt_numArgs || 0;
  return function() {
    return f.apply(this, Array.prototype.slice.call(arguments, 0, opt_numArgs));
  };
};
goog.functions.nth = function(n) {
  return function() {
    return arguments[n];
  };
};
goog.functions.withReturnValue = function(f, retValue) {
  return goog.functions.sequence(f, goog.functions.constant(retValue));
};
goog.functions.compose = function(fn, var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    var result;
    if (length) {
      result = functions[length - 1].apply(this, arguments);
    }
    for (var i = length - 2;i >= 0;i--) {
      result = functions[i].call(this, result);
    }
    return result;
  };
};
goog.functions.sequence = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    var result;
    for (var i = 0;i < length;i++) {
      result = functions[i].apply(this, arguments);
    }
    return result;
  };
};
goog.functions.and = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    for (var i = 0;i < length;i++) {
      if (!functions[i].apply(this, arguments)) {
        return false;
      }
    }
    return true;
  };
};
goog.functions.or = function(var_args) {
  var functions = arguments;
  var length = functions.length;
  return function() {
    for (var i = 0;i < length;i++) {
      if (functions[i].apply(this, arguments)) {
        return true;
      }
    }
    return false;
  };
};
goog.functions.not = function(f) {
  return function() {
    return!f.apply(this, arguments);
  };
};
goog.functions.create = function(constructor, var_args) {
  var temp = function() {
  };
  temp.prototype = constructor.prototype;
  var obj = new temp;
  constructor.apply(obj, Array.prototype.slice.call(arguments, 1));
  return obj;
};
goog.define("goog.functions.CACHE_RETURN_VALUE", true);
goog.functions.cacheReturnValue = function(fn) {
  var called = false;
  var value;
  return function() {
    if (!goog.functions.CACHE_RETURN_VALUE) {
      return fn();
    }
    if (!called) {
      value = fn();
      called = true;
    }
    return value;
  };
};
goog.provide("goog.math");
goog.require("goog.array");
goog.require("goog.asserts");
goog.math.randomInt = function(a) {
  return Math.floor(Math.random() * a);
};
goog.math.uniformRandom = function(a, b) {
  return a + Math.random() * (b - a);
};
goog.math.clamp = function(value, min, max) {
  return Math.min(Math.max(value, min), max);
};
goog.math.modulo = function(a, b) {
  var r = a % b;
  return r * b < 0 ? r + b : r;
};
goog.math.lerp = function(a, b, x) {
  return a + x * (b - a);
};
goog.math.nearlyEquals = function(a, b, opt_tolerance) {
  return Math.abs(a - b) <= (opt_tolerance || 1E-6);
};
goog.math.standardAngle = function(angle) {
  return goog.math.modulo(angle, 360);
};
goog.math.standardAngleInRadians = function(angle) {
  return goog.math.modulo(angle, 2 * Math.PI);
};
goog.math.toRadians = function(angleDegrees) {
  return angleDegrees * Math.PI / 180;
};
goog.math.toDegrees = function(angleRadians) {
  return angleRadians * 180 / Math.PI;
};
goog.math.angleDx = function(degrees, radius) {
  return radius * Math.cos(goog.math.toRadians(degrees));
};
goog.math.angleDy = function(degrees, radius) {
  return radius * Math.sin(goog.math.toRadians(degrees));
};
goog.math.angle = function(x1, y1, x2, y2) {
  return goog.math.standardAngle(goog.math.toDegrees(Math.atan2(y2 - y1, x2 - x1)));
};
goog.math.angleDifference = function(startAngle, endAngle) {
  var d = goog.math.standardAngle(endAngle) - goog.math.standardAngle(startAngle);
  if (d > 180) {
    d = d - 360;
  } else {
    if (d <= -180) {
      d = 360 + d;
    }
  }
  return d;
};
goog.math.sign = function(x) {
  return x == 0 ? 0 : x < 0 ? -1 : 1;
};
goog.math.longestCommonSubsequence = function(array1, array2, opt_compareFn, opt_collectorFn) {
  var compare = opt_compareFn || function(a, b) {
    return a == b;
  };
  var collect = opt_collectorFn || function(i1, i2) {
    return array1[i1];
  };
  var length1 = array1.length;
  var length2 = array2.length;
  var arr = [];
  for (var i = 0;i < length1 + 1;i++) {
    arr[i] = [];
    arr[i][0] = 0;
  }
  for (var j = 0;j < length2 + 1;j++) {
    arr[0][j] = 0;
  }
  for (i = 1;i <= length1;i++) {
    for (j = 1;j <= length2;j++) {
      if (compare(array1[i - 1], array2[j - 1])) {
        arr[i][j] = arr[i - 1][j - 1] + 1;
      } else {
        arr[i][j] = Math.max(arr[i - 1][j], arr[i][j - 1]);
      }
    }
  }
  var result = [];
  var i = length1, j = length2;
  while (i > 0 && j > 0) {
    if (compare(array1[i - 1], array2[j - 1])) {
      result.unshift(collect(i - 1, j - 1));
      i--;
      j--;
    } else {
      if (arr[i - 1][j] > arr[i][j - 1]) {
        i--;
      } else {
        j--;
      }
    }
  }
  return result;
};
goog.math.sum = function(var_args) {
  return(goog.array.reduce(arguments, function(sum, value) {
    return sum + value;
  }, 0));
};
goog.math.average = function(var_args) {
  return goog.math.sum.apply(null, arguments) / arguments.length;
};
goog.math.sampleVariance = function(var_args) {
  var sampleSize = arguments.length;
  if (sampleSize < 2) {
    return 0;
  }
  var mean = goog.math.average.apply(null, arguments);
  var variance = goog.math.sum.apply(null, goog.array.map(arguments, function(val) {
    return Math.pow(val - mean, 2);
  })) / (sampleSize - 1);
  return variance;
};
goog.math.standardDeviation = function(var_args) {
  return Math.sqrt(goog.math.sampleVariance.apply(null, arguments));
};
goog.math.isInt = function(num) {
  return isFinite(num) && num % 1 == 0;
};
goog.math.isFiniteNumber = function(num) {
  return isFinite(num) && !isNaN(num);
};
goog.math.log10Floor = function(num) {
  if (num > 0) {
    var x = Math.round(Math.log(num) * Math.LOG10E);
    return x - (parseFloat("1e" + x) > num);
  }
  return num == 0 ? -Infinity : NaN;
};
goog.math.safeFloor = function(num, opt_epsilon) {
  goog.asserts.assert(!goog.isDef(opt_epsilon) || opt_epsilon > 0);
  return Math.floor(num + (opt_epsilon || 2E-15));
};
goog.math.safeCeil = function(num, opt_epsilon) {
  goog.asserts.assert(!goog.isDef(opt_epsilon) || opt_epsilon > 0);
  return Math.ceil(num - (opt_epsilon || 2E-15));
};
goog.provide("goog.iter");
goog.provide("goog.iter.Iterable");
goog.provide("goog.iter.Iterator");
goog.provide("goog.iter.StopIteration");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.functions");
goog.require("goog.math");
goog.iter.Iterable;
if ("StopIteration" in goog.global) {
  goog.iter.StopIteration = goog.global["StopIteration"];
} else {
  goog.iter.StopIteration = Error("StopIteration");
}
goog.iter.Iterator = function() {
};
goog.iter.Iterator.prototype.next = function() {
  throw goog.iter.StopIteration;
};
goog.iter.Iterator.prototype.__iterator__ = function(opt_keys) {
  return this;
};
goog.iter.toIterator = function(iterable) {
  if (iterable instanceof goog.iter.Iterator) {
    return iterable;
  }
  if (typeof iterable.__iterator__ == "function") {
    return iterable.__iterator__(false);
  }
  if (goog.isArrayLike(iterable)) {
    var i = 0;
    var newIter = new goog.iter.Iterator;
    newIter.next = function() {
      while (true) {
        if (i >= iterable.length) {
          throw goog.iter.StopIteration;
        }
        if (!(i in iterable)) {
          i++;
          continue;
        }
        return iterable[i++];
      }
    };
    return newIter;
  }
  throw Error("Not implemented");
};
goog.iter.forEach = function(iterable, f, opt_obj) {
  if (goog.isArrayLike(iterable)) {
    try {
      goog.array.forEach((iterable), f, opt_obj);
    } catch (ex) {
      if (ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  } else {
    iterable = goog.iter.toIterator(iterable);
    try {
      while (true) {
        f.call(opt_obj, iterable.next(), undefined, iterable);
      }
    } catch (ex) {
      if (ex !== goog.iter.StopIteration) {
        throw ex;
      }
    }
  }
};
goog.iter.filter = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while (true) {
      var val = iterator.next();
      if (f.call(opt_obj, val, undefined, iterator)) {
        return val;
      }
    }
  };
  return newIter;
};
goog.iter.filterFalse = function(iterable, f, opt_obj) {
  return goog.iter.filter(iterable, goog.functions.not(f), opt_obj);
};
goog.iter.range = function(startOrStop, opt_stop, opt_step) {
  var start = 0;
  var stop = startOrStop;
  var step = opt_step || 1;
  if (arguments.length > 1) {
    start = startOrStop;
    stop = opt_stop;
  }
  if (step == 0) {
    throw Error("Range step argument must not be zero");
  }
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    if (step > 0 && start >= stop || step < 0 && start <= stop) {
      throw goog.iter.StopIteration;
    }
    var rv = start;
    start += step;
    return rv;
  };
  return newIter;
};
goog.iter.join = function(iterable, deliminator) {
  return goog.iter.toArray(iterable).join(deliminator);
};
goog.iter.map = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    var val = iterator.next();
    return f.call(opt_obj, val, undefined, iterator);
  };
  return newIter;
};
goog.iter.reduce = function(iterable, f, val, opt_obj) {
  var rval = val;
  goog.iter.forEach(iterable, function(val) {
    rval = f.call(opt_obj, rval, val);
  });
  return rval;
};
goog.iter.some = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while (true) {
      if (f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return true;
      }
    }
  } catch (ex) {
    if (ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return false;
};
goog.iter.every = function(iterable, f, opt_obj) {
  iterable = goog.iter.toIterator(iterable);
  try {
    while (true) {
      if (!f.call(opt_obj, iterable.next(), undefined, iterable)) {
        return false;
      }
    }
  } catch (ex) {
    if (ex !== goog.iter.StopIteration) {
      throw ex;
    }
  }
  return true;
};
goog.iter.chain = function(var_args) {
  var iterator = goog.iter.toIterator(arguments);
  var iter = new goog.iter.Iterator;
  var current = null;
  iter.next = function() {
    while (true) {
      if (current == null) {
        var it = iterator.next();
        current = goog.iter.toIterator(it);
      }
      try {
        return current.next();
      } catch (ex) {
        if (ex !== goog.iter.StopIteration) {
          throw ex;
        }
        current = null;
      }
    }
  };
  return iter;
};
goog.iter.chainFromIterable = function(iterable) {
  return goog.iter.chain.apply(undefined, iterable);
};
goog.iter.dropWhile = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var dropping = true;
  newIter.next = function() {
    while (true) {
      var val = iterator.next();
      if (dropping && f.call(opt_obj, val, undefined, iterator)) {
        continue;
      } else {
        dropping = false;
      }
      return val;
    }
  };
  return newIter;
};
goog.iter.takeWhile = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var newIter = new goog.iter.Iterator;
  var taking = true;
  newIter.next = function() {
    while (true) {
      if (taking) {
        var val = iterator.next();
        if (f.call(opt_obj, val, undefined, iterator)) {
          return val;
        } else {
          taking = false;
        }
      } else {
        throw goog.iter.StopIteration;
      }
    }
  };
  return newIter;
};
goog.iter.toArray = function(iterable) {
  if (goog.isArrayLike(iterable)) {
    return goog.array.toArray((iterable));
  }
  iterable = goog.iter.toIterator(iterable);
  var array = [];
  goog.iter.forEach(iterable, function(val) {
    array.push(val);
  });
  return array;
};
goog.iter.equals = function(iterable1, iterable2) {
  var fillValue = {};
  var pairs = goog.iter.zipLongest(fillValue, iterable1, iterable2);
  return goog.iter.every(pairs, function(pair) {
    return pair[0] == pair[1];
  });
};
goog.iter.nextOrValue = function(iterable, defaultValue) {
  try {
    return goog.iter.toIterator(iterable).next();
  } catch (e) {
    if (e != goog.iter.StopIteration) {
      throw e;
    }
    return defaultValue;
  }
};
goog.iter.product = function(var_args) {
  var someArrayEmpty = goog.array.some(arguments, function(arr) {
    return!arr.length;
  });
  if (someArrayEmpty || !arguments.length) {
    return new goog.iter.Iterator;
  }
  var iter = new goog.iter.Iterator;
  var arrays = arguments;
  var indicies = goog.array.repeat(0, arrays.length);
  iter.next = function() {
    if (indicies) {
      var retVal = goog.array.map(indicies, function(valueIndex, arrayIndex) {
        return arrays[arrayIndex][valueIndex];
      });
      for (var i = indicies.length - 1;i >= 0;i--) {
        goog.asserts.assert(indicies);
        if (indicies[i] < arrays[i].length - 1) {
          indicies[i]++;
          break;
        }
        if (i == 0) {
          indicies = null;
          break;
        }
        indicies[i] = 0;
      }
      return retVal;
    }
    throw goog.iter.StopIteration;
  };
  return iter;
};
goog.iter.cycle = function(iterable) {
  var baseIterator = goog.iter.toIterator(iterable);
  var cache = [];
  var cacheIndex = 0;
  var iter = new goog.iter.Iterator;
  var useCache = false;
  iter.next = function() {
    var returnElement = null;
    if (!useCache) {
      try {
        returnElement = baseIterator.next();
        cache.push(returnElement);
        return returnElement;
      } catch (e) {
        if (e != goog.iter.StopIteration || goog.array.isEmpty(cache)) {
          throw e;
        }
        useCache = true;
      }
    }
    returnElement = cache[cacheIndex];
    cacheIndex = (cacheIndex + 1) % cache.length;
    return returnElement;
  };
  return iter;
};
goog.iter.count = function(opt_start, opt_step) {
  var counter = opt_start || 0;
  var step = goog.isDef(opt_step) ? opt_step : 1;
  var iter = new goog.iter.Iterator;
  iter.next = function() {
    var returnValue = counter;
    counter += step;
    return returnValue;
  };
  return iter;
};
goog.iter.repeat = function(value) {
  var iter = new goog.iter.Iterator;
  iter.next = goog.functions.constant(value);
  return iter;
};
goog.iter.accumulate = function(iterable) {
  var iterator = goog.iter.toIterator(iterable);
  var total = 0;
  var iter = new goog.iter.Iterator;
  iter.next = function() {
    total += iterator.next();
    return total;
  };
  return iter;
};
goog.iter.zip = function(var_args) {
  var args = arguments;
  var iter = new goog.iter.Iterator;
  if (args.length > 0) {
    var iterators = goog.array.map(args, goog.iter.toIterator);
    iter.next = function() {
      var arr = goog.array.map(iterators, function(it) {
        return it.next();
      });
      return arr;
    };
  }
  return iter;
};
goog.iter.zipLongest = function(fillValue, var_args) {
  var args = goog.array.slice(arguments, 1);
  var iter = new goog.iter.Iterator;
  if (args.length > 0) {
    var iterators = goog.array.map(args, goog.iter.toIterator);
    iter.next = function() {
      var iteratorsHaveValues = false;
      var arr = goog.array.map(iterators, function(it) {
        var returnValue;
        try {
          returnValue = it.next();
          iteratorsHaveValues = true;
        } catch (ex) {
          if (ex !== goog.iter.StopIteration) {
            throw ex;
          }
          returnValue = fillValue;
        }
        return returnValue;
      });
      if (!iteratorsHaveValues) {
        throw goog.iter.StopIteration;
      }
      return arr;
    };
  }
  return iter;
};
goog.iter.compress = function(iterable, selectors) {
  var selectorIterator = goog.iter.toIterator(selectors);
  return goog.iter.filter(iterable, function() {
    return!!selectorIterator.next();
  });
};
goog.iter.GroupByIterator_ = function(iterable, opt_keyFunc) {
  this.iterator = goog.iter.toIterator(iterable);
  this.keyFunc = opt_keyFunc || goog.functions.identity;
  this.targetKey;
  this.currentKey;
  this.currentValue;
};
goog.inherits(goog.iter.GroupByIterator_, goog.iter.Iterator);
goog.iter.GroupByIterator_.prototype.next = function() {
  while (this.currentKey == this.targetKey) {
    this.currentValue = this.iterator.next();
    this.currentKey = this.keyFunc(this.currentValue);
  }
  this.targetKey = this.currentKey;
  return[this.currentKey, this.groupItems_(this.targetKey)];
};
goog.iter.GroupByIterator_.prototype.groupItems_ = function(targetKey) {
  var arr = [];
  while (this.currentKey == targetKey) {
    arr.push(this.currentValue);
    try {
      this.currentValue = this.iterator.next();
    } catch (ex) {
      if (ex !== goog.iter.StopIteration) {
        throw ex;
      }
      break;
    }
    this.currentKey = this.keyFunc(this.currentValue);
  }
  return arr;
};
goog.iter.groupBy = function(iterable, opt_keyFunc) {
  return new goog.iter.GroupByIterator_(iterable, opt_keyFunc);
};
goog.iter.starMap = function(iterable, f, opt_obj) {
  var iterator = goog.iter.toIterator(iterable);
  var iter = new goog.iter.Iterator;
  iter.next = function() {
    var args = goog.iter.toArray(iterator.next());
    return f.apply(opt_obj, goog.array.concat(args, undefined, iterator));
  };
  return iter;
};
goog.iter.tee = function(iterable, opt_num) {
  var iterator = goog.iter.toIterator(iterable);
  var num = goog.isNumber(opt_num) ? opt_num : 2;
  var buffers = goog.array.map(goog.array.range(num), function() {
    return[];
  });
  var addNextIteratorValueToBuffers = function() {
    var val = iterator.next();
    goog.array.forEach(buffers, function(buffer) {
      buffer.push(val);
    });
  };
  var createIterator = function(buffer) {
    var iter = new goog.iter.Iterator;
    iter.next = function() {
      if (goog.array.isEmpty(buffer)) {
        addNextIteratorValueToBuffers();
      }
      goog.asserts.assert(!goog.array.isEmpty(buffer));
      return buffer.shift();
    };
    return iter;
  };
  return goog.array.map(buffers, createIterator);
};
goog.iter.enumerate = function(iterable, opt_start) {
  return goog.iter.zip(goog.iter.count(opt_start), iterable);
};
goog.iter.limit = function(iterable, limitSize) {
  goog.asserts.assert(goog.math.isInt(limitSize) && limitSize >= 0);
  var iterator = goog.iter.toIterator(iterable);
  var iter = new goog.iter.Iterator;
  var remaining = limitSize;
  iter.next = function() {
    if (remaining-- > 0) {
      return iterator.next();
    }
    throw goog.iter.StopIteration;
  };
  return iter;
};
goog.iter.consume = function(iterable, count) {
  goog.asserts.assert(goog.math.isInt(count) && count >= 0);
  var iterator = goog.iter.toIterator(iterable);
  while (count-- > 0) {
    goog.iter.nextOrValue(iterator, null);
  }
  return iterator;
};
goog.iter.slice = function(iterable, start, opt_end) {
  goog.asserts.assert(goog.math.isInt(start) && start >= 0);
  var iterator = goog.iter.consume(iterable, start);
  if (goog.isNumber(opt_end)) {
    goog.asserts.assert(goog.math.isInt((opt_end)) && opt_end >= start);
    iterator = goog.iter.limit(iterator, opt_end - start);
  }
  return iterator;
};
goog.iter.hasDuplicates_ = function(arr) {
  var deduped = [];
  goog.array.removeDuplicates(arr, deduped);
  return arr.length != deduped.length;
};
goog.iter.permutations = function(iterable, opt_length) {
  var elements = goog.iter.toArray(iterable);
  var length = goog.isNumber(opt_length) ? opt_length : elements.length;
  var sets = goog.array.repeat(elements, length);
  var product = goog.iter.product.apply(undefined, sets);
  return goog.iter.filter(product, function(arr) {
    return!goog.iter.hasDuplicates_(arr);
  });
};
goog.iter.combinations = function(iterable, length) {
  var elements = goog.iter.toArray(iterable);
  var indexes = goog.iter.range(elements.length);
  var indexIterator = goog.iter.permutations(indexes, length);
  var sortedIndexIterator = goog.iter.filter(indexIterator, function(arr) {
    return goog.array.isSorted(arr);
  });
  var iter = new goog.iter.Iterator;
  function getIndexFromElements(index) {
    return elements[index];
  }
  iter.next = function() {
    return goog.array.map((sortedIndexIterator.next()), getIndexFromElements);
  };
  return iter;
};
goog.iter.combinationsWithReplacement = function(iterable, length) {
  var elements = goog.iter.toArray(iterable);
  var indexes = goog.array.range(elements.length);
  var sets = goog.array.repeat(indexes, length);
  var indexIterator = goog.iter.product.apply(undefined, sets);
  var sortedIndexIterator = goog.iter.filter(indexIterator, function(arr) {
    return goog.array.isSorted(arr);
  });
  var iter = new goog.iter.Iterator;
  function getIndexFromElements(index) {
    return elements[index];
  }
  iter.next = function() {
    return goog.array.map((sortedIndexIterator.next()), getIndexFromElements);
  };
  return iter;
};
goog.provide("goog.structs.Map");
goog.require("goog.iter.Iterator");
goog.require("goog.iter.StopIteration");
goog.require("goog.object");
goog.structs.Map = function(opt_map, var_args) {
  this.map_ = {};
  this.keys_ = [];
  this.count_ = 0;
  this.version_ = 0;
  var argLength = arguments.length;
  if (argLength > 1) {
    if (argLength % 2) {
      throw Error("Uneven number of arguments");
    }
    for (var i = 0;i < argLength;i += 2) {
      this.set(arguments[i], arguments[i + 1]);
    }
  } else {
    if (opt_map) {
      this.addAll((opt_map));
    }
  }
};
goog.structs.Map.prototype.getCount = function() {
  return this.count_;
};
goog.structs.Map.prototype.getValues = function() {
  this.cleanupKeysArray_();
  var rv = [];
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    rv.push(this.map_[key]);
  }
  return rv;
};
goog.structs.Map.prototype.getKeys = function() {
  this.cleanupKeysArray_();
  return(this.keys_.concat());
};
goog.structs.Map.prototype.containsKey = function(key) {
  return goog.structs.Map.hasKey_(this.map_, key);
};
goog.structs.Map.prototype.containsValue = function(val) {
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    if (goog.structs.Map.hasKey_(this.map_, key) && this.map_[key] == val) {
      return true;
    }
  }
  return false;
};
goog.structs.Map.prototype.equals = function(otherMap, opt_equalityFn) {
  if (this === otherMap) {
    return true;
  }
  if (this.count_ != otherMap.getCount()) {
    return false;
  }
  var equalityFn = opt_equalityFn || goog.structs.Map.defaultEquals;
  this.cleanupKeysArray_();
  for (var key, i = 0;key = this.keys_[i];i++) {
    if (!equalityFn(this.get(key), otherMap.get(key))) {
      return false;
    }
  }
  return true;
};
goog.structs.Map.defaultEquals = function(a, b) {
  return a === b;
};
goog.structs.Map.prototype.isEmpty = function() {
  return this.count_ == 0;
};
goog.structs.Map.prototype.clear = function() {
  this.map_ = {};
  this.keys_.length = 0;
  this.count_ = 0;
  this.version_ = 0;
};
goog.structs.Map.prototype.remove = function(key) {
  if (goog.structs.Map.hasKey_(this.map_, key)) {
    delete this.map_[key];
    this.count_--;
    this.version_++;
    if (this.keys_.length > 2 * this.count_) {
      this.cleanupKeysArray_();
    }
    return true;
  }
  return false;
};
goog.structs.Map.prototype.cleanupKeysArray_ = function() {
  if (this.count_ != this.keys_.length) {
    var srcIndex = 0;
    var destIndex = 0;
    while (srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if (goog.structs.Map.hasKey_(this.map_, key)) {
        this.keys_[destIndex++] = key;
      }
      srcIndex++;
    }
    this.keys_.length = destIndex;
  }
  if (this.count_ != this.keys_.length) {
    var seen = {};
    var srcIndex = 0;
    var destIndex = 0;
    while (srcIndex < this.keys_.length) {
      var key = this.keys_[srcIndex];
      if (!goog.structs.Map.hasKey_(seen, key)) {
        this.keys_[destIndex++] = key;
        seen[key] = 1;
      }
      srcIndex++;
    }
    this.keys_.length = destIndex;
  }
};
goog.structs.Map.prototype.get = function(key, opt_val) {
  if (goog.structs.Map.hasKey_(this.map_, key)) {
    return this.map_[key];
  }
  return opt_val;
};
goog.structs.Map.prototype.set = function(key, value) {
  if (!goog.structs.Map.hasKey_(this.map_, key)) {
    this.count_++;
    this.keys_.push(key);
    this.version_++;
  }
  this.map_[key] = value;
};
goog.structs.Map.prototype.addAll = function(map) {
  var keys, values;
  if (map instanceof goog.structs.Map) {
    keys = map.getKeys();
    values = map.getValues();
  } else {
    keys = goog.object.getKeys(map);
    values = goog.object.getValues(map);
  }
  for (var i = 0;i < keys.length;i++) {
    this.set(keys[i], values[i]);
  }
};
goog.structs.Map.prototype.forEach = function(f, opt_obj) {
  var keys = this.getKeys();
  for (var i = 0;i < keys.length;i++) {
    var key = keys[i];
    var value = this.get(key);
    f.call(opt_obj, value, key, this);
  }
};
goog.structs.Map.prototype.clone = function() {
  return new goog.structs.Map(this);
};
goog.structs.Map.prototype.transpose = function() {
  var transposed = new goog.structs.Map;
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    var value = this.map_[key];
    transposed.set(value, key);
  }
  return transposed;
};
goog.structs.Map.prototype.toObject = function() {
  this.cleanupKeysArray_();
  var obj = {};
  for (var i = 0;i < this.keys_.length;i++) {
    var key = this.keys_[i];
    obj[key] = this.map_[key];
  }
  return obj;
};
goog.structs.Map.prototype.getKeyIterator = function() {
  return this.__iterator__(true);
};
goog.structs.Map.prototype.getValueIterator = function() {
  return this.__iterator__(false);
};
goog.structs.Map.prototype.__iterator__ = function(opt_keys) {
  this.cleanupKeysArray_();
  var i = 0;
  var keys = this.keys_;
  var map = this.map_;
  var version = this.version_;
  var selfObj = this;
  var newIter = new goog.iter.Iterator;
  newIter.next = function() {
    while (true) {
      if (version != selfObj.version_) {
        throw Error("The map has changed since the iterator was created");
      }
      if (i >= keys.length) {
        throw goog.iter.StopIteration;
      }
      var key = keys[i++];
      return opt_keys ? key : map[key];
    }
  };
  return newIter;
};
goog.structs.Map.hasKey_ = function(obj, key) {
  return Object.prototype.hasOwnProperty.call(obj, key);
};
goog.provide("goog.labs.userAgent.util");
goog.require("goog.string");
goog.labs.userAgent.util.getNativeUserAgentString_ = function() {
  var navigator = goog.labs.userAgent.util.getNavigator_();
  if (navigator) {
    var userAgent = navigator.userAgent;
    if (userAgent) {
      return userAgent;
    }
  }
  return "";
};
goog.labs.userAgent.util.getNavigator_ = function() {
  return goog.global.navigator;
};
goog.labs.userAgent.util.userAgent_ = goog.labs.userAgent.util.getNativeUserAgentString_();
goog.labs.userAgent.util.setUserAgent = function(opt_userAgent) {
  goog.labs.userAgent.util.userAgent_ = opt_userAgent || goog.labs.userAgent.util.getNativeUserAgentString_();
};
goog.labs.userAgent.util.getUserAgent = function() {
  return goog.labs.userAgent.util.userAgent_;
};
goog.labs.userAgent.util.matchUserAgent = function(str) {
  var userAgent = goog.labs.userAgent.util.getUserAgent();
  return goog.string.contains(userAgent, str);
};
goog.labs.userAgent.util.matchUserAgentIgnoreCase = function(str) {
  var userAgent = goog.labs.userAgent.util.getUserAgent();
  return goog.string.caseInsensitiveContains(userAgent, str);
};
goog.labs.userAgent.util.extractVersionTuples = function(userAgent) {
  var versionRegExp = new RegExp("(\\w[\\w ]+)" + "/" + "([^\\s]+)" + "\\s*" + "(?:\\((.*?)\\))?", "g");
  var data = [];
  var match;
  while (match = versionRegExp.exec(userAgent)) {
    data.push([match[1], match[2], match[3] || undefined]);
  }
  return data;
};
goog.provide("goog.labs.userAgent.browser");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.labs.userAgent.util");
goog.require("goog.string");
goog.labs.userAgent.browser.matchOpera_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Opera") || goog.labs.userAgent.util.matchUserAgent("OPR");
};
goog.labs.userAgent.browser.matchIE_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Trident") || goog.labs.userAgent.util.matchUserAgent("MSIE");
};
goog.labs.userAgent.browser.matchFirefox_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Firefox");
};
goog.labs.userAgent.browser.matchSafari_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Safari") && !goog.labs.userAgent.util.matchUserAgent("Chrome") && !goog.labs.userAgent.util.matchUserAgent("CriOS") && !goog.labs.userAgent.util.matchUserAgent("Android");
};
goog.labs.userAgent.browser.matchChrome_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Chrome") || goog.labs.userAgent.util.matchUserAgent("CriOS");
};
goog.labs.userAgent.browser.matchAndroidBrowser_ = function() {
  return goog.labs.userAgent.util.matchUserAgent("Android") && !goog.labs.userAgent.util.matchUserAgent("Chrome") && !goog.labs.userAgent.util.matchUserAgent("CriOS");
};
goog.labs.userAgent.browser.isOpera = goog.labs.userAgent.browser.matchOpera_;
goog.labs.userAgent.browser.isIE = goog.labs.userAgent.browser.matchIE_;
goog.labs.userAgent.browser.isFirefox = goog.labs.userAgent.browser.matchFirefox_;
goog.labs.userAgent.browser.isSafari = goog.labs.userAgent.browser.matchSafari_;
goog.labs.userAgent.browser.isChrome = goog.labs.userAgent.browser.matchChrome_;
goog.labs.userAgent.browser.isAndroidBrowser = goog.labs.userAgent.browser.matchAndroidBrowser_;
goog.labs.userAgent.browser.isSilk = function() {
  return goog.labs.userAgent.util.matchUserAgent("Silk");
};
goog.labs.userAgent.browser.getVersion = function() {
  var userAgentString = goog.labs.userAgent.util.getUserAgent();
  if (goog.labs.userAgent.browser.isIE()) {
    return goog.labs.userAgent.browser.getIEVersion_(userAgentString);
  }
  if (goog.labs.userAgent.browser.isOpera()) {
    return goog.labs.userAgent.browser.getOperaVersion_(userAgentString);
  }
  var versionTuples = goog.labs.userAgent.util.extractVersionTuples(userAgentString);
  return goog.labs.userAgent.browser.getVersionFromTuples_(versionTuples);
};
goog.labs.userAgent.browser.isVersionOrHigher = function(version) {
  return goog.string.compareVersions(goog.labs.userAgent.browser.getVersion(), version) >= 0;
};
goog.labs.userAgent.browser.getIEVersion_ = function(userAgent) {
  var rv = /rv: *([\d\.]*)/.exec(userAgent);
  if (rv && rv[1]) {
    return rv[1];
  }
  var version = "";
  var msie = /MSIE +([\d\.]+)/.exec(userAgent);
  if (msie && msie[1]) {
    var tridentVersion = /Trident\/(\d.\d)/.exec(userAgent);
    if (msie[1] == "7.0") {
      if (tridentVersion && tridentVersion[1]) {
        switch(tridentVersion[1]) {
          case "4.0":
            version = "8.0";
            break;
          case "5.0":
            version = "9.0";
            break;
          case "6.0":
            version = "10.0";
            break;
          case "7.0":
            version = "11.0";
            break;
        }
      } else {
        version = "7.0";
      }
    } else {
      version = msie[1];
    }
  }
  return version;
};
goog.labs.userAgent.browser.getOperaVersion_ = function(userAgent) {
  var versionTuples = goog.labs.userAgent.util.extractVersionTuples(userAgent);
  var lastTuple = goog.array.peek(versionTuples);
  if (lastTuple[0] == "OPR" && lastTuple[1]) {
    return lastTuple[1];
  }
  return goog.labs.userAgent.browser.getVersionFromTuples_(versionTuples);
};
goog.labs.userAgent.browser.getVersionFromTuples_ = function(versionTuples) {
  goog.asserts.assert(versionTuples.length > 2, "Couldn't extract version tuple from user agent string");
  return versionTuples[2] && versionTuples[2][1] ? versionTuples[2][1] : "";
};
goog.provide("goog.labs.userAgent.engine");
goog.require("goog.array");
goog.require("goog.labs.userAgent.util");
goog.require("goog.string");
goog.labs.userAgent.engine.isPresto = function() {
  return goog.labs.userAgent.util.matchUserAgent("Presto");
};
goog.labs.userAgent.engine.isTrident = function() {
  return goog.labs.userAgent.util.matchUserAgent("Trident") || goog.labs.userAgent.util.matchUserAgent("MSIE");
};
goog.labs.userAgent.engine.isWebKit = function() {
  return goog.labs.userAgent.util.matchUserAgentIgnoreCase("WebKit");
};
goog.labs.userAgent.engine.isGecko = function() {
  return goog.labs.userAgent.util.matchUserAgent("Gecko") && !goog.labs.userAgent.engine.isWebKit() && !goog.labs.userAgent.engine.isTrident();
};
goog.labs.userAgent.engine.getVersion = function() {
  var userAgentString = goog.labs.userAgent.util.getUserAgent();
  if (userAgentString) {
    var tuples = goog.labs.userAgent.util.extractVersionTuples(userAgentString);
    var engineTuple = tuples[1];
    if (engineTuple) {
      if (engineTuple[0] == "Gecko") {
        return goog.labs.userAgent.engine.getVersionForKey_(tuples, "Firefox");
      }
      return engineTuple[1];
    }
    var browserTuple = tuples[0];
    var info;
    if (browserTuple && (info = browserTuple[2])) {
      var match = /Trident\/([^\s;]+)/.exec(info);
      if (match) {
        return match[1];
      }
    }
  }
  return "";
};
goog.labs.userAgent.engine.isVersionOrHigher = function(version) {
  return goog.string.compareVersions(goog.labs.userAgent.engine.getVersion(), version) >= 0;
};
goog.labs.userAgent.engine.getVersionForKey_ = function(tuples, key) {
  var pair = goog.array.find(tuples, function(pair) {
    return key == pair[0];
  });
  return pair && pair[1] || "";
};
goog.provide("goog.userAgent");
goog.require("goog.labs.userAgent.browser");
goog.require("goog.labs.userAgent.engine");
goog.require("goog.labs.userAgent.util");
goog.require("goog.string");
goog.define("goog.userAgent.ASSUME_IE", false);
goog.define("goog.userAgent.ASSUME_GECKO", false);
goog.define("goog.userAgent.ASSUME_WEBKIT", false);
goog.define("goog.userAgent.ASSUME_MOBILE_WEBKIT", false);
goog.define("goog.userAgent.ASSUME_OPERA", false);
goog.define("goog.userAgent.ASSUME_ANY_VERSION", false);
goog.userAgent.BROWSER_KNOWN_ = goog.userAgent.ASSUME_IE || goog.userAgent.ASSUME_GECKO || goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_OPERA;
goog.userAgent.getUserAgentString = function() {
  return goog.labs.userAgent.util.getUserAgent();
};
goog.userAgent.getNavigator = function() {
  return goog.global["navigator"] || null;
};
goog.userAgent.OPERA = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_OPERA : goog.labs.userAgent.browser.isOpera();
goog.userAgent.IE = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_IE : goog.labs.userAgent.browser.isIE();
goog.userAgent.GECKO = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_GECKO : goog.labs.userAgent.engine.isGecko();
goog.userAgent.WEBKIT = goog.userAgent.BROWSER_KNOWN_ ? goog.userAgent.ASSUME_WEBKIT || goog.userAgent.ASSUME_MOBILE_WEBKIT : goog.labs.userAgent.engine.isWebKit();
goog.userAgent.isMobile_ = function() {
  return goog.userAgent.WEBKIT && goog.labs.userAgent.util.matchUserAgent("Mobile");
};
goog.userAgent.MOBILE = goog.userAgent.ASSUME_MOBILE_WEBKIT || goog.userAgent.isMobile_();
goog.userAgent.SAFARI = goog.userAgent.WEBKIT;
goog.userAgent.determinePlatform_ = function() {
  var navigator = goog.userAgent.getNavigator();
  return navigator && navigator.platform || "";
};
goog.userAgent.PLATFORM = goog.userAgent.determinePlatform_();
goog.define("goog.userAgent.ASSUME_MAC", false);
goog.define("goog.userAgent.ASSUME_WINDOWS", false);
goog.define("goog.userAgent.ASSUME_LINUX", false);
goog.define("goog.userAgent.ASSUME_X11", false);
goog.define("goog.userAgent.ASSUME_ANDROID", false);
goog.define("goog.userAgent.ASSUME_IPHONE", false);
goog.define("goog.userAgent.ASSUME_IPAD", false);
goog.userAgent.PLATFORM_KNOWN_ = goog.userAgent.ASSUME_MAC || goog.userAgent.ASSUME_WINDOWS || goog.userAgent.ASSUME_LINUX || goog.userAgent.ASSUME_X11 || goog.userAgent.ASSUME_ANDROID || goog.userAgent.ASSUME_IPHONE || goog.userAgent.ASSUME_IPAD;
goog.userAgent.initPlatform_ = function() {
  goog.userAgent.detectedMac_ = goog.string.contains(goog.userAgent.PLATFORM, "Mac");
  goog.userAgent.detectedWindows_ = goog.string.contains(goog.userAgent.PLATFORM, "Win");
  goog.userAgent.detectedLinux_ = goog.string.contains(goog.userAgent.PLATFORM, "Linux");
  goog.userAgent.detectedX11_ = !!goog.userAgent.getNavigator() && goog.string.contains(goog.userAgent.getNavigator()["appVersion"] || "", "X11");
  var ua = goog.userAgent.getUserAgentString();
  goog.userAgent.detectedAndroid_ = !!ua && goog.string.contains(ua, "Android");
  goog.userAgent.detectedIPhone_ = !!ua && goog.string.contains(ua, "iPhone");
  goog.userAgent.detectedIPad_ = !!ua && goog.string.contains(ua, "iPad");
};
if (!goog.userAgent.PLATFORM_KNOWN_) {
  goog.userAgent.initPlatform_();
}
goog.userAgent.MAC = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_MAC : goog.userAgent.detectedMac_;
goog.userAgent.WINDOWS = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_WINDOWS : goog.userAgent.detectedWindows_;
goog.userAgent.LINUX = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_LINUX : goog.userAgent.detectedLinux_;
goog.userAgent.X11 = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_X11 : goog.userAgent.detectedX11_;
goog.userAgent.ANDROID = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_ANDROID : goog.userAgent.detectedAndroid_;
goog.userAgent.IPHONE = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPHONE : goog.userAgent.detectedIPhone_;
goog.userAgent.IPAD = goog.userAgent.PLATFORM_KNOWN_ ? goog.userAgent.ASSUME_IPAD : goog.userAgent.detectedIPad_;
goog.userAgent.determineVersion_ = function() {
  var version = "", re;
  if (goog.userAgent.OPERA && goog.global["opera"]) {
    var operaVersion = goog.global["opera"].version;
    return goog.isFunction(operaVersion) ? operaVersion() : operaVersion;
  }
  if (goog.userAgent.GECKO) {
    re = /rv\:([^\);]+)(\)|;)/;
  } else {
    if (goog.userAgent.IE) {
      re = /\b(?:MSIE|rv)[: ]([^\);]+)(\)|;)/;
    } else {
      if (goog.userAgent.WEBKIT) {
        re = /WebKit\/(\S+)/;
      }
    }
  }
  if (re) {
    var arr = re.exec(goog.userAgent.getUserAgentString());
    version = arr ? arr[1] : "";
  }
  if (goog.userAgent.IE) {
    var docMode = goog.userAgent.getDocumentMode_();
    if (docMode > parseFloat(version)) {
      return String(docMode);
    }
  }
  return version;
};
goog.userAgent.getDocumentMode_ = function() {
  var doc = goog.global["document"];
  return doc ? doc["documentMode"] : undefined;
};
goog.userAgent.VERSION = goog.userAgent.determineVersion_();
goog.userAgent.compare = function(v1, v2) {
  return goog.string.compareVersions(v1, v2);
};
goog.userAgent.isVersionOrHigherCache_ = {};
goog.userAgent.isVersionOrHigher = function(version) {
  return goog.userAgent.ASSUME_ANY_VERSION || goog.userAgent.isVersionOrHigherCache_[version] || (goog.userAgent.isVersionOrHigherCache_[version] = goog.string.compareVersions(goog.userAgent.VERSION, version) >= 0);
};
goog.userAgent.isVersion = goog.userAgent.isVersionOrHigher;
goog.userAgent.isDocumentModeOrHigher = function(documentMode) {
  return goog.userAgent.IE && goog.userAgent.DOCUMENT_MODE >= documentMode;
};
goog.userAgent.isDocumentMode = goog.userAgent.isDocumentModeOrHigher;
goog.userAgent.DOCUMENT_MODE = function() {
  var doc = goog.global["document"];
  if (!doc || !goog.userAgent.IE) {
    return undefined;
  }
  var mode = goog.userAgent.getDocumentMode_();
  return mode || (doc["compatMode"] == "CSS1Compat" ? parseInt(goog.userAgent.VERSION, 10) : 5);
}();
goog.provide("goog.uri.utils");
goog.provide("goog.uri.utils.ComponentIndex");
goog.provide("goog.uri.utils.QueryArray");
goog.provide("goog.uri.utils.QueryValue");
goog.provide("goog.uri.utils.StandardQueryParam");
goog.require("goog.asserts");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.uri.utils.CharCode_ = {AMPERSAND:38, EQUAL:61, HASH:35, QUESTION:63};
goog.uri.utils.buildFromEncodedParts = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_queryData, opt_fragment) {
  var out = "";
  if (opt_scheme) {
    out += opt_scheme + ":";
  }
  if (opt_domain) {
    out += "//";
    if (opt_userInfo) {
      out += opt_userInfo + "@";
    }
    out += opt_domain;
    if (opt_port) {
      out += ":" + opt_port;
    }
  }
  if (opt_path) {
    out += opt_path;
  }
  if (opt_queryData) {
    out += "?" + opt_queryData;
  }
  if (opt_fragment) {
    out += "#" + opt_fragment;
  }
  return out;
};
goog.uri.utils.splitRe_ = new RegExp("^" + "(?:" + "([^:/?#.]+)" + ":)?" + "(?://" + "(?:([^/?#]*)@)?" + "([^/#?]*?)" + "(?::([0-9]+))?" + "(?\x3d[/#?]|$)" + ")?" + "([^?#]+)?" + "(?:\\?([^#]*))?" + "(?:#(.*))?" + "$");
goog.uri.utils.ComponentIndex = {SCHEME:1, USER_INFO:2, DOMAIN:3, PORT:4, PATH:5, QUERY_DATA:6, FRAGMENT:7};
goog.uri.utils.split = function(uri) {
  goog.uri.utils.phishingProtection_();
  return(uri.match(goog.uri.utils.splitRe_));
};
goog.uri.utils.needsPhishingProtection_ = goog.userAgent.WEBKIT;
goog.uri.utils.phishingProtection_ = function() {
  if (goog.uri.utils.needsPhishingProtection_) {
    goog.uri.utils.needsPhishingProtection_ = false;
    var location = goog.global["location"];
    if (location) {
      var href = location["href"];
      if (href) {
        var domain = goog.uri.utils.getDomain(href);
        if (domain && domain != location["hostname"]) {
          goog.uri.utils.needsPhishingProtection_ = true;
          throw Error();
        }
      }
    }
  }
};
goog.uri.utils.decodeIfPossible_ = function(uri) {
  return uri && decodeURIComponent(uri);
};
goog.uri.utils.getComponentByIndex_ = function(componentIndex, uri) {
  return goog.uri.utils.split(uri)[componentIndex] || null;
};
goog.uri.utils.getScheme = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.SCHEME, uri);
};
goog.uri.utils.getEffectiveScheme = function(uri) {
  var scheme = goog.uri.utils.getScheme(uri);
  if (!scheme && self.location) {
    var protocol = self.location.protocol;
    scheme = protocol.substr(0, protocol.length - 1);
  }
  return scheme ? scheme.toLowerCase() : "";
};
goog.uri.utils.getUserInfoEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.USER_INFO, uri);
};
goog.uri.utils.getUserInfo = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getUserInfoEncoded(uri));
};
goog.uri.utils.getDomainEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.DOMAIN, uri);
};
goog.uri.utils.getDomain = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getDomainEncoded(uri));
};
goog.uri.utils.getPort = function(uri) {
  return Number(goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PORT, uri)) || null;
};
goog.uri.utils.getPathEncoded = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.PATH, uri);
};
goog.uri.utils.getPath = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getPathEncoded(uri));
};
goog.uri.utils.getQueryData = function(uri) {
  return goog.uri.utils.getComponentByIndex_(goog.uri.utils.ComponentIndex.QUERY_DATA, uri);
};
goog.uri.utils.getFragmentEncoded = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? null : uri.substr(hashIndex + 1);
};
goog.uri.utils.setFragmentEncoded = function(uri, fragment) {
  return goog.uri.utils.removeFragment(uri) + (fragment ? "#" + fragment : "");
};
goog.uri.utils.getFragment = function(uri) {
  return goog.uri.utils.decodeIfPossible_(goog.uri.utils.getFragmentEncoded(uri));
};
goog.uri.utils.getHost = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(pieces[goog.uri.utils.ComponentIndex.SCHEME], pieces[goog.uri.utils.ComponentIndex.USER_INFO], pieces[goog.uri.utils.ComponentIndex.DOMAIN], pieces[goog.uri.utils.ComponentIndex.PORT]);
};
goog.uri.utils.getPathAndAfter = function(uri) {
  var pieces = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(null, null, null, null, pieces[goog.uri.utils.ComponentIndex.PATH], pieces[goog.uri.utils.ComponentIndex.QUERY_DATA], pieces[goog.uri.utils.ComponentIndex.FRAGMENT]);
};
goog.uri.utils.removeFragment = function(uri) {
  var hashIndex = uri.indexOf("#");
  return hashIndex < 0 ? uri : uri.substr(0, hashIndex);
};
goog.uri.utils.haveSameDomain = function(uri1, uri2) {
  var pieces1 = goog.uri.utils.split(uri1);
  var pieces2 = goog.uri.utils.split(uri2);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.SCHEME] == pieces2[goog.uri.utils.ComponentIndex.SCHEME] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT];
};
goog.uri.utils.assertNoFragmentsOrQueries_ = function(uri) {
  if (goog.DEBUG && (uri.indexOf("#") >= 0 || uri.indexOf("?") >= 0)) {
    throw Error("goog.uri.utils: Fragment or query identifiers are not " + "supported: [" + uri + "]");
  }
};
goog.uri.utils.QueryValue;
goog.uri.utils.QueryArray;
goog.uri.utils.appendQueryData_ = function(buffer) {
  if (buffer[1]) {
    var baseUri = (buffer[0]);
    var hashIndex = baseUri.indexOf("#");
    if (hashIndex >= 0) {
      buffer.push(baseUri.substr(hashIndex));
      buffer[0] = baseUri = baseUri.substr(0, hashIndex);
    }
    var questionIndex = baseUri.indexOf("?");
    if (questionIndex < 0) {
      buffer[1] = "?";
    } else {
      if (questionIndex == baseUri.length - 1) {
        buffer[1] = undefined;
      }
    }
  }
  return buffer.join("");
};
goog.uri.utils.appendKeyValuePairs_ = function(key, value, pairs) {
  if (goog.isArray(value)) {
    goog.asserts.assertArray(value);
    for (var j = 0;j < value.length;j++) {
      goog.uri.utils.appendKeyValuePairs_(key, String(value[j]), pairs);
    }
  } else {
    if (value != null) {
      pairs.push("\x26", key, value === "" ? "" : "\x3d", goog.string.urlEncode(value));
    }
  }
};
goog.uri.utils.buildQueryDataBuffer_ = function(buffer, keysAndValues, opt_startIndex) {
  goog.asserts.assert(Math.max(keysAndValues.length - (opt_startIndex || 0), 0) % 2 == 0, "goog.uri.utils: Key/value lists must be even in length.");
  for (var i = opt_startIndex || 0;i < keysAndValues.length;i += 2) {
    goog.uri.utils.appendKeyValuePairs_(keysAndValues[i], keysAndValues[i + 1], buffer);
  }
  return buffer;
};
goog.uri.utils.buildQueryData = function(keysAndValues, opt_startIndex) {
  var buffer = goog.uri.utils.buildQueryDataBuffer_([], keysAndValues, opt_startIndex);
  buffer[0] = "";
  return buffer.join("");
};
goog.uri.utils.buildQueryDataBufferFromMap_ = function(buffer, map) {
  for (var key in map) {
    goog.uri.utils.appendKeyValuePairs_(key, map[key], buffer);
  }
  return buffer;
};
goog.uri.utils.buildQueryDataFromMap = function(map) {
  var buffer = goog.uri.utils.buildQueryDataBufferFromMap_([], map);
  buffer[0] = "";
  return buffer.join("");
};
goog.uri.utils.appendParams = function(uri, var_args) {
  return goog.uri.utils.appendQueryData_(arguments.length == 2 ? goog.uri.utils.buildQueryDataBuffer_([uri], arguments[1], 0) : goog.uri.utils.buildQueryDataBuffer_([uri], arguments, 1));
};
goog.uri.utils.appendParamsFromMap = function(uri, map) {
  return goog.uri.utils.appendQueryData_(goog.uri.utils.buildQueryDataBufferFromMap_([uri], map));
};
goog.uri.utils.appendParam = function(uri, key, opt_value) {
  var paramArr = [uri, "\x26", key];
  if (goog.isDefAndNotNull(opt_value)) {
    paramArr.push("\x3d", goog.string.urlEncode(opt_value));
  }
  return goog.uri.utils.appendQueryData_(paramArr);
};
goog.uri.utils.findParam_ = function(uri, startIndex, keyEncoded, hashOrEndIndex) {
  var index = startIndex;
  var keyLength = keyEncoded.length;
  while ((index = uri.indexOf(keyEncoded, index)) >= 0 && index < hashOrEndIndex) {
    var precedingChar = uri.charCodeAt(index - 1);
    if (precedingChar == goog.uri.utils.CharCode_.AMPERSAND || precedingChar == goog.uri.utils.CharCode_.QUESTION) {
      var followingChar = uri.charCodeAt(index + keyLength);
      if (!followingChar || followingChar == goog.uri.utils.CharCode_.EQUAL || followingChar == goog.uri.utils.CharCode_.AMPERSAND || followingChar == goog.uri.utils.CharCode_.HASH) {
        return index;
      }
    }
    index += keyLength + 1;
  }
  return-1;
};
goog.uri.utils.hashOrEndRe_ = /#|$/;
goog.uri.utils.hasParam = function(uri, keyEncoded) {
  return goog.uri.utils.findParam_(uri, 0, keyEncoded, uri.search(goog.uri.utils.hashOrEndRe_)) >= 0;
};
goog.uri.utils.getParamValue = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var foundIndex = goog.uri.utils.findParam_(uri, 0, keyEncoded, hashOrEndIndex);
  if (foundIndex < 0) {
    return null;
  } else {
    var endPosition = uri.indexOf("\x26", foundIndex);
    if (endPosition < 0 || endPosition > hashOrEndIndex) {
      endPosition = hashOrEndIndex;
    }
    foundIndex += keyEncoded.length + 1;
    return goog.string.urlDecode(uri.substr(foundIndex, endPosition - foundIndex));
  }
};
goog.uri.utils.getParamValues = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var result = [];
  while ((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    position = uri.indexOf("\x26", foundIndex);
    if (position < 0 || position > hashOrEndIndex) {
      position = hashOrEndIndex;
    }
    foundIndex += keyEncoded.length + 1;
    result.push(goog.string.urlDecode(uri.substr(foundIndex, position - foundIndex)));
  }
  return result;
};
goog.uri.utils.trailingQueryPunctuationRe_ = /[?&]($|#)/;
goog.uri.utils.removeParam = function(uri, keyEncoded) {
  var hashOrEndIndex = uri.search(goog.uri.utils.hashOrEndRe_);
  var position = 0;
  var foundIndex;
  var buffer = [];
  while ((foundIndex = goog.uri.utils.findParam_(uri, position, keyEncoded, hashOrEndIndex)) >= 0) {
    buffer.push(uri.substring(position, foundIndex));
    position = Math.min(uri.indexOf("\x26", foundIndex) + 1 || hashOrEndIndex, hashOrEndIndex);
  }
  buffer.push(uri.substr(position));
  return buffer.join("").replace(goog.uri.utils.trailingQueryPunctuationRe_, "$1");
};
goog.uri.utils.setParam = function(uri, keyEncoded, value) {
  return goog.uri.utils.appendParam(goog.uri.utils.removeParam(uri, keyEncoded), keyEncoded, value);
};
goog.uri.utils.appendPath = function(baseUri, path) {
  goog.uri.utils.assertNoFragmentsOrQueries_(baseUri);
  if (goog.string.endsWith(baseUri, "/")) {
    baseUri = baseUri.substr(0, baseUri.length - 1);
  }
  if (goog.string.startsWith(path, "/")) {
    path = path.substr(1);
  }
  return goog.string.buildString(baseUri, "/", path);
};
goog.uri.utils.setPath = function(uri, path) {
  if (!goog.string.startsWith(path, "/")) {
    path = "/" + path;
  }
  var parts = goog.uri.utils.split(uri);
  return goog.uri.utils.buildFromEncodedParts(parts[goog.uri.utils.ComponentIndex.SCHEME], parts[goog.uri.utils.ComponentIndex.USER_INFO], parts[goog.uri.utils.ComponentIndex.DOMAIN], parts[goog.uri.utils.ComponentIndex.PORT], path, parts[goog.uri.utils.ComponentIndex.QUERY_DATA], parts[goog.uri.utils.ComponentIndex.FRAGMENT]);
};
goog.uri.utils.StandardQueryParam = {RANDOM:"zx"};
goog.uri.utils.makeUnique = function(uri) {
  return goog.uri.utils.setParam(uri, goog.uri.utils.StandardQueryParam.RANDOM, goog.string.getRandomString());
};
goog.provide("goog.Uri");
goog.provide("goog.Uri.QueryData");
goog.require("goog.array");
goog.require("goog.string");
goog.require("goog.structs");
goog.require("goog.structs.Map");
goog.require("goog.uri.utils");
goog.require("goog.uri.utils.ComponentIndex");
goog.require("goog.uri.utils.StandardQueryParam");
goog.Uri = function(opt_uri, opt_ignoreCase) {
  var m;
  if (opt_uri instanceof goog.Uri) {
    this.ignoreCase_ = goog.isDef(opt_ignoreCase) ? opt_ignoreCase : opt_uri.getIgnoreCase();
    this.setScheme(opt_uri.getScheme());
    this.setUserInfo(opt_uri.getUserInfo());
    this.setDomain(opt_uri.getDomain());
    this.setPort(opt_uri.getPort());
    this.setPath(opt_uri.getPath());
    this.setQueryData(opt_uri.getQueryData().clone());
    this.setFragment(opt_uri.getFragment());
  } else {
    if (opt_uri && (m = goog.uri.utils.split(String(opt_uri)))) {
      this.ignoreCase_ = !!opt_ignoreCase;
      this.setScheme(m[goog.uri.utils.ComponentIndex.SCHEME] || "", true);
      this.setUserInfo(m[goog.uri.utils.ComponentIndex.USER_INFO] || "", true);
      this.setDomain(m[goog.uri.utils.ComponentIndex.DOMAIN] || "", true);
      this.setPort(m[goog.uri.utils.ComponentIndex.PORT]);
      this.setPath(m[goog.uri.utils.ComponentIndex.PATH] || "", true);
      this.setQueryData(m[goog.uri.utils.ComponentIndex.QUERY_DATA] || "", true);
      this.setFragment(m[goog.uri.utils.ComponentIndex.FRAGMENT] || "", true);
    } else {
      this.ignoreCase_ = !!opt_ignoreCase;
      this.queryData_ = new goog.Uri.QueryData(null, null, this.ignoreCase_);
    }
  }
};
goog.Uri.preserveParameterTypesCompatibilityFlag = false;
goog.Uri.RANDOM_PARAM = goog.uri.utils.StandardQueryParam.RANDOM;
goog.Uri.prototype.scheme_ = "";
goog.Uri.prototype.userInfo_ = "";
goog.Uri.prototype.domain_ = "";
goog.Uri.prototype.port_ = null;
goog.Uri.prototype.path_ = "";
goog.Uri.prototype.queryData_;
goog.Uri.prototype.fragment_ = "";
goog.Uri.prototype.isReadOnly_ = false;
goog.Uri.prototype.ignoreCase_ = false;
goog.Uri.prototype.toString = function() {
  var out = [];
  var scheme = this.getScheme();
  if (scheme) {
    out.push(goog.Uri.encodeSpecialChars_(scheme, goog.Uri.reDisallowedInSchemeOrUserInfo_), ":");
  }
  var domain = this.getDomain();
  if (domain) {
    out.push("//");
    var userInfo = this.getUserInfo();
    if (userInfo) {
      out.push(goog.Uri.encodeSpecialChars_(userInfo, goog.Uri.reDisallowedInSchemeOrUserInfo_), "@");
    }
    out.push(goog.string.urlEncode(domain));
    var port = this.getPort();
    if (port != null) {
      out.push(":", String(port));
    }
  }
  var path = this.getPath();
  if (path) {
    if (this.hasDomain() && path.charAt(0) != "/") {
      out.push("/");
    }
    out.push(goog.Uri.encodeSpecialChars_(path, path.charAt(0) == "/" ? goog.Uri.reDisallowedInAbsolutePath_ : goog.Uri.reDisallowedInRelativePath_));
  }
  var query = this.getEncodedQuery();
  if (query) {
    out.push("?", query);
  }
  var fragment = this.getFragment();
  if (fragment) {
    out.push("#", goog.Uri.encodeSpecialChars_(fragment, goog.Uri.reDisallowedInFragment_));
  }
  return out.join("");
};
goog.Uri.prototype.resolve = function(relativeUri) {
  var absoluteUri = this.clone();
  var overridden = relativeUri.hasScheme();
  if (overridden) {
    absoluteUri.setScheme(relativeUri.getScheme());
  } else {
    overridden = relativeUri.hasUserInfo();
  }
  if (overridden) {
    absoluteUri.setUserInfo(relativeUri.getUserInfo());
  } else {
    overridden = relativeUri.hasDomain();
  }
  if (overridden) {
    absoluteUri.setDomain(relativeUri.getDomain());
  } else {
    overridden = relativeUri.hasPort();
  }
  var path = relativeUri.getPath();
  if (overridden) {
    absoluteUri.setPort(relativeUri.getPort());
  } else {
    overridden = relativeUri.hasPath();
    if (overridden) {
      if (path.charAt(0) != "/") {
        if (this.hasDomain() && !this.hasPath()) {
          path = "/" + path;
        } else {
          var lastSlashIndex = absoluteUri.getPath().lastIndexOf("/");
          if (lastSlashIndex != -1) {
            path = absoluteUri.getPath().substr(0, lastSlashIndex + 1) + path;
          }
        }
      }
      path = goog.Uri.removeDotSegments(path);
    }
  }
  if (overridden) {
    absoluteUri.setPath(path);
  } else {
    overridden = relativeUri.hasQuery();
  }
  if (overridden) {
    absoluteUri.setQueryData(relativeUri.getDecodedQuery());
  } else {
    overridden = relativeUri.hasFragment();
  }
  if (overridden) {
    absoluteUri.setFragment(relativeUri.getFragment());
  }
  return absoluteUri;
};
goog.Uri.prototype.clone = function() {
  return new goog.Uri(this);
};
goog.Uri.prototype.getScheme = function() {
  return this.scheme_;
};
goog.Uri.prototype.setScheme = function(newScheme, opt_decode) {
  this.enforceReadOnly();
  this.scheme_ = opt_decode ? goog.Uri.decodeOrEmpty_(newScheme) : newScheme;
  if (this.scheme_) {
    this.scheme_ = this.scheme_.replace(/:$/, "");
  }
  return this;
};
goog.Uri.prototype.hasScheme = function() {
  return!!this.scheme_;
};
goog.Uri.prototype.getUserInfo = function() {
  return this.userInfo_;
};
goog.Uri.prototype.setUserInfo = function(newUserInfo, opt_decode) {
  this.enforceReadOnly();
  this.userInfo_ = opt_decode ? goog.Uri.decodeOrEmpty_(newUserInfo) : newUserInfo;
  return this;
};
goog.Uri.prototype.hasUserInfo = function() {
  return!!this.userInfo_;
};
goog.Uri.prototype.getDomain = function() {
  return this.domain_;
};
goog.Uri.prototype.setDomain = function(newDomain, opt_decode) {
  this.enforceReadOnly();
  this.domain_ = opt_decode ? goog.Uri.decodeOrEmpty_(newDomain) : newDomain;
  return this;
};
goog.Uri.prototype.hasDomain = function() {
  return!!this.domain_;
};
goog.Uri.prototype.getPort = function() {
  return this.port_;
};
goog.Uri.prototype.setPort = function(newPort) {
  this.enforceReadOnly();
  if (newPort) {
    newPort = Number(newPort);
    if (isNaN(newPort) || newPort < 0) {
      throw Error("Bad port number " + newPort);
    }
    this.port_ = newPort;
  } else {
    this.port_ = null;
  }
  return this;
};
goog.Uri.prototype.hasPort = function() {
  return this.port_ != null;
};
goog.Uri.prototype.getPath = function() {
  return this.path_;
};
goog.Uri.prototype.setPath = function(newPath, opt_decode) {
  this.enforceReadOnly();
  this.path_ = opt_decode ? goog.Uri.decodeOrEmpty_(newPath) : newPath;
  return this;
};
goog.Uri.prototype.hasPath = function() {
  return!!this.path_;
};
goog.Uri.prototype.hasQuery = function() {
  return this.queryData_.toString() !== "";
};
goog.Uri.prototype.setQueryData = function(queryData, opt_decode) {
  this.enforceReadOnly();
  if (queryData instanceof goog.Uri.QueryData) {
    this.queryData_ = queryData;
    this.queryData_.setIgnoreCase(this.ignoreCase_);
  } else {
    if (!opt_decode) {
      queryData = goog.Uri.encodeSpecialChars_(queryData, goog.Uri.reDisallowedInQuery_);
    }
    this.queryData_ = new goog.Uri.QueryData(queryData, null, this.ignoreCase_);
  }
  return this;
};
goog.Uri.prototype.setQuery = function(newQuery, opt_decode) {
  return this.setQueryData(newQuery, opt_decode);
};
goog.Uri.prototype.getEncodedQuery = function() {
  return this.queryData_.toString();
};
goog.Uri.prototype.getDecodedQuery = function() {
  return this.queryData_.toDecodedString();
};
goog.Uri.prototype.getQueryData = function() {
  return this.queryData_;
};
goog.Uri.prototype.getQuery = function() {
  return this.getEncodedQuery();
};
goog.Uri.prototype.setParameterValue = function(key, value) {
  this.enforceReadOnly();
  this.queryData_.set(key, value);
  return this;
};
goog.Uri.prototype.setParameterValues = function(key, values) {
  this.enforceReadOnly();
  if (!goog.isArray(values)) {
    values = [String(values)];
  }
  this.queryData_.setValues(key, (values));
  return this;
};
goog.Uri.prototype.getParameterValues = function(name) {
  return this.queryData_.getValues(name);
};
goog.Uri.prototype.getParameterValue = function(paramName) {
  return(this.queryData_.get(paramName));
};
goog.Uri.prototype.getFragment = function() {
  return this.fragment_;
};
goog.Uri.prototype.setFragment = function(newFragment, opt_decode) {
  this.enforceReadOnly();
  this.fragment_ = opt_decode ? goog.Uri.decodeOrEmpty_(newFragment) : newFragment;
  return this;
};
goog.Uri.prototype.hasFragment = function() {
  return!!this.fragment_;
};
goog.Uri.prototype.hasSameDomainAs = function(uri2) {
  return(!this.hasDomain() && !uri2.hasDomain() || this.getDomain() == uri2.getDomain()) && (!this.hasPort() && !uri2.hasPort() || this.getPort() == uri2.getPort());
};
goog.Uri.prototype.makeUnique = function() {
  this.enforceReadOnly();
  this.setParameterValue(goog.Uri.RANDOM_PARAM, goog.string.getRandomString());
  return this;
};
goog.Uri.prototype.removeParameter = function(key) {
  this.enforceReadOnly();
  this.queryData_.remove(key);
  return this;
};
goog.Uri.prototype.setReadOnly = function(isReadOnly) {
  this.isReadOnly_ = isReadOnly;
  return this;
};
goog.Uri.prototype.isReadOnly = function() {
  return this.isReadOnly_;
};
goog.Uri.prototype.enforceReadOnly = function() {
  if (this.isReadOnly_) {
    throw Error("Tried to modify a read-only Uri");
  }
};
goog.Uri.prototype.setIgnoreCase = function(ignoreCase) {
  this.ignoreCase_ = ignoreCase;
  if (this.queryData_) {
    this.queryData_.setIgnoreCase(ignoreCase);
  }
  return this;
};
goog.Uri.prototype.getIgnoreCase = function() {
  return this.ignoreCase_;
};
goog.Uri.parse = function(uri, opt_ignoreCase) {
  return uri instanceof goog.Uri ? uri.clone() : new goog.Uri(uri, opt_ignoreCase);
};
goog.Uri.create = function(opt_scheme, opt_userInfo, opt_domain, opt_port, opt_path, opt_query, opt_fragment, opt_ignoreCase) {
  var uri = new goog.Uri(null, opt_ignoreCase);
  opt_scheme && uri.setScheme(opt_scheme);
  opt_userInfo && uri.setUserInfo(opt_userInfo);
  opt_domain && uri.setDomain(opt_domain);
  opt_port && uri.setPort(opt_port);
  opt_path && uri.setPath(opt_path);
  opt_query && uri.setQueryData(opt_query);
  opt_fragment && uri.setFragment(opt_fragment);
  return uri;
};
goog.Uri.resolve = function(base, rel) {
  if (!(base instanceof goog.Uri)) {
    base = goog.Uri.parse(base);
  }
  if (!(rel instanceof goog.Uri)) {
    rel = goog.Uri.parse(rel);
  }
  return base.resolve(rel);
};
goog.Uri.removeDotSegments = function(path) {
  if (path == ".." || path == ".") {
    return "";
  } else {
    if (!goog.string.contains(path, "./") && !goog.string.contains(path, "/.")) {
      return path;
    } else {
      var leadingSlash = goog.string.startsWith(path, "/");
      var segments = path.split("/");
      var out = [];
      for (var pos = 0;pos < segments.length;) {
        var segment = segments[pos++];
        if (segment == ".") {
          if (leadingSlash && pos == segments.length) {
            out.push("");
          }
        } else {
          if (segment == "..") {
            if (out.length > 1 || out.length == 1 && out[0] != "") {
              out.pop();
            }
            if (leadingSlash && pos == segments.length) {
              out.push("");
            }
          } else {
            out.push(segment);
            leadingSlash = true;
          }
        }
      }
      return out.join("/");
    }
  }
};
goog.Uri.decodeOrEmpty_ = function(val) {
  return val ? decodeURIComponent(val) : "";
};
goog.Uri.encodeSpecialChars_ = function(unescapedPart, extra) {
  if (goog.isString(unescapedPart)) {
    return encodeURI(unescapedPart).replace(extra, goog.Uri.encodeChar_);
  }
  return null;
};
goog.Uri.encodeChar_ = function(ch) {
  var n = ch.charCodeAt(0);
  return "%" + (n >> 4 & 15).toString(16) + (n & 15).toString(16);
};
goog.Uri.reDisallowedInSchemeOrUserInfo_ = /[#\/\?@]/g;
goog.Uri.reDisallowedInRelativePath_ = /[\#\?:]/g;
goog.Uri.reDisallowedInAbsolutePath_ = /[\#\?]/g;
goog.Uri.reDisallowedInQuery_ = /[\#\?@]/g;
goog.Uri.reDisallowedInFragment_ = /#/g;
goog.Uri.haveSameDomain = function(uri1String, uri2String) {
  var pieces1 = goog.uri.utils.split(uri1String);
  var pieces2 = goog.uri.utils.split(uri2String);
  return pieces1[goog.uri.utils.ComponentIndex.DOMAIN] == pieces2[goog.uri.utils.ComponentIndex.DOMAIN] && pieces1[goog.uri.utils.ComponentIndex.PORT] == pieces2[goog.uri.utils.ComponentIndex.PORT];
};
goog.Uri.QueryData = function(opt_query, opt_uri, opt_ignoreCase) {
  this.encodedQuery_ = opt_query || null;
  this.ignoreCase_ = !!opt_ignoreCase;
};
goog.Uri.QueryData.prototype.ensureKeyMapInitialized_ = function() {
  if (!this.keyMap_) {
    this.keyMap_ = new goog.structs.Map;
    this.count_ = 0;
    if (this.encodedQuery_) {
      var pairs = this.encodedQuery_.split("\x26");
      for (var i = 0;i < pairs.length;i++) {
        var indexOfEquals = pairs[i].indexOf("\x3d");
        var name = null;
        var value = null;
        if (indexOfEquals >= 0) {
          name = pairs[i].substring(0, indexOfEquals);
          value = pairs[i].substring(indexOfEquals + 1);
        } else {
          name = pairs[i];
        }
        name = goog.string.urlDecode(name);
        name = this.getKeyName_(name);
        this.add(name, value ? goog.string.urlDecode(value) : "");
      }
    }
  }
};
goog.Uri.QueryData.createFromMap = function(map, opt_uri, opt_ignoreCase) {
  var keys = goog.structs.getKeys(map);
  if (typeof keys == "undefined") {
    throw Error("Keys are undefined");
  }
  var queryData = new goog.Uri.QueryData(null, null, opt_ignoreCase);
  var values = goog.structs.getValues(map);
  for (var i = 0;i < keys.length;i++) {
    var key = keys[i];
    var value = values[i];
    if (!goog.isArray(value)) {
      queryData.add(key, value);
    } else {
      queryData.setValues(key, value);
    }
  }
  return queryData;
};
goog.Uri.QueryData.createFromKeysValues = function(keys, values, opt_uri, opt_ignoreCase) {
  if (keys.length != values.length) {
    throw Error("Mismatched lengths for keys/values");
  }
  var queryData = new goog.Uri.QueryData(null, null, opt_ignoreCase);
  for (var i = 0;i < keys.length;i++) {
    queryData.add(keys[i], values[i]);
  }
  return queryData;
};
goog.Uri.QueryData.prototype.keyMap_ = null;
goog.Uri.QueryData.prototype.count_ = null;
goog.Uri.QueryData.prototype.getCount = function() {
  this.ensureKeyMapInitialized_();
  return this.count_;
};
goog.Uri.QueryData.prototype.add = function(key, value) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  var values = this.keyMap_.get(key);
  if (!values) {
    this.keyMap_.set(key, values = []);
  }
  values.push(value);
  this.count_++;
  return this;
};
goog.Uri.QueryData.prototype.remove = function(key) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  if (this.keyMap_.containsKey(key)) {
    this.invalidateCache_();
    this.count_ -= this.keyMap_.get(key).length;
    return this.keyMap_.remove(key);
  }
  return false;
};
goog.Uri.QueryData.prototype.clear = function() {
  this.invalidateCache_();
  this.keyMap_ = null;
  this.count_ = 0;
};
goog.Uri.QueryData.prototype.isEmpty = function() {
  this.ensureKeyMapInitialized_();
  return this.count_ == 0;
};
goog.Uri.QueryData.prototype.containsKey = function(key) {
  this.ensureKeyMapInitialized_();
  key = this.getKeyName_(key);
  return this.keyMap_.containsKey(key);
};
goog.Uri.QueryData.prototype.containsValue = function(value) {
  var vals = this.getValues();
  return goog.array.contains(vals, value);
};
goog.Uri.QueryData.prototype.getKeys = function() {
  this.ensureKeyMapInitialized_();
  var vals = (this.keyMap_.getValues());
  var keys = this.keyMap_.getKeys();
  var rv = [];
  for (var i = 0;i < keys.length;i++) {
    var val = vals[i];
    for (var j = 0;j < val.length;j++) {
      rv.push(keys[i]);
    }
  }
  return rv;
};
goog.Uri.QueryData.prototype.getValues = function(opt_key) {
  this.ensureKeyMapInitialized_();
  var rv = [];
  if (goog.isString(opt_key)) {
    if (this.containsKey(opt_key)) {
      rv = goog.array.concat(rv, this.keyMap_.get(this.getKeyName_(opt_key)));
    }
  } else {
    var values = (this.keyMap_.getValues());
    for (var i = 0;i < values.length;i++) {
      rv = goog.array.concat(rv, values[i]);
    }
  }
  return rv;
};
goog.Uri.QueryData.prototype.set = function(key, value) {
  this.ensureKeyMapInitialized_();
  this.invalidateCache_();
  key = this.getKeyName_(key);
  if (this.containsKey(key)) {
    this.count_ -= this.keyMap_.get(key).length;
  }
  this.keyMap_.set(key, [value]);
  this.count_++;
  return this;
};
goog.Uri.QueryData.prototype.get = function(key, opt_default) {
  var values = key ? this.getValues(key) : [];
  if (goog.Uri.preserveParameterTypesCompatibilityFlag) {
    return values.length > 0 ? values[0] : opt_default;
  } else {
    return values.length > 0 ? String(values[0]) : opt_default;
  }
};
goog.Uri.QueryData.prototype.setValues = function(key, values) {
  this.remove(key);
  if (values.length > 0) {
    this.invalidateCache_();
    this.keyMap_.set(this.getKeyName_(key), goog.array.clone(values));
    this.count_ += values.length;
  }
};
goog.Uri.QueryData.prototype.toString = function() {
  if (this.encodedQuery_) {
    return this.encodedQuery_;
  }
  if (!this.keyMap_) {
    return "";
  }
  var sb = [];
  var keys = this.keyMap_.getKeys();
  for (var i = 0;i < keys.length;i++) {
    var key = keys[i];
    var encodedKey = goog.string.urlEncode(key);
    var val = this.getValues(key);
    for (var j = 0;j < val.length;j++) {
      var param = encodedKey;
      if (val[j] !== "") {
        param += "\x3d" + goog.string.urlEncode(val[j]);
      }
      sb.push(param);
    }
  }
  return this.encodedQuery_ = sb.join("\x26");
};
goog.Uri.QueryData.prototype.toDecodedString = function() {
  return goog.Uri.decodeOrEmpty_(this.toString());
};
goog.Uri.QueryData.prototype.invalidateCache_ = function() {
  this.encodedQuery_ = null;
};
goog.Uri.QueryData.prototype.filterKeys = function(keys) {
  this.ensureKeyMapInitialized_();
  this.keyMap_.forEach(function(value, key) {
    if (!goog.array.contains(keys, key)) {
      this.remove(key);
    }
  }, this);
  return this;
};
goog.Uri.QueryData.prototype.clone = function() {
  var rv = new goog.Uri.QueryData;
  rv.encodedQuery_ = this.encodedQuery_;
  if (this.keyMap_) {
    rv.keyMap_ = this.keyMap_.clone();
    rv.count_ = this.count_;
  }
  return rv;
};
goog.Uri.QueryData.prototype.getKeyName_ = function(arg) {
  var keyName = String(arg);
  if (this.ignoreCase_) {
    keyName = keyName.toLowerCase();
  }
  return keyName;
};
goog.Uri.QueryData.prototype.setIgnoreCase = function(ignoreCase) {
  var resetKeys = ignoreCase && !this.ignoreCase_;
  if (resetKeys) {
    this.ensureKeyMapInitialized_();
    this.invalidateCache_();
    this.keyMap_.forEach(function(value, key) {
      var lowerCase = key.toLowerCase();
      if (key != lowerCase) {
        this.remove(key);
        this.setValues(lowerCase, value);
      }
    }, this);
  }
  this.ignoreCase_ = ignoreCase;
};
goog.Uri.QueryData.prototype.extend = function(var_args) {
  for (var i = 0;i < arguments.length;i++) {
    var data = arguments[i];
    goog.structs.forEach(data, function(value, key) {
      this.add(key, value);
    }, this);
  }
};
goog.provide("goog.Thenable");
goog.Thenable = function() {
};
goog.Thenable.prototype.then = function(opt_onFulfilled, opt_onRejected, opt_context) {
};
goog.Thenable.IMPLEMENTED_BY_PROP = "$goog_Thenable";
goog.Thenable.addImplementation = function(ctor) {
  goog.exportProperty(ctor.prototype, "then", ctor.prototype.then);
  if (COMPILED) {
    ctor.prototype[goog.Thenable.IMPLEMENTED_BY_PROP] = true;
  } else {
    ctor.prototype.$goog_Thenable = true;
  }
};
goog.Thenable.isImplementedBy = function(object) {
  if (!object) {
    return false;
  }
  try {
    if (COMPILED) {
      return!!object[goog.Thenable.IMPLEMENTED_BY_PROP];
    }
    return!!object.$goog_Thenable;
  } catch (e) {
    return false;
  }
};
goog.provide("goog.debug.EntryPointMonitor");
goog.provide("goog.debug.entryPointRegistry");
goog.require("goog.asserts");
goog.debug.EntryPointMonitor = function() {
};
goog.debug.EntryPointMonitor.prototype.wrap;
goog.debug.EntryPointMonitor.prototype.unwrap;
goog.debug.entryPointRegistry.refList_ = [];
goog.debug.entryPointRegistry.monitors_ = [];
goog.debug.entryPointRegistry.monitorsMayExist_ = false;
goog.debug.entryPointRegistry.register = function(callback) {
  goog.debug.entryPointRegistry.refList_[goog.debug.entryPointRegistry.refList_.length] = callback;
  if (goog.debug.entryPointRegistry.monitorsMayExist_) {
    var monitors = goog.debug.entryPointRegistry.monitors_;
    for (var i = 0;i < monitors.length;i++) {
      callback(goog.bind(monitors[i].wrap, monitors[i]));
    }
  }
};
goog.debug.entryPointRegistry.monitorAll = function(monitor) {
  goog.debug.entryPointRegistry.monitorsMayExist_ = true;
  var transformer = goog.bind(monitor.wrap, monitor);
  for (var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer);
  }
  goog.debug.entryPointRegistry.monitors_.push(monitor);
};
goog.debug.entryPointRegistry.unmonitorAllIfPossible = function(monitor) {
  var monitors = goog.debug.entryPointRegistry.monitors_;
  goog.asserts.assert(monitor == monitors[monitors.length - 1], "Only the most recent monitor can be unwrapped.");
  var transformer = goog.bind(monitor.unwrap, monitor);
  for (var i = 0;i < goog.debug.entryPointRegistry.refList_.length;i++) {
    goog.debug.entryPointRegistry.refList_[i](transformer);
  }
  monitors.length--;
};
goog.provide("goog.async.nextTick");
goog.provide("goog.async.throwException");
goog.require("goog.debug.entryPointRegistry");
goog.require("goog.functions");
goog.async.throwException = function(exception) {
  goog.global.setTimeout(function() {
    throw exception;
  }, 0);
};
goog.async.nextTick = function(callback, opt_context) {
  var cb = callback;
  if (opt_context) {
    cb = goog.bind(callback, opt_context);
  }
  cb = goog.async.nextTick.wrapCallback_(cb);
  if (goog.isFunction(goog.global.setImmediate)) {
    goog.global.setImmediate(cb);
    return;
  }
  if (!goog.async.nextTick.setImmediate_) {
    goog.async.nextTick.setImmediate_ = goog.async.nextTick.getSetImmediateEmulator_();
  }
  goog.async.nextTick.setImmediate_(cb);
};
goog.async.nextTick.setImmediate_;
goog.async.nextTick.getSetImmediateEmulator_ = function() {
  var Channel = goog.global["MessageChannel"];
  if (typeof Channel === "undefined" && typeof window !== "undefined" && window.postMessage && window.addEventListener) {
    Channel = function() {
      var iframe = document.createElement("iframe");
      iframe.style.display = "none";
      iframe.src = "";
      document.documentElement.appendChild(iframe);
      var win = iframe.contentWindow;
      var doc = win.document;
      doc.open();
      doc.write("");
      doc.close();
      var message = "callImmediate" + Math.random();
      var origin = win.location.protocol == "file:" ? "*" : win.location.protocol + "//" + win.location.host;
      var onmessage = goog.bind(function(e) {
        if (e.origin != origin && e.data != message) {
          return;
        }
        this["port1"].onmessage();
      }, this);
      win.addEventListener("message", onmessage, false);
      this["port1"] = {};
      this["port2"] = {postMessage:function() {
        win.postMessage(message, origin);
      }};
    };
  }
  if (typeof Channel !== "undefined") {
    var channel = new Channel;
    var head = {};
    var tail = head;
    channel["port1"].onmessage = function() {
      head = head.next;
      var cb = head.cb;
      head.cb = null;
      cb();
    };
    return function(cb) {
      tail.next = {cb:cb};
      tail = tail.next;
      channel["port2"].postMessage(0);
    };
  }
  if (typeof document !== "undefined" && "onreadystatechange" in document.createElement("script")) {
    return function(cb) {
      var script = document.createElement("script");
      script.onreadystatechange = function() {
        script.onreadystatechange = null;
        script.parentNode.removeChild(script);
        script = null;
        cb();
        cb = null;
      };
      document.documentElement.appendChild(script);
    };
  }
  return function(cb) {
    goog.global.setTimeout(cb, 0);
  };
};
goog.async.nextTick.wrapCallback_ = goog.functions.identity;
goog.debug.entryPointRegistry.register(function(transformer) {
  goog.async.nextTick.wrapCallback_ = transformer;
});
goog.provide("goog.testing.watchers");
goog.testing.watchers.resetWatchers_ = [];
goog.testing.watchers.signalClockReset = function() {
  var watchers = goog.testing.watchers.resetWatchers_;
  for (var i = 0;i < watchers.length;i++) {
    goog.testing.watchers.resetWatchers_[i]();
  }
};
goog.testing.watchers.watchClockReset = function(fn) {
  goog.testing.watchers.resetWatchers_.push(fn);
};
goog.provide("goog.async.run");
goog.require("goog.async.nextTick");
goog.require("goog.async.throwException");
goog.require("goog.testing.watchers");
goog.async.run = function(callback, opt_context) {
  if (!goog.async.run.schedule_) {
    goog.async.run.initializeRunner_();
  }
  if (!goog.async.run.workQueueScheduled_) {
    goog.async.run.schedule_();
    goog.async.run.workQueueScheduled_ = true;
  }
  goog.async.run.workQueue_.push(new goog.async.run.WorkItem_(callback, opt_context));
};
goog.async.run.initializeRunner_ = function() {
  if (goog.global.Promise && goog.global.Promise.resolve) {
    var promise = goog.global.Promise.resolve();
    goog.async.run.schedule_ = function() {
      promise.then(goog.async.run.processWorkQueue);
    };
  } else {
    goog.async.run.schedule_ = function() {
      goog.async.nextTick(goog.async.run.processWorkQueue);
    };
  }
};
goog.async.run.forceNextTick = function() {
  goog.async.run.schedule_ = function() {
    goog.async.nextTick(goog.async.run.processWorkQueue);
  };
};
goog.async.run.schedule_;
goog.async.run.workQueueScheduled_ = false;
goog.async.run.workQueue_ = [];
if (goog.DEBUG) {
  goog.async.run.resetQueue_ = function() {
    goog.async.run.workQueueScheduled_ = false;
    goog.async.run.workQueue_ = [];
  };
  goog.testing.watchers.watchClockReset(goog.async.run.resetQueue_);
}
goog.async.run.processWorkQueue = function() {
  while (goog.async.run.workQueue_.length) {
    var workItems = goog.async.run.workQueue_;
    goog.async.run.workQueue_ = [];
    for (var i = 0;i < workItems.length;i++) {
      var workItem = workItems[i];
      try {
        workItem.fn.call(workItem.scope);
      } catch (e) {
        goog.async.throwException(e);
      }
    }
  }
  goog.async.run.workQueueScheduled_ = false;
};
goog.async.run.WorkItem_ = function(fn, scope) {
  this.fn = fn;
  this.scope = scope;
};
goog.provide("goog.promise.Resolver");
goog.promise.Resolver = function() {
};
goog.promise.Resolver.prototype.promise;
goog.promise.Resolver.prototype.resolve;
goog.promise.Resolver.prototype.reject;
goog.provide("goog.Promise");
goog.require("goog.Thenable");
goog.require("goog.asserts");
goog.require("goog.async.run");
goog.require("goog.async.throwException");
goog.require("goog.debug.Error");
goog.require("goog.promise.Resolver");
goog.Promise = function(resolver, opt_context) {
  this.state_ = goog.Promise.State_.PENDING;
  this.result_ = undefined;
  this.parent_ = null;
  this.callbackEntries_ = null;
  this.executing_ = false;
  if (goog.Promise.UNHANDLED_REJECTION_DELAY > 0) {
    this.unhandledRejectionId_ = 0;
  } else {
    if (goog.Promise.UNHANDLED_REJECTION_DELAY == 0) {
      this.hadUnhandledRejection_ = false;
    }
  }
  if (goog.Promise.LONG_STACK_TRACES) {
    this.stack_ = [];
    this.addStackTrace_(new Error("created"));
    this.currentStep_ = 0;
  }
  try {
    var self = this;
    resolver.call(opt_context, function(value) {
      self.resolve_(goog.Promise.State_.FULFILLED, value);
    }, function(reason) {
      self.resolve_(goog.Promise.State_.REJECTED, reason);
    });
  } catch (e) {
    this.resolve_(goog.Promise.State_.REJECTED, e);
  }
};
goog.define("goog.Promise.LONG_STACK_TRACES", false);
goog.define("goog.Promise.UNHANDLED_REJECTION_DELAY", 0);
goog.Promise.State_ = {PENDING:0, BLOCKED:1, FULFILLED:2, REJECTED:3};
goog.Promise.CallbackEntry_;
goog.Promise.resolve = function(opt_value) {
  return new goog.Promise(function(resolve, reject) {
    resolve(opt_value);
  });
};
goog.Promise.reject = function(opt_reason) {
  return new goog.Promise(function(resolve, reject) {
    reject(opt_reason);
  });
};
goog.Promise.race = function(promises) {
  return new goog.Promise(function(resolve, reject) {
    if (!promises.length) {
      resolve(undefined);
    }
    for (var i = 0, promise;promise = promises[i];i++) {
      promise.then(resolve, reject);
    }
  });
};
goog.Promise.all = function(promises) {
  return new goog.Promise(function(resolve, reject) {
    var toFulfill = promises.length;
    var values = [];
    if (!toFulfill) {
      resolve(values);
      return;
    }
    var onFulfill = function(index, value) {
      toFulfill--;
      values[index] = value;
      if (toFulfill == 0) {
        resolve(values);
      }
    };
    var onReject = function(reason) {
      reject(reason);
    };
    for (var i = 0, promise;promise = promises[i];i++) {
      promise.then(goog.partial(onFulfill, i), onReject);
    }
  });
};
goog.Promise.firstFulfilled = function(promises) {
  return new goog.Promise(function(resolve, reject) {
    var toReject = promises.length;
    var reasons = [];
    if (!toReject) {
      resolve(undefined);
      return;
    }
    var onFulfill = function(value) {
      resolve(value);
    };
    var onReject = function(index, reason) {
      toReject--;
      reasons[index] = reason;
      if (toReject == 0) {
        reject(reasons);
      }
    };
    for (var i = 0, promise;promise = promises[i];i++) {
      promise.then(onFulfill, goog.partial(onReject, i));
    }
  });
};
goog.Promise.withResolver = function() {
  var resolve, reject;
  var promise = new goog.Promise(function(rs, rj) {
    resolve = rs;
    reject = rj;
  });
  return new goog.Promise.Resolver_(promise, resolve, reject);
};
goog.Promise.prototype.then = function(opt_onFulfilled, opt_onRejected, opt_context) {
  if (opt_onFulfilled != null) {
    goog.asserts.assertFunction(opt_onFulfilled, "opt_onFulfilled should be a function.");
  }
  if (opt_onRejected != null) {
    goog.asserts.assertFunction(opt_onRejected, "opt_onRejected should be a function. Did you pass opt_context " + "as the second argument instead of the third?");
  }
  if (goog.Promise.LONG_STACK_TRACES) {
    this.addStackTrace_(new Error("then"));
  }
  return this.addChildPromise_(goog.isFunction(opt_onFulfilled) ? opt_onFulfilled : null, goog.isFunction(opt_onRejected) ? opt_onRejected : null, opt_context);
};
goog.Thenable.addImplementation(goog.Promise);
goog.Promise.prototype.thenAlways = function(onResolved, opt_context) {
  if (goog.Promise.LONG_STACK_TRACES) {
    this.addStackTrace_(new Error("thenAlways"));
  }
  var callback = function() {
    try {
      onResolved.call(opt_context);
    } catch (err) {
      goog.Promise.handleRejection_.call(null, err);
    }
  };
  this.addCallbackEntry_({child:null, onRejected:callback, onFulfilled:callback});
  return this;
};
goog.Promise.prototype.thenCatch = function(onRejected, opt_context) {
  if (goog.Promise.LONG_STACK_TRACES) {
    this.addStackTrace_(new Error("thenCatch"));
  }
  return this.addChildPromise_(null, onRejected, opt_context);
};
goog.Promise.prototype.cancel = function(opt_message) {
  if (this.state_ == goog.Promise.State_.PENDING) {
    goog.async.run(function() {
      var err = new goog.Promise.CancellationError(opt_message);
      this.cancelInternal_(err);
    }, this);
  }
};
goog.Promise.prototype.cancelInternal_ = function(err) {
  if (this.state_ == goog.Promise.State_.PENDING) {
    if (this.parent_) {
      this.parent_.cancelChild_(this, err);
    } else {
      this.resolve_(goog.Promise.State_.REJECTED, err);
    }
  }
};
goog.Promise.prototype.cancelChild_ = function(childPromise, err) {
  if (!this.callbackEntries_) {
    return;
  }
  var childCount = 0;
  var childIndex = -1;
  for (var i = 0, entry;entry = this.callbackEntries_[i];i++) {
    var child = entry.child;
    if (child) {
      childCount++;
      if (child == childPromise) {
        childIndex = i;
      }
      if (childIndex >= 0 && childCount > 1) {
        break;
      }
    }
  }
  if (childIndex >= 0) {
    if (this.state_ == goog.Promise.State_.PENDING && childCount == 1) {
      this.cancelInternal_(err);
    } else {
      var callbackEntry = this.callbackEntries_.splice(childIndex, 1)[0];
      this.executeCallback_(callbackEntry, goog.Promise.State_.REJECTED, err);
    }
  }
};
goog.Promise.prototype.addCallbackEntry_ = function(callbackEntry) {
  if ((!this.callbackEntries_ || !this.callbackEntries_.length) && (this.state_ == goog.Promise.State_.FULFILLED || this.state_ == goog.Promise.State_.REJECTED)) {
    this.scheduleCallbacks_();
  }
  if (!this.callbackEntries_) {
    this.callbackEntries_ = [];
  }
  this.callbackEntries_.push(callbackEntry);
};
goog.Promise.prototype.addChildPromise_ = function(onFulfilled, onRejected, opt_context) {
  var callbackEntry = {child:null, onFulfilled:null, onRejected:null};
  callbackEntry.child = new goog.Promise(function(resolve, reject) {
    callbackEntry.onFulfilled = onFulfilled ? function(value) {
      try {
        var result = onFulfilled.call(opt_context, value);
        resolve(result);
      } catch (err) {
        reject(err);
      }
    } : resolve;
    callbackEntry.onRejected = onRejected ? function(reason) {
      try {
        var result = onRejected.call(opt_context, reason);
        if (!goog.isDef(result) && reason instanceof goog.Promise.CancellationError) {
          reject(reason);
        } else {
          resolve(result);
        }
      } catch (err) {
        reject(err);
      }
    } : reject;
  });
  callbackEntry.child.parent_ = this;
  this.addCallbackEntry_((callbackEntry));
  return callbackEntry.child;
};
goog.Promise.prototype.unblockAndFulfill_ = function(value) {
  goog.asserts.assert(this.state_ == goog.Promise.State_.BLOCKED);
  this.state_ = goog.Promise.State_.PENDING;
  this.resolve_(goog.Promise.State_.FULFILLED, value);
};
goog.Promise.prototype.unblockAndReject_ = function(reason) {
  goog.asserts.assert(this.state_ == goog.Promise.State_.BLOCKED);
  this.state_ = goog.Promise.State_.PENDING;
  this.resolve_(goog.Promise.State_.REJECTED, reason);
};
goog.Promise.prototype.resolve_ = function(state, x) {
  if (this.state_ != goog.Promise.State_.PENDING) {
    return;
  }
  if (this == x) {
    state = goog.Promise.State_.REJECTED;
    x = new TypeError("Promise cannot resolve to itself");
  } else {
    if (goog.Thenable.isImplementedBy(x)) {
      x = (x);
      this.state_ = goog.Promise.State_.BLOCKED;
      x.then(this.unblockAndFulfill_, this.unblockAndReject_, this);
      return;
    } else {
      if (goog.isObject(x)) {
        try {
          var then = x["then"];
          if (goog.isFunction(then)) {
            this.tryThen_(x, then);
            return;
          }
        } catch (e) {
          state = goog.Promise.State_.REJECTED;
          x = e;
        }
      }
    }
  }
  this.result_ = x;
  this.state_ = state;
  this.scheduleCallbacks_();
  if (state == goog.Promise.State_.REJECTED && !(x instanceof goog.Promise.CancellationError)) {
    goog.Promise.addUnhandledRejection_(this, x);
  }
};
goog.Promise.prototype.tryThen_ = function(thenable, then) {
  this.state_ = goog.Promise.State_.BLOCKED;
  var promise = this;
  var called = false;
  var resolve = function(value) {
    if (!called) {
      called = true;
      promise.unblockAndFulfill_(value);
    }
  };
  var reject = function(reason) {
    if (!called) {
      called = true;
      promise.unblockAndReject_(reason);
    }
  };
  try {
    then.call(thenable, resolve, reject);
  } catch (e) {
    reject(e);
  }
};
goog.Promise.prototype.scheduleCallbacks_ = function() {
  if (!this.executing_) {
    this.executing_ = true;
    goog.async.run(this.executeCallbacks_, this);
  }
};
goog.Promise.prototype.executeCallbacks_ = function() {
  while (this.callbackEntries_ && this.callbackEntries_.length) {
    var entries = this.callbackEntries_;
    this.callbackEntries_ = [];
    for (var i = 0;i < entries.length;i++) {
      if (goog.Promise.LONG_STACK_TRACES) {
        this.currentStep_++;
      }
      this.executeCallback_(entries[i], this.state_, this.result_);
    }
  }
  this.executing_ = false;
};
goog.Promise.prototype.executeCallback_ = function(callbackEntry, state, result) {
  if (state == goog.Promise.State_.FULFILLED) {
    callbackEntry.onFulfilled(result);
  } else {
    this.removeUnhandledRejection_();
    callbackEntry.onRejected(result);
  }
};
goog.Promise.prototype.addStackTrace_ = function(err) {
  if (goog.Promise.LONG_STACK_TRACES && goog.isString(err.stack)) {
    var trace = err.stack.split("\n", 4)[3];
    var message = err.message;
    message += Array(11 - message.length).join(" ");
    this.stack_.push(message + trace);
  }
};
goog.Promise.prototype.appendLongStack_ = function(err) {
  if (goog.Promise.LONG_STACK_TRACES && err && goog.isString(err.stack) && this.stack_.length) {
    var longTrace = ["Promise trace:"];
    for (var promise = this;promise;promise = promise.parent_) {
      for (var i = this.currentStep_;i >= 0;i--) {
        longTrace.push(promise.stack_[i]);
      }
      longTrace.push("Value: " + "[" + (promise.state_ == goog.Promise.State_.REJECTED ? "REJECTED" : "FULFILLED") + "] " + "\x3c" + String(promise.result_) + "\x3e");
    }
    err.stack += "\n\n" + longTrace.join("\n");
  }
};
goog.Promise.prototype.removeUnhandledRejection_ = function() {
  if (goog.Promise.UNHANDLED_REJECTION_DELAY > 0) {
    for (var p = this;p && p.unhandledRejectionId_;p = p.parent_) {
      goog.global.clearTimeout(p.unhandledRejectionId_);
      p.unhandledRejectionId_ = 0;
    }
  } else {
    if (goog.Promise.UNHANDLED_REJECTION_DELAY == 0) {
      for (var p = this;p && p.hadUnhandledRejection_;p = p.parent_) {
        p.hadUnhandledRejection_ = false;
      }
    }
  }
};
goog.Promise.addUnhandledRejection_ = function(promise, reason) {
  if (goog.Promise.UNHANDLED_REJECTION_DELAY > 0) {
    promise.unhandledRejectionId_ = goog.global.setTimeout(function() {
      promise.appendLongStack_(reason);
      goog.Promise.handleRejection_.call(null, reason);
    }, goog.Promise.UNHANDLED_REJECTION_DELAY);
  } else {
    if (goog.Promise.UNHANDLED_REJECTION_DELAY == 0) {
      promise.hadUnhandledRejection_ = true;
      goog.async.run(function() {
        if (promise.hadUnhandledRejection_) {
          promise.appendLongStack_(reason);
          goog.Promise.handleRejection_.call(null, reason);
        }
      });
    }
  }
};
goog.Promise.handleRejection_ = goog.async.throwException;
goog.Promise.setUnhandledRejectionHandler = function(handler) {
  goog.Promise.handleRejection_ = handler;
};
goog.Promise.CancellationError = function(opt_message) {
  goog.Promise.CancellationError.base(this, "constructor", opt_message);
};
goog.inherits(goog.Promise.CancellationError, goog.debug.Error);
goog.Promise.CancellationError.prototype.name = "cancel";
goog.Promise.Resolver_ = function(promise, resolve, reject) {
  this.promise = promise;
  this.resolve = resolve;
  this.reject = reject;
};
/*
 Portions of this code are from MochiKit, received by
 The Closure Authors under the MIT license. All other code is Copyright
 2005-2009 The Closure Authors. All Rights Reserved.
*/
goog.provide("goog.async.Deferred");
goog.provide("goog.async.Deferred.AlreadyCalledError");
goog.provide("goog.async.Deferred.CanceledError");
goog.require("goog.Promise");
goog.require("goog.Thenable");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.debug.Error");
goog.async.Deferred = function(opt_onCancelFunction, opt_defaultScope) {
  this.sequence_ = [];
  this.onCancelFunction_ = opt_onCancelFunction;
  this.defaultScope_ = opt_defaultScope || null;
  this.fired_ = false;
  this.hadError_ = false;
  this.result_ = undefined;
  this.blocked_ = false;
  this.blocking_ = false;
  this.silentlyCanceled_ = false;
  this.unhandledErrorId_ = 0;
  this.parent_ = null;
  this.branches_ = 0;
  if (goog.async.Deferred.LONG_STACK_TRACES) {
    this.constructorStack_ = null;
    if (Error.captureStackTrace) {
      var target = {stack:""};
      Error.captureStackTrace(target, goog.async.Deferred);
      if (typeof target.stack == "string") {
        this.constructorStack_ = target.stack.replace(/^[^\n]*\n/, "");
      }
    }
  }
};
goog.define("goog.async.Deferred.STRICT_ERRORS", false);
goog.define("goog.async.Deferred.LONG_STACK_TRACES", false);
goog.async.Deferred.prototype.cancel = function(opt_deepCancel) {
  if (!this.hasFired()) {
    if (this.parent_) {
      var parent = this.parent_;
      delete this.parent_;
      if (opt_deepCancel) {
        parent.cancel(opt_deepCancel);
      } else {
        parent.branchCancel_();
      }
    }
    if (this.onCancelFunction_) {
      this.onCancelFunction_.call(this.defaultScope_, this);
    } else {
      this.silentlyCanceled_ = true;
    }
    if (!this.hasFired()) {
      this.errback(new goog.async.Deferred.CanceledError(this));
    }
  } else {
    if (this.result_ instanceof goog.async.Deferred) {
      this.result_.cancel();
    }
  }
};
goog.async.Deferred.prototype.branchCancel_ = function() {
  this.branches_--;
  if (this.branches_ <= 0) {
    this.cancel();
  }
};
goog.async.Deferred.prototype.continue_ = function(isSuccess, res) {
  this.blocked_ = false;
  this.updateResult_(isSuccess, res);
};
goog.async.Deferred.prototype.updateResult_ = function(isSuccess, res) {
  this.fired_ = true;
  this.result_ = res;
  this.hadError_ = !isSuccess;
  this.fire_();
};
goog.async.Deferred.prototype.check_ = function() {
  if (this.hasFired()) {
    if (!this.silentlyCanceled_) {
      throw new goog.async.Deferred.AlreadyCalledError(this);
    }
    this.silentlyCanceled_ = false;
  }
};
goog.async.Deferred.prototype.callback = function(opt_result) {
  this.check_();
  this.assertNotDeferred_(opt_result);
  this.updateResult_(true, opt_result);
};
goog.async.Deferred.prototype.errback = function(opt_result) {
  this.check_();
  this.assertNotDeferred_(opt_result);
  this.makeStackTraceLong_(opt_result);
  this.updateResult_(false, opt_result);
};
goog.async.Deferred.prototype.makeStackTraceLong_ = function(error) {
  if (!goog.async.Deferred.LONG_STACK_TRACES) {
    return;
  }
  if (this.constructorStack_ && goog.isObject(error) && error.stack && /^[^\n]+(\n   [^\n]+)+/.test(error.stack)) {
    error.stack = error.stack + "\nDEFERRED OPERATION:\n" + this.constructorStack_;
  }
};
goog.async.Deferred.prototype.assertNotDeferred_ = function(obj) {
  goog.asserts.assert(!(obj instanceof goog.async.Deferred), "An execution sequence may not be initiated with a blocking Deferred.");
};
goog.async.Deferred.prototype.addCallback = function(cb, opt_scope) {
  return this.addCallbacks(cb, null, opt_scope);
};
goog.async.Deferred.prototype.addErrback = function(eb, opt_scope) {
  return this.addCallbacks(null, eb, opt_scope);
};
goog.async.Deferred.prototype.addBoth = function(f, opt_scope) {
  return this.addCallbacks(f, f, opt_scope);
};
goog.async.Deferred.prototype.addCallbacks = function(cb, eb, opt_scope) {
  goog.asserts.assert(!this.blocking_, "Blocking Deferreds can not be re-used");
  this.sequence_.push([cb, eb, opt_scope]);
  if (this.hasFired()) {
    this.fire_();
  }
  return this;
};
goog.async.Deferred.prototype.then = function(opt_onFulfilled, opt_onRejected, opt_context) {
  var resolve, reject;
  var promise = new goog.Promise(function(res, rej) {
    resolve = res;
    reject = rej;
  });
  this.addCallbacks(resolve, function(reason) {
    if (reason instanceof goog.async.Deferred.CanceledError) {
      promise.cancel();
    } else {
      reject(reason);
    }
  });
  return promise.then(opt_onFulfilled, opt_onRejected, opt_context);
};
goog.Thenable.addImplementation(goog.async.Deferred);
goog.async.Deferred.prototype.chainDeferred = function(otherDeferred) {
  this.addCallbacks(otherDeferred.callback, otherDeferred.errback, otherDeferred);
  return this;
};
goog.async.Deferred.prototype.awaitDeferred = function(otherDeferred) {
  if (!(otherDeferred instanceof goog.async.Deferred)) {
    return this.addCallback(function() {
      return otherDeferred;
    });
  }
  return this.addCallback(goog.bind(otherDeferred.branch, otherDeferred));
};
goog.async.Deferred.prototype.branch = function(opt_propagateCancel) {
  var d = new goog.async.Deferred;
  this.chainDeferred(d);
  if (opt_propagateCancel) {
    d.parent_ = this;
    this.branches_++;
  }
  return d;
};
goog.async.Deferred.prototype.hasFired = function() {
  return this.fired_;
};
goog.async.Deferred.prototype.isError = function(res) {
  return res instanceof Error;
};
goog.async.Deferred.prototype.hasErrback_ = function() {
  return goog.array.some(this.sequence_, function(sequenceRow) {
    return goog.isFunction(sequenceRow[1]);
  });
};
goog.async.Deferred.prototype.fire_ = function() {
  if (this.unhandledErrorId_ && this.hasFired() && this.hasErrback_()) {
    goog.async.Deferred.unscheduleError_(this.unhandledErrorId_);
    this.unhandledErrorId_ = 0;
  }
  if (this.parent_) {
    this.parent_.branches_--;
    delete this.parent_;
  }
  var res = this.result_;
  var unhandledException = false;
  var isNewlyBlocked = false;
  while (this.sequence_.length && !this.blocked_) {
    var sequenceEntry = this.sequence_.shift();
    var callback = sequenceEntry[0];
    var errback = sequenceEntry[1];
    var scope = sequenceEntry[2];
    var f = this.hadError_ ? errback : callback;
    if (f) {
      try {
        var ret = f.call(scope || this.defaultScope_, res);
        if (goog.isDef(ret)) {
          this.hadError_ = this.hadError_ && (ret == res || this.isError(ret));
          this.result_ = res = ret;
        }
        if (goog.Thenable.isImplementedBy(res)) {
          isNewlyBlocked = true;
          this.blocked_ = true;
        }
      } catch (ex) {
        res = ex;
        this.hadError_ = true;
        this.makeStackTraceLong_(res);
        if (!this.hasErrback_()) {
          unhandledException = true;
        }
      }
    }
  }
  this.result_ = res;
  if (isNewlyBlocked) {
    var onCallback = goog.bind(this.continue_, this, true);
    var onErrback = goog.bind(this.continue_, this, false);
    if (res instanceof goog.async.Deferred) {
      res.addCallbacks(onCallback, onErrback);
      res.blocking_ = true;
    } else {
      res.then(onCallback, onErrback);
    }
  } else {
    if (goog.async.Deferred.STRICT_ERRORS && this.isError(res) && !(res instanceof goog.async.Deferred.CanceledError)) {
      this.hadError_ = true;
      unhandledException = true;
    }
  }
  if (unhandledException) {
    this.unhandledErrorId_ = goog.async.Deferred.scheduleError_(res);
  }
};
goog.async.Deferred.succeed = function(opt_result) {
  var d = new goog.async.Deferred;
  d.callback(opt_result);
  return d;
};
goog.async.Deferred.fromPromise = function(promise) {
  var d = new goog.async.Deferred;
  d.callback();
  d.addCallback(function() {
    return promise;
  });
  return d;
};
goog.async.Deferred.fail = function(res) {
  var d = new goog.async.Deferred;
  d.errback(res);
  return d;
};
goog.async.Deferred.canceled = function() {
  var d = new goog.async.Deferred;
  d.cancel();
  return d;
};
goog.async.Deferred.when = function(value, callback, opt_scope) {
  if (value instanceof goog.async.Deferred) {
    return value.branch(true).addCallback(callback, opt_scope);
  } else {
    return goog.async.Deferred.succeed(value).addCallback(callback, opt_scope);
  }
};
goog.async.Deferred.AlreadyCalledError = function(deferred) {
  goog.debug.Error.call(this);
  this.deferred = deferred;
};
goog.inherits(goog.async.Deferred.AlreadyCalledError, goog.debug.Error);
goog.async.Deferred.AlreadyCalledError.prototype.message = "Deferred has already fired";
goog.async.Deferred.AlreadyCalledError.prototype.name = "AlreadyCalledError";
goog.async.Deferred.CanceledError = function(deferred) {
  goog.debug.Error.call(this);
  this.deferred = deferred;
};
goog.inherits(goog.async.Deferred.CanceledError, goog.debug.Error);
goog.async.Deferred.CanceledError.prototype.message = "Deferred was canceled";
goog.async.Deferred.CanceledError.prototype.name = "CanceledError";
goog.async.Deferred.Error_ = function(error) {
  this.id_ = goog.global.setTimeout(goog.bind(this.throwError, this), 0);
  this.error_ = error;
};
goog.async.Deferred.Error_.prototype.throwError = function() {
  goog.asserts.assert(goog.async.Deferred.errorMap_[this.id_], "Cannot throw an error that is not scheduled.");
  delete goog.async.Deferred.errorMap_[this.id_];
  throw this.error_;
};
goog.async.Deferred.Error_.prototype.resetTimer = function() {
  goog.global.clearTimeout(this.id_);
};
goog.async.Deferred.errorMap_ = {};
goog.async.Deferred.scheduleError_ = function(error) {
  var deferredError = new goog.async.Deferred.Error_(error);
  goog.async.Deferred.errorMap_[deferredError.id_] = deferredError;
  return deferredError.id_;
};
goog.async.Deferred.unscheduleError_ = function(id) {
  var error = goog.async.Deferred.errorMap_[id];
  if (error) {
    error.resetTimer();
    delete goog.async.Deferred.errorMap_[id];
  }
};
goog.async.Deferred.assertNoErrors = function() {
  var map = goog.async.Deferred.errorMap_;
  for (var key in map) {
    var error = map[key];
    error.resetTimer();
    error.throwError();
  }
};
goog.provide("goog.dom.BrowserFeature");
goog.require("goog.userAgent");
goog.dom.BrowserFeature = {CAN_ADD_NAME_OR_TYPE_ATTRIBUTES:!goog.userAgent.IE || goog.userAgent.isDocumentModeOrHigher(9), CAN_USE_CHILDREN_ATTRIBUTE:!goog.userAgent.GECKO && !goog.userAgent.IE || goog.userAgent.IE && goog.userAgent.isDocumentModeOrHigher(9) || goog.userAgent.GECKO && goog.userAgent.isVersionOrHigher("1.9.1"), CAN_USE_INNER_TEXT:goog.userAgent.IE && !goog.userAgent.isVersionOrHigher("9"), CAN_USE_PARENT_ELEMENT_PROPERTY:goog.userAgent.IE || goog.userAgent.OPERA || goog.userAgent.WEBKIT, 
INNER_HTML_NEEDS_SCOPED_ELEMENT:goog.userAgent.IE, LEGACY_IE_RANGES:goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(9)};
goog.provide("goog.dom.TagName");
goog.dom.TagName = {A:"A", ABBR:"ABBR", ACRONYM:"ACRONYM", ADDRESS:"ADDRESS", APPLET:"APPLET", AREA:"AREA", ARTICLE:"ARTICLE", ASIDE:"ASIDE", AUDIO:"AUDIO", B:"B", BASE:"BASE", BASEFONT:"BASEFONT", BDI:"BDI", BDO:"BDO", BIG:"BIG", BLOCKQUOTE:"BLOCKQUOTE", BODY:"BODY", BR:"BR", BUTTON:"BUTTON", CANVAS:"CANVAS", CAPTION:"CAPTION", CENTER:"CENTER", CITE:"CITE", CODE:"CODE", COL:"COL", COLGROUP:"COLGROUP", COMMAND:"COMMAND", DATA:"DATA", DATALIST:"DATALIST", DD:"DD", DEL:"DEL", DETAILS:"DETAILS", DFN:"DFN", 
DIALOG:"DIALOG", DIR:"DIR", DIV:"DIV", DL:"DL", DT:"DT", EM:"EM", EMBED:"EMBED", FIELDSET:"FIELDSET", FIGCAPTION:"FIGCAPTION", FIGURE:"FIGURE", FONT:"FONT", FOOTER:"FOOTER", FORM:"FORM", FRAME:"FRAME", FRAMESET:"FRAMESET", H1:"H1", H2:"H2", H3:"H3", H4:"H4", H5:"H5", H6:"H6", HEAD:"HEAD", HEADER:"HEADER", HGROUP:"HGROUP", HR:"HR", HTML:"HTML", I:"I", IFRAME:"IFRAME", IMG:"IMG", INPUT:"INPUT", INS:"INS", ISINDEX:"ISINDEX", KBD:"KBD", KEYGEN:"KEYGEN", LABEL:"LABEL", LEGEND:"LEGEND", LI:"LI", LINK:"LINK", 
MAP:"MAP", MARK:"MARK", MATH:"MATH", MENU:"MENU", META:"META", METER:"METER", NAV:"NAV", NOFRAMES:"NOFRAMES", NOSCRIPT:"NOSCRIPT", OBJECT:"OBJECT", OL:"OL", OPTGROUP:"OPTGROUP", OPTION:"OPTION", OUTPUT:"OUTPUT", P:"P", PARAM:"PARAM", PRE:"PRE", PROGRESS:"PROGRESS", Q:"Q", RP:"RP", RT:"RT", RUBY:"RUBY", S:"S", SAMP:"SAMP", SCRIPT:"SCRIPT", SECTION:"SECTION", SELECT:"SELECT", SMALL:"SMALL", SOURCE:"SOURCE", SPAN:"SPAN", STRIKE:"STRIKE", STRONG:"STRONG", STYLE:"STYLE", SUB:"SUB", SUMMARY:"SUMMARY", 
SUP:"SUP", SVG:"SVG", TABLE:"TABLE", TBODY:"TBODY", TD:"TD", TEXTAREA:"TEXTAREA", TFOOT:"TFOOT", TH:"TH", THEAD:"THEAD", TIME:"TIME", TITLE:"TITLE", TR:"TR", TRACK:"TRACK", TT:"TT", U:"U", UL:"UL", VAR:"VAR", VIDEO:"VIDEO", WBR:"WBR"};
goog.provide("goog.math.Coordinate");
goog.require("goog.math");
goog.math.Coordinate = function(opt_x, opt_y) {
  this.x = goog.isDef(opt_x) ? opt_x : 0;
  this.y = goog.isDef(opt_y) ? opt_y : 0;
};
goog.math.Coordinate.prototype.clone = function() {
  return new goog.math.Coordinate(this.x, this.y);
};
if (goog.DEBUG) {
  goog.math.Coordinate.prototype.toString = function() {
    return "(" + this.x + ", " + this.y + ")";
  };
}
goog.math.Coordinate.equals = function(a, b) {
  if (a == b) {
    return true;
  }
  if (!a || !b) {
    return false;
  }
  return a.x == b.x && a.y == b.y;
};
goog.math.Coordinate.distance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return Math.sqrt(dx * dx + dy * dy);
};
goog.math.Coordinate.magnitude = function(a) {
  return Math.sqrt(a.x * a.x + a.y * a.y);
};
goog.math.Coordinate.azimuth = function(a) {
  return goog.math.angle(0, 0, a.x, a.y);
};
goog.math.Coordinate.squaredDistance = function(a, b) {
  var dx = a.x - b.x;
  var dy = a.y - b.y;
  return dx * dx + dy * dy;
};
goog.math.Coordinate.difference = function(a, b) {
  return new goog.math.Coordinate(a.x - b.x, a.y - b.y);
};
goog.math.Coordinate.sum = function(a, b) {
  return new goog.math.Coordinate(a.x + b.x, a.y + b.y);
};
goog.math.Coordinate.prototype.ceil = function() {
  this.x = Math.ceil(this.x);
  this.y = Math.ceil(this.y);
  return this;
};
goog.math.Coordinate.prototype.floor = function() {
  this.x = Math.floor(this.x);
  this.y = Math.floor(this.y);
  return this;
};
goog.math.Coordinate.prototype.round = function() {
  this.x = Math.round(this.x);
  this.y = Math.round(this.y);
  return this;
};
goog.math.Coordinate.prototype.translate = function(tx, opt_ty) {
  if (tx instanceof goog.math.Coordinate) {
    this.x += tx.x;
    this.y += tx.y;
  } else {
    this.x += tx;
    if (goog.isNumber(opt_ty)) {
      this.y += opt_ty;
    }
  }
  return this;
};
goog.math.Coordinate.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.x *= sx;
  this.y *= sy;
  return this;
};
goog.math.Coordinate.prototype.rotateRadians = function(radians, opt_center) {
  var center = opt_center || new goog.math.Coordinate(0, 0);
  var x = this.x;
  var y = this.y;
  var cos = Math.cos(radians);
  var sin = Math.sin(radians);
  this.x = (x - center.x) * cos - (y - center.y) * sin + center.x;
  this.y = (x - center.x) * sin + (y - center.y) * cos + center.y;
};
goog.math.Coordinate.prototype.rotateDegrees = function(degrees, opt_center) {
  this.rotateRadians(goog.math.toRadians(degrees), opt_center);
};
goog.provide("goog.math.Size");
goog.math.Size = function(width, height) {
  this.width = width;
  this.height = height;
};
goog.math.Size.equals = function(a, b) {
  if (a == b) {
    return true;
  }
  if (!a || !b) {
    return false;
  }
  return a.width == b.width && a.height == b.height;
};
goog.math.Size.prototype.clone = function() {
  return new goog.math.Size(this.width, this.height);
};
if (goog.DEBUG) {
  goog.math.Size.prototype.toString = function() {
    return "(" + this.width + " x " + this.height + ")";
  };
}
goog.math.Size.prototype.getLongest = function() {
  return Math.max(this.width, this.height);
};
goog.math.Size.prototype.getShortest = function() {
  return Math.min(this.width, this.height);
};
goog.math.Size.prototype.area = function() {
  return this.width * this.height;
};
goog.math.Size.prototype.perimeter = function() {
  return(this.width + this.height) * 2;
};
goog.math.Size.prototype.aspectRatio = function() {
  return this.width / this.height;
};
goog.math.Size.prototype.isEmpty = function() {
  return!this.area();
};
goog.math.Size.prototype.ceil = function() {
  this.width = Math.ceil(this.width);
  this.height = Math.ceil(this.height);
  return this;
};
goog.math.Size.prototype.fitsInside = function(target) {
  return this.width <= target.width && this.height <= target.height;
};
goog.math.Size.prototype.floor = function() {
  this.width = Math.floor(this.width);
  this.height = Math.floor(this.height);
  return this;
};
goog.math.Size.prototype.round = function() {
  this.width = Math.round(this.width);
  this.height = Math.round(this.height);
  return this;
};
goog.math.Size.prototype.scale = function(sx, opt_sy) {
  var sy = goog.isNumber(opt_sy) ? opt_sy : sx;
  this.width *= sx;
  this.height *= sy;
  return this;
};
goog.math.Size.prototype.scaleToFit = function(target) {
  var s = this.aspectRatio() > target.aspectRatio() ? target.width / this.width : target.height / this.height;
  return this.scale(s);
};
goog.provide("goog.dom");
goog.provide("goog.dom.Appendable");
goog.provide("goog.dom.DomHelper");
goog.require("goog.array");
goog.require("goog.asserts");
goog.require("goog.dom.BrowserFeature");
goog.require("goog.dom.NodeType");
goog.require("goog.dom.TagName");
goog.require("goog.functions");
goog.require("goog.math.Coordinate");
goog.require("goog.math.Size");
goog.require("goog.object");
goog.require("goog.string");
goog.require("goog.userAgent");
goog.define("goog.dom.ASSUME_QUIRKS_MODE", false);
goog.define("goog.dom.ASSUME_STANDARDS_MODE", false);
goog.dom.COMPAT_MODE_KNOWN_ = goog.dom.ASSUME_QUIRKS_MODE || goog.dom.ASSUME_STANDARDS_MODE;
goog.dom.getDomHelper = function(opt_element) {
  return opt_element ? new goog.dom.DomHelper(goog.dom.getOwnerDocument(opt_element)) : goog.dom.defaultDomHelper_ || (goog.dom.defaultDomHelper_ = new goog.dom.DomHelper);
};
goog.dom.defaultDomHelper_;
goog.dom.getDocument = function() {
  return document;
};
goog.dom.getElement = function(element) {
  return goog.dom.getElementHelper_(document, element);
};
goog.dom.getElementHelper_ = function(doc, element) {
  return goog.isString(element) ? doc.getElementById(element) : element;
};
goog.dom.getRequiredElement = function(id) {
  return goog.dom.getRequiredElementHelper_(document, id);
};
goog.dom.getRequiredElementHelper_ = function(doc, id) {
  goog.asserts.assertString(id);
  var element = goog.dom.getElementHelper_(doc, id);
  element = goog.asserts.assertElement(element, "No element found with id: " + id);
  return element;
};
goog.dom.$ = goog.dom.getElement;
goog.dom.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(document, opt_tag, opt_class, opt_el);
};
goog.dom.getElementsByClass = function(className, opt_el) {
  var parent = opt_el || document;
  if (goog.dom.canUseQuerySelector_(parent)) {
    return parent.querySelectorAll("." + className);
  }
  return goog.dom.getElementsByTagNameAndClass_(document, "*", className, opt_el);
};
goog.dom.getElementByClass = function(className, opt_el) {
  var parent = opt_el || document;
  var retVal = null;
  if (goog.dom.canUseQuerySelector_(parent)) {
    retVal = parent.querySelector("." + className);
  } else {
    retVal = goog.dom.getElementsByTagNameAndClass_(document, "*", className, opt_el)[0];
  }
  return retVal || null;
};
goog.dom.getRequiredElementByClass = function(className, opt_root) {
  var retValue = goog.dom.getElementByClass(className, opt_root);
  return goog.asserts.assert(retValue, "No element found with className: " + className);
};
goog.dom.canUseQuerySelector_ = function(parent) {
  return!!(parent.querySelectorAll && parent.querySelector);
};
goog.dom.getElementsByTagNameAndClass_ = function(doc, opt_tag, opt_class, opt_el) {
  var parent = opt_el || doc;
  var tagName = opt_tag && opt_tag != "*" ? opt_tag.toUpperCase() : "";
  if (goog.dom.canUseQuerySelector_(parent) && (tagName || opt_class)) {
    var query = tagName + (opt_class ? "." + opt_class : "");
    return parent.querySelectorAll(query);
  }
  if (opt_class && parent.getElementsByClassName) {
    var els = parent.getElementsByClassName(opt_class);
    if (tagName) {
      var arrayLike = {};
      var len = 0;
      for (var i = 0, el;el = els[i];i++) {
        if (tagName == el.nodeName) {
          arrayLike[len++] = el;
        }
      }
      arrayLike.length = len;
      return arrayLike;
    } else {
      return els;
    }
  }
  var els = parent.getElementsByTagName(tagName || "*");
  if (opt_class) {
    var arrayLike = {};
    var len = 0;
    for (var i = 0, el;el = els[i];i++) {
      var className = el.className;
      if (typeof className.split == "function" && goog.array.contains(className.split(/\s+/), opt_class)) {
        arrayLike[len++] = el;
      }
    }
    arrayLike.length = len;
    return arrayLike;
  } else {
    return els;
  }
};
goog.dom.$$ = goog.dom.getElementsByTagNameAndClass;
goog.dom.setProperties = function(element, properties) {
  goog.object.forEach(properties, function(val, key) {
    if (key == "style") {
      element.style.cssText = val;
    } else {
      if (key == "class") {
        element.className = val;
      } else {
        if (key == "for") {
          element.htmlFor = val;
        } else {
          if (key in goog.dom.DIRECT_ATTRIBUTE_MAP_) {
            element.setAttribute(goog.dom.DIRECT_ATTRIBUTE_MAP_[key], val);
          } else {
            if (goog.string.startsWith(key, "aria-") || goog.string.startsWith(key, "data-")) {
              element.setAttribute(key, val);
            } else {
              element[key] = val;
            }
          }
        }
      }
    }
  });
};
goog.dom.DIRECT_ATTRIBUTE_MAP_ = {"cellpadding":"cellPadding", "cellspacing":"cellSpacing", "colspan":"colSpan", "frameborder":"frameBorder", "height":"height", "maxlength":"maxLength", "role":"role", "rowspan":"rowSpan", "type":"type", "usemap":"useMap", "valign":"vAlign", "width":"width"};
goog.dom.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize_(opt_window || window);
};
goog.dom.getViewportSize_ = function(win) {
  var doc = win.document;
  var el = goog.dom.isCss1CompatMode_(doc) ? doc.documentElement : doc.body;
  return new goog.math.Size(el.clientWidth, el.clientHeight);
};
goog.dom.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(window);
};
goog.dom.getDocumentHeight_ = function(win) {
  var doc = win.document;
  var height = 0;
  if (doc) {
    var body = doc.body;
    var docEl = doc.documentElement;
    if (!body && !docEl) {
      return 0;
    }
    var vh = goog.dom.getViewportSize_(win).height;
    if (goog.dom.isCss1CompatMode_(doc) && docEl.scrollHeight) {
      height = docEl.scrollHeight != vh ? docEl.scrollHeight : docEl.offsetHeight;
    } else {
      var sh = docEl.scrollHeight;
      var oh = docEl.offsetHeight;
      if (docEl.clientHeight != oh) {
        sh = body.scrollHeight;
        oh = body.offsetHeight;
      }
      if (sh > vh) {
        height = sh > oh ? sh : oh;
      } else {
        height = sh < oh ? sh : oh;
      }
    }
  }
  return height;
};
goog.dom.getPageScroll = function(opt_window) {
  var win = opt_window || goog.global || window;
  return goog.dom.getDomHelper(win.document).getDocumentScroll();
};
goog.dom.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(document);
};
goog.dom.getDocumentScroll_ = function(doc) {
  var el = goog.dom.getDocumentScrollElement_(doc);
  var win = goog.dom.getWindow_(doc);
  if (goog.userAgent.IE && goog.userAgent.isVersionOrHigher("10") && win.pageYOffset != el.scrollTop) {
    return new goog.math.Coordinate(el.scrollLeft, el.scrollTop);
  }
  return new goog.math.Coordinate(win.pageXOffset || el.scrollLeft, win.pageYOffset || el.scrollTop);
};
goog.dom.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(document);
};
goog.dom.getDocumentScrollElement_ = function(doc) {
  if (!goog.userAgent.WEBKIT && goog.dom.isCss1CompatMode_(doc)) {
    return doc.documentElement;
  }
  return doc.body || doc.documentElement;
};
goog.dom.getWindow = function(opt_doc) {
  return opt_doc ? goog.dom.getWindow_(opt_doc) : window;
};
goog.dom.getWindow_ = function(doc) {
  return doc.parentWindow || doc.defaultView;
};
goog.dom.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(document, arguments);
};
goog.dom.createDom_ = function(doc, args) {
  var tagName = args[0];
  var attributes = args[1];
  if (!goog.dom.BrowserFeature.CAN_ADD_NAME_OR_TYPE_ATTRIBUTES && attributes && (attributes.name || attributes.type)) {
    var tagNameArr = ["\x3c", tagName];
    if (attributes.name) {
      tagNameArr.push(' name\x3d"', goog.string.htmlEscape(attributes.name), '"');
    }
    if (attributes.type) {
      tagNameArr.push(' type\x3d"', goog.string.htmlEscape(attributes.type), '"');
      var clone = {};
      goog.object.extend(clone, attributes);
      delete clone["type"];
      attributes = clone;
    }
    tagNameArr.push("\x3e");
    tagName = tagNameArr.join("");
  }
  var element = doc.createElement(tagName);
  if (attributes) {
    if (goog.isString(attributes)) {
      element.className = attributes;
    } else {
      if (goog.isArray(attributes)) {
        element.className = attributes.join(" ");
      } else {
        goog.dom.setProperties(element, attributes);
      }
    }
  }
  if (args.length > 2) {
    goog.dom.append_(doc, element, args, 2);
  }
  return element;
};
goog.dom.append_ = function(doc, parent, args, startIndex) {
  function childHandler(child) {
    if (child) {
      parent.appendChild(goog.isString(child) ? doc.createTextNode(child) : child);
    }
  }
  for (var i = startIndex;i < args.length;i++) {
    var arg = args[i];
    if (goog.isArrayLike(arg) && !goog.dom.isNodeLike(arg)) {
      goog.array.forEach(goog.dom.isNodeList(arg) ? goog.array.toArray(arg) : arg, childHandler);
    } else {
      childHandler(arg);
    }
  }
};
goog.dom.$dom = goog.dom.createDom;
goog.dom.createElement = function(name) {
  return document.createElement(name);
};
goog.dom.createTextNode = function(content) {
  return document.createTextNode(String(content));
};
goog.dom.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(document, rows, columns, !!opt_fillWithNbsp);
};
goog.dom.createTable_ = function(doc, rows, columns, fillWithNbsp) {
  var rowHtml = ["\x3ctr\x3e"];
  for (var i = 0;i < columns;i++) {
    rowHtml.push(fillWithNbsp ? "\x3ctd\x3e\x26nbsp;\x3c/td\x3e" : "\x3ctd\x3e\x3c/td\x3e");
  }
  rowHtml.push("\x3c/tr\x3e");
  rowHtml = rowHtml.join("");
  var totalHtml = ["\x3ctable\x3e"];
  for (i = 0;i < rows;i++) {
    totalHtml.push(rowHtml);
  }
  totalHtml.push("\x3c/table\x3e");
  var elem = doc.createElement(goog.dom.TagName.DIV);
  elem.innerHTML = totalHtml.join("");
  return(elem.removeChild(elem.firstChild));
};
goog.dom.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(document, htmlString);
};
goog.dom.htmlToDocumentFragment_ = function(doc, htmlString) {
  var tempDiv = doc.createElement("div");
  if (goog.dom.BrowserFeature.INNER_HTML_NEEDS_SCOPED_ELEMENT) {
    tempDiv.innerHTML = "\x3cbr\x3e" + htmlString;
    tempDiv.removeChild(tempDiv.firstChild);
  } else {
    tempDiv.innerHTML = htmlString;
  }
  if (tempDiv.childNodes.length == 1) {
    return(tempDiv.removeChild(tempDiv.firstChild));
  } else {
    var fragment = doc.createDocumentFragment();
    while (tempDiv.firstChild) {
      fragment.appendChild(tempDiv.firstChild);
    }
    return fragment;
  }
};
goog.dom.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(document);
};
goog.dom.isCss1CompatMode_ = function(doc) {
  if (goog.dom.COMPAT_MODE_KNOWN_) {
    return goog.dom.ASSUME_STANDARDS_MODE;
  }
  return doc.compatMode == "CSS1Compat";
};
goog.dom.canHaveChildren = function(node) {
  if (node.nodeType != goog.dom.NodeType.ELEMENT) {
    return false;
  }
  switch(node.tagName) {
    case goog.dom.TagName.APPLET:
    ;
    case goog.dom.TagName.AREA:
    ;
    case goog.dom.TagName.BASE:
    ;
    case goog.dom.TagName.BR:
    ;
    case goog.dom.TagName.COL:
    ;
    case goog.dom.TagName.COMMAND:
    ;
    case goog.dom.TagName.EMBED:
    ;
    case goog.dom.TagName.FRAME:
    ;
    case goog.dom.TagName.HR:
    ;
    case goog.dom.TagName.IMG:
    ;
    case goog.dom.TagName.INPUT:
    ;
    case goog.dom.TagName.IFRAME:
    ;
    case goog.dom.TagName.ISINDEX:
    ;
    case goog.dom.TagName.KEYGEN:
    ;
    case goog.dom.TagName.LINK:
    ;
    case goog.dom.TagName.NOFRAMES:
    ;
    case goog.dom.TagName.NOSCRIPT:
    ;
    case goog.dom.TagName.META:
    ;
    case goog.dom.TagName.OBJECT:
    ;
    case goog.dom.TagName.PARAM:
    ;
    case goog.dom.TagName.SCRIPT:
    ;
    case goog.dom.TagName.SOURCE:
    ;
    case goog.dom.TagName.STYLE:
    ;
    case goog.dom.TagName.TRACK:
    ;
    case goog.dom.TagName.WBR:
      return false;
  }
  return true;
};
goog.dom.appendChild = function(parent, child) {
  parent.appendChild(child);
};
goog.dom.append = function(parent, var_args) {
  goog.dom.append_(goog.dom.getOwnerDocument(parent), parent, arguments, 1);
};
goog.dom.removeChildren = function(node) {
  var child;
  while (child = node.firstChild) {
    node.removeChild(child);
  }
};
goog.dom.insertSiblingBefore = function(newNode, refNode) {
  if (refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode);
  }
};
goog.dom.insertSiblingAfter = function(newNode, refNode) {
  if (refNode.parentNode) {
    refNode.parentNode.insertBefore(newNode, refNode.nextSibling);
  }
};
goog.dom.insertChildAt = function(parent, child, index) {
  parent.insertBefore(child, parent.childNodes[index] || null);
};
goog.dom.removeNode = function(node) {
  return node && node.parentNode ? node.parentNode.removeChild(node) : null;
};
goog.dom.replaceNode = function(newNode, oldNode) {
  var parent = oldNode.parentNode;
  if (parent) {
    parent.replaceChild(newNode, oldNode);
  }
};
goog.dom.flattenElement = function(element) {
  var child, parent = element.parentNode;
  if (parent && parent.nodeType != goog.dom.NodeType.DOCUMENT_FRAGMENT) {
    if (element.removeNode) {
      return(element.removeNode(false));
    } else {
      while (child = element.firstChild) {
        parent.insertBefore(child, element);
      }
      return(goog.dom.removeNode(element));
    }
  }
};
goog.dom.getChildren = function(element) {
  if (goog.dom.BrowserFeature.CAN_USE_CHILDREN_ATTRIBUTE && element.children != undefined) {
    return element.children;
  }
  return goog.array.filter(element.childNodes, function(node) {
    return node.nodeType == goog.dom.NodeType.ELEMENT;
  });
};
goog.dom.getFirstElementChild = function(node) {
  if (node.firstElementChild != undefined) {
    return(node).firstElementChild;
  }
  return goog.dom.getNextElementNode_(node.firstChild, true);
};
goog.dom.getLastElementChild = function(node) {
  if (node.lastElementChild != undefined) {
    return(node).lastElementChild;
  }
  return goog.dom.getNextElementNode_(node.lastChild, false);
};
goog.dom.getNextElementSibling = function(node) {
  if (node.nextElementSibling != undefined) {
    return(node).nextElementSibling;
  }
  return goog.dom.getNextElementNode_(node.nextSibling, true);
};
goog.dom.getPreviousElementSibling = function(node) {
  if (node.previousElementSibling != undefined) {
    return(node).previousElementSibling;
  }
  return goog.dom.getNextElementNode_(node.previousSibling, false);
};
goog.dom.getNextElementNode_ = function(node, forward) {
  while (node && node.nodeType != goog.dom.NodeType.ELEMENT) {
    node = forward ? node.nextSibling : node.previousSibling;
  }
  return(node);
};
goog.dom.getNextNode = function(node) {
  if (!node) {
    return null;
  }
  if (node.firstChild) {
    return node.firstChild;
  }
  while (node && !node.nextSibling) {
    node = node.parentNode;
  }
  return node ? node.nextSibling : null;
};
goog.dom.getPreviousNode = function(node) {
  if (!node) {
    return null;
  }
  if (!node.previousSibling) {
    return node.parentNode;
  }
  node = node.previousSibling;
  while (node && node.lastChild) {
    node = node.lastChild;
  }
  return node;
};
goog.dom.isNodeLike = function(obj) {
  return goog.isObject(obj) && obj.nodeType > 0;
};
goog.dom.isElement = function(obj) {
  return goog.isObject(obj) && obj.nodeType == goog.dom.NodeType.ELEMENT;
};
goog.dom.isWindow = function(obj) {
  return goog.isObject(obj) && obj["window"] == obj;
};
goog.dom.getParentElement = function(element) {
  var parent;
  if (goog.dom.BrowserFeature.CAN_USE_PARENT_ELEMENT_PROPERTY) {
    var isIe9 = goog.userAgent.IE && goog.userAgent.isVersionOrHigher("9") && !goog.userAgent.isVersionOrHigher("10");
    if (!(isIe9 && goog.global["SVGElement"] && element instanceof goog.global["SVGElement"])) {
      parent = element.parentElement;
      if (parent) {
        return parent;
      }
    }
  }
  parent = element.parentNode;
  return goog.dom.isElement(parent) ? (parent) : null;
};
goog.dom.contains = function(parent, descendant) {
  if (parent.contains && descendant.nodeType == goog.dom.NodeType.ELEMENT) {
    return parent == descendant || parent.contains(descendant);
  }
  if (typeof parent.compareDocumentPosition != "undefined") {
    return parent == descendant || Boolean(parent.compareDocumentPosition(descendant) & 16);
  }
  while (descendant && parent != descendant) {
    descendant = descendant.parentNode;
  }
  return descendant == parent;
};
goog.dom.compareNodeOrder = function(node1, node2) {
  if (node1 == node2) {
    return 0;
  }
  if (node1.compareDocumentPosition) {
    return node1.compareDocumentPosition(node2) & 2 ? 1 : -1;
  }
  if (goog.userAgent.IE && !goog.userAgent.isDocumentModeOrHigher(9)) {
    if (node1.nodeType == goog.dom.NodeType.DOCUMENT) {
      return-1;
    }
    if (node2.nodeType == goog.dom.NodeType.DOCUMENT) {
      return 1;
    }
  }
  if ("sourceIndex" in node1 || node1.parentNode && "sourceIndex" in node1.parentNode) {
    var isElement1 = node1.nodeType == goog.dom.NodeType.ELEMENT;
    var isElement2 = node2.nodeType == goog.dom.NodeType.ELEMENT;
    if (isElement1 && isElement2) {
      return node1.sourceIndex - node2.sourceIndex;
    } else {
      var parent1 = node1.parentNode;
      var parent2 = node2.parentNode;
      if (parent1 == parent2) {
        return goog.dom.compareSiblingOrder_(node1, node2);
      }
      if (!isElement1 && goog.dom.contains(parent1, node2)) {
        return-1 * goog.dom.compareParentsDescendantNodeIe_(node1, node2);
      }
      if (!isElement2 && goog.dom.contains(parent2, node1)) {
        return goog.dom.compareParentsDescendantNodeIe_(node2, node1);
      }
      return(isElement1 ? node1.sourceIndex : parent1.sourceIndex) - (isElement2 ? node2.sourceIndex : parent2.sourceIndex);
    }
  }
  var doc = goog.dom.getOwnerDocument(node1);
  var range1, range2;
  range1 = doc.createRange();
  range1.selectNode(node1);
  range1.collapse(true);
  range2 = doc.createRange();
  range2.selectNode(node2);
  range2.collapse(true);
  return range1.compareBoundaryPoints(goog.global["Range"].START_TO_END, range2);
};
goog.dom.compareParentsDescendantNodeIe_ = function(textNode, node) {
  var parent = textNode.parentNode;
  if (parent == node) {
    return-1;
  }
  var sibling = node;
  while (sibling.parentNode != parent) {
    sibling = sibling.parentNode;
  }
  return goog.dom.compareSiblingOrder_(sibling, textNode);
};
goog.dom.compareSiblingOrder_ = function(node1, node2) {
  var s = node2;
  while (s = s.previousSibling) {
    if (s == node1) {
      return-1;
    }
  }
  return 1;
};
goog.dom.findCommonAncestor = function(var_args) {
  var i, count = arguments.length;
  if (!count) {
    return null;
  } else {
    if (count == 1) {
      return arguments[0];
    }
  }
  var paths = [];
  var minLength = Infinity;
  for (i = 0;i < count;i++) {
    var ancestors = [];
    var node = arguments[i];
    while (node) {
      ancestors.unshift(node);
      node = node.parentNode;
    }
    paths.push(ancestors);
    minLength = Math.min(minLength, ancestors.length);
  }
  var output = null;
  for (i = 0;i < minLength;i++) {
    var first = paths[0][i];
    for (var j = 1;j < count;j++) {
      if (first != paths[j][i]) {
        return output;
      }
    }
    output = first;
  }
  return output;
};
goog.dom.getOwnerDocument = function(node) {
  goog.asserts.assert(node, "Node cannot be null or undefined.");
  return(node.nodeType == goog.dom.NodeType.DOCUMENT ? node : node.ownerDocument || node.document);
};
goog.dom.getFrameContentDocument = function(frame) {
  var doc = frame.contentDocument || frame.contentWindow.document;
  return doc;
};
goog.dom.getFrameContentWindow = function(frame) {
  return frame.contentWindow || goog.dom.getWindow(goog.dom.getFrameContentDocument(frame));
};
goog.dom.setTextContent = function(node, text) {
  goog.asserts.assert(node != null, "goog.dom.setTextContent expects a non-null value for node");
  if ("textContent" in node) {
    node.textContent = text;
  } else {
    if (node.nodeType == goog.dom.NodeType.TEXT) {
      node.data = text;
    } else {
      if (node.firstChild && node.firstChild.nodeType == goog.dom.NodeType.TEXT) {
        while (node.lastChild != node.firstChild) {
          node.removeChild(node.lastChild);
        }
        node.firstChild.data = text;
      } else {
        goog.dom.removeChildren(node);
        var doc = goog.dom.getOwnerDocument(node);
        node.appendChild(doc.createTextNode(String(text)));
      }
    }
  }
};
goog.dom.getOuterHtml = function(element) {
  if ("outerHTML" in element) {
    return element.outerHTML;
  } else {
    var doc = goog.dom.getOwnerDocument(element);
    var div = doc.createElement("div");
    div.appendChild(element.cloneNode(true));
    return div.innerHTML;
  }
};
goog.dom.findNode = function(root, p) {
  var rv = [];
  var found = goog.dom.findNodes_(root, p, rv, true);
  return found ? rv[0] : undefined;
};
goog.dom.findNodes = function(root, p) {
  var rv = [];
  goog.dom.findNodes_(root, p, rv, false);
  return rv;
};
goog.dom.findNodes_ = function(root, p, rv, findOne) {
  if (root != null) {
    var child = root.firstChild;
    while (child) {
      if (p(child)) {
        rv.push(child);
        if (findOne) {
          return true;
        }
      }
      if (goog.dom.findNodes_(child, p, rv, findOne)) {
        return true;
      }
      child = child.nextSibling;
    }
  }
  return false;
};
goog.dom.TAGS_TO_IGNORE_ = {"SCRIPT":1, "STYLE":1, "HEAD":1, "IFRAME":1, "OBJECT":1};
goog.dom.PREDEFINED_TAG_VALUES_ = {"IMG":" ", "BR":"\n"};
goog.dom.isFocusableTabIndex = function(element) {
  return goog.dom.hasSpecifiedTabIndex_(element) && goog.dom.isTabIndexFocusable_(element);
};
goog.dom.setFocusableTabIndex = function(element, enable) {
  if (enable) {
    element.tabIndex = 0;
  } else {
    element.tabIndex = -1;
    element.removeAttribute("tabIndex");
  }
};
goog.dom.isFocusable = function(element) {
  var focusable;
  if (goog.dom.nativelySupportsFocus_(element)) {
    focusable = !element.disabled && (!goog.dom.hasSpecifiedTabIndex_(element) || goog.dom.isTabIndexFocusable_(element));
  } else {
    focusable = goog.dom.isFocusableTabIndex(element);
  }
  return focusable && goog.userAgent.IE ? goog.dom.hasNonZeroBoundingRect_(element) : focusable;
};
goog.dom.hasSpecifiedTabIndex_ = function(element) {
  var attrNode = element.getAttributeNode("tabindex");
  return goog.isDefAndNotNull(attrNode) && attrNode.specified;
};
goog.dom.isTabIndexFocusable_ = function(element) {
  var index = element.tabIndex;
  return goog.isNumber(index) && index >= 0 && index < 32768;
};
goog.dom.nativelySupportsFocus_ = function(element) {
  return element.tagName == goog.dom.TagName.A || element.tagName == goog.dom.TagName.INPUT || element.tagName == goog.dom.TagName.TEXTAREA || element.tagName == goog.dom.TagName.SELECT || element.tagName == goog.dom.TagName.BUTTON;
};
goog.dom.hasNonZeroBoundingRect_ = function(element) {
  var rect = goog.isFunction(element["getBoundingClientRect"]) ? element.getBoundingClientRect() : {"height":element.offsetHeight, "width":element.offsetWidth};
  return goog.isDefAndNotNull(rect) && rect.height > 0 && rect.width > 0;
};
goog.dom.getTextContent = function(node) {
  var textContent;
  if (goog.dom.BrowserFeature.CAN_USE_INNER_TEXT && "innerText" in node) {
    textContent = goog.string.canonicalizeNewlines(node.innerText);
  } else {
    var buf = [];
    goog.dom.getTextContent_(node, buf, true);
    textContent = buf.join("");
  }
  textContent = textContent.replace(/ \xAD /g, " ").replace(/\xAD/g, "");
  textContent = textContent.replace(/\u200B/g, "");
  if (!goog.dom.BrowserFeature.CAN_USE_INNER_TEXT) {
    textContent = textContent.replace(/ +/g, " ");
  }
  if (textContent != " ") {
    textContent = textContent.replace(/^\s*/, "");
  }
  return textContent;
};
goog.dom.getRawTextContent = function(node) {
  var buf = [];
  goog.dom.getTextContent_(node, buf, false);
  return buf.join("");
};
goog.dom.getTextContent_ = function(node, buf, normalizeWhitespace) {
  if (node.nodeName in goog.dom.TAGS_TO_IGNORE_) {
  } else {
    if (node.nodeType == goog.dom.NodeType.TEXT) {
      if (normalizeWhitespace) {
        buf.push(String(node.nodeValue).replace(/(\r\n|\r|\n)/g, ""));
      } else {
        buf.push(node.nodeValue);
      }
    } else {
      if (node.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
        buf.push(goog.dom.PREDEFINED_TAG_VALUES_[node.nodeName]);
      } else {
        var child = node.firstChild;
        while (child) {
          goog.dom.getTextContent_(child, buf, normalizeWhitespace);
          child = child.nextSibling;
        }
      }
    }
  }
};
goog.dom.getNodeTextLength = function(node) {
  return goog.dom.getTextContent(node).length;
};
goog.dom.getNodeTextOffset = function(node, opt_offsetParent) {
  var root = opt_offsetParent || goog.dom.getOwnerDocument(node).body;
  var buf = [];
  while (node && node != root) {
    var cur = node;
    while (cur = cur.previousSibling) {
      buf.unshift(goog.dom.getTextContent(cur));
    }
    node = node.parentNode;
  }
  return goog.string.trimLeft(buf.join("")).replace(/ +/g, " ").length;
};
goog.dom.getNodeAtOffset = function(parent, offset, opt_result) {
  var stack = [parent], pos = 0, cur = null;
  while (stack.length > 0 && pos < offset) {
    cur = stack.pop();
    if (cur.nodeName in goog.dom.TAGS_TO_IGNORE_) {
    } else {
      if (cur.nodeType == goog.dom.NodeType.TEXT) {
        var text = cur.nodeValue.replace(/(\r\n|\r|\n)/g, "").replace(/ +/g, " ");
        pos += text.length;
      } else {
        if (cur.nodeName in goog.dom.PREDEFINED_TAG_VALUES_) {
          pos += goog.dom.PREDEFINED_TAG_VALUES_[cur.nodeName].length;
        } else {
          for (var i = cur.childNodes.length - 1;i >= 0;i--) {
            stack.push(cur.childNodes[i]);
          }
        }
      }
    }
  }
  if (goog.isObject(opt_result)) {
    opt_result.remainder = cur ? cur.nodeValue.length + offset - pos - 1 : 0;
    opt_result.node = cur;
  }
  return cur;
};
goog.dom.isNodeList = function(val) {
  if (val && typeof val.length == "number") {
    if (goog.isObject(val)) {
      return typeof val.item == "function" || typeof val.item == "string";
    } else {
      if (goog.isFunction(val)) {
        return typeof val.item == "function";
      }
    }
  }
  return false;
};
goog.dom.getAncestorByTagNameAndClass = function(element, opt_tag, opt_class) {
  if (!opt_tag && !opt_class) {
    return null;
  }
  var tagName = opt_tag ? opt_tag.toUpperCase() : null;
  return(goog.dom.getAncestor(element, function(node) {
    return(!tagName || node.nodeName == tagName) && (!opt_class || goog.isString(node.className) && goog.array.contains(node.className.split(/\s+/), opt_class));
  }, true));
};
goog.dom.getAncestorByClass = function(element, className) {
  return goog.dom.getAncestorByTagNameAndClass(element, null, className);
};
goog.dom.getAncestor = function(element, matcher, opt_includeNode, opt_maxSearchSteps) {
  if (!opt_includeNode) {
    element = element.parentNode;
  }
  var ignoreSearchSteps = opt_maxSearchSteps == null;
  var steps = 0;
  while (element && (ignoreSearchSteps || steps <= opt_maxSearchSteps)) {
    if (matcher(element)) {
      return element;
    }
    element = element.parentNode;
    steps++;
  }
  return null;
};
goog.dom.getActiveElement = function(doc) {
  try {
    return doc && doc.activeElement;
  } catch (e) {
  }
  return null;
};
goog.dom.devicePixelRatio_;
goog.dom.getPixelRatio = goog.functions.cacheReturnValue(function() {
  var win = goog.dom.getWindow();
  var isFirefoxMobile = goog.userAgent.GECKO && goog.userAgent.MOBILE;
  if (goog.isDef(win.devicePixelRatio) && !isFirefoxMobile) {
    return win.devicePixelRatio;
  } else {
    if (win.matchMedia) {
      return goog.dom.matchesPixelRatio_(.75) || goog.dom.matchesPixelRatio_(1.5) || goog.dom.matchesPixelRatio_(2) || goog.dom.matchesPixelRatio_(3) || 1;
    }
  }
  return 1;
});
goog.dom.matchesPixelRatio_ = function(pixelRatio) {
  var win = goog.dom.getWindow();
  var query = "(-webkit-min-device-pixel-ratio: " + pixelRatio + ")," + "(min--moz-device-pixel-ratio: " + pixelRatio + ")," + "(min-resolution: " + pixelRatio + "dppx)";
  return win.matchMedia(query).matches ? pixelRatio : 0;
};
goog.dom.DomHelper = function(opt_document) {
  this.document_ = opt_document || goog.global.document || document;
};
goog.dom.DomHelper.prototype.getDomHelper = goog.dom.getDomHelper;
goog.dom.DomHelper.prototype.setDocument = function(document) {
  this.document_ = document;
};
goog.dom.DomHelper.prototype.getDocument = function() {
  return this.document_;
};
goog.dom.DomHelper.prototype.getElement = function(element) {
  return goog.dom.getElementHelper_(this.document_, element);
};
goog.dom.DomHelper.prototype.getRequiredElement = function(id) {
  return goog.dom.getRequiredElementHelper_(this.document_, id);
};
goog.dom.DomHelper.prototype.$ = goog.dom.DomHelper.prototype.getElement;
goog.dom.DomHelper.prototype.getElementsByTagNameAndClass = function(opt_tag, opt_class, opt_el) {
  return goog.dom.getElementsByTagNameAndClass_(this.document_, opt_tag, opt_class, opt_el);
};
goog.dom.DomHelper.prototype.getElementsByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementsByClass(className, doc);
};
goog.dom.DomHelper.prototype.getElementByClass = function(className, opt_el) {
  var doc = opt_el || this.document_;
  return goog.dom.getElementByClass(className, doc);
};
goog.dom.DomHelper.prototype.getRequiredElementByClass = function(className, opt_root) {
  var root = opt_root || this.document_;
  return goog.dom.getRequiredElementByClass(className, root);
};
goog.dom.DomHelper.prototype.$$ = goog.dom.DomHelper.prototype.getElementsByTagNameAndClass;
goog.dom.DomHelper.prototype.setProperties = goog.dom.setProperties;
goog.dom.DomHelper.prototype.getViewportSize = function(opt_window) {
  return goog.dom.getViewportSize(opt_window || this.getWindow());
};
goog.dom.DomHelper.prototype.getDocumentHeight = function() {
  return goog.dom.getDocumentHeight_(this.getWindow());
};
goog.dom.Appendable;
goog.dom.DomHelper.prototype.createDom = function(tagName, opt_attributes, var_args) {
  return goog.dom.createDom_(this.document_, arguments);
};
goog.dom.DomHelper.prototype.$dom = goog.dom.DomHelper.prototype.createDom;
goog.dom.DomHelper.prototype.createElement = function(name) {
  return this.document_.createElement(name);
};
goog.dom.DomHelper.prototype.createTextNode = function(content) {
  return this.document_.createTextNode(String(content));
};
goog.dom.DomHelper.prototype.createTable = function(rows, columns, opt_fillWithNbsp) {
  return goog.dom.createTable_(this.document_, rows, columns, !!opt_fillWithNbsp);
};
goog.dom.DomHelper.prototype.htmlToDocumentFragment = function(htmlString) {
  return goog.dom.htmlToDocumentFragment_(this.document_, htmlString);
};
goog.dom.DomHelper.prototype.isCss1CompatMode = function() {
  return goog.dom.isCss1CompatMode_(this.document_);
};
goog.dom.DomHelper.prototype.getWindow = function() {
  return goog.dom.getWindow_(this.document_);
};
goog.dom.DomHelper.prototype.getDocumentScrollElement = function() {
  return goog.dom.getDocumentScrollElement_(this.document_);
};
goog.dom.DomHelper.prototype.getDocumentScroll = function() {
  return goog.dom.getDocumentScroll_(this.document_);
};
goog.dom.DomHelper.prototype.getActiveElement = function(opt_doc) {
  return goog.dom.getActiveElement(opt_doc || this.document_);
};
goog.dom.DomHelper.prototype.appendChild = goog.dom.appendChild;
goog.dom.DomHelper.prototype.append = goog.dom.append;
goog.dom.DomHelper.prototype.canHaveChildren = goog.dom.canHaveChildren;
goog.dom.DomHelper.prototype.removeChildren = goog.dom.removeChildren;
goog.dom.DomHelper.prototype.insertSiblingBefore = goog.dom.insertSiblingBefore;
goog.dom.DomHelper.prototype.insertSiblingAfter = goog.dom.insertSiblingAfter;
goog.dom.DomHelper.prototype.insertChildAt = goog.dom.insertChildAt;
goog.dom.DomHelper.prototype.removeNode = goog.dom.removeNode;
goog.dom.DomHelper.prototype.replaceNode = goog.dom.replaceNode;
goog.dom.DomHelper.prototype.flattenElement = goog.dom.flattenElement;
goog.dom.DomHelper.prototype.getChildren = goog.dom.getChildren;
goog.dom.DomHelper.prototype.getFirstElementChild = goog.dom.getFirstElementChild;
goog.dom.DomHelper.prototype.getLastElementChild = goog.dom.getLastElementChild;
goog.dom.DomHelper.prototype.getNextElementSibling = goog.dom.getNextElementSibling;
goog.dom.DomHelper.prototype.getPreviousElementSibling = goog.dom.getPreviousElementSibling;
goog.dom.DomHelper.prototype.getNextNode = goog.dom.getNextNode;
goog.dom.DomHelper.prototype.getPreviousNode = goog.dom.getPreviousNode;
goog.dom.DomHelper.prototype.isNodeLike = goog.dom.isNodeLike;
goog.dom.DomHelper.prototype.isElement = goog.dom.isElement;
goog.dom.DomHelper.prototype.isWindow = goog.dom.isWindow;
goog.dom.DomHelper.prototype.getParentElement = goog.dom.getParentElement;
goog.dom.DomHelper.prototype.contains = goog.dom.contains;
goog.dom.DomHelper.prototype.compareNodeOrder = goog.dom.compareNodeOrder;
goog.dom.DomHelper.prototype.findCommonAncestor = goog.dom.findCommonAncestor;
goog.dom.DomHelper.prototype.getOwnerDocument = goog.dom.getOwnerDocument;
goog.dom.DomHelper.prototype.getFrameContentDocument = goog.dom.getFrameContentDocument;
goog.dom.DomHelper.prototype.getFrameContentWindow = goog.dom.getFrameContentWindow;
goog.dom.DomHelper.prototype.setTextContent = goog.dom.setTextContent;
goog.dom.DomHelper.prototype.getOuterHtml = goog.dom.getOuterHtml;
goog.dom.DomHelper.prototype.findNode = goog.dom.findNode;
goog.dom.DomHelper.prototype.findNodes = goog.dom.findNodes;
goog.dom.DomHelper.prototype.isFocusableTabIndex = goog.dom.isFocusableTabIndex;
goog.dom.DomHelper.prototype.setFocusableTabIndex = goog.dom.setFocusableTabIndex;
goog.dom.DomHelper.prototype.isFocusable = goog.dom.isFocusable;
goog.dom.DomHelper.prototype.getTextContent = goog.dom.getTextContent;
goog.dom.DomHelper.prototype.getNodeTextLength = goog.dom.getNodeTextLength;
goog.dom.DomHelper.prototype.getNodeTextOffset = goog.dom.getNodeTextOffset;
goog.dom.DomHelper.prototype.getNodeAtOffset = goog.dom.getNodeAtOffset;
goog.dom.DomHelper.prototype.isNodeList = goog.dom.isNodeList;
goog.dom.DomHelper.prototype.getAncestorByTagNameAndClass = goog.dom.getAncestorByTagNameAndClass;
goog.dom.DomHelper.prototype.getAncestorByClass = goog.dom.getAncestorByClass;
goog.dom.DomHelper.prototype.getAncestor = goog.dom.getAncestor;
goog.provide("goog.net.jsloader");
goog.provide("goog.net.jsloader.Error");
goog.provide("goog.net.jsloader.ErrorCode");
goog.provide("goog.net.jsloader.Options");
goog.require("goog.array");
goog.require("goog.async.Deferred");
goog.require("goog.debug.Error");
goog.require("goog.dom");
goog.require("goog.dom.TagName");
goog.net.jsloader.GLOBAL_VERIFY_OBJS_ = "closure_verification";
goog.net.jsloader.DEFAULT_TIMEOUT = 5E3;
goog.net.jsloader.Options;
goog.net.jsloader.scriptsToLoad_ = [];
goog.net.jsloader.loadMany = function(uris, opt_options) {
  if (!uris.length) {
    return;
  }
  var isAnotherModuleLoading = goog.net.jsloader.scriptsToLoad_.length;
  goog.array.extend(goog.net.jsloader.scriptsToLoad_, uris);
  if (isAnotherModuleLoading) {
    return;
  }
  uris = goog.net.jsloader.scriptsToLoad_;
  var popAndLoadNextScript = function() {
    var uri = uris.shift();
    var deferred = goog.net.jsloader.load(uri, opt_options);
    if (uris.length) {
      deferred.addBoth(popAndLoadNextScript);
    }
  };
  popAndLoadNextScript();
};
goog.net.jsloader.load = function(uri, opt_options) {
  var options = opt_options || {};
  var doc = options.document || document;
  var script = goog.dom.createElement(goog.dom.TagName.SCRIPT);
  var request = {script_:script, timeout_:undefined};
  var deferred = new goog.async.Deferred(goog.net.jsloader.cancel_, request);
  var timeout = null;
  var timeoutDuration = goog.isDefAndNotNull(options.timeout) ? options.timeout : goog.net.jsloader.DEFAULT_TIMEOUT;
  if (timeoutDuration > 0) {
    timeout = window.setTimeout(function() {
      goog.net.jsloader.cleanup_(script, true);
      deferred.errback(new goog.net.jsloader.Error(goog.net.jsloader.ErrorCode.TIMEOUT, "Timeout reached for loading script " + uri));
    }, timeoutDuration);
    request.timeout_ = timeout;
  }
  script.onload = script.onreadystatechange = function() {
    if (!script.readyState || script.readyState == "loaded" || script.readyState == "complete") {
      var removeScriptNode = options.cleanupWhenDone || false;
      goog.net.jsloader.cleanup_(script, removeScriptNode, timeout);
      deferred.callback(null);
    }
  };
  script.onerror = function() {
    goog.net.jsloader.cleanup_(script, true, timeout);
    deferred.errback(new goog.net.jsloader.Error(goog.net.jsloader.ErrorCode.LOAD_ERROR, "Error while loading script " + uri));
  };
  goog.dom.setProperties(script, {"type":"text/javascript", "charset":"UTF-8", "src":uri});
  var scriptParent = goog.net.jsloader.getScriptParentElement_(doc);
  scriptParent.appendChild(script);
  return deferred;
};
goog.net.jsloader.loadAndVerify = function(uri, verificationObjName, options) {
  if (!goog.global[goog.net.jsloader.GLOBAL_VERIFY_OBJS_]) {
    goog.global[goog.net.jsloader.GLOBAL_VERIFY_OBJS_] = {};
  }
  var verifyObjs = goog.global[goog.net.jsloader.GLOBAL_VERIFY_OBJS_];
  if (goog.isDef(verifyObjs[verificationObjName])) {
    return goog.async.Deferred.fail(new goog.net.jsloader.Error(goog.net.jsloader.ErrorCode.VERIFY_OBJECT_ALREADY_EXISTS, "Verification object " + verificationObjName + " already defined."));
  }
  var sendDeferred = goog.net.jsloader.load(uri, options);
  var deferred = new goog.async.Deferred(goog.bind(sendDeferred.cancel, sendDeferred));
  sendDeferred.addCallback(function() {
    var result = verifyObjs[verificationObjName];
    if (goog.isDef(result)) {
      deferred.callback(result);
      delete verifyObjs[verificationObjName];
    } else {
      deferred.errback(new goog.net.jsloader.Error(goog.net.jsloader.ErrorCode.VERIFY_ERROR, "Script " + uri + " loaded, but verification object " + verificationObjName + " was not defined."));
    }
  });
  sendDeferred.addErrback(function(error) {
    if (goog.isDef(verifyObjs[verificationObjName])) {
      delete verifyObjs[verificationObjName];
    }
    deferred.errback(error);
  });
  return deferred;
};
goog.net.jsloader.getScriptParentElement_ = function(doc) {
  var headElements = doc.getElementsByTagName(goog.dom.TagName.HEAD);
  if (!headElements || goog.array.isEmpty(headElements)) {
    return doc.documentElement;
  } else {
    return headElements[0];
  }
};
goog.net.jsloader.cancel_ = function() {
  var request = this;
  if (request && request.script_) {
    var scriptNode = request.script_;
    if (scriptNode && scriptNode.tagName == "SCRIPT") {
      goog.net.jsloader.cleanup_(scriptNode, true, request.timeout_);
    }
  }
};
goog.net.jsloader.cleanup_ = function(scriptNode, removeScriptNode, opt_timeout) {
  if (goog.isDefAndNotNull(opt_timeout)) {
    goog.global.clearTimeout(opt_timeout);
  }
  scriptNode.onload = goog.nullFunction;
  scriptNode.onerror = goog.nullFunction;
  scriptNode.onreadystatechange = goog.nullFunction;
  if (removeScriptNode) {
    window.setTimeout(function() {
      goog.dom.removeNode(scriptNode);
    }, 0);
  }
};
goog.net.jsloader.ErrorCode = {LOAD_ERROR:0, TIMEOUT:1, VERIFY_ERROR:2, VERIFY_OBJECT_ALREADY_EXISTS:3};
goog.net.jsloader.Error = function(code, opt_message) {
  var msg = "Jsloader error (code #" + code + ")";
  if (opt_message) {
    msg += ": " + opt_message;
  }
  goog.net.jsloader.Error.base(this, "constructor", msg);
  this.code = code;
};
goog.inherits(goog.net.jsloader.Error, goog.debug.Error);
goog.provide("goog.net.Jsonp");
goog.require("goog.Uri");
goog.require("goog.net.jsloader");
goog.net.Jsonp = function(uri, opt_callbackParamName) {
  this.uri_ = new goog.Uri(uri);
  this.callbackParamName_ = opt_callbackParamName ? opt_callbackParamName : "callback";
  this.timeout_ = 5E3;
};
goog.net.Jsonp.CALLBACKS = "_callbacks_";
goog.net.Jsonp.scriptCounter_ = 0;
goog.net.Jsonp.prototype.setRequestTimeout = function(timeout) {
  this.timeout_ = timeout;
};
goog.net.Jsonp.prototype.getRequestTimeout = function() {
  return this.timeout_;
};
goog.net.Jsonp.prototype.send = function(opt_payload, opt_replyCallback, opt_errorCallback, opt_callbackParamValue) {
  var payload = opt_payload || null;
  var id = opt_callbackParamValue || "_" + (goog.net.Jsonp.scriptCounter_++).toString(36) + goog.now().toString(36);
  if (!goog.global[goog.net.Jsonp.CALLBACKS]) {
    goog.global[goog.net.Jsonp.CALLBACKS] = {};
  }
  var uri = this.uri_.clone();
  if (payload) {
    goog.net.Jsonp.addPayloadToUri_(payload, uri);
  }
  if (opt_replyCallback) {
    var reply = goog.net.Jsonp.newReplyHandler_(id, opt_replyCallback);
    goog.global[goog.net.Jsonp.CALLBACKS][id] = reply;
    uri.setParameterValues(this.callbackParamName_, goog.net.Jsonp.CALLBACKS + "." + id);
  }
  var deferred = goog.net.jsloader.load(uri.toString(), {timeout:this.timeout_, cleanupWhenDone:true});
  var error = goog.net.Jsonp.newErrorHandler_(id, payload, opt_errorCallback);
  deferred.addErrback(error);
  return{id_:id, deferred_:deferred};
};
goog.net.Jsonp.prototype.cancel = function(request) {
  if (request) {
    if (request.deferred_) {
      request.deferred_.cancel();
    }
    if (request.id_) {
      goog.net.Jsonp.cleanup_(request.id_, false);
    }
  }
};
goog.net.Jsonp.newErrorHandler_ = function(id, payload, opt_errorCallback) {
  return function() {
    goog.net.Jsonp.cleanup_(id, false);
    if (opt_errorCallback) {
      opt_errorCallback(payload);
    }
  };
};
goog.net.Jsonp.newReplyHandler_ = function(id, replyCallback) {
  return function(var_args) {
    goog.net.Jsonp.cleanup_(id, true);
    replyCallback.apply(undefined, arguments);
  };
};
goog.net.Jsonp.cleanup_ = function(id, deleteReplyHandler) {
  if (goog.global[goog.net.Jsonp.CALLBACKS][id]) {
    if (deleteReplyHandler) {
      delete goog.global[goog.net.Jsonp.CALLBACKS][id];
    } else {
      goog.global[goog.net.Jsonp.CALLBACKS][id] = goog.nullFunction;
    }
  }
};
goog.net.Jsonp.addPayloadToUri_ = function(payload, uri) {
  for (var name in payload) {
    if (!payload.hasOwnProperty || payload.hasOwnProperty(name)) {
      uri.setParameterValues(name, payload[name]);
    }
  }
  return uri;
};
goog.provide("goog.string.StringBuffer");
goog.string.StringBuffer = function(opt_a1, var_args) {
  if (opt_a1 != null) {
    this.append.apply(this, arguments);
  }
};
goog.string.StringBuffer.prototype.buffer_ = "";
goog.string.StringBuffer.prototype.set = function(s) {
  this.buffer_ = "" + s;
};
goog.string.StringBuffer.prototype.append = function(a1, opt_a2, var_args) {
  this.buffer_ += a1;
  if (opt_a2 != null) {
    for (var i = 1;i < arguments.length;i++) {
      this.buffer_ += arguments[i];
    }
  }
  return this;
};
goog.string.StringBuffer.prototype.clear = function() {
  this.buffer_ = "";
};
goog.string.StringBuffer.prototype.getLength = function() {
  return this.buffer_.length;
};
goog.string.StringBuffer.prototype.toString = function() {
  return this.buffer_;
};
goog.provide("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.array");
goog.require("goog.object");
goog.require("goog.string");
cljs.core._STAR_clojurescript_version_STAR_ = "0.0-2913";
cljs.core._STAR_unchecked_if_STAR_ = false;
if (typeof cljs.core._STAR_print_fn_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_print_fn_STAR_ = function _STAR_print_fn_STAR_(_) {
    throw new Error("No *print-fn* fn set for evaluation environment");
  };
}
cljs.core.set_print_fn_BANG_ = function set_print_fn_BANG_(f) {
  return cljs.core._STAR_print_fn_STAR_ = f;
};
cljs.core._STAR_flush_on_newline_STAR_ = true;
cljs.core._STAR_print_newline_STAR_ = true;
cljs.core._STAR_print_readably_STAR_ = true;
cljs.core._STAR_print_meta_STAR_ = false;
cljs.core._STAR_print_dup_STAR_ = false;
cljs.core._STAR_print_length_STAR_ = null;
cljs.core._STAR_print_level_STAR_ = null;
if (typeof cljs.core._STAR_loaded_libs_STAR_ !== "undefined") {
} else {
  cljs.core._STAR_loaded_libs_STAR_ = null;
}
cljs.core.pr_opts = function pr_opts() {
  return new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939), cljs.core._STAR_flush_on_newline_STAR_, new cljs.core.Keyword(null, "readably", "readably", 1129599760), cljs.core._STAR_print_readably_STAR_, new cljs.core.Keyword(null, "meta", "meta", 1499536964), cljs.core._STAR_print_meta_STAR_, new cljs.core.Keyword(null, "dup", "dup", 556298533), cljs.core._STAR_print_dup_STAR_, new cljs.core.Keyword(null, "print-length", "print-length", 
  1931866356), cljs.core._STAR_print_length_STAR_], null);
};
cljs.core.enable_console_print_BANG_ = function enable_console_print_BANG_() {
  cljs.core._STAR_print_newline_STAR_ = false;
  return cljs.core._STAR_print_fn_STAR_ = function() {
    var G__9664__delegate = function(args) {
      return console.log.apply(console, function() {
        var G__9663 = args;
        return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(G__9663) : cljs.core.into_array.call(null, G__9663);
      }());
    };
    var G__9664 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__9665__i = 0, G__9665__a = new Array(arguments.length - 0);
        while (G__9665__i < G__9665__a.length) {
          G__9665__a[G__9665__i] = arguments[G__9665__i + 0];
          ++G__9665__i;
        }
        args = new cljs.core.IndexedSeq(G__9665__a, 0);
      }
      return G__9664__delegate.call(this, args);
    };
    G__9664.cljs$lang$maxFixedArity = 0;
    G__9664.cljs$lang$applyTo = function(arglist__9666) {
      var args = cljs.core.seq(arglist__9666);
      return G__9664__delegate(args);
    };
    G__9664.cljs$core$IFn$_invoke$arity$variadic = G__9664__delegate;
    return G__9664;
  }();
};
cljs.core.truth_ = function truth_(x) {
  return x != null && x !== false;
};
cljs.core.not_native = null;
cljs.core.identical_QMARK_ = function identical_QMARK_(x, y) {
  return x === y;
};
cljs.core.nil_QMARK_ = function nil_QMARK_(x) {
  return x == null;
};
cljs.core.array_QMARK_ = function array_QMARK_(x) {
  return x instanceof Array;
};
cljs.core.number_QMARK_ = function number_QMARK_(n) {
  return typeof n === "number";
};
cljs.core.not = function not(x) {
  if (cljs.core.truth_(x)) {
    return false;
  } else {
    return true;
  }
};
cljs.core.some_QMARK_ = function some_QMARK_(x) {
  return!(x == null);
};
cljs.core.object_QMARK_ = function object_QMARK_(x) {
  if (!(x == null)) {
    return x.constructor === Object;
  } else {
    return false;
  }
};
cljs.core.string_QMARK_ = function string_QMARK_(x) {
  var G__9668 = x;
  return goog.isString(G__9668);
};
cljs.core.native_satisfies_QMARK_ = function native_satisfies_QMARK_(p, x) {
  var x__$1 = x == null ? null : x;
  if (p[function() {
    var G__9670 = x__$1;
    return goog.typeOf(G__9670);
  }()]) {
    return true;
  } else {
    if (p["_"]) {
      return true;
    } else {
      return false;
    }
  }
};
cljs.core.is_proto_ = function is_proto_(x) {
  return x.constructor.prototype === x;
};
cljs.core._STAR_main_cli_fn_STAR_ = null;
cljs.core.type = function type(x) {
  if (x == null) {
    return null;
  } else {
    return x.constructor;
  }
};
cljs.core.missing_protocol = function missing_protocol(proto, obj) {
  var ty = cljs.core.type(obj);
  var ty__$1 = cljs.core.truth_(function() {
    var and__3913__auto__ = ty;
    if (cljs.core.truth_(and__3913__auto__)) {
      return ty.cljs$lang$type;
    } else {
      return and__3913__auto__;
    }
  }()) ? ty.cljs$lang$ctorStr : function() {
    var G__9672 = obj;
    return goog.typeOf(G__9672);
  }();
  return new Error(["No protocol method ", proto, " defined for type ", ty__$1, ": ", obj].join(""));
};
cljs.core.type__GT_str = function type__GT_str(ty) {
  var temp__4124__auto__ = ty.cljs$lang$ctorStr;
  if (cljs.core.truth_(temp__4124__auto__)) {
    var s = temp__4124__auto__;
    return s;
  } else {
    return[cljs.core.str(ty)].join("");
  }
};
cljs.core.load_file = function load_file(file) {
  if (cljs.core.truth_(COMPILED)) {
    return null;
  } else {
    return goog.importScript_(file);
  }
};
if (typeof Symbol !== "undefined" && function() {
  var G__9674 = Symbol;
  return goog.typeOf(G__9674);
}() === "function") {
  cljs.core.ITER_SYMBOL = Symbol.iterator;
} else {
  cljs.core.ITER_SYMBOL = "@@iterator";
}
cljs.core.make_array = function() {
  var make_array = null;
  var make_array__1 = function(size) {
    return new Array(size);
  };
  var make_array__2 = function(type, size) {
    return make_array.cljs$core$IFn$_invoke$arity$1(size);
  };
  make_array = function(type, size) {
    switch(arguments.length) {
      case 1:
        return make_array__1.call(this, type);
      case 2:
        return make_array__2.call(this, type, size);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  make_array.cljs$core$IFn$_invoke$arity$1 = make_array__1;
  make_array.cljs$core$IFn$_invoke$arity$2 = make_array__2;
  return make_array;
}();
cljs.core.aclone = function aclone(arr) {
  var len = arr.length;
  var new_arr = new Array(len);
  var n__4812__auto___9676 = len;
  var i_9677 = 0;
  while (true) {
    if (i_9677 < n__4812__auto___9676) {
      new_arr[i_9677] = arr[i_9677];
      var G__9678 = i_9677 + 1;
      i_9677 = G__9678;
      continue;
    } else {
    }
    break;
  }
  return new_arr;
};
cljs.core.array = function array(var_args) {
  var a = new Array(arguments.length);
  var i = 0;
  while (true) {
    if (i < a.length) {
      a[i] = arguments[i];
      var G__9679 = i + 1;
      i = G__9679;
      continue;
    } else {
      return a;
    }
    break;
  }
};
cljs.core.aget = function() {
  var aget = null;
  var aget__2 = function(array, i) {
    return array[i];
  };
  var aget__3 = function() {
    var G__9688__delegate = function(array, i, idxs) {
      var G__9685 = aget;
      var G__9686 = aget.cljs$core$IFn$_invoke$arity$2(array, i);
      var G__9687 = idxs;
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$3 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$3(G__9685, G__9686, G__9687) : cljs.core.apply.call(null, G__9685, G__9686, G__9687);
    };
    var G__9688 = function(array, i, var_args) {
      var idxs = null;
      if (arguments.length > 2) {
        var G__9689__i = 0, G__9689__a = new Array(arguments.length - 2);
        while (G__9689__i < G__9689__a.length) {
          G__9689__a[G__9689__i] = arguments[G__9689__i + 2];
          ++G__9689__i;
        }
        idxs = new cljs.core.IndexedSeq(G__9689__a, 0);
      }
      return G__9688__delegate.call(this, array, i, idxs);
    };
    G__9688.cljs$lang$maxFixedArity = 2;
    G__9688.cljs$lang$applyTo = function(arglist__9690) {
      var array = cljs.core.first(arglist__9690);
      arglist__9690 = cljs.core.next(arglist__9690);
      var i = cljs.core.first(arglist__9690);
      var idxs = cljs.core.rest(arglist__9690);
      return G__9688__delegate(array, i, idxs);
    };
    G__9688.cljs$core$IFn$_invoke$arity$variadic = G__9688__delegate;
    return G__9688;
  }();
  aget = function(array, i, var_args) {
    var idxs = var_args;
    switch(arguments.length) {
      case 2:
        return aget__2.call(this, array, i);
      default:
        var G__9691 = null;
        if (arguments.length > 2) {
          var G__9692__i = 0, G__9692__a = new Array(arguments.length - 2);
          while (G__9692__i < G__9692__a.length) {
            G__9692__a[G__9692__i] = arguments[G__9692__i + 2];
            ++G__9692__i;
          }
          G__9691 = new cljs.core.IndexedSeq(G__9692__a, 0);
        }
        return aget__3.cljs$core$IFn$_invoke$arity$variadic(array, i, G__9691);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aget.cljs$lang$maxFixedArity = 2;
  aget.cljs$lang$applyTo = aget__3.cljs$lang$applyTo;
  aget.cljs$core$IFn$_invoke$arity$2 = aget__2;
  aget.cljs$core$IFn$_invoke$arity$variadic = aget__3.cljs$core$IFn$_invoke$arity$variadic;
  return aget;
}();
cljs.core.aset = function() {
  var aset = null;
  var aset__3 = function(array, i, val) {
    return array[i] = val;
  };
  var aset__4 = function() {
    var G__9701__delegate = function(array, idx, idx2, idxv) {
      var G__9697 = aset;
      var G__9698 = array[idx];
      var G__9699 = idx2;
      var G__9700 = idxv;
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$4 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$4(G__9697, G__9698, G__9699, G__9700) : cljs.core.apply.call(null, G__9697, G__9698, G__9699, G__9700);
    };
    var G__9701 = function(array, idx, idx2, var_args) {
      var idxv = null;
      if (arguments.length > 3) {
        var G__9702__i = 0, G__9702__a = new Array(arguments.length - 3);
        while (G__9702__i < G__9702__a.length) {
          G__9702__a[G__9702__i] = arguments[G__9702__i + 3];
          ++G__9702__i;
        }
        idxv = new cljs.core.IndexedSeq(G__9702__a, 0);
      }
      return G__9701__delegate.call(this, array, idx, idx2, idxv);
    };
    G__9701.cljs$lang$maxFixedArity = 3;
    G__9701.cljs$lang$applyTo = function(arglist__9703) {
      var array = cljs.core.first(arglist__9703);
      arglist__9703 = cljs.core.next(arglist__9703);
      var idx = cljs.core.first(arglist__9703);
      arglist__9703 = cljs.core.next(arglist__9703);
      var idx2 = cljs.core.first(arglist__9703);
      var idxv = cljs.core.rest(arglist__9703);
      return G__9701__delegate(array, idx, idx2, idxv);
    };
    G__9701.cljs$core$IFn$_invoke$arity$variadic = G__9701__delegate;
    return G__9701;
  }();
  aset = function(array, idx, idx2, var_args) {
    var idxv = var_args;
    switch(arguments.length) {
      case 3:
        return aset__3.call(this, array, idx, idx2);
      default:
        var G__9704 = null;
        if (arguments.length > 3) {
          var G__9705__i = 0, G__9705__a = new Array(arguments.length - 3);
          while (G__9705__i < G__9705__a.length) {
            G__9705__a[G__9705__i] = arguments[G__9705__i + 3];
            ++G__9705__i;
          }
          G__9704 = new cljs.core.IndexedSeq(G__9705__a, 0);
        }
        return aset__4.cljs$core$IFn$_invoke$arity$variadic(array, idx, idx2, G__9704);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  aset.cljs$lang$maxFixedArity = 3;
  aset.cljs$lang$applyTo = aset__4.cljs$lang$applyTo;
  aset.cljs$core$IFn$_invoke$arity$3 = aset__3;
  aset.cljs$core$IFn$_invoke$arity$variadic = aset__4.cljs$core$IFn$_invoke$arity$variadic;
  return aset;
}();
cljs.core.alength = function alength(array) {
  return array.length;
};
cljs.core.into_array = function() {
  var into_array = null;
  var into_array__1 = function(aseq) {
    return into_array.cljs$core$IFn$_invoke$arity$2(null, aseq);
  };
  var into_array__2 = function(type, aseq) {
    var G__9711 = function(a, x) {
      a.push(x);
      return a;
    };
    var G__9712 = [];
    var G__9713 = aseq;
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__9711, G__9712, G__9713) : cljs.core.reduce.call(null, G__9711, G__9712, G__9713);
  };
  into_array = function(type, aseq) {
    switch(arguments.length) {
      case 1:
        return into_array__1.call(this, type);
      case 2:
        return into_array__2.call(this, type, aseq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  into_array.cljs$core$IFn$_invoke$arity$1 = into_array__1;
  into_array.cljs$core$IFn$_invoke$arity$2 = into_array__2;
  return into_array;
}();
cljs.core.js_invoke = function() {
  var js_invoke__delegate = function(obj, s, args) {
    return obj[s].apply(obj, cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(args));
  };
  var js_invoke = function(obj, s, var_args) {
    var args = null;
    if (arguments.length > 2) {
      var G__9714__i = 0, G__9714__a = new Array(arguments.length - 2);
      while (G__9714__i < G__9714__a.length) {
        G__9714__a[G__9714__i] = arguments[G__9714__i + 2];
        ++G__9714__i;
      }
      args = new cljs.core.IndexedSeq(G__9714__a, 0);
    }
    return js_invoke__delegate.call(this, obj, s, args);
  };
  js_invoke.cljs$lang$maxFixedArity = 2;
  js_invoke.cljs$lang$applyTo = function(arglist__9715) {
    var obj = cljs.core.first(arglist__9715);
    arglist__9715 = cljs.core.next(arglist__9715);
    var s = cljs.core.first(arglist__9715);
    var args = cljs.core.rest(arglist__9715);
    return js_invoke__delegate(obj, s, args);
  };
  js_invoke.cljs$core$IFn$_invoke$arity$variadic = js_invoke__delegate;
  return js_invoke;
}();
cljs.core.Fn = function() {
  var obj9717 = {};
  return obj9717;
}();
cljs.core.IFn = function() {
  var obj9719 = {};
  return obj9719;
}();
cljs.core._invoke = function() {
  var _invoke = null;
  var _invoke__1 = function(this$) {
    if (function() {
      var and__3913__auto__ = this$;
      if (and__3913__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$1;
      } else {
        return and__3913__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$1(this$);
    } else {
      var x__4569__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3925__auto__ = cljs.core._invoke[function() {
          var G__9765 = x__4569__auto__;
          return goog.typeOf(G__9765);
        }()];
        if (or__3925__auto__) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = cljs.core._invoke["_"];
          if (or__3925__auto____$1) {
            return or__3925__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$);
    }
  };
  var _invoke__2 = function(this$, a) {
    if (function() {
      var and__3913__auto__ = this$;
      if (and__3913__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$2;
      } else {
        return and__3913__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$2(this$, a);
    } else {
      var x__4569__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3925__auto__ = cljs.core._invoke[function() {
          var G__9767 = x__4569__auto__;
          return goog.typeOf(G__9767);
        }()];
        if (or__3925__auto__) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = cljs.core._invoke["_"];
          if (or__3925__auto____$1) {
            return or__3925__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a);
    }
  };
  var _invoke__3 = function(this$, a, b) {
    if (function() {
      var and__3913__auto__ = this$;
      if (and__3913__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$3;
      } else {
        return and__3913__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$3(this$, a, b);
    } else {
      var x__4569__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3925__auto__ = cljs.core._invoke[function() {
          var G__9769 = x__4569__auto__;
          return goog.typeOf(G__9769);
        }()];
        if (or__3925__auto__) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = cljs.core._invoke["_"];
          if (or__3925__auto____$1) {
            return or__3925__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b);
    }
  };
  var _invoke__4 = function(this$, a, b, c) {
    if (function() {
      var and__3913__auto__ = this$;
      if (and__3913__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$4;
      } else {
        return and__3913__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$4(this$, a, b, c);
    } else {
      var x__4569__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3925__auto__ = cljs.core._invoke[function() {
          var G__9771 = x__4569__auto__;
          return goog.typeOf(G__9771);
        }()];
        if (or__3925__auto__) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = cljs.core._invoke["_"];
          if (or__3925__auto____$1) {
            return or__3925__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c);
    }
  };
  var _invoke__5 = function(this$, a, b, c, d) {
    if (function() {
      var and__3913__auto__ = this$;
      if (and__3913__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$5;
      } else {
        return and__3913__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$5(this$, a, b, c, d);
    } else {
      var x__4569__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3925__auto__ = cljs.core._invoke[function() {
          var G__9773 = x__4569__auto__;
          return goog.typeOf(G__9773);
        }()];
        if (or__3925__auto__) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = cljs.core._invoke["_"];
          if (or__3925__auto____$1) {
            return or__3925__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d);
    }
  };
  var _invoke__6 = function(this$, a, b, c, d, e) {
    if (function() {
      var and__3913__auto__ = this$;
      if (and__3913__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$6;
      } else {
        return and__3913__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$6(this$, a, b, c, d, e);
    } else {
      var x__4569__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3925__auto__ = cljs.core._invoke[function() {
          var G__9775 = x__4569__auto__;
          return goog.typeOf(G__9775);
        }()];
        if (or__3925__auto__) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = cljs.core._invoke["_"];
          if (or__3925__auto____$1) {
            return or__3925__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e);
    }
  };
  var _invoke__7 = function(this$, a, b, c, d, e, f) {
    if (function() {
      var and__3913__auto__ = this$;
      if (and__3913__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$7;
      } else {
        return and__3913__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$7(this$, a, b, c, d, e, f);
    } else {
      var x__4569__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3925__auto__ = cljs.core._invoke[function() {
          var G__9777 = x__4569__auto__;
          return goog.typeOf(G__9777);
        }()];
        if (or__3925__auto__) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = cljs.core._invoke["_"];
          if (or__3925__auto____$1) {
            return or__3925__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f);
    }
  };
  var _invoke__8 = function(this$, a, b, c, d, e, f, g) {
    if (function() {
      var and__3913__auto__ = this$;
      if (and__3913__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$8;
      } else {
        return and__3913__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$8(this$, a, b, c, d, e, f, g);
    } else {
      var x__4569__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3925__auto__ = cljs.core._invoke[function() {
          var G__9779 = x__4569__auto__;
          return goog.typeOf(G__9779);
        }()];
        if (or__3925__auto__) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = cljs.core._invoke["_"];
          if (or__3925__auto____$1) {
            return or__3925__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g);
    }
  };
  var _invoke__9 = function(this$, a, b, c, d, e, f, g, h) {
    if (function() {
      var and__3913__auto__ = this$;
      if (and__3913__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$9;
      } else {
        return and__3913__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$9(this$, a, b, c, d, e, f, g, h);
    } else {
      var x__4569__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3925__auto__ = cljs.core._invoke[function() {
          var G__9781 = x__4569__auto__;
          return goog.typeOf(G__9781);
        }()];
        if (or__3925__auto__) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = cljs.core._invoke["_"];
          if (or__3925__auto____$1) {
            return or__3925__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h);
    }
  };
  var _invoke__10 = function(this$, a, b, c, d, e, f, g, h, i) {
    if (function() {
      var and__3913__auto__ = this$;
      if (and__3913__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$10;
      } else {
        return and__3913__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$10(this$, a, b, c, d, e, f, g, h, i);
    } else {
      var x__4569__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3925__auto__ = cljs.core._invoke[function() {
          var G__9783 = x__4569__auto__;
          return goog.typeOf(G__9783);
        }()];
        if (or__3925__auto__) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = cljs.core._invoke["_"];
          if (or__3925__auto____$1) {
            return or__3925__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i);
    }
  };
  var _invoke__11 = function(this$, a, b, c, d, e, f, g, h, i, j) {
    if (function() {
      var and__3913__auto__ = this$;
      if (and__3913__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$11;
      } else {
        return and__3913__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$11(this$, a, b, c, d, e, f, g, h, i, j);
    } else {
      var x__4569__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3925__auto__ = cljs.core._invoke[function() {
          var G__9785 = x__4569__auto__;
          return goog.typeOf(G__9785);
        }()];
        if (or__3925__auto__) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = cljs.core._invoke["_"];
          if (or__3925__auto____$1) {
            return or__3925__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j);
    }
  };
  var _invoke__12 = function(this$, a, b, c, d, e, f, g, h, i, j, k) {
    if (function() {
      var and__3913__auto__ = this$;
      if (and__3913__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$12;
      } else {
        return and__3913__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$12(this$, a, b, c, d, e, f, g, h, i, j, k);
    } else {
      var x__4569__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3925__auto__ = cljs.core._invoke[function() {
          var G__9787 = x__4569__auto__;
          return goog.typeOf(G__9787);
        }()];
        if (or__3925__auto__) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = cljs.core._invoke["_"];
          if (or__3925__auto____$1) {
            return or__3925__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k);
    }
  };
  var _invoke__13 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l) {
    if (function() {
      var and__3913__auto__ = this$;
      if (and__3913__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$13;
      } else {
        return and__3913__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$13(this$, a, b, c, d, e, f, g, h, i, j, k, l);
    } else {
      var x__4569__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3925__auto__ = cljs.core._invoke[function() {
          var G__9789 = x__4569__auto__;
          return goog.typeOf(G__9789);
        }()];
        if (or__3925__auto__) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = cljs.core._invoke["_"];
          if (or__3925__auto____$1) {
            return or__3925__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l);
    }
  };
  var _invoke__14 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    if (function() {
      var and__3913__auto__ = this$;
      if (and__3913__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$14;
      } else {
        return and__3913__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$14(this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    } else {
      var x__4569__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3925__auto__ = cljs.core._invoke[function() {
          var G__9791 = x__4569__auto__;
          return goog.typeOf(G__9791);
        }()];
        if (or__3925__auto__) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = cljs.core._invoke["_"];
          if (or__3925__auto____$1) {
            return or__3925__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
    }
  };
  var _invoke__15 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    if (function() {
      var and__3913__auto__ = this$;
      if (and__3913__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$15;
      } else {
        return and__3913__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$15(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    } else {
      var x__4569__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3925__auto__ = cljs.core._invoke[function() {
          var G__9793 = x__4569__auto__;
          return goog.typeOf(G__9793);
        }()];
        if (or__3925__auto__) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = cljs.core._invoke["_"];
          if (or__3925__auto____$1) {
            return or__3925__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
    }
  };
  var _invoke__16 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    if (function() {
      var and__3913__auto__ = this$;
      if (and__3913__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$16;
      } else {
        return and__3913__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$16(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    } else {
      var x__4569__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3925__auto__ = cljs.core._invoke[function() {
          var G__9795 = x__4569__auto__;
          return goog.typeOf(G__9795);
        }()];
        if (or__3925__auto__) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = cljs.core._invoke["_"];
          if (or__3925__auto____$1) {
            return or__3925__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
    }
  };
  var _invoke__17 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    if (function() {
      var and__3913__auto__ = this$;
      if (and__3913__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$17;
      } else {
        return and__3913__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$17(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    } else {
      var x__4569__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3925__auto__ = cljs.core._invoke[function() {
          var G__9797 = x__4569__auto__;
          return goog.typeOf(G__9797);
        }()];
        if (or__3925__auto__) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = cljs.core._invoke["_"];
          if (or__3925__auto____$1) {
            return or__3925__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
    }
  };
  var _invoke__18 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    if (function() {
      var and__3913__auto__ = this$;
      if (and__3913__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$18;
      } else {
        return and__3913__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$18(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    } else {
      var x__4569__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3925__auto__ = cljs.core._invoke[function() {
          var G__9799 = x__4569__auto__;
          return goog.typeOf(G__9799);
        }()];
        if (or__3925__auto__) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = cljs.core._invoke["_"];
          if (or__3925__auto____$1) {
            return or__3925__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
    }
  };
  var _invoke__19 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    if (function() {
      var and__3913__auto__ = this$;
      if (and__3913__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$19;
      } else {
        return and__3913__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$19(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    } else {
      var x__4569__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3925__auto__ = cljs.core._invoke[function() {
          var G__9801 = x__4569__auto__;
          return goog.typeOf(G__9801);
        }()];
        if (or__3925__auto__) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = cljs.core._invoke["_"];
          if (or__3925__auto____$1) {
            return or__3925__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
    }
  };
  var _invoke__20 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    if (function() {
      var and__3913__auto__ = this$;
      if (and__3913__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$20;
      } else {
        return and__3913__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$20(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    } else {
      var x__4569__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3925__auto__ = cljs.core._invoke[function() {
          var G__9803 = x__4569__auto__;
          return goog.typeOf(G__9803);
        }()];
        if (or__3925__auto__) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = cljs.core._invoke["_"];
          if (or__3925__auto____$1) {
            return or__3925__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
    }
  };
  var _invoke__21 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    if (function() {
      var and__3913__auto__ = this$;
      if (and__3913__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$21;
      } else {
        return and__3913__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$21(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    } else {
      var x__4569__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3925__auto__ = cljs.core._invoke[function() {
          var G__9805 = x__4569__auto__;
          return goog.typeOf(G__9805);
        }()];
        if (or__3925__auto__) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = cljs.core._invoke["_"];
          if (or__3925__auto____$1) {
            return or__3925__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
    }
  };
  var _invoke__22 = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    if (function() {
      var and__3913__auto__ = this$;
      if (and__3913__auto__) {
        return this$.cljs$core$IFn$_invoke$arity$22;
      } else {
        return and__3913__auto__;
      }
    }()) {
      return this$.cljs$core$IFn$_invoke$arity$22(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    } else {
      var x__4569__auto__ = this$ == null ? null : this$;
      return function() {
        var or__3925__auto__ = cljs.core._invoke[function() {
          var G__9807 = x__4569__auto__;
          return goog.typeOf(G__9807);
        }()];
        if (or__3925__auto__) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = cljs.core._invoke["_"];
          if (or__3925__auto____$1) {
            return or__3925__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IFn.-invoke", this$);
          }
        }
      }().call(null, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
  };
  _invoke = function(this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return _invoke__1.call(this, this$);
      case 2:
        return _invoke__2.call(this, this$, a);
      case 3:
        return _invoke__3.call(this, this$, a, b);
      case 4:
        return _invoke__4.call(this, this$, a, b, c);
      case 5:
        return _invoke__5.call(this, this$, a, b, c, d);
      case 6:
        return _invoke__6.call(this, this$, a, b, c, d, e);
      case 7:
        return _invoke__7.call(this, this$, a, b, c, d, e, f);
      case 8:
        return _invoke__8.call(this, this$, a, b, c, d, e, f, g);
      case 9:
        return _invoke__9.call(this, this$, a, b, c, d, e, f, g, h);
      case 10:
        return _invoke__10.call(this, this$, a, b, c, d, e, f, g, h, i);
      case 11:
        return _invoke__11.call(this, this$, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return _invoke__12.call(this, this$, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return _invoke__13.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return _invoke__14.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return _invoke__15.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return _invoke__16.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return _invoke__17.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return _invoke__18.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return _invoke__19.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return _invoke__20.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return _invoke__21.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return _invoke__22.call(this, this$, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _invoke.cljs$core$IFn$_invoke$arity$1 = _invoke__1;
  _invoke.cljs$core$IFn$_invoke$arity$2 = _invoke__2;
  _invoke.cljs$core$IFn$_invoke$arity$3 = _invoke__3;
  _invoke.cljs$core$IFn$_invoke$arity$4 = _invoke__4;
  _invoke.cljs$core$IFn$_invoke$arity$5 = _invoke__5;
  _invoke.cljs$core$IFn$_invoke$arity$6 = _invoke__6;
  _invoke.cljs$core$IFn$_invoke$arity$7 = _invoke__7;
  _invoke.cljs$core$IFn$_invoke$arity$8 = _invoke__8;
  _invoke.cljs$core$IFn$_invoke$arity$9 = _invoke__9;
  _invoke.cljs$core$IFn$_invoke$arity$10 = _invoke__10;
  _invoke.cljs$core$IFn$_invoke$arity$11 = _invoke__11;
  _invoke.cljs$core$IFn$_invoke$arity$12 = _invoke__12;
  _invoke.cljs$core$IFn$_invoke$arity$13 = _invoke__13;
  _invoke.cljs$core$IFn$_invoke$arity$14 = _invoke__14;
  _invoke.cljs$core$IFn$_invoke$arity$15 = _invoke__15;
  _invoke.cljs$core$IFn$_invoke$arity$16 = _invoke__16;
  _invoke.cljs$core$IFn$_invoke$arity$17 = _invoke__17;
  _invoke.cljs$core$IFn$_invoke$arity$18 = _invoke__18;
  _invoke.cljs$core$IFn$_invoke$arity$19 = _invoke__19;
  _invoke.cljs$core$IFn$_invoke$arity$20 = _invoke__20;
  _invoke.cljs$core$IFn$_invoke$arity$21 = _invoke__21;
  _invoke.cljs$core$IFn$_invoke$arity$22 = _invoke__22;
  return _invoke;
}();
cljs.core.ICloneable = function() {
  var obj9809 = {};
  return obj9809;
}();
cljs.core._clone = function _clone(value) {
  if (function() {
    var and__3913__auto__ = value;
    if (and__3913__auto__) {
      return value.cljs$core$ICloneable$_clone$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return value.cljs$core$ICloneable$_clone$arity$1(value);
  } else {
    var x__4569__auto__ = value == null ? null : value;
    return function() {
      var or__3925__auto__ = cljs.core._clone[function() {
        var G__9813 = x__4569__auto__;
        return goog.typeOf(G__9813);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._clone["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ICloneable.-clone", value);
        }
      }
    }().call(null, value);
  }
};
cljs.core.ICounted = function() {
  var obj9815 = {};
  return obj9815;
}();
cljs.core._count = function _count(coll) {
  if (function() {
    var and__3913__auto__ = coll;
    if (and__3913__auto__) {
      return coll.cljs$core$ICounted$_count$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return coll.cljs$core$ICounted$_count$arity$1(coll);
  } else {
    var x__4569__auto__ = coll == null ? null : coll;
    return function() {
      var or__3925__auto__ = cljs.core._count[function() {
        var G__9819 = x__4569__auto__;
        return goog.typeOf(G__9819);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._count["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ICounted.-count", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IEmptyableCollection = function() {
  var obj9821 = {};
  return obj9821;
}();
cljs.core._empty = function _empty(coll) {
  if (function() {
    var and__3913__auto__ = coll;
    if (and__3913__auto__) {
      return coll.cljs$core$IEmptyableCollection$_empty$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return coll.cljs$core$IEmptyableCollection$_empty$arity$1(coll);
  } else {
    var x__4569__auto__ = coll == null ? null : coll;
    return function() {
      var or__3925__auto__ = cljs.core._empty[function() {
        var G__9825 = x__4569__auto__;
        return goog.typeOf(G__9825);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._empty["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEmptyableCollection.-empty", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ICollection = function() {
  var obj9827 = {};
  return obj9827;
}();
cljs.core._conj = function _conj(coll, o) {
  if (function() {
    var and__3913__auto__ = coll;
    if (and__3913__auto__) {
      return coll.cljs$core$ICollection$_conj$arity$2;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return coll.cljs$core$ICollection$_conj$arity$2(coll, o);
  } else {
    var x__4569__auto__ = coll == null ? null : coll;
    return function() {
      var or__3925__auto__ = cljs.core._conj[function() {
        var G__9831 = x__4569__auto__;
        return goog.typeOf(G__9831);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._conj["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ICollection.-conj", coll);
        }
      }
    }().call(null, coll, o);
  }
};
cljs.core.IIndexed = function() {
  var obj9833 = {};
  return obj9833;
}();
cljs.core._nth = function() {
  var _nth = null;
  var _nth__2 = function(coll, n) {
    if (function() {
      var and__3913__auto__ = coll;
      if (and__3913__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$2;
      } else {
        return and__3913__auto__;
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$2(coll, n);
    } else {
      var x__4569__auto__ = coll == null ? null : coll;
      return function() {
        var or__3925__auto__ = cljs.core._nth[function() {
          var G__9839 = x__4569__auto__;
          return goog.typeOf(G__9839);
        }()];
        if (or__3925__auto__) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = cljs.core._nth["_"];
          if (or__3925__auto____$1) {
            return or__3925__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n);
    }
  };
  var _nth__3 = function(coll, n, not_found) {
    if (function() {
      var and__3913__auto__ = coll;
      if (and__3913__auto__) {
        return coll.cljs$core$IIndexed$_nth$arity$3;
      } else {
        return and__3913__auto__;
      }
    }()) {
      return coll.cljs$core$IIndexed$_nth$arity$3(coll, n, not_found);
    } else {
      var x__4569__auto__ = coll == null ? null : coll;
      return function() {
        var or__3925__auto__ = cljs.core._nth[function() {
          var G__9841 = x__4569__auto__;
          return goog.typeOf(G__9841);
        }()];
        if (or__3925__auto__) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = cljs.core._nth["_"];
          if (or__3925__auto____$1) {
            return or__3925__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IIndexed.-nth", coll);
          }
        }
      }().call(null, coll, n, not_found);
    }
  };
  _nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return _nth__2.call(this, coll, n);
      case 3:
        return _nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _nth.cljs$core$IFn$_invoke$arity$2 = _nth__2;
  _nth.cljs$core$IFn$_invoke$arity$3 = _nth__3;
  return _nth;
}();
cljs.core.ASeq = function() {
  var obj9843 = {};
  return obj9843;
}();
cljs.core.ISeq = function() {
  var obj9845 = {};
  return obj9845;
}();
cljs.core._first = function _first(coll) {
  if (function() {
    var and__3913__auto__ = coll;
    if (and__3913__auto__) {
      return coll.cljs$core$ISeq$_first$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return coll.cljs$core$ISeq$_first$arity$1(coll);
  } else {
    var x__4569__auto__ = coll == null ? null : coll;
    return function() {
      var or__3925__auto__ = cljs.core._first[function() {
        var G__9849 = x__4569__auto__;
        return goog.typeOf(G__9849);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._first["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISeq.-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._rest = function _rest(coll) {
  if (function() {
    var and__3913__auto__ = coll;
    if (and__3913__auto__) {
      return coll.cljs$core$ISeq$_rest$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return coll.cljs$core$ISeq$_rest$arity$1(coll);
  } else {
    var x__4569__auto__ = coll == null ? null : coll;
    return function() {
      var or__3925__auto__ = cljs.core._rest[function() {
        var G__9853 = x__4569__auto__;
        return goog.typeOf(G__9853);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._rest["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISeq.-rest", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.INext = function() {
  var obj9855 = {};
  return obj9855;
}();
cljs.core._next = function _next(coll) {
  if (function() {
    var and__3913__auto__ = coll;
    if (and__3913__auto__) {
      return coll.cljs$core$INext$_next$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return coll.cljs$core$INext$_next$arity$1(coll);
  } else {
    var x__4569__auto__ = coll == null ? null : coll;
    return function() {
      var or__3925__auto__ = cljs.core._next[function() {
        var G__9859 = x__4569__auto__;
        return goog.typeOf(G__9859);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._next["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("INext.-next", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ILookup = function() {
  var obj9861 = {};
  return obj9861;
}();
cljs.core._lookup = function() {
  var _lookup = null;
  var _lookup__2 = function(o, k) {
    if (function() {
      var and__3913__auto__ = o;
      if (and__3913__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$2;
      } else {
        return and__3913__auto__;
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$2(o, k);
    } else {
      var x__4569__auto__ = o == null ? null : o;
      return function() {
        var or__3925__auto__ = cljs.core._lookup[function() {
          var G__9867 = x__4569__auto__;
          return goog.typeOf(G__9867);
        }()];
        if (or__3925__auto__) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = cljs.core._lookup["_"];
          if (or__3925__auto____$1) {
            return or__3925__auto____$1;
          } else {
            throw cljs.core.missing_protocol("ILookup.-lookup", o);
          }
        }
      }().call(null, o, k);
    }
  };
  var _lookup__3 = function(o, k, not_found) {
    if (function() {
      var and__3913__auto__ = o;
      if (and__3913__auto__) {
        return o.cljs$core$ILookup$_lookup$arity$3;
      } else {
        return and__3913__auto__;
      }
    }()) {
      return o.cljs$core$ILookup$_lookup$arity$3(o, k, not_found);
    } else {
      var x__4569__auto__ = o == null ? null : o;
      return function() {
        var or__3925__auto__ = cljs.core._lookup[function() {
          var G__9869 = x__4569__auto__;
          return goog.typeOf(G__9869);
        }()];
        if (or__3925__auto__) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = cljs.core._lookup["_"];
          if (or__3925__auto____$1) {
            return or__3925__auto____$1;
          } else {
            throw cljs.core.missing_protocol("ILookup.-lookup", o);
          }
        }
      }().call(null, o, k, not_found);
    }
  };
  _lookup = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return _lookup__2.call(this, o, k);
      case 3:
        return _lookup__3.call(this, o, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _lookup.cljs$core$IFn$_invoke$arity$2 = _lookup__2;
  _lookup.cljs$core$IFn$_invoke$arity$3 = _lookup__3;
  return _lookup;
}();
cljs.core.IAssociative = function() {
  var obj9871 = {};
  return obj9871;
}();
cljs.core._contains_key_QMARK_ = function _contains_key_QMARK_(coll, k) {
  if (function() {
    var and__3913__auto__ = coll;
    if (and__3913__auto__) {
      return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return coll.cljs$core$IAssociative$_contains_key_QMARK_$arity$2(coll, k);
  } else {
    var x__4569__auto__ = coll == null ? null : coll;
    return function() {
      var or__3925__auto__ = cljs.core._contains_key_QMARK_[function() {
        var G__9875 = x__4569__auto__;
        return goog.typeOf(G__9875);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._contains_key_QMARK_["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IAssociative.-contains-key?", coll);
        }
      }
    }().call(null, coll, k);
  }
};
cljs.core._assoc = function _assoc(coll, k, v) {
  if (function() {
    var and__3913__auto__ = coll;
    if (and__3913__auto__) {
      return coll.cljs$core$IAssociative$_assoc$arity$3;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return coll.cljs$core$IAssociative$_assoc$arity$3(coll, k, v);
  } else {
    var x__4569__auto__ = coll == null ? null : coll;
    return function() {
      var or__3925__auto__ = cljs.core._assoc[function() {
        var G__9879 = x__4569__auto__;
        return goog.typeOf(G__9879);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._assoc["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IAssociative.-assoc", coll);
        }
      }
    }().call(null, coll, k, v);
  }
};
cljs.core.IMap = function() {
  var obj9881 = {};
  return obj9881;
}();
cljs.core._dissoc = function _dissoc(coll, k) {
  if (function() {
    var and__3913__auto__ = coll;
    if (and__3913__auto__) {
      return coll.cljs$core$IMap$_dissoc$arity$2;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return coll.cljs$core$IMap$_dissoc$arity$2(coll, k);
  } else {
    var x__4569__auto__ = coll == null ? null : coll;
    return function() {
      var or__3925__auto__ = cljs.core._dissoc[function() {
        var G__9885 = x__4569__auto__;
        return goog.typeOf(G__9885);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._dissoc["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMap.-dissoc", coll);
        }
      }
    }().call(null, coll, k);
  }
};
cljs.core.IMapEntry = function() {
  var obj9887 = {};
  return obj9887;
}();
cljs.core._key = function _key(coll) {
  if (function() {
    var and__3913__auto__ = coll;
    if (and__3913__auto__) {
      return coll.cljs$core$IMapEntry$_key$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return coll.cljs$core$IMapEntry$_key$arity$1(coll);
  } else {
    var x__4569__auto__ = coll == null ? null : coll;
    return function() {
      var or__3925__auto__ = cljs.core._key[function() {
        var G__9891 = x__4569__auto__;
        return goog.typeOf(G__9891);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._key["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMapEntry.-key", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._val = function _val(coll) {
  if (function() {
    var and__3913__auto__ = coll;
    if (and__3913__auto__) {
      return coll.cljs$core$IMapEntry$_val$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return coll.cljs$core$IMapEntry$_val$arity$1(coll);
  } else {
    var x__4569__auto__ = coll == null ? null : coll;
    return function() {
      var or__3925__auto__ = cljs.core._val[function() {
        var G__9895 = x__4569__auto__;
        return goog.typeOf(G__9895);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._val["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMapEntry.-val", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ISet = function() {
  var obj9897 = {};
  return obj9897;
}();
cljs.core._disjoin = function _disjoin(coll, v) {
  if (function() {
    var and__3913__auto__ = coll;
    if (and__3913__auto__) {
      return coll.cljs$core$ISet$_disjoin$arity$2;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return coll.cljs$core$ISet$_disjoin$arity$2(coll, v);
  } else {
    var x__4569__auto__ = coll == null ? null : coll;
    return function() {
      var or__3925__auto__ = cljs.core._disjoin[function() {
        var G__9901 = x__4569__auto__;
        return goog.typeOf(G__9901);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._disjoin["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISet.-disjoin", coll);
        }
      }
    }().call(null, coll, v);
  }
};
cljs.core.IStack = function() {
  var obj9903 = {};
  return obj9903;
}();
cljs.core._peek = function _peek(coll) {
  if (function() {
    var and__3913__auto__ = coll;
    if (and__3913__auto__) {
      return coll.cljs$core$IStack$_peek$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return coll.cljs$core$IStack$_peek$arity$1(coll);
  } else {
    var x__4569__auto__ = coll == null ? null : coll;
    return function() {
      var or__3925__auto__ = cljs.core._peek[function() {
        var G__9907 = x__4569__auto__;
        return goog.typeOf(G__9907);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._peek["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IStack.-peek", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._pop = function _pop(coll) {
  if (function() {
    var and__3913__auto__ = coll;
    if (and__3913__auto__) {
      return coll.cljs$core$IStack$_pop$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return coll.cljs$core$IStack$_pop$arity$1(coll);
  } else {
    var x__4569__auto__ = coll == null ? null : coll;
    return function() {
      var or__3925__auto__ = cljs.core._pop[function() {
        var G__9911 = x__4569__auto__;
        return goog.typeOf(G__9911);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._pop["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IStack.-pop", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IVector = function() {
  var obj9913 = {};
  return obj9913;
}();
cljs.core._assoc_n = function _assoc_n(coll, n, val) {
  if (function() {
    var and__3913__auto__ = coll;
    if (and__3913__auto__) {
      return coll.cljs$core$IVector$_assoc_n$arity$3;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return coll.cljs$core$IVector$_assoc_n$arity$3(coll, n, val);
  } else {
    var x__4569__auto__ = coll == null ? null : coll;
    return function() {
      var or__3925__auto__ = cljs.core._assoc_n[function() {
        var G__9917 = x__4569__auto__;
        return goog.typeOf(G__9917);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._assoc_n["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IVector.-assoc-n", coll);
        }
      }
    }().call(null, coll, n, val);
  }
};
cljs.core.IDeref = function() {
  var obj9919 = {};
  return obj9919;
}();
cljs.core._deref = function _deref(o) {
  if (function() {
    var and__3913__auto__ = o;
    if (and__3913__auto__) {
      return o.cljs$core$IDeref$_deref$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return o.cljs$core$IDeref$_deref$arity$1(o);
  } else {
    var x__4569__auto__ = o == null ? null : o;
    return function() {
      var or__3925__auto__ = cljs.core._deref[function() {
        var G__9923 = x__4569__auto__;
        return goog.typeOf(G__9923);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._deref["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IDeref.-deref", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.IDerefWithTimeout = function() {
  var obj9925 = {};
  return obj9925;
}();
cljs.core._deref_with_timeout = function _deref_with_timeout(o, msec, timeout_val) {
  if (function() {
    var and__3913__auto__ = o;
    if (and__3913__auto__) {
      return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return o.cljs$core$IDerefWithTimeout$_deref_with_timeout$arity$3(o, msec, timeout_val);
  } else {
    var x__4569__auto__ = o == null ? null : o;
    return function() {
      var or__3925__auto__ = cljs.core._deref_with_timeout[function() {
        var G__9929 = x__4569__auto__;
        return goog.typeOf(G__9929);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._deref_with_timeout["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IDerefWithTimeout.-deref-with-timeout", o);
        }
      }
    }().call(null, o, msec, timeout_val);
  }
};
cljs.core.IMeta = function() {
  var obj9931 = {};
  return obj9931;
}();
cljs.core._meta = function _meta(o) {
  if (function() {
    var and__3913__auto__ = o;
    if (and__3913__auto__) {
      return o.cljs$core$IMeta$_meta$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return o.cljs$core$IMeta$_meta$arity$1(o);
  } else {
    var x__4569__auto__ = o == null ? null : o;
    return function() {
      var or__3925__auto__ = cljs.core._meta[function() {
        var G__9935 = x__4569__auto__;
        return goog.typeOf(G__9935);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._meta["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMeta.-meta", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.IWithMeta = function() {
  var obj9937 = {};
  return obj9937;
}();
cljs.core._with_meta = function _with_meta(o, meta) {
  if (function() {
    var and__3913__auto__ = o;
    if (and__3913__auto__) {
      return o.cljs$core$IWithMeta$_with_meta$arity$2;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return o.cljs$core$IWithMeta$_with_meta$arity$2(o, meta);
  } else {
    var x__4569__auto__ = o == null ? null : o;
    return function() {
      var or__3925__auto__ = cljs.core._with_meta[function() {
        var G__9941 = x__4569__auto__;
        return goog.typeOf(G__9941);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._with_meta["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWithMeta.-with-meta", o);
        }
      }
    }().call(null, o, meta);
  }
};
cljs.core.IReduce = function() {
  var obj9943 = {};
  return obj9943;
}();
cljs.core._reduce = function() {
  var _reduce = null;
  var _reduce__2 = function(coll, f) {
    if (function() {
      var and__3913__auto__ = coll;
      if (and__3913__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$2;
      } else {
        return and__3913__auto__;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$2(coll, f);
    } else {
      var x__4569__auto__ = coll == null ? null : coll;
      return function() {
        var or__3925__auto__ = cljs.core._reduce[function() {
          var G__9949 = x__4569__auto__;
          return goog.typeOf(G__9949);
        }()];
        if (or__3925__auto__) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = cljs.core._reduce["_"];
          if (or__3925__auto____$1) {
            return or__3925__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f);
    }
  };
  var _reduce__3 = function(coll, f, start) {
    if (function() {
      var and__3913__auto__ = coll;
      if (and__3913__auto__) {
        return coll.cljs$core$IReduce$_reduce$arity$3;
      } else {
        return and__3913__auto__;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$3(coll, f, start);
    } else {
      var x__4569__auto__ = coll == null ? null : coll;
      return function() {
        var or__3925__auto__ = cljs.core._reduce[function() {
          var G__9951 = x__4569__auto__;
          return goog.typeOf(G__9951);
        }()];
        if (or__3925__auto__) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = cljs.core._reduce["_"];
          if (or__3925__auto____$1) {
            return or__3925__auto____$1;
          } else {
            throw cljs.core.missing_protocol("IReduce.-reduce", coll);
          }
        }
      }().call(null, coll, f, start);
    }
  };
  _reduce = function(coll, f, start) {
    switch(arguments.length) {
      case 2:
        return _reduce__2.call(this, coll, f);
      case 3:
        return _reduce__3.call(this, coll, f, start);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _reduce.cljs$core$IFn$_invoke$arity$2 = _reduce__2;
  _reduce.cljs$core$IFn$_invoke$arity$3 = _reduce__3;
  return _reduce;
}();
cljs.core.IKVReduce = function() {
  var obj9953 = {};
  return obj9953;
}();
cljs.core._kv_reduce = function _kv_reduce(coll, f, init) {
  if (function() {
    var and__3913__auto__ = coll;
    if (and__3913__auto__) {
      return coll.cljs$core$IKVReduce$_kv_reduce$arity$3;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return coll.cljs$core$IKVReduce$_kv_reduce$arity$3(coll, f, init);
  } else {
    var x__4569__auto__ = coll == null ? null : coll;
    return function() {
      var or__3925__auto__ = cljs.core._kv_reduce[function() {
        var G__9957 = x__4569__auto__;
        return goog.typeOf(G__9957);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._kv_reduce["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IKVReduce.-kv-reduce", coll);
        }
      }
    }().call(null, coll, f, init);
  }
};
cljs.core.IEquiv = function() {
  var obj9959 = {};
  return obj9959;
}();
cljs.core._equiv = function _equiv(o, other) {
  if (function() {
    var and__3913__auto__ = o;
    if (and__3913__auto__) {
      return o.cljs$core$IEquiv$_equiv$arity$2;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return o.cljs$core$IEquiv$_equiv$arity$2(o, other);
  } else {
    var x__4569__auto__ = o == null ? null : o;
    return function() {
      var or__3925__auto__ = cljs.core._equiv[function() {
        var G__9963 = x__4569__auto__;
        return goog.typeOf(G__9963);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._equiv["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEquiv.-equiv", o);
        }
      }
    }().call(null, o, other);
  }
};
cljs.core.IHash = function() {
  var obj9965 = {};
  return obj9965;
}();
cljs.core._hash = function _hash(o) {
  if (function() {
    var and__3913__auto__ = o;
    if (and__3913__auto__) {
      return o.cljs$core$IHash$_hash$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(o);
  } else {
    var x__4569__auto__ = o == null ? null : o;
    return function() {
      var or__3925__auto__ = cljs.core._hash[function() {
        var G__9969 = x__4569__auto__;
        return goog.typeOf(G__9969);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._hash["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IHash.-hash", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.ISeqable = function() {
  var obj9971 = {};
  return obj9971;
}();
cljs.core._seq = function _seq(o) {
  if (function() {
    var and__3913__auto__ = o;
    if (and__3913__auto__) {
      return o.cljs$core$ISeqable$_seq$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return o.cljs$core$ISeqable$_seq$arity$1(o);
  } else {
    var x__4569__auto__ = o == null ? null : o;
    return function() {
      var or__3925__auto__ = cljs.core._seq[function() {
        var G__9975 = x__4569__auto__;
        return goog.typeOf(G__9975);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._seq["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISeqable.-seq", o);
        }
      }
    }().call(null, o);
  }
};
cljs.core.ISequential = function() {
  var obj9977 = {};
  return obj9977;
}();
cljs.core.IList = function() {
  var obj9979 = {};
  return obj9979;
}();
cljs.core.IRecord = function() {
  var obj9981 = {};
  return obj9981;
}();
cljs.core.IReversible = function() {
  var obj9983 = {};
  return obj9983;
}();
cljs.core._rseq = function _rseq(coll) {
  if (function() {
    var and__3913__auto__ = coll;
    if (and__3913__auto__) {
      return coll.cljs$core$IReversible$_rseq$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return coll.cljs$core$IReversible$_rseq$arity$1(coll);
  } else {
    var x__4569__auto__ = coll == null ? null : coll;
    return function() {
      var or__3925__auto__ = cljs.core._rseq[function() {
        var G__9987 = x__4569__auto__;
        return goog.typeOf(G__9987);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._rseq["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IReversible.-rseq", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ISorted = function() {
  var obj9989 = {};
  return obj9989;
}();
cljs.core._sorted_seq = function _sorted_seq(coll, ascending_QMARK_) {
  if (function() {
    var and__3913__auto__ = coll;
    if (and__3913__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq$arity$2;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq$arity$2(coll, ascending_QMARK_);
  } else {
    var x__4569__auto__ = coll == null ? null : coll;
    return function() {
      var or__3925__auto__ = cljs.core._sorted_seq[function() {
        var G__9993 = x__4569__auto__;
        return goog.typeOf(G__9993);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._sorted_seq["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISorted.-sorted-seq", coll);
        }
      }
    }().call(null, coll, ascending_QMARK_);
  }
};
cljs.core._sorted_seq_from = function _sorted_seq_from(coll, k, ascending_QMARK_) {
  if (function() {
    var and__3913__auto__ = coll;
    if (and__3913__auto__) {
      return coll.cljs$core$ISorted$_sorted_seq_from$arity$3;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_sorted_seq_from$arity$3(coll, k, ascending_QMARK_);
  } else {
    var x__4569__auto__ = coll == null ? null : coll;
    return function() {
      var or__3925__auto__ = cljs.core._sorted_seq_from[function() {
        var G__9997 = x__4569__auto__;
        return goog.typeOf(G__9997);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._sorted_seq_from["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISorted.-sorted-seq-from", coll);
        }
      }
    }().call(null, coll, k, ascending_QMARK_);
  }
};
cljs.core._entry_key = function _entry_key(coll, entry) {
  if (function() {
    var and__3913__auto__ = coll;
    if (and__3913__auto__) {
      return coll.cljs$core$ISorted$_entry_key$arity$2;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_entry_key$arity$2(coll, entry);
  } else {
    var x__4569__auto__ = coll == null ? null : coll;
    return function() {
      var or__3925__auto__ = cljs.core._entry_key[function() {
        var G__10001 = x__4569__auto__;
        return goog.typeOf(G__10001);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._entry_key["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISorted.-entry-key", coll);
        }
      }
    }().call(null, coll, entry);
  }
};
cljs.core._comparator = function _comparator(coll) {
  if (function() {
    var and__3913__auto__ = coll;
    if (and__3913__auto__) {
      return coll.cljs$core$ISorted$_comparator$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return coll.cljs$core$ISorted$_comparator$arity$1(coll);
  } else {
    var x__4569__auto__ = coll == null ? null : coll;
    return function() {
      var or__3925__auto__ = cljs.core._comparator[function() {
        var G__10005 = x__4569__auto__;
        return goog.typeOf(G__10005);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._comparator["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ISorted.-comparator", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IWriter = function() {
  var obj10007 = {};
  return obj10007;
}();
cljs.core._write = function _write(writer, s) {
  if (function() {
    var and__3913__auto__ = writer;
    if (and__3913__auto__) {
      return writer.cljs$core$IWriter$_write$arity$2;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return writer.cljs$core$IWriter$_write$arity$2(writer, s);
  } else {
    var x__4569__auto__ = writer == null ? null : writer;
    return function() {
      var or__3925__auto__ = cljs.core._write[function() {
        var G__10011 = x__4569__auto__;
        return goog.typeOf(G__10011);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._write["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWriter.-write", writer);
        }
      }
    }().call(null, writer, s);
  }
};
cljs.core._flush = function _flush(writer) {
  if (function() {
    var and__3913__auto__ = writer;
    if (and__3913__auto__) {
      return writer.cljs$core$IWriter$_flush$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return writer.cljs$core$IWriter$_flush$arity$1(writer);
  } else {
    var x__4569__auto__ = writer == null ? null : writer;
    return function() {
      var or__3925__auto__ = cljs.core._flush[function() {
        var G__10015 = x__4569__auto__;
        return goog.typeOf(G__10015);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._flush["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWriter.-flush", writer);
        }
      }
    }().call(null, writer);
  }
};
cljs.core.IPrintWithWriter = function() {
  var obj10017 = {};
  return obj10017;
}();
cljs.core._pr_writer = function _pr_writer(o, writer, opts) {
  if (function() {
    var and__3913__auto__ = o;
    if (and__3913__auto__) {
      return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return o.cljs$core$IPrintWithWriter$_pr_writer$arity$3(o, writer, opts);
  } else {
    var x__4569__auto__ = o == null ? null : o;
    return function() {
      var or__3925__auto__ = cljs.core._pr_writer[function() {
        var G__10021 = x__4569__auto__;
        return goog.typeOf(G__10021);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._pr_writer["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IPrintWithWriter.-pr-writer", o);
        }
      }
    }().call(null, o, writer, opts);
  }
};
cljs.core.IPending = function() {
  var obj10023 = {};
  return obj10023;
}();
cljs.core._realized_QMARK_ = function _realized_QMARK_(d) {
  if (function() {
    var and__3913__auto__ = d;
    if (and__3913__auto__) {
      return d.cljs$core$IPending$_realized_QMARK_$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return d.cljs$core$IPending$_realized_QMARK_$arity$1(d);
  } else {
    var x__4569__auto__ = d == null ? null : d;
    return function() {
      var or__3925__auto__ = cljs.core._realized_QMARK_[function() {
        var G__10027 = x__4569__auto__;
        return goog.typeOf(G__10027);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._realized_QMARK_["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IPending.-realized?", d);
        }
      }
    }().call(null, d);
  }
};
cljs.core.IWatchable = function() {
  var obj10029 = {};
  return obj10029;
}();
cljs.core._notify_watches = function _notify_watches(this$, oldval, newval) {
  if (function() {
    var and__3913__auto__ = this$;
    if (and__3913__auto__) {
      return this$.cljs$core$IWatchable$_notify_watches$arity$3;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_notify_watches$arity$3(this$, oldval, newval);
  } else {
    var x__4569__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3925__auto__ = cljs.core._notify_watches[function() {
        var G__10033 = x__4569__auto__;
        return goog.typeOf(G__10033);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._notify_watches["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWatchable.-notify-watches", this$);
        }
      }
    }().call(null, this$, oldval, newval);
  }
};
cljs.core._add_watch = function _add_watch(this$, key, f) {
  if (function() {
    var and__3913__auto__ = this$;
    if (and__3913__auto__) {
      return this$.cljs$core$IWatchable$_add_watch$arity$3;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_add_watch$arity$3(this$, key, f);
  } else {
    var x__4569__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3925__auto__ = cljs.core._add_watch[function() {
        var G__10037 = x__4569__auto__;
        return goog.typeOf(G__10037);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._add_watch["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWatchable.-add-watch", this$);
        }
      }
    }().call(null, this$, key, f);
  }
};
cljs.core._remove_watch = function _remove_watch(this$, key) {
  if (function() {
    var and__3913__auto__ = this$;
    if (and__3913__auto__) {
      return this$.cljs$core$IWatchable$_remove_watch$arity$2;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return this$.cljs$core$IWatchable$_remove_watch$arity$2(this$, key);
  } else {
    var x__4569__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3925__auto__ = cljs.core._remove_watch[function() {
        var G__10041 = x__4569__auto__;
        return goog.typeOf(G__10041);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._remove_watch["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IWatchable.-remove-watch", this$);
        }
      }
    }().call(null, this$, key);
  }
};
cljs.core.IEditableCollection = function() {
  var obj10043 = {};
  return obj10043;
}();
cljs.core._as_transient = function _as_transient(coll) {
  if (function() {
    var and__3913__auto__ = coll;
    if (and__3913__auto__) {
      return coll.cljs$core$IEditableCollection$_as_transient$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return coll.cljs$core$IEditableCollection$_as_transient$arity$1(coll);
  } else {
    var x__4569__auto__ = coll == null ? null : coll;
    return function() {
      var or__3925__auto__ = cljs.core._as_transient[function() {
        var G__10047 = x__4569__auto__;
        return goog.typeOf(G__10047);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._as_transient["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEditableCollection.-as-transient", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.ITransientCollection = function() {
  var obj10049 = {};
  return obj10049;
}();
cljs.core._conj_BANG_ = function _conj_BANG_(tcoll, val) {
  if (function() {
    var and__3913__auto__ = tcoll;
    if (and__3913__auto__) {
      return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_conj_BANG_$arity$2(tcoll, val);
  } else {
    var x__4569__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3925__auto__ = cljs.core._conj_BANG_[function() {
        var G__10053 = x__4569__auto__;
        return goog.typeOf(G__10053);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._conj_BANG_["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientCollection.-conj!", tcoll);
        }
      }
    }().call(null, tcoll, val);
  }
};
cljs.core._persistent_BANG_ = function _persistent_BANG_(tcoll) {
  if (function() {
    var and__3913__auto__ = tcoll;
    if (and__3913__auto__) {
      return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(tcoll);
  } else {
    var x__4569__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3925__auto__ = cljs.core._persistent_BANG_[function() {
        var G__10057 = x__4569__auto__;
        return goog.typeOf(G__10057);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._persistent_BANG_["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientCollection.-persistent!", tcoll);
        }
      }
    }().call(null, tcoll);
  }
};
cljs.core.ITransientAssociative = function() {
  var obj10059 = {};
  return obj10059;
}();
cljs.core._assoc_BANG_ = function _assoc_BANG_(tcoll, key, val) {
  if (function() {
    var and__3913__auto__ = tcoll;
    if (and__3913__auto__) {
      return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(tcoll, key, val);
  } else {
    var x__4569__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3925__auto__ = cljs.core._assoc_BANG_[function() {
        var G__10063 = x__4569__auto__;
        return goog.typeOf(G__10063);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._assoc_BANG_["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientAssociative.-assoc!", tcoll);
        }
      }
    }().call(null, tcoll, key, val);
  }
};
cljs.core.ITransientMap = function() {
  var obj10065 = {};
  return obj10065;
}();
cljs.core._dissoc_BANG_ = function _dissoc_BANG_(tcoll, key) {
  if (function() {
    var and__3913__auto__ = tcoll;
    if (and__3913__auto__) {
      return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientMap$_dissoc_BANG_$arity$2(tcoll, key);
  } else {
    var x__4569__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3925__auto__ = cljs.core._dissoc_BANG_[function() {
        var G__10069 = x__4569__auto__;
        return goog.typeOf(G__10069);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._dissoc_BANG_["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientMap.-dissoc!", tcoll);
        }
      }
    }().call(null, tcoll, key);
  }
};
cljs.core.ITransientVector = function() {
  var obj10071 = {};
  return obj10071;
}();
cljs.core._assoc_n_BANG_ = function _assoc_n_BANG_(tcoll, n, val) {
  if (function() {
    var and__3913__auto__ = tcoll;
    if (and__3913__auto__) {
      return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3(tcoll, n, val);
  } else {
    var x__4569__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3925__auto__ = cljs.core._assoc_n_BANG_[function() {
        var G__10075 = x__4569__auto__;
        return goog.typeOf(G__10075);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._assoc_n_BANG_["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientVector.-assoc-n!", tcoll);
        }
      }
    }().call(null, tcoll, n, val);
  }
};
cljs.core._pop_BANG_ = function _pop_BANG_(tcoll) {
  if (function() {
    var and__3913__auto__ = tcoll;
    if (and__3913__auto__) {
      return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientVector$_pop_BANG_$arity$1(tcoll);
  } else {
    var x__4569__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3925__auto__ = cljs.core._pop_BANG_[function() {
        var G__10079 = x__4569__auto__;
        return goog.typeOf(G__10079);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._pop_BANG_["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientVector.-pop!", tcoll);
        }
      }
    }().call(null, tcoll);
  }
};
cljs.core.ITransientSet = function() {
  var obj10081 = {};
  return obj10081;
}();
cljs.core._disjoin_BANG_ = function _disjoin_BANG_(tcoll, v) {
  if (function() {
    var and__3913__auto__ = tcoll;
    if (and__3913__auto__) {
      return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return tcoll.cljs$core$ITransientSet$_disjoin_BANG_$arity$2(tcoll, v);
  } else {
    var x__4569__auto__ = tcoll == null ? null : tcoll;
    return function() {
      var or__3925__auto__ = cljs.core._disjoin_BANG_[function() {
        var G__10085 = x__4569__auto__;
        return goog.typeOf(G__10085);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._disjoin_BANG_["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("ITransientSet.-disjoin!", tcoll);
        }
      }
    }().call(null, tcoll, v);
  }
};
cljs.core.IComparable = function() {
  var obj10087 = {};
  return obj10087;
}();
cljs.core._compare = function _compare(x, y) {
  if (function() {
    var and__3913__auto__ = x;
    if (and__3913__auto__) {
      return x.cljs$core$IComparable$_compare$arity$2;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return x.cljs$core$IComparable$_compare$arity$2(x, y);
  } else {
    var x__4569__auto__ = x == null ? null : x;
    return function() {
      var or__3925__auto__ = cljs.core._compare[function() {
        var G__10091 = x__4569__auto__;
        return goog.typeOf(G__10091);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._compare["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IComparable.-compare", x);
        }
      }
    }().call(null, x, y);
  }
};
cljs.core.IChunk = function() {
  var obj10093 = {};
  return obj10093;
}();
cljs.core._drop_first = function _drop_first(coll) {
  if (function() {
    var and__3913__auto__ = coll;
    if (and__3913__auto__) {
      return coll.cljs$core$IChunk$_drop_first$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return coll.cljs$core$IChunk$_drop_first$arity$1(coll);
  } else {
    var x__4569__auto__ = coll == null ? null : coll;
    return function() {
      var or__3925__auto__ = cljs.core._drop_first[function() {
        var G__10097 = x__4569__auto__;
        return goog.typeOf(G__10097);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._drop_first["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IChunk.-drop-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IChunkedSeq = function() {
  var obj10099 = {};
  return obj10099;
}();
cljs.core._chunked_first = function _chunked_first(coll) {
  if (function() {
    var and__3913__auto__ = coll;
    if (and__3913__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_first$arity$1(coll);
  } else {
    var x__4569__auto__ = coll == null ? null : coll;
    return function() {
      var or__3925__auto__ = cljs.core._chunked_first[function() {
        var G__10103 = x__4569__auto__;
        return goog.typeOf(G__10103);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._chunked_first["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IChunkedSeq.-chunked-first", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core._chunked_rest = function _chunked_rest(coll) {
  if (function() {
    var and__3913__auto__ = coll;
    if (and__3913__auto__) {
      return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedSeq$_chunked_rest$arity$1(coll);
  } else {
    var x__4569__auto__ = coll == null ? null : coll;
    return function() {
      var or__3925__auto__ = cljs.core._chunked_rest[function() {
        var G__10107 = x__4569__auto__;
        return goog.typeOf(G__10107);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._chunked_rest["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IChunkedSeq.-chunked-rest", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.IChunkedNext = function() {
  var obj10109 = {};
  return obj10109;
}();
cljs.core._chunked_next = function _chunked_next(coll) {
  if (function() {
    var and__3913__auto__ = coll;
    if (and__3913__auto__) {
      return coll.cljs$core$IChunkedNext$_chunked_next$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return coll.cljs$core$IChunkedNext$_chunked_next$arity$1(coll);
  } else {
    var x__4569__auto__ = coll == null ? null : coll;
    return function() {
      var or__3925__auto__ = cljs.core._chunked_next[function() {
        var G__10113 = x__4569__auto__;
        return goog.typeOf(G__10113);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._chunked_next["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IChunkedNext.-chunked-next", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.INamed = function() {
  var obj10115 = {};
  return obj10115;
}();
cljs.core._name = function _name(x) {
  if (function() {
    var and__3913__auto__ = x;
    if (and__3913__auto__) {
      return x.cljs$core$INamed$_name$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return x.cljs$core$INamed$_name$arity$1(x);
  } else {
    var x__4569__auto__ = x == null ? null : x;
    return function() {
      var or__3925__auto__ = cljs.core._name[function() {
        var G__10119 = x__4569__auto__;
        return goog.typeOf(G__10119);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._name["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("INamed.-name", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core._namespace = function _namespace(x) {
  if (function() {
    var and__3913__auto__ = x;
    if (and__3913__auto__) {
      return x.cljs$core$INamed$_namespace$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return x.cljs$core$INamed$_namespace$arity$1(x);
  } else {
    var x__4569__auto__ = x == null ? null : x;
    return function() {
      var or__3925__auto__ = cljs.core._namespace[function() {
        var G__10123 = x__4569__auto__;
        return goog.typeOf(G__10123);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._namespace["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("INamed.-namespace", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core.IAtom = function() {
  var obj10125 = {};
  return obj10125;
}();
cljs.core.IReset = function() {
  var obj10127 = {};
  return obj10127;
}();
cljs.core._reset_BANG_ = function _reset_BANG_(o, new_value) {
  if (function() {
    var and__3913__auto__ = o;
    if (and__3913__auto__) {
      return o.cljs$core$IReset$_reset_BANG_$arity$2;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return o.cljs$core$IReset$_reset_BANG_$arity$2(o, new_value);
  } else {
    var x__4569__auto__ = o == null ? null : o;
    return function() {
      var or__3925__auto__ = cljs.core._reset_BANG_[function() {
        var G__10131 = x__4569__auto__;
        return goog.typeOf(G__10131);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._reset_BANG_["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IReset.-reset!", o);
        }
      }
    }().call(null, o, new_value);
  }
};
cljs.core.ISwap = function() {
  var obj10133 = {};
  return obj10133;
}();
cljs.core._swap_BANG_ = function() {
  var _swap_BANG_ = null;
  var _swap_BANG___2 = function(o, f) {
    if (function() {
      var and__3913__auto__ = o;
      if (and__3913__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$2;
      } else {
        return and__3913__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$2(o, f);
    } else {
      var x__4569__auto__ = o == null ? null : o;
      return function() {
        var or__3925__auto__ = cljs.core._swap_BANG_[function() {
          var G__10143 = x__4569__auto__;
          return goog.typeOf(G__10143);
        }()];
        if (or__3925__auto__) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3925__auto____$1) {
            return or__3925__auto____$1;
          } else {
            throw cljs.core.missing_protocol("ISwap.-swap!", o);
          }
        }
      }().call(null, o, f);
    }
  };
  var _swap_BANG___3 = function(o, f, a) {
    if (function() {
      var and__3913__auto__ = o;
      if (and__3913__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$3;
      } else {
        return and__3913__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$3(o, f, a);
    } else {
      var x__4569__auto__ = o == null ? null : o;
      return function() {
        var or__3925__auto__ = cljs.core._swap_BANG_[function() {
          var G__10145 = x__4569__auto__;
          return goog.typeOf(G__10145);
        }()];
        if (or__3925__auto__) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3925__auto____$1) {
            return or__3925__auto____$1;
          } else {
            throw cljs.core.missing_protocol("ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a);
    }
  };
  var _swap_BANG___4 = function(o, f, a, b) {
    if (function() {
      var and__3913__auto__ = o;
      if (and__3913__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$4;
      } else {
        return and__3913__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$4(o, f, a, b);
    } else {
      var x__4569__auto__ = o == null ? null : o;
      return function() {
        var or__3925__auto__ = cljs.core._swap_BANG_[function() {
          var G__10147 = x__4569__auto__;
          return goog.typeOf(G__10147);
        }()];
        if (or__3925__auto__) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3925__auto____$1) {
            return or__3925__auto____$1;
          } else {
            throw cljs.core.missing_protocol("ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a, b);
    }
  };
  var _swap_BANG___5 = function(o, f, a, b, xs) {
    if (function() {
      var and__3913__auto__ = o;
      if (and__3913__auto__) {
        return o.cljs$core$ISwap$_swap_BANG_$arity$5;
      } else {
        return and__3913__auto__;
      }
    }()) {
      return o.cljs$core$ISwap$_swap_BANG_$arity$5(o, f, a, b, xs);
    } else {
      var x__4569__auto__ = o == null ? null : o;
      return function() {
        var or__3925__auto__ = cljs.core._swap_BANG_[function() {
          var G__10149 = x__4569__auto__;
          return goog.typeOf(G__10149);
        }()];
        if (or__3925__auto__) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = cljs.core._swap_BANG_["_"];
          if (or__3925__auto____$1) {
            return or__3925__auto____$1;
          } else {
            throw cljs.core.missing_protocol("ISwap.-swap!", o);
          }
        }
      }().call(null, o, f, a, b, xs);
    }
  };
  _swap_BANG_ = function(o, f, a, b, xs) {
    switch(arguments.length) {
      case 2:
        return _swap_BANG___2.call(this, o, f);
      case 3:
        return _swap_BANG___3.call(this, o, f, a);
      case 4:
        return _swap_BANG___4.call(this, o, f, a, b);
      case 5:
        return _swap_BANG___5.call(this, o, f, a, b, xs);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _swap_BANG_.cljs$core$IFn$_invoke$arity$2 = _swap_BANG___2;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$3 = _swap_BANG___3;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$4 = _swap_BANG___4;
  _swap_BANG_.cljs$core$IFn$_invoke$arity$5 = _swap_BANG___5;
  return _swap_BANG_;
}();
cljs.core.IVolatile = function() {
  var obj10151 = {};
  return obj10151;
}();
cljs.core._vreset_BANG_ = function _vreset_BANG_(o, new_value) {
  if (function() {
    var and__3913__auto__ = o;
    if (and__3913__auto__) {
      return o.cljs$core$IVolatile$_vreset_BANG_$arity$2;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return o.cljs$core$IVolatile$_vreset_BANG_$arity$2(o, new_value);
  } else {
    var x__4569__auto__ = o == null ? null : o;
    return function() {
      var or__3925__auto__ = cljs.core._vreset_BANG_[function() {
        var G__10155 = x__4569__auto__;
        return goog.typeOf(G__10155);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._vreset_BANG_["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IVolatile.-vreset!", o);
        }
      }
    }().call(null, o, new_value);
  }
};
cljs.core.IIterable = function() {
  var obj10157 = {};
  return obj10157;
}();
cljs.core._iterator = function _iterator(coll) {
  if (function() {
    var and__3913__auto__ = coll;
    if (and__3913__auto__) {
      return coll.cljs$core$IIterable$_iterator$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return coll.cljs$core$IIterable$_iterator$arity$1(coll);
  } else {
    var x__4569__auto__ = coll == null ? null : coll;
    return function() {
      var or__3925__auto__ = cljs.core._iterator[function() {
        var G__10161 = x__4569__auto__;
        return goog.typeOf(G__10161);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._iterator["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IIterable.-iterator", coll);
        }
      }
    }().call(null, coll);
  }
};
cljs.core.StringBufferWriter = function(sb) {
  this.sb = sb;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 1073741824;
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_write$arity$2 = function(_, s) {
  var self__ = this;
  var ___$1 = this;
  return self__.sb.append(s);
};
cljs.core.StringBufferWriter.prototype.cljs$core$IWriter$_flush$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return null;
};
cljs.core.StringBufferWriter.cljs$lang$type = true;
cljs.core.StringBufferWriter.cljs$lang$ctorStr = "cljs.core/StringBufferWriter";
cljs.core.StringBufferWriter.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/StringBufferWriter");
};
cljs.core.__GT_StringBufferWriter = function __GT_StringBufferWriter(sb) {
  return new cljs.core.StringBufferWriter(sb);
};
cljs.core.pr_str_STAR_ = function pr_str_STAR_(obj) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null, writer, cljs.core.pr_opts());
  writer.cljs$core$IWriter$_flush$arity$1(null);
  return[cljs.core.str(sb)].join("");
};
cljs.core.int_rotate_left = function int_rotate_left(x, n) {
  return x << n | x >>> -n;
};
if (typeof Math.imul !== "undefined" && !(function() {
  var G__10164 = 4294967295;
  var G__10165 = 5;
  return Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__10164, G__10165) : Math.imul.call(null, G__10164, G__10165);
}() === 0)) {
  cljs.core.imul = function imul(a, b) {
    var G__10168 = a;
    var G__10169 = b;
    return Math.imul.cljs$core$IFn$_invoke$arity$2 ? Math.imul.cljs$core$IFn$_invoke$arity$2(G__10168, G__10169) : Math.imul.call(null, G__10168, G__10169);
  };
} else {
  cljs.core.imul = function imul(a, b) {
    var ah = a >>> 16 & 65535;
    var al = a & 65535;
    var bh = b >>> 16 & 65535;
    var bl = b & 65535;
    return al * bl + (ah * bl + al * bh << 16 >>> 0) | 0;
  };
}
cljs.core.m3_seed = 0;
cljs.core.m3_C1 = 3432918353;
cljs.core.m3_C2 = 461845907;
cljs.core.m3_mix_K1 = function m3_mix_K1(k1) {
  return cljs.core.imul(cljs.core.int_rotate_left(cljs.core.imul(k1, cljs.core.m3_C1), 15), cljs.core.m3_C2);
};
cljs.core.m3_mix_H1 = function m3_mix_H1(h1, k1) {
  return cljs.core.imul(cljs.core.int_rotate_left(h1 ^ k1, 13), 5) + 3864292196;
};
cljs.core.m3_fmix = function m3_fmix(h1, len) {
  var h1__$1 = h1;
  var h1__$2 = h1__$1 ^ len;
  var h1__$3 = h1__$2 ^ h1__$2 >>> 16;
  var h1__$4 = cljs.core.imul(h1__$3, 2246822507);
  var h1__$5 = h1__$4 ^ h1__$4 >>> 13;
  var h1__$6 = cljs.core.imul(h1__$5, 3266489909);
  var h1__$7 = h1__$6 ^ h1__$6 >>> 16;
  return h1__$7;
};
cljs.core.m3_hash_int = function m3_hash_int(in$) {
  if (in$ === 0) {
    return in$;
  } else {
    var k1 = cljs.core.m3_mix_K1(in$);
    var h1 = cljs.core.m3_mix_H1(cljs.core.m3_seed, k1);
    return cljs.core.m3_fmix(h1, 4);
  }
};
cljs.core.m3_hash_unencoded_chars = function m3_hash_unencoded_chars(in$) {
  var h1 = function() {
    var i = 1;
    var h1 = cljs.core.m3_seed;
    while (true) {
      if (i < in$.length) {
        var G__10170 = i + 2;
        var G__10171 = cljs.core.m3_mix_H1(h1, cljs.core.m3_mix_K1(in$.charCodeAt(i - 1) | in$.charCodeAt(i) << 16));
        i = G__10170;
        h1 = G__10171;
        continue;
      } else {
        return h1;
      }
      break;
    }
  }();
  var h1__$1 = (in$.length & 1) === 1 ? h1 ^ cljs.core.m3_mix_K1(in$.charCodeAt(in$.length - 1)) : h1;
  return cljs.core.m3_fmix(h1__$1, cljs.core.imul(2, in$.length));
};
cljs.core.string_hash_cache = function() {
  var obj10173 = {};
  return obj10173;
}();
cljs.core.string_hash_cache_count = 0;
cljs.core.hash_string_STAR_ = function hash_string_STAR_(s) {
  if (!(s == null)) {
    var len = s.length;
    if (len > 0) {
      var i = 0;
      var hash = 0;
      while (true) {
        if (i < len) {
          var G__10174 = i + 1;
          var G__10175 = cljs.core.imul(31, hash) + s.charCodeAt(i);
          i = G__10174;
          hash = G__10175;
          continue;
        } else {
          return hash;
        }
        break;
      }
    } else {
      return 0;
    }
  } else {
    return 0;
  }
};
cljs.core.add_to_string_hash_cache = function add_to_string_hash_cache(k) {
  var h = cljs.core.hash_string_STAR_(k);
  cljs.core.string_hash_cache[k] = h;
  cljs.core.string_hash_cache_count = cljs.core.string_hash_cache_count + 1;
  return h;
};
cljs.core.hash_string = function hash_string(k) {
  if (cljs.core.string_hash_cache_count > 255) {
    cljs.core.string_hash_cache = function() {
      var obj10179 = {};
      return obj10179;
    }();
    cljs.core.string_hash_cache_count = 0;
  } else {
  }
  var h = cljs.core.string_hash_cache[k];
  if (typeof h === "number") {
    return h;
  } else {
    return cljs.core.add_to_string_hash_cache(k);
  }
};
cljs.core.hash = function hash(o) {
  if (function() {
    var G__10182 = o;
    if (G__10182) {
      var bit__4599__auto__ = G__10182.cljs$lang$protocol_mask$partition0$ & 4194304;
      if (bit__4599__auto__ || G__10182.cljs$core$IHash$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return o.cljs$core$IHash$_hash$arity$1(null);
  } else {
    if (typeof o === "number") {
      return function() {
        var G__10183 = o;
        return Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__10183) : Math.floor.call(null, G__10183);
      }() % 2147483647;
    } else {
      if (o === true) {
        return 1;
      } else {
        if (o === false) {
          return 0;
        } else {
          if (typeof o === "string") {
            return cljs.core.m3_hash_int(cljs.core.hash_string(o));
          } else {
            if (o instanceof Date) {
              return o.valueOf();
            } else {
              if (o == null) {
                return 0;
              } else {
                return cljs.core._hash(o);
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.hash_combine = function hash_combine(seed, hash) {
  return seed ^ hash + 2654435769 + (seed << 6) + (seed >> 2);
};
cljs.core.instance_QMARK_ = function instance_QMARK_(t, o) {
  return o instanceof t;
};
cljs.core.symbol_QMARK_ = function symbol_QMARK_(x) {
  return x instanceof cljs.core.Symbol;
};
cljs.core.hash_symbol = function hash_symbol(sym) {
  return cljs.core.hash_combine(cljs.core.m3_hash_unencoded_chars(sym.name), cljs.core.hash_string(sym.ns));
};
cljs.core.compare_symbols = function compare_symbols(a, b) {
  if (a.str === b.str) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__3913__auto__ = cljs.core.not(a.ns);
      if (and__3913__auto__) {
        return b.ns;
      } else {
        return and__3913__auto__;
      }
    }())) {
      return-1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not(b.ns)) {
          return 1;
        } else {
          var nsc = function() {
            var G__10190 = a.ns;
            var G__10191 = b.ns;
            return goog.array.defaultCompare(G__10190, G__10191);
          }();
          if (0 === nsc) {
            var G__10192 = a.name;
            var G__10193 = b.name;
            return goog.array.defaultCompare(G__10192, G__10193);
          } else {
            return nsc;
          }
        }
      } else {
        var G__10194 = a.name;
        var G__10195 = b.name;
        return goog.array.defaultCompare(G__10194, G__10195);
      }
    }
  }
};
cljs.core.Symbol = function(ns, name, str, _hash, _meta) {
  this.ns = ns;
  this.name = name;
  this.str = str;
  this._hash = _hash;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition0$ = 2154168321;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Symbol.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write(writer, self__.str);
};
cljs.core.Symbol.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Symbol.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Symbol.prototype.cljs$core$IHash$_hash$arity$1 = function(sym) {
  var self__ = this;
  var sym__$1 = this;
  var h__4346__auto__ = self__._hash;
  if (!(h__4346__auto__ == null)) {
    return h__4346__auto__;
  } else {
    var h__4346__auto____$1 = cljs.core.hash_symbol(sym__$1);
    self__._hash = h__4346__auto____$1;
    return h__4346__auto____$1;
  }
};
cljs.core.Symbol.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Symbol(self__.ns, self__.name, self__.str, self__._hash, new_meta);
};
cljs.core.Symbol.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Symbol.prototype.call = function() {
  var G__10197 = null;
  var G__10197__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll, sym, null);
  };
  var G__10197__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var sym = self____$1;
    return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll, sym, not_found);
  };
  G__10197 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__10197__2.call(this, self__, coll);
      case 3:
        return G__10197__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__10197.cljs$core$IFn$_invoke$arity$2 = G__10197__2;
  G__10197.cljs$core$IFn$_invoke$arity$3 = G__10197__3;
  return G__10197;
}();
cljs.core.Symbol.prototype.apply = function(self__, args10196) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args10196)));
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll, sym, null);
};
cljs.core.Symbol.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var sym = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll, sym, not_found);
};
cljs.core.Symbol.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Symbol) {
    return self__.str === other.str;
  } else {
    return false;
  }
};
cljs.core.Symbol.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.str;
};
cljs.core.Symbol.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Symbol.cljs$lang$type = true;
cljs.core.Symbol.cljs$lang$ctorStr = "cljs.core/Symbol";
cljs.core.Symbol.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/Symbol");
};
cljs.core.__GT_Symbol = function __GT_Symbol(ns, name, str, _hash, _meta) {
  return new cljs.core.Symbol(ns, name, str, _hash, _meta);
};
cljs.core.symbol = function() {
  var symbol = null;
  var symbol__1 = function(name) {
    if (name instanceof cljs.core.Symbol) {
      return name;
    } else {
      return symbol.cljs$core$IFn$_invoke$arity$2(null, name);
    }
  };
  var symbol__2 = function(ns, name) {
    var sym_str = !(ns == null) ? [cljs.core.str(ns), cljs.core.str("/"), cljs.core.str(name)].join("") : name;
    return new cljs.core.Symbol(ns, name, sym_str, null, null);
  };
  symbol = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return symbol__1.call(this, ns);
      case 2:
        return symbol__2.call(this, ns, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  symbol.cljs$core$IFn$_invoke$arity$1 = symbol__1;
  symbol.cljs$core$IFn$_invoke$arity$2 = symbol__2;
  return symbol;
}();
cljs.core.Var = function(val, sym, _meta) {
  this.val = val;
  this.sym = sym;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 163841;
};
cljs.core.Var.prototype.call = function() {
  var G__10245 = null;
  var G__10245__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null);
  };
  var G__10245__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a);
  };
  var G__10245__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b);
  };
  var G__10245__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c);
  };
  var G__10245__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d);
  };
  var G__10245__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e);
  };
  var G__10245__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f);
  };
  var G__10245__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g);
  };
  var G__10245__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h);
  };
  var G__10245__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i);
  };
  var G__10245__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j);
  };
  var G__10245__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k);
  };
  var G__10245__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l);
  };
  var G__10245__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
  };
  var G__10245__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
  };
  var G__10245__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
  };
  var G__10245__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
  };
  var G__10245__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
  };
  var G__10245__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
  };
  var G__10245__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
  };
  var G__10245__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
  };
  var G__10245__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__10201 = function() {
      return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
    }();
    var G__10202 = a;
    var G__10203 = b;
    var G__10204 = c;
    var G__10205 = d;
    var G__10206 = e;
    var G__10207 = f;
    var G__10208 = g;
    var G__10209 = h;
    var G__10210 = i;
    var G__10211 = j;
    var G__10212 = k;
    var G__10213 = l;
    var G__10214 = m;
    var G__10215 = n;
    var G__10216 = o;
    var G__10217 = p;
    var G__10218 = q;
    var G__10219 = r;
    var G__10220 = s;
    var G__10221 = t;
    var G__10222 = rest;
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__10201, G__10202, G__10203, G__10204, G__10205, G__10206, G__10207, G__10208, G__10209, G__10210, G__10211, G__10212, G__10213, G__10214, G__10215, G__10216, G__10217, G__10218, G__10219, G__10220, G__10221, G__10222) : cljs.core.apply.call(null, G__10201, G__10202, G__10203, G__10204, G__10205, G__10206, G__10207, G__10208, G__10209, G__10210, G__10211, G__10212, G__10213, G__10214, G__10215, 
    G__10216, G__10217, G__10218, G__10219, G__10220, G__10221, G__10222);
  };
  G__10245 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__10245__1.call(this, self__);
      case 2:
        return G__10245__2.call(this, self__, a);
      case 3:
        return G__10245__3.call(this, self__, a, b);
      case 4:
        return G__10245__4.call(this, self__, a, b, c);
      case 5:
        return G__10245__5.call(this, self__, a, b, c, d);
      case 6:
        return G__10245__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__10245__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__10245__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__10245__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__10245__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__10245__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__10245__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__10245__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__10245__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__10245__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__10245__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__10245__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__10245__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__10245__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__10245__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__10245__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__10245__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__10245.cljs$core$IFn$_invoke$arity$1 = G__10245__1;
  G__10245.cljs$core$IFn$_invoke$arity$2 = G__10245__2;
  G__10245.cljs$core$IFn$_invoke$arity$3 = G__10245__3;
  G__10245.cljs$core$IFn$_invoke$arity$4 = G__10245__4;
  G__10245.cljs$core$IFn$_invoke$arity$5 = G__10245__5;
  G__10245.cljs$core$IFn$_invoke$arity$6 = G__10245__6;
  G__10245.cljs$core$IFn$_invoke$arity$7 = G__10245__7;
  G__10245.cljs$core$IFn$_invoke$arity$8 = G__10245__8;
  G__10245.cljs$core$IFn$_invoke$arity$9 = G__10245__9;
  G__10245.cljs$core$IFn$_invoke$arity$10 = G__10245__10;
  G__10245.cljs$core$IFn$_invoke$arity$11 = G__10245__11;
  G__10245.cljs$core$IFn$_invoke$arity$12 = G__10245__12;
  G__10245.cljs$core$IFn$_invoke$arity$13 = G__10245__13;
  G__10245.cljs$core$IFn$_invoke$arity$14 = G__10245__14;
  G__10245.cljs$core$IFn$_invoke$arity$15 = G__10245__15;
  G__10245.cljs$core$IFn$_invoke$arity$16 = G__10245__16;
  G__10245.cljs$core$IFn$_invoke$arity$17 = G__10245__17;
  G__10245.cljs$core$IFn$_invoke$arity$18 = G__10245__18;
  G__10245.cljs$core$IFn$_invoke$arity$19 = G__10245__19;
  G__10245.cljs$core$IFn$_invoke$arity$20 = G__10245__20;
  G__10245.cljs$core$IFn$_invoke$arity$21 = G__10245__21;
  G__10245.cljs$core$IFn$_invoke$arity$22 = G__10245__22;
  return G__10245;
}();
cljs.core.Var.prototype.apply = function(self__, args10200) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args10200)));
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  return function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }().call(null, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
};
cljs.core.Var.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  var G__10223 = function() {
    return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
  }();
  var G__10224 = a;
  var G__10225 = b;
  var G__10226 = c;
  var G__10227 = d;
  var G__10228 = e;
  var G__10229 = f;
  var G__10230 = g;
  var G__10231 = h;
  var G__10232 = i;
  var G__10233 = j;
  var G__10234 = k;
  var G__10235 = l;
  var G__10236 = m;
  var G__10237 = n;
  var G__10238 = o;
  var G__10239 = p;
  var G__10240 = q;
  var G__10241 = r;
  var G__10242 = s;
  var G__10243 = t;
  var G__10244 = rest;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__10223, G__10224, G__10225, G__10226, G__10227, G__10228, G__10229, G__10230, G__10231, G__10232, G__10233, G__10234, G__10235, G__10236, G__10237, G__10238, G__10239, G__10240, G__10241, G__10242, G__10243, G__10244) : cljs.core.apply.call(null, G__10223, G__10224, G__10225, G__10226, G__10227, G__10228, G__10229, G__10230, G__10231, G__10232, G__10233, G__10234, G__10235, G__10236, G__10237, 
  G__10238, G__10239, G__10240, G__10241, G__10242, G__10243, G__10244);
};
cljs.core.Var.prototype.cljs$core$Fn$ = true;
cljs.core.Var.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__._meta;
};
cljs.core.Var.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.val.cljs$core$IFn$_invoke$arity$0 ? self__.val.cljs$core$IFn$_invoke$arity$0() : self__.val.call(null);
};
cljs.core.Var.cljs$lang$type = true;
cljs.core.Var.cljs$lang$ctorStr = "cljs.core/Var";
cljs.core.Var.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/Var");
};
cljs.core.__GT_Var = function __GT_Var(val, sym, _meta) {
  return new cljs.core.Var(val, sym, _meta);
};
cljs.core.iterable_QMARK_ = function iterable_QMARK_(x) {
  var G__10247 = x;
  if (G__10247) {
    var bit__4606__auto__ = null;
    if (cljs.core.truth_(function() {
      var or__3925__auto__ = bit__4606__auto__;
      if (cljs.core.truth_(or__3925__auto__)) {
        return or__3925__auto__;
      } else {
        return G__10247.cljs$core$IIterable$;
      }
    }())) {
      return true;
    } else {
      if (!G__10247.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable, G__10247);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IIterable, G__10247);
  }
};
cljs.core.clone = function clone(value) {
  return cljs.core._clone(value);
};
cljs.core.cloneable_QMARK_ = function cloneable_QMARK_(value) {
  var G__10249 = value;
  if (G__10249) {
    var bit__4606__auto__ = G__10249.cljs$lang$protocol_mask$partition1$ & 8192;
    if (bit__4606__auto__ || G__10249.cljs$core$ICloneable$) {
      return true;
    } else {
      if (!G__10249.cljs$lang$protocol_mask$partition1$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable, G__10249);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ICloneable, G__10249);
  }
};
cljs.core.seq = function seq(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__10251 = coll;
      if (G__10251) {
        var bit__4599__auto__ = G__10251.cljs$lang$protocol_mask$partition0$ & 8388608;
        if (bit__4599__auto__ || G__10251.cljs$core$ISeqable$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$ISeqable$_seq$arity$1(null);
    } else {
      if (coll instanceof Array) {
        if (coll.length === 0) {
          return null;
        } else {
          return new cljs.core.IndexedSeq(coll, 0);
        }
      } else {
        if (typeof coll === "string") {
          if (coll.length === 0) {
            return null;
          } else {
            return new cljs.core.IndexedSeq(coll, 0);
          }
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, coll)) {
            return cljs.core._seq(coll);
          } else {
            throw new Error([cljs.core.str(coll), cljs.core.str(" is not ISeqable")].join(""));
          }
        }
      }
    }
  }
};
cljs.core.first = function first(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__10253 = coll;
      if (G__10253) {
        var bit__4599__auto__ = G__10253.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4599__auto__ || G__10253.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$ISeq$_first$arity$1(null);
    } else {
      var s = cljs.core.seq(coll);
      if (s == null) {
        return null;
      } else {
        return cljs.core._first(s);
      }
    }
  }
};
cljs.core.rest = function rest(coll) {
  if (!(coll == null)) {
    if (function() {
      var G__10255 = coll;
      if (G__10255) {
        var bit__4599__auto__ = G__10255.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4599__auto__ || G__10255.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$ISeq$_rest$arity$1(null);
    } else {
      var s = cljs.core.seq(coll);
      if (s) {
        return cljs.core._rest(s);
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.next = function next(coll) {
  if (coll == null) {
    return null;
  } else {
    if (function() {
      var G__10257 = coll;
      if (G__10257) {
        var bit__4599__auto__ = G__10257.cljs$lang$protocol_mask$partition0$ & 128;
        if (bit__4599__auto__ || G__10257.cljs$core$INext$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$INext$_next$arity$1(null);
    } else {
      return cljs.core.seq(cljs.core.rest(coll));
    }
  }
};
cljs.core._EQ_ = function() {
  var _EQ_ = null;
  var _EQ___1 = function(x) {
    return true;
  };
  var _EQ___2 = function(x, y) {
    if (x == null) {
      return y == null;
    } else {
      return x === y || cljs.core._equiv(x, y);
    }
  };
  var _EQ___3 = function() {
    var G__10262__delegate = function(x, y, more) {
      while (true) {
        if (_EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
          if (cljs.core.next(more)) {
            var G__10263 = y;
            var G__10264 = cljs.core.first(more);
            var G__10265 = cljs.core.next(more);
            x = G__10263;
            y = G__10264;
            more = G__10265;
            continue;
          } else {
            return _EQ_.cljs$core$IFn$_invoke$arity$2(y, cljs.core.first(more));
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__10262 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__10266__i = 0, G__10266__a = new Array(arguments.length - 2);
        while (G__10266__i < G__10266__a.length) {
          G__10266__a[G__10266__i] = arguments[G__10266__i + 2];
          ++G__10266__i;
        }
        more = new cljs.core.IndexedSeq(G__10266__a, 0);
      }
      return G__10262__delegate.call(this, x, y, more);
    };
    G__10262.cljs$lang$maxFixedArity = 2;
    G__10262.cljs$lang$applyTo = function(arglist__10267) {
      var x = cljs.core.first(arglist__10267);
      arglist__10267 = cljs.core.next(arglist__10267);
      var y = cljs.core.first(arglist__10267);
      var more = cljs.core.rest(arglist__10267);
      return G__10262__delegate(x, y, more);
    };
    G__10262.cljs$core$IFn$_invoke$arity$variadic = G__10262__delegate;
    return G__10262;
  }();
  _EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ___1.call(this, x);
      case 2:
        return _EQ___2.call(this, x, y);
      default:
        var G__10268 = null;
        if (arguments.length > 2) {
          var G__10269__i = 0, G__10269__a = new Array(arguments.length - 2);
          while (G__10269__i < G__10269__a.length) {
            G__10269__a[G__10269__i] = arguments[G__10269__i + 2];
            ++G__10269__i;
          }
          G__10268 = new cljs.core.IndexedSeq(G__10269__a, 0);
        }
        return _EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__10268);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ_.cljs$lang$maxFixedArity = 2;
  _EQ_.cljs$lang$applyTo = _EQ___3.cljs$lang$applyTo;
  _EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ___1;
  _EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ___2;
  _EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ_;
}();
cljs.core.ES6Iterator = function(s) {
  this.s = s;
};
cljs.core.ES6Iterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first(self__.s);
    self__.s = cljs.core.next(self__.s);
    return{"done":false, "value":x};
  } else {
    return{"done":true, "value":null};
  }
};
cljs.core.ES6Iterator.cljs$lang$type = true;
cljs.core.ES6Iterator.cljs$lang$ctorStr = "cljs.core/ES6Iterator";
cljs.core.ES6Iterator.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/ES6Iterator");
};
cljs.core.__GT_ES6Iterator = function __GT_ES6Iterator(s) {
  return new cljs.core.ES6Iterator(s);
};
cljs.core.es6_iterator = function es6_iterator(coll) {
  return new cljs.core.ES6Iterator(cljs.core.seq(coll));
};
cljs.core.ES6IteratorSeq = function(value, iter, _rest) {
  this.value = value;
  this.iter = iter;
  this._rest = _rest;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 8388672;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.value;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__._rest == null) {
    self__._rest = function() {
      var G__10270 = self__.iter;
      return cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.es6_iterator_seq.cljs$core$IFn$_invoke$arity$1(G__10270) : cljs.core.es6_iterator_seq.call(null, G__10270);
    }();
  } else {
  }
  return self__._rest;
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ES6IteratorSeq.cljs$lang$type = true;
cljs.core.ES6IteratorSeq.cljs$lang$ctorStr = "cljs.core/ES6IteratorSeq";
cljs.core.ES6IteratorSeq.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/ES6IteratorSeq");
};
cljs.core.__GT_ES6IteratorSeq = function __GT_ES6IteratorSeq(value, iter, _rest) {
  return new cljs.core.ES6IteratorSeq(value, iter, _rest);
};
cljs.core.es6_iterator_seq = function es6_iterator_seq(iter) {
  var v = iter.next();
  if (cljs.core.truth_(v.done)) {
    return cljs.core.List.EMPTY;
  } else {
    return new cljs.core.ES6IteratorSeq(v.value, iter, null);
  }
};
cljs.core.mix_collection_hash = function mix_collection_hash(hash_basis, count) {
  var h1 = cljs.core.m3_seed;
  var k1 = cljs.core.m3_mix_K1(hash_basis);
  var h1__$1 = cljs.core.m3_mix_H1(h1, k1);
  return cljs.core.m3_fmix(h1__$1, count);
};
cljs.core.hash_ordered_coll = function hash_ordered_coll(coll) {
  var n = 0;
  var hash_code = 1;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__10271 = n + 1;
      var G__10272 = cljs.core.imul(31, hash_code) + cljs.core.hash(cljs.core.first(coll__$1)) | 0;
      var G__10273 = cljs.core.next(coll__$1);
      n = G__10271;
      hash_code = G__10272;
      coll__$1 = G__10273;
      continue;
    } else {
      return cljs.core.mix_collection_hash(hash_code, n);
    }
    break;
  }
};
cljs.core.empty_ordered_hash = cljs.core.mix_collection_hash(1, 0);
cljs.core.hash_unordered_coll = function hash_unordered_coll(coll) {
  var n = 0;
  var hash_code = 0;
  var coll__$1 = cljs.core.seq(coll);
  while (true) {
    if (!(coll__$1 == null)) {
      var G__10274 = n + 1;
      var G__10275 = hash_code + cljs.core.hash(cljs.core.first(coll__$1)) | 0;
      var G__10276 = cljs.core.next(coll__$1);
      n = G__10274;
      hash_code = G__10275;
      coll__$1 = G__10276;
      continue;
    } else {
      return cljs.core.mix_collection_hash(hash_code, n);
    }
    break;
  }
};
cljs.core.empty_unordered_hash = cljs.core.mix_collection_hash(0, 0);
cljs.core.ICounted["null"] = true;
cljs.core._count["null"] = function(_) {
  return 0;
};
Date.prototype.cljs$core$IEquiv$ = true;
Date.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var o__$1 = this;
  return other instanceof Date && o__$1.toString() === other.toString();
};
cljs.core.IEquiv["number"] = true;
cljs.core._equiv["number"] = function(x, o) {
  return x === o;
};
cljs.core.IMeta["function"] = true;
cljs.core._meta["function"] = function(_) {
  return null;
};
cljs.core.Fn["function"] = true;
cljs.core.IHash["_"] = true;
cljs.core._hash["_"] = function(o) {
  var G__10277 = o;
  return goog.getUid(G__10277);
};
cljs.core.inc = function inc(x) {
  return x + 1;
};
cljs.core.Reduced = function(val) {
  this.val = val;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Reduced.prototype.cljs$core$IDeref$_deref$arity$1 = function(o) {
  var self__ = this;
  var o__$1 = this;
  return self__.val;
};
cljs.core.Reduced.cljs$lang$type = true;
cljs.core.Reduced.cljs$lang$ctorStr = "cljs.core/Reduced";
cljs.core.Reduced.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/Reduced");
};
cljs.core.__GT_Reduced = function __GT_Reduced(val) {
  return new cljs.core.Reduced(val);
};
cljs.core.reduced = function reduced(x) {
  return new cljs.core.Reduced(x);
};
cljs.core.reduced_QMARK_ = function reduced_QMARK_(r) {
  return r instanceof cljs.core.Reduced;
};
cljs.core.ensure_reduced = function ensure_reduced(x) {
  if (cljs.core.reduced_QMARK_(x)) {
    return x;
  } else {
    return cljs.core.reduced(x);
  }
};
cljs.core.unreduced = function unreduced(x) {
  if (cljs.core.reduced_QMARK_(x)) {
    var G__10279 = x;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__10279) : cljs.core.deref.call(null, G__10279);
  } else {
    return x;
  }
};
cljs.core.deref = function deref(o) {
  return cljs.core._deref(o);
};
cljs.core.ci_reduce = function() {
  var ci_reduce = null;
  var ci_reduce__2 = function(cicoll, f) {
    var cnt = cljs.core._count(cicoll);
    if (cnt === 0) {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    } else {
      var val = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, 0);
      var n = 1;
      while (true) {
        if (n < cnt) {
          var nval = function() {
            var G__10286 = val;
            var G__10287 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10286, G__10287) : f.call(null, G__10286, G__10287);
          }();
          if (cljs.core.reduced_QMARK_(nval)) {
            return cljs.core.deref(nval);
          } else {
            var G__10292 = nval;
            var G__10293 = n + 1;
            val = G__10292;
            n = G__10293;
            continue;
          }
        } else {
          return val;
        }
        break;
      }
    }
  };
  var ci_reduce__3 = function(cicoll, f, val) {
    var cnt = cljs.core._count(cicoll);
    var val__$1 = val;
    var n = 0;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__10288 = val__$1;
          var G__10289 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10288, G__10289) : f.call(null, G__10288, G__10289);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__10294 = nval;
          var G__10295 = n + 1;
          val__$1 = G__10294;
          n = G__10295;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  var ci_reduce__4 = function(cicoll, f, val, idx) {
    var cnt = cljs.core._count(cicoll);
    var val__$1 = val;
    var n = idx;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__10290 = val__$1;
          var G__10291 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(cicoll, n);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10290, G__10291) : f.call(null, G__10290, G__10291);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__10296 = nval;
          var G__10297 = n + 1;
          val__$1 = G__10296;
          n = G__10297;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  ci_reduce = function(cicoll, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return ci_reduce__2.call(this, cicoll, f);
      case 3:
        return ci_reduce__3.call(this, cicoll, f, val);
      case 4:
        return ci_reduce__4.call(this, cicoll, f, val, idx);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ci_reduce.cljs$core$IFn$_invoke$arity$2 = ci_reduce__2;
  ci_reduce.cljs$core$IFn$_invoke$arity$3 = ci_reduce__3;
  ci_reduce.cljs$core$IFn$_invoke$arity$4 = ci_reduce__4;
  return ci_reduce;
}();
cljs.core.array_reduce = function() {
  var array_reduce = null;
  var array_reduce__2 = function(arr, f) {
    var cnt = arr.length;
    if (arr.length === 0) {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    } else {
      var val = arr[0];
      var n = 1;
      while (true) {
        if (n < cnt) {
          var nval = function() {
            var G__10304 = val;
            var G__10305 = arr[n];
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10304, G__10305) : f.call(null, G__10304, G__10305);
          }();
          if (cljs.core.reduced_QMARK_(nval)) {
            return cljs.core.deref(nval);
          } else {
            var G__10310 = nval;
            var G__10311 = n + 1;
            val = G__10310;
            n = G__10311;
            continue;
          }
        } else {
          return val;
        }
        break;
      }
    }
  };
  var array_reduce__3 = function(arr, f, val) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = 0;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__10306 = val__$1;
          var G__10307 = arr[n];
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10306, G__10307) : f.call(null, G__10306, G__10307);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__10312 = nval;
          var G__10313 = n + 1;
          val__$1 = G__10312;
          n = G__10313;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  var array_reduce__4 = function(arr, f, val, idx) {
    var cnt = arr.length;
    var val__$1 = val;
    var n = idx;
    while (true) {
      if (n < cnt) {
        var nval = function() {
          var G__10308 = val__$1;
          var G__10309 = arr[n];
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10308, G__10309) : f.call(null, G__10308, G__10309);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__10314 = nval;
          var G__10315 = n + 1;
          val__$1 = G__10314;
          n = G__10315;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  array_reduce = function(arr, f, val, idx) {
    switch(arguments.length) {
      case 2:
        return array_reduce__2.call(this, arr, f);
      case 3:
        return array_reduce__3.call(this, arr, f, val);
      case 4:
        return array_reduce__4.call(this, arr, f, val, idx);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_reduce.cljs$core$IFn$_invoke$arity$2 = array_reduce__2;
  array_reduce.cljs$core$IFn$_invoke$arity$3 = array_reduce__3;
  array_reduce.cljs$core$IFn$_invoke$arity$4 = array_reduce__4;
  return array_reduce;
}();
cljs.core.counted_QMARK_ = function counted_QMARK_(x) {
  var G__10317 = x;
  if (G__10317) {
    var bit__4606__auto__ = G__10317.cljs$lang$protocol_mask$partition0$ & 2;
    if (bit__4606__auto__ || G__10317.cljs$core$ICounted$) {
      return true;
    } else {
      if (!G__10317.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, G__10317);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, G__10317);
  }
};
cljs.core.indexed_QMARK_ = function indexed_QMARK_(x) {
  var G__10319 = x;
  if (G__10319) {
    var bit__4606__auto__ = G__10319.cljs$lang$protocol_mask$partition0$ & 16;
    if (bit__4606__auto__ || G__10319.cljs$core$IIndexed$) {
      return true;
    } else {
      if (!G__10319.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, G__10319);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, G__10319);
  }
};
cljs.core.IndexedSeqIterator = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.IndexedSeqIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.IndexedSeqIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.IndexedSeqIterator.cljs$lang$type = true;
cljs.core.IndexedSeqIterator.cljs$lang$ctorStr = "cljs.core/IndexedSeqIterator";
cljs.core.IndexedSeqIterator.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/IndexedSeqIterator");
};
cljs.core.__GT_IndexedSeqIterator = function __GT_IndexedSeqIterator(arr, i) {
  return new cljs.core.IndexedSeqIterator(arr, i);
};
cljs.core.IndexedSeq = function(arr, i) {
  this.arr = arr;
  this.i = i;
  this.cljs$lang$protocol_mask$partition0$ = 166199550;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.IndexedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.IndexedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var i__$1 = n + self__.i;
  if (i__$1 < self__.arr.length) {
    return self__.arr[i__$1];
  } else {
    return not_found;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IIterable$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IIterable$_iterator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.IndexedSeqIterator(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.IndexedSeq(self__.arr, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$INext$_next$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr.length - self__.i;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var c = cljs.core._count(coll__$1);
  if (c > 0) {
    return new cljs.core.RSeq(coll__$1, c - 1, null);
  } else {
    return null;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  var G__10320 = coll__$1;
  var G__10321 = other;
  return cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__10320, G__10321) : cljs.core.equiv_sequential.call(null, G__10320, G__10321);
};
cljs.core.IndexedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, self__.arr[self__.i], self__.i + 1);
};
cljs.core.IndexedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, start, self__.i);
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.arr[self__.i];
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (self__.i + 1 < self__.arr.length) {
    return new cljs.core.IndexedSeq(self__.arr, self__.i + 1);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.IndexedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.IndexedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  var G__10322 = o;
  var G__10323 = coll__$1;
  return cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__10322, G__10323) : cljs.core.cons.call(null, G__10322, G__10323);
};
cljs.core.IndexedSeq.cljs$lang$type = true;
cljs.core.IndexedSeq.cljs$lang$ctorStr = "cljs.core/IndexedSeq";
cljs.core.IndexedSeq.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/IndexedSeq");
};
cljs.core.__GT_IndexedSeq = function __GT_IndexedSeq(arr, i) {
  return new cljs.core.IndexedSeq(arr, i);
};
cljs.core.IndexedSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4903__auto__ = this;
  return cljs.core.es6_iterator(this__4903__auto__);
};
cljs.core.prim_seq = function() {
  var prim_seq = null;
  var prim_seq__1 = function(prim) {
    return prim_seq.cljs$core$IFn$_invoke$arity$2(prim, 0);
  };
  var prim_seq__2 = function(prim, i) {
    if (i < prim.length) {
      return new cljs.core.IndexedSeq(prim, i);
    } else {
      return null;
    }
  };
  prim_seq = function(prim, i) {
    switch(arguments.length) {
      case 1:
        return prim_seq__1.call(this, prim);
      case 2:
        return prim_seq__2.call(this, prim, i);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  prim_seq.cljs$core$IFn$_invoke$arity$1 = prim_seq__1;
  prim_seq.cljs$core$IFn$_invoke$arity$2 = prim_seq__2;
  return prim_seq;
}();
cljs.core.array_seq = function() {
  var array_seq = null;
  var array_seq__1 = function(array) {
    return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array, 0);
  };
  var array_seq__2 = function(array, i) {
    return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(array, i);
  };
  array_seq = function(array, i) {
    switch(arguments.length) {
      case 1:
        return array_seq__1.call(this, array);
      case 2:
        return array_seq__2.call(this, array, i);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_seq.cljs$core$IFn$_invoke$arity$1 = array_seq__1;
  array_seq.cljs$core$IFn$_invoke$arity$2 = array_seq__2;
  return array_seq;
}();
cljs.core.RSeq = function(ci, i, meta) {
  this.ci = ci;
  this.i = i;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.RSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.RSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.RSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.RSeq.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, self__.meta);
};
cljs.core.RSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return null;
  }
};
cljs.core.RSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.i + 1;
};
cljs.core.RSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  var G__10326 = coll__$1;
  var G__10327 = other;
  return cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2 ? cljs.core.equiv_sequential.cljs$core$IFn$_invoke$arity$2(G__10326, G__10327) : cljs.core.equiv_sequential.call(null, G__10326, G__10327);
};
cljs.core.RSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var G__10328 = cljs.core.List.EMPTY;
  var G__10329 = self__.meta;
  return cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2 ? cljs.core.with_meta.cljs$core$IFn$_invoke$arity$2(G__10328, G__10329) : cljs.core.with_meta.call(null, G__10328, G__10329);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(col, f) {
  var self__ = this;
  var col__$1 = this;
  var G__10330 = f;
  var G__10331 = col__$1;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(G__10330, G__10331) : cljs.core.seq_reduce.call(null, G__10330, G__10331);
};
cljs.core.RSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(col, f, start) {
  var self__ = this;
  var col__$1 = this;
  var G__10332 = f;
  var G__10333 = start;
  var G__10334 = col__$1;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(G__10332, G__10333, G__10334) : cljs.core.seq_reduce.call(null, G__10332, G__10333, G__10334);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.ci, self__.i);
};
cljs.core.RSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i > 0) {
    return new cljs.core.RSeq(self__.ci, self__.i - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.RSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.RSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.RSeq(self__.ci, self__.i, new_meta);
};
cljs.core.RSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  var G__10335 = o;
  var G__10336 = coll__$1;
  return cljs.core.cons.cljs$core$IFn$_invoke$arity$2 ? cljs.core.cons.cljs$core$IFn$_invoke$arity$2(G__10335, G__10336) : cljs.core.cons.call(null, G__10335, G__10336);
};
cljs.core.RSeq.cljs$lang$type = true;
cljs.core.RSeq.cljs$lang$ctorStr = "cljs.core/RSeq";
cljs.core.RSeq.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/RSeq");
};
cljs.core.__GT_RSeq = function __GT_RSeq(ci, i, meta) {
  return new cljs.core.RSeq(ci, i, meta);
};
cljs.core.RSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4903__auto__ = this;
  return cljs.core.es6_iterator(this__4903__auto__);
};
cljs.core.second = function second(coll) {
  return cljs.core.first(cljs.core.next(coll));
};
cljs.core.ffirst = function ffirst(coll) {
  return cljs.core.first(cljs.core.first(coll));
};
cljs.core.nfirst = function nfirst(coll) {
  return cljs.core.next(cljs.core.first(coll));
};
cljs.core.fnext = function fnext(coll) {
  return cljs.core.first(cljs.core.next(coll));
};
cljs.core.nnext = function nnext(coll) {
  return cljs.core.next(cljs.core.next(coll));
};
cljs.core.last = function last(s) {
  while (true) {
    var sn = cljs.core.next(s);
    if (!(sn == null)) {
      var G__10337 = sn;
      s = G__10337;
      continue;
    } else {
      return cljs.core.first(s);
    }
    break;
  }
};
cljs.core.IEquiv["_"] = true;
cljs.core._equiv["_"] = function(x, o) {
  return x === o;
};
cljs.core.conj = function() {
  var conj = null;
  var conj__0 = function() {
    return cljs.core.PersistentVector.EMPTY;
  };
  var conj__1 = function(coll) {
    return coll;
  };
  var conj__2 = function(coll, x) {
    if (!(coll == null)) {
      return cljs.core._conj(coll, x);
    } else {
      return cljs.core._conj(cljs.core.List.EMPTY, x);
    }
  };
  var conj__3 = function() {
    var G__10342__delegate = function(coll, x, xs) {
      while (true) {
        if (cljs.core.truth_(xs)) {
          var G__10343 = conj.cljs$core$IFn$_invoke$arity$2(coll, x);
          var G__10344 = cljs.core.first(xs);
          var G__10345 = cljs.core.next(xs);
          coll = G__10343;
          x = G__10344;
          xs = G__10345;
          continue;
        } else {
          return conj.cljs$core$IFn$_invoke$arity$2(coll, x);
        }
        break;
      }
    };
    var G__10342 = function(coll, x, var_args) {
      var xs = null;
      if (arguments.length > 2) {
        var G__10346__i = 0, G__10346__a = new Array(arguments.length - 2);
        while (G__10346__i < G__10346__a.length) {
          G__10346__a[G__10346__i] = arguments[G__10346__i + 2];
          ++G__10346__i;
        }
        xs = new cljs.core.IndexedSeq(G__10346__a, 0);
      }
      return G__10342__delegate.call(this, coll, x, xs);
    };
    G__10342.cljs$lang$maxFixedArity = 2;
    G__10342.cljs$lang$applyTo = function(arglist__10347) {
      var coll = cljs.core.first(arglist__10347);
      arglist__10347 = cljs.core.next(arglist__10347);
      var x = cljs.core.first(arglist__10347);
      var xs = cljs.core.rest(arglist__10347);
      return G__10342__delegate(coll, x, xs);
    };
    G__10342.cljs$core$IFn$_invoke$arity$variadic = G__10342__delegate;
    return G__10342;
  }();
  conj = function(coll, x, var_args) {
    var xs = var_args;
    switch(arguments.length) {
      case 0:
        return conj__0.call(this);
      case 1:
        return conj__1.call(this, coll);
      case 2:
        return conj__2.call(this, coll, x);
      default:
        var G__10348 = null;
        if (arguments.length > 2) {
          var G__10349__i = 0, G__10349__a = new Array(arguments.length - 2);
          while (G__10349__i < G__10349__a.length) {
            G__10349__a[G__10349__i] = arguments[G__10349__i + 2];
            ++G__10349__i;
          }
          G__10348 = new cljs.core.IndexedSeq(G__10349__a, 0);
        }
        return conj__3.cljs$core$IFn$_invoke$arity$variadic(coll, x, G__10348);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  conj.cljs$lang$maxFixedArity = 2;
  conj.cljs$lang$applyTo = conj__3.cljs$lang$applyTo;
  conj.cljs$core$IFn$_invoke$arity$0 = conj__0;
  conj.cljs$core$IFn$_invoke$arity$1 = conj__1;
  conj.cljs$core$IFn$_invoke$arity$2 = conj__2;
  conj.cljs$core$IFn$_invoke$arity$variadic = conj__3.cljs$core$IFn$_invoke$arity$variadic;
  return conj;
}();
cljs.core.empty = function empty(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._empty(coll);
  }
};
cljs.core.accumulating_seq_count = function accumulating_seq_count(coll) {
  var s = cljs.core.seq(coll);
  var acc = 0;
  while (true) {
    if (cljs.core.counted_QMARK_(s)) {
      return acc + cljs.core._count(s);
    } else {
      var G__10350 = cljs.core.next(s);
      var G__10351 = acc + 1;
      s = G__10350;
      acc = G__10351;
      continue;
    }
    break;
  }
};
cljs.core.count = function count(coll) {
  if (!(coll == null)) {
    if (function() {
      var G__10353 = coll;
      if (G__10353) {
        var bit__4599__auto__ = G__10353.cljs$lang$protocol_mask$partition0$ & 2;
        if (bit__4599__auto__ || G__10353.cljs$core$ICounted$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$ICounted$_count$arity$1(null);
    } else {
      if (coll instanceof Array) {
        return coll.length;
      } else {
        if (typeof coll === "string") {
          return coll.length;
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.ICounted, coll)) {
            return cljs.core._count(coll);
          } else {
            return cljs.core.accumulating_seq_count(coll);
          }
        }
      }
    }
  } else {
    return 0;
  }
};
cljs.core.linear_traversal_nth = function() {
  var linear_traversal_nth = null;
  var linear_traversal_nth__2 = function(coll, n) {
    while (true) {
      if (coll == null) {
        throw new Error("Index out of bounds");
      } else {
        if (n === 0) {
          if (cljs.core.seq(coll)) {
            return cljs.core.first(coll);
          } else {
            throw new Error("Index out of bounds");
          }
        } else {
          if (cljs.core.indexed_QMARK_(coll)) {
            return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
          } else {
            if (cljs.core.seq(coll)) {
              var G__10354 = cljs.core.next(coll);
              var G__10355 = n - 1;
              coll = G__10354;
              n = G__10355;
              continue;
            } else {
              throw new Error("Index out of bounds");
            }
          }
        }
      }
      break;
    }
  };
  var linear_traversal_nth__3 = function(coll, n, not_found) {
    while (true) {
      if (coll == null) {
        return not_found;
      } else {
        if (n === 0) {
          if (cljs.core.seq(coll)) {
            return cljs.core.first(coll);
          } else {
            return not_found;
          }
        } else {
          if (cljs.core.indexed_QMARK_(coll)) {
            return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
          } else {
            if (cljs.core.seq(coll)) {
              var G__10356 = cljs.core.next(coll);
              var G__10357 = n - 1;
              var G__10358 = not_found;
              coll = G__10356;
              n = G__10357;
              not_found = G__10358;
              continue;
            } else {
              return not_found;
            }
          }
        }
      }
      break;
    }
  };
  linear_traversal_nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return linear_traversal_nth__2.call(this, coll, n);
      case 3:
        return linear_traversal_nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$2 = linear_traversal_nth__2;
  linear_traversal_nth.cljs$core$IFn$_invoke$arity$3 = linear_traversal_nth__3;
  return linear_traversal_nth;
}();
cljs.core.nth = function() {
  var nth = null;
  var nth__2 = function(coll, n) {
    if (!(typeof n === "number")) {
      throw new Error("index argument to nth must be a number");
    } else {
      if (coll == null) {
        return coll;
      } else {
        if (function() {
          var G__10363 = coll;
          if (G__10363) {
            var bit__4599__auto__ = G__10363.cljs$lang$protocol_mask$partition0$ & 16;
            if (bit__4599__auto__ || G__10363.cljs$core$IIndexed$) {
              return true;
            } else {
              return false;
            }
          } else {
            return false;
          }
        }()) {
          return coll.cljs$core$IIndexed$_nth$arity$2(null, n);
        } else {
          if (coll instanceof Array) {
            if (n < coll.length) {
              return coll[n];
            } else {
              return null;
            }
          } else {
            if (typeof coll === "string") {
              if (n < coll.length) {
                return coll[n];
              } else {
                return null;
              }
            } else {
              if (cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, coll)) {
                return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
              } else {
                if (function() {
                  var G__10364 = coll;
                  if (G__10364) {
                    var bit__4606__auto__ = G__10364.cljs$lang$protocol_mask$partition0$ & 64;
                    if (bit__4606__auto__ || G__10364.cljs$core$ISeq$) {
                      return true;
                    } else {
                      if (!G__10364.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__10364);
                      } else {
                        return false;
                      }
                    }
                  } else {
                    return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__10364);
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$2(coll, n);
                } else {
                  throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join(""));
                }
              }
            }
          }
        }
      }
    }
  };
  var nth__3 = function(coll, n, not_found) {
    if (!(typeof n === "number")) {
      throw new Error("index argument to nth must be a number.");
    } else {
      if (coll == null) {
        return not_found;
      } else {
        if (function() {
          var G__10365 = coll;
          if (G__10365) {
            var bit__4599__auto__ = G__10365.cljs$lang$protocol_mask$partition0$ & 16;
            if (bit__4599__auto__ || G__10365.cljs$core$IIndexed$) {
              return true;
            } else {
              return false;
            }
          } else {
            return false;
          }
        }()) {
          return coll.cljs$core$IIndexed$_nth$arity$3(null, n, not_found);
        } else {
          if (coll instanceof Array) {
            if (n < coll.length) {
              return coll[n];
            } else {
              return not_found;
            }
          } else {
            if (typeof coll === "string") {
              if (n < coll.length) {
                return coll[n];
              } else {
                return not_found;
              }
            } else {
              if (cljs.core.native_satisfies_QMARK_(cljs.core.IIndexed, coll)) {
                return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll, n);
              } else {
                if (function() {
                  var G__10366 = coll;
                  if (G__10366) {
                    var bit__4606__auto__ = G__10366.cljs$lang$protocol_mask$partition0$ & 64;
                    if (bit__4606__auto__ || G__10366.cljs$core$ISeq$) {
                      return true;
                    } else {
                      if (!G__10366.cljs$lang$protocol_mask$partition0$) {
                        return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__10366);
                      } else {
                        return false;
                      }
                    }
                  } else {
                    return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__10366);
                  }
                }()) {
                  return cljs.core.linear_traversal_nth.cljs$core$IFn$_invoke$arity$3(coll, n, not_found);
                } else {
                  throw new Error([cljs.core.str("nth not supported on this type "), cljs.core.str(cljs.core.type__GT_str(cljs.core.type(coll)))].join(""));
                }
              }
            }
          }
        }
      }
    }
  };
  nth = function(coll, n, not_found) {
    switch(arguments.length) {
      case 2:
        return nth__2.call(this, coll, n);
      case 3:
        return nth__3.call(this, coll, n, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  nth.cljs$core$IFn$_invoke$arity$2 = nth__2;
  nth.cljs$core$IFn$_invoke$arity$3 = nth__3;
  return nth;
}();
cljs.core.nthrest = function nthrest(coll, n) {
  var n__$1 = n;
  var xs = coll;
  while (true) {
    if (n__$1 > 0 && cljs.core.seq(xs)) {
      var G__10367 = n__$1 - 1;
      var G__10368 = cljs.core.rest(xs);
      n__$1 = G__10367;
      xs = G__10368;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.get = function() {
  var get = null;
  var get__2 = function(o, k) {
    if (o == null) {
      return null;
    } else {
      if (function() {
        var G__10371 = o;
        if (G__10371) {
          var bit__4599__auto__ = G__10371.cljs$lang$protocol_mask$partition0$ & 256;
          if (bit__4599__auto__ || G__10371.cljs$core$ILookup$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return o.cljs$core$ILookup$_lookup$arity$2(null, k);
      } else {
        if (o instanceof Array) {
          if (k < o.length) {
            return o[k];
          } else {
            return null;
          }
        } else {
          if (typeof o === "string") {
            if (k < o.length) {
              return o[k];
            } else {
              return null;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, o)) {
              return cljs.core._lookup.cljs$core$IFn$_invoke$arity$2(o, k);
            } else {
              return null;
            }
          }
        }
      }
    }
  };
  var get__3 = function(o, k, not_found) {
    if (!(o == null)) {
      if (function() {
        var G__10372 = o;
        if (G__10372) {
          var bit__4599__auto__ = G__10372.cljs$lang$protocol_mask$partition0$ & 256;
          if (bit__4599__auto__ || G__10372.cljs$core$ILookup$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return o.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
      } else {
        if (o instanceof Array) {
          if (k < o.length) {
            return o[k];
          } else {
            return not_found;
          }
        } else {
          if (typeof o === "string") {
            if (k < o.length) {
              return o[k];
            } else {
              return not_found;
            }
          } else {
            if (cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, o)) {
              return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(o, k, not_found);
            } else {
              return not_found;
            }
          }
        }
      }
    } else {
      return not_found;
    }
  };
  get = function(o, k, not_found) {
    switch(arguments.length) {
      case 2:
        return get__2.call(this, o, k);
      case 3:
        return get__3.call(this, o, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get.cljs$core$IFn$_invoke$arity$2 = get__2;
  get.cljs$core$IFn$_invoke$arity$3 = get__3;
  return get;
}();
cljs.core.assoc = function() {
  var assoc = null;
  var assoc__3 = function(coll, k, v) {
    if (!(coll == null)) {
      return cljs.core._assoc(coll, k, v);
    } else {
      return cljs.core.PersistentHashMap.fromArrays([k], [v]);
    }
  };
  var assoc__4 = function() {
    var G__10376__delegate = function(coll, k, v, kvs) {
      while (true) {
        var ret = assoc.cljs$core$IFn$_invoke$arity$3(coll, k, v);
        if (cljs.core.truth_(kvs)) {
          var G__10377 = ret;
          var G__10378 = cljs.core.first(kvs);
          var G__10379 = cljs.core.second(kvs);
          var G__10380 = cljs.core.nnext(kvs);
          coll = G__10377;
          k = G__10378;
          v = G__10379;
          kvs = G__10380;
          continue;
        } else {
          return ret;
        }
        break;
      }
    };
    var G__10376 = function(coll, k, v, var_args) {
      var kvs = null;
      if (arguments.length > 3) {
        var G__10381__i = 0, G__10381__a = new Array(arguments.length - 3);
        while (G__10381__i < G__10381__a.length) {
          G__10381__a[G__10381__i] = arguments[G__10381__i + 3];
          ++G__10381__i;
        }
        kvs = new cljs.core.IndexedSeq(G__10381__a, 0);
      }
      return G__10376__delegate.call(this, coll, k, v, kvs);
    };
    G__10376.cljs$lang$maxFixedArity = 3;
    G__10376.cljs$lang$applyTo = function(arglist__10382) {
      var coll = cljs.core.first(arglist__10382);
      arglist__10382 = cljs.core.next(arglist__10382);
      var k = cljs.core.first(arglist__10382);
      arglist__10382 = cljs.core.next(arglist__10382);
      var v = cljs.core.first(arglist__10382);
      var kvs = cljs.core.rest(arglist__10382);
      return G__10376__delegate(coll, k, v, kvs);
    };
    G__10376.cljs$core$IFn$_invoke$arity$variadic = G__10376__delegate;
    return G__10376;
  }();
  assoc = function(coll, k, v, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc__3.call(this, coll, k, v);
      default:
        var G__10383 = null;
        if (arguments.length > 3) {
          var G__10384__i = 0, G__10384__a = new Array(arguments.length - 3);
          while (G__10384__i < G__10384__a.length) {
            G__10384__a[G__10384__i] = arguments[G__10384__i + 3];
            ++G__10384__i;
          }
          G__10383 = new cljs.core.IndexedSeq(G__10384__a, 0);
        }
        return assoc__4.cljs$core$IFn$_invoke$arity$variadic(coll, k, v, G__10383);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  assoc.cljs$lang$maxFixedArity = 3;
  assoc.cljs$lang$applyTo = assoc__4.cljs$lang$applyTo;
  assoc.cljs$core$IFn$_invoke$arity$3 = assoc__3;
  assoc.cljs$core$IFn$_invoke$arity$variadic = assoc__4.cljs$core$IFn$_invoke$arity$variadic;
  return assoc;
}();
cljs.core.dissoc = function() {
  var dissoc = null;
  var dissoc__1 = function(coll) {
    return coll;
  };
  var dissoc__2 = function(coll, k) {
    if (coll == null) {
      return null;
    } else {
      return cljs.core._dissoc(coll, k);
    }
  };
  var dissoc__3 = function() {
    var G__10387__delegate = function(coll, k, ks) {
      while (true) {
        if (coll == null) {
          return null;
        } else {
          var ret = dissoc.cljs$core$IFn$_invoke$arity$2(coll, k);
          if (cljs.core.truth_(ks)) {
            var G__10388 = ret;
            var G__10389 = cljs.core.first(ks);
            var G__10390 = cljs.core.next(ks);
            coll = G__10388;
            k = G__10389;
            ks = G__10390;
            continue;
          } else {
            return ret;
          }
        }
        break;
      }
    };
    var G__10387 = function(coll, k, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        var G__10391__i = 0, G__10391__a = new Array(arguments.length - 2);
        while (G__10391__i < G__10391__a.length) {
          G__10391__a[G__10391__i] = arguments[G__10391__i + 2];
          ++G__10391__i;
        }
        ks = new cljs.core.IndexedSeq(G__10391__a, 0);
      }
      return G__10387__delegate.call(this, coll, k, ks);
    };
    G__10387.cljs$lang$maxFixedArity = 2;
    G__10387.cljs$lang$applyTo = function(arglist__10392) {
      var coll = cljs.core.first(arglist__10392);
      arglist__10392 = cljs.core.next(arglist__10392);
      var k = cljs.core.first(arglist__10392);
      var ks = cljs.core.rest(arglist__10392);
      return G__10387__delegate(coll, k, ks);
    };
    G__10387.cljs$core$IFn$_invoke$arity$variadic = G__10387__delegate;
    return G__10387;
  }();
  dissoc = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return dissoc__1.call(this, coll);
      case 2:
        return dissoc__2.call(this, coll, k);
      default:
        var G__10393 = null;
        if (arguments.length > 2) {
          var G__10394__i = 0, G__10394__a = new Array(arguments.length - 2);
          while (G__10394__i < G__10394__a.length) {
            G__10394__a[G__10394__i] = arguments[G__10394__i + 2];
            ++G__10394__i;
          }
          G__10393 = new cljs.core.IndexedSeq(G__10394__a, 0);
        }
        return dissoc__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, G__10393);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dissoc.cljs$lang$maxFixedArity = 2;
  dissoc.cljs$lang$applyTo = dissoc__3.cljs$lang$applyTo;
  dissoc.cljs$core$IFn$_invoke$arity$1 = dissoc__1;
  dissoc.cljs$core$IFn$_invoke$arity$2 = dissoc__2;
  dissoc.cljs$core$IFn$_invoke$arity$variadic = dissoc__3.cljs$core$IFn$_invoke$arity$variadic;
  return dissoc;
}();
cljs.core.fn_QMARK_ = function fn_QMARK_(f) {
  var or__3925__auto__ = function() {
    var G__10399 = f;
    return goog.isFunction(G__10399);
  }();
  if (cljs.core.truth_(or__3925__auto__)) {
    return or__3925__auto__;
  } else {
    var G__10400 = f;
    if (G__10400) {
      var bit__4606__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3925__auto____$1 = bit__4606__auto__;
        if (cljs.core.truth_(or__3925__auto____$1)) {
          return or__3925__auto____$1;
        } else {
          return G__10400.cljs$core$Fn$;
        }
      }())) {
        return true;
      } else {
        if (!G__10400.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.Fn, G__10400);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.Fn, G__10400);
    }
  }
};
cljs.core.MetaFn = function(afn, meta) {
  this.afn = afn;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 393217;
};
cljs.core.MetaFn.prototype.call = function() {
  var G__10866 = null;
  var G__10866__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    return self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null);
  };
  var G__10866__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__10402 = a;
    return self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__10402) : self__.afn.call(null, G__10402);
  };
  var G__10866__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__10403 = a;
    var G__10404 = b;
    return self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__10403, G__10404) : self__.afn.call(null, G__10403, G__10404);
  };
  var G__10866__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__10405 = a;
    var G__10406 = b;
    var G__10407 = c;
    return self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__10405, G__10406, G__10407) : self__.afn.call(null, G__10405, G__10406, G__10407);
  };
  var G__10866__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__10408 = a;
    var G__10409 = b;
    var G__10410 = c;
    var G__10411 = d;
    return self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__10408, G__10409, G__10410, G__10411) : self__.afn.call(null, G__10408, G__10409, G__10410, G__10411);
  };
  var G__10866__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__10412 = a;
    var G__10413 = b;
    var G__10414 = c;
    var G__10415 = d;
    var G__10416 = e;
    return self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__10412, G__10413, G__10414, G__10415, G__10416) : self__.afn.call(null, G__10412, G__10413, G__10414, G__10415, G__10416);
  };
  var G__10866__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__10417 = a;
    var G__10418 = b;
    var G__10419 = c;
    var G__10420 = d;
    var G__10421 = e;
    var G__10422 = f;
    return self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__10417, G__10418, G__10419, G__10420, G__10421, G__10422) : self__.afn.call(null, G__10417, G__10418, G__10419, G__10420, G__10421, G__10422);
  };
  var G__10866__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__10423 = a;
    var G__10424 = b;
    var G__10425 = c;
    var G__10426 = d;
    var G__10427 = e;
    var G__10428 = f;
    var G__10429 = g;
    return self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__10423, G__10424, G__10425, G__10426, G__10427, G__10428, G__10429) : self__.afn.call(null, G__10423, G__10424, G__10425, G__10426, G__10427, G__10428, G__10429);
  };
  var G__10866__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__10430 = a;
    var G__10431 = b;
    var G__10432 = c;
    var G__10433 = d;
    var G__10434 = e;
    var G__10435 = f;
    var G__10436 = g;
    var G__10437 = h;
    return self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__10430, G__10431, G__10432, G__10433, G__10434, G__10435, G__10436, G__10437) : self__.afn.call(null, G__10430, G__10431, G__10432, G__10433, G__10434, G__10435, G__10436, G__10437);
  };
  var G__10866__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__10438 = a;
    var G__10439 = b;
    var G__10440 = c;
    var G__10441 = d;
    var G__10442 = e;
    var G__10443 = f;
    var G__10444 = g;
    var G__10445 = h;
    var G__10446 = i;
    return self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__10438, G__10439, G__10440, G__10441, G__10442, G__10443, G__10444, G__10445, G__10446) : self__.afn.call(null, G__10438, G__10439, G__10440, G__10441, G__10442, G__10443, G__10444, G__10445, G__10446);
  };
  var G__10866__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__10447 = a;
    var G__10448 = b;
    var G__10449 = c;
    var G__10450 = d;
    var G__10451 = e;
    var G__10452 = f;
    var G__10453 = g;
    var G__10454 = h;
    var G__10455 = i;
    var G__10456 = j;
    return self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__10447, G__10448, G__10449, G__10450, G__10451, G__10452, G__10453, G__10454, G__10455, G__10456) : self__.afn.call(null, G__10447, G__10448, G__10449, G__10450, G__10451, G__10452, G__10453, G__10454, G__10455, G__10456);
  };
  var G__10866__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__10457 = a;
    var G__10458 = b;
    var G__10459 = c;
    var G__10460 = d;
    var G__10461 = e;
    var G__10462 = f;
    var G__10463 = g;
    var G__10464 = h;
    var G__10465 = i;
    var G__10466 = j;
    var G__10467 = k;
    return self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__10457, G__10458, G__10459, G__10460, G__10461, G__10462, G__10463, G__10464, G__10465, G__10466, G__10467) : self__.afn.call(null, G__10457, G__10458, G__10459, G__10460, G__10461, G__10462, G__10463, G__10464, G__10465, G__10466, G__10467);
  };
  var G__10866__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__10468 = a;
    var G__10469 = b;
    var G__10470 = c;
    var G__10471 = d;
    var G__10472 = e;
    var G__10473 = f;
    var G__10474 = g;
    var G__10475 = h;
    var G__10476 = i;
    var G__10477 = j;
    var G__10478 = k;
    var G__10479 = l;
    return self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__10468, G__10469, G__10470, G__10471, G__10472, G__10473, G__10474, G__10475, G__10476, G__10477, G__10478, G__10479) : self__.afn.call(null, G__10468, G__10469, G__10470, G__10471, G__10472, G__10473, G__10474, G__10475, G__10476, G__10477, G__10478, G__10479);
  };
  var G__10866__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__10480 = a;
    var G__10481 = b;
    var G__10482 = c;
    var G__10483 = d;
    var G__10484 = e;
    var G__10485 = f;
    var G__10486 = g;
    var G__10487 = h;
    var G__10488 = i;
    var G__10489 = j;
    var G__10490 = k;
    var G__10491 = l;
    var G__10492 = m;
    return self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__10480, G__10481, G__10482, G__10483, G__10484, G__10485, G__10486, G__10487, G__10488, G__10489, G__10490, G__10491, G__10492) : self__.afn.call(null, G__10480, G__10481, G__10482, G__10483, G__10484, G__10485, G__10486, G__10487, G__10488, G__10489, G__10490, G__10491, G__10492);
  };
  var G__10866__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__10493 = a;
    var G__10494 = b;
    var G__10495 = c;
    var G__10496 = d;
    var G__10497 = e;
    var G__10498 = f;
    var G__10499 = g;
    var G__10500 = h;
    var G__10501 = i;
    var G__10502 = j;
    var G__10503 = k;
    var G__10504 = l;
    var G__10505 = m;
    var G__10506 = n;
    return self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__10493, G__10494, G__10495, G__10496, G__10497, G__10498, G__10499, G__10500, G__10501, G__10502, G__10503, G__10504, G__10505, G__10506) : self__.afn.call(null, G__10493, G__10494, G__10495, G__10496, G__10497, G__10498, G__10499, G__10500, G__10501, G__10502, G__10503, G__10504, G__10505, G__10506);
  };
  var G__10866__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__10507 = a;
    var G__10508 = b;
    var G__10509 = c;
    var G__10510 = d;
    var G__10511 = e;
    var G__10512 = f;
    var G__10513 = g;
    var G__10514 = h;
    var G__10515 = i;
    var G__10516 = j;
    var G__10517 = k;
    var G__10518 = l;
    var G__10519 = m;
    var G__10520 = n;
    var G__10521 = o;
    return self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__10507, G__10508, G__10509, G__10510, G__10511, G__10512, G__10513, G__10514, G__10515, G__10516, G__10517, G__10518, G__10519, G__10520, G__10521) : self__.afn.call(null, G__10507, G__10508, G__10509, G__10510, G__10511, G__10512, G__10513, G__10514, G__10515, G__10516, G__10517, G__10518, G__10519, G__10520, G__10521);
  };
  var G__10866__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__10522 = a;
    var G__10523 = b;
    var G__10524 = c;
    var G__10525 = d;
    var G__10526 = e;
    var G__10527 = f;
    var G__10528 = g;
    var G__10529 = h;
    var G__10530 = i;
    var G__10531 = j;
    var G__10532 = k;
    var G__10533 = l;
    var G__10534 = m;
    var G__10535 = n;
    var G__10536 = o;
    var G__10537 = p;
    return self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__10522, G__10523, G__10524, G__10525, G__10526, G__10527, G__10528, G__10529, G__10530, G__10531, G__10532, G__10533, G__10534, G__10535, G__10536, G__10537) : self__.afn.call(null, G__10522, G__10523, G__10524, G__10525, G__10526, G__10527, G__10528, G__10529, G__10530, G__10531, G__10532, G__10533, G__10534, G__10535, G__10536, G__10537);
  };
  var G__10866__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__10538 = a;
    var G__10539 = b;
    var G__10540 = c;
    var G__10541 = d;
    var G__10542 = e;
    var G__10543 = f;
    var G__10544 = g;
    var G__10545 = h;
    var G__10546 = i;
    var G__10547 = j;
    var G__10548 = k;
    var G__10549 = l;
    var G__10550 = m;
    var G__10551 = n;
    var G__10552 = o;
    var G__10553 = p;
    var G__10554 = q;
    return self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__10538, G__10539, G__10540, G__10541, G__10542, G__10543, G__10544, G__10545, G__10546, G__10547, G__10548, G__10549, G__10550, G__10551, G__10552, G__10553, G__10554) : self__.afn.call(null, G__10538, G__10539, G__10540, G__10541, G__10542, G__10543, G__10544, G__10545, G__10546, G__10547, G__10548, G__10549, G__10550, G__10551, G__10552, G__10553, G__10554);
  };
  var G__10866__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__10555 = a;
    var G__10556 = b;
    var G__10557 = c;
    var G__10558 = d;
    var G__10559 = e;
    var G__10560 = f;
    var G__10561 = g;
    var G__10562 = h;
    var G__10563 = i;
    var G__10564 = j;
    var G__10565 = k;
    var G__10566 = l;
    var G__10567 = m;
    var G__10568 = n;
    var G__10569 = o;
    var G__10570 = p;
    var G__10571 = q;
    var G__10572 = r;
    return self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__10555, G__10556, G__10557, G__10558, G__10559, G__10560, G__10561, G__10562, G__10563, G__10564, G__10565, G__10566, G__10567, G__10568, G__10569, G__10570, G__10571, G__10572) : self__.afn.call(null, G__10555, G__10556, G__10557, G__10558, G__10559, G__10560, G__10561, G__10562, G__10563, G__10564, G__10565, G__10566, G__10567, G__10568, G__10569, G__10570, G__10571, G__10572);
  };
  var G__10866__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__10573 = a;
    var G__10574 = b;
    var G__10575 = c;
    var G__10576 = d;
    var G__10577 = e;
    var G__10578 = f;
    var G__10579 = g;
    var G__10580 = h;
    var G__10581 = i;
    var G__10582 = j;
    var G__10583 = k;
    var G__10584 = l;
    var G__10585 = m;
    var G__10586 = n;
    var G__10587 = o;
    var G__10588 = p;
    var G__10589 = q;
    var G__10590 = r;
    var G__10591 = s;
    return self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__10573, G__10574, G__10575, G__10576, G__10577, G__10578, G__10579, G__10580, G__10581, G__10582, G__10583, G__10584, G__10585, G__10586, G__10587, G__10588, G__10589, G__10590, G__10591) : self__.afn.call(null, G__10573, G__10574, G__10575, G__10576, G__10577, G__10578, G__10579, G__10580, G__10581, G__10582, G__10583, G__10584, G__10585, G__10586, G__10587, G__10588, G__10589, G__10590, G__10591);
  };
  var G__10866__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__10592 = a;
    var G__10593 = b;
    var G__10594 = c;
    var G__10595 = d;
    var G__10596 = e;
    var G__10597 = f;
    var G__10598 = g;
    var G__10599 = h;
    var G__10600 = i;
    var G__10601 = j;
    var G__10602 = k;
    var G__10603 = l;
    var G__10604 = m;
    var G__10605 = n;
    var G__10606 = o;
    var G__10607 = p;
    var G__10608 = q;
    var G__10609 = r;
    var G__10610 = s;
    var G__10611 = t;
    return self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__10592, G__10593, G__10594, G__10595, G__10596, G__10597, G__10598, G__10599, G__10600, G__10601, G__10602, G__10603, G__10604, G__10605, G__10606, G__10607, G__10608, G__10609, G__10610, G__10611) : self__.afn.call(null, G__10592, G__10593, G__10594, G__10595, G__10596, G__10597, G__10598, G__10599, G__10600, G__10601, G__10602, G__10603, G__10604, G__10605, G__10606, G__10607, G__10608, G__10609, 
    G__10610, G__10611);
  };
  var G__10866__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var _ = self____$1;
    var G__10612 = self__.afn;
    var G__10613 = a;
    var G__10614 = b;
    var G__10615 = c;
    var G__10616 = d;
    var G__10617 = e;
    var G__10618 = f;
    var G__10619 = g;
    var G__10620 = h;
    var G__10621 = i;
    var G__10622 = j;
    var G__10623 = k;
    var G__10624 = l;
    var G__10625 = m;
    var G__10626 = n;
    var G__10627 = o;
    var G__10628 = p;
    var G__10629 = q;
    var G__10630 = r;
    var G__10631 = s;
    var G__10632 = t;
    var G__10633 = rest;
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__10612, G__10613, G__10614, G__10615, G__10616, G__10617, G__10618, G__10619, G__10620, G__10621, G__10622, G__10623, G__10624, G__10625, G__10626, G__10627, G__10628, G__10629, G__10630, G__10631, G__10632, G__10633) : cljs.core.apply.call(null, G__10612, G__10613, G__10614, G__10615, G__10616, G__10617, G__10618, G__10619, G__10620, G__10621, G__10622, G__10623, G__10624, G__10625, G__10626, 
    G__10627, G__10628, G__10629, G__10630, G__10631, G__10632, G__10633);
  };
  G__10866 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__10866__1.call(this, self__);
      case 2:
        return G__10866__2.call(this, self__, a);
      case 3:
        return G__10866__3.call(this, self__, a, b);
      case 4:
        return G__10866__4.call(this, self__, a, b, c);
      case 5:
        return G__10866__5.call(this, self__, a, b, c, d);
      case 6:
        return G__10866__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__10866__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__10866__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__10866__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__10866__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__10866__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__10866__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__10866__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__10866__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__10866__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__10866__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__10866__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__10866__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__10866__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__10866__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__10866__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__10866__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__10866.cljs$core$IFn$_invoke$arity$1 = G__10866__1;
  G__10866.cljs$core$IFn$_invoke$arity$2 = G__10866__2;
  G__10866.cljs$core$IFn$_invoke$arity$3 = G__10866__3;
  G__10866.cljs$core$IFn$_invoke$arity$4 = G__10866__4;
  G__10866.cljs$core$IFn$_invoke$arity$5 = G__10866__5;
  G__10866.cljs$core$IFn$_invoke$arity$6 = G__10866__6;
  G__10866.cljs$core$IFn$_invoke$arity$7 = G__10866__7;
  G__10866.cljs$core$IFn$_invoke$arity$8 = G__10866__8;
  G__10866.cljs$core$IFn$_invoke$arity$9 = G__10866__9;
  G__10866.cljs$core$IFn$_invoke$arity$10 = G__10866__10;
  G__10866.cljs$core$IFn$_invoke$arity$11 = G__10866__11;
  G__10866.cljs$core$IFn$_invoke$arity$12 = G__10866__12;
  G__10866.cljs$core$IFn$_invoke$arity$13 = G__10866__13;
  G__10866.cljs$core$IFn$_invoke$arity$14 = G__10866__14;
  G__10866.cljs$core$IFn$_invoke$arity$15 = G__10866__15;
  G__10866.cljs$core$IFn$_invoke$arity$16 = G__10866__16;
  G__10866.cljs$core$IFn$_invoke$arity$17 = G__10866__17;
  G__10866.cljs$core$IFn$_invoke$arity$18 = G__10866__18;
  G__10866.cljs$core$IFn$_invoke$arity$19 = G__10866__19;
  G__10866.cljs$core$IFn$_invoke$arity$20 = G__10866__20;
  G__10866.cljs$core$IFn$_invoke$arity$21 = G__10866__21;
  G__10866.cljs$core$IFn$_invoke$arity$22 = G__10866__22;
  return G__10866;
}();
cljs.core.MetaFn.prototype.apply = function(self__, args10401) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args10401)));
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var _ = this;
  return self__.afn.cljs$core$IFn$_invoke$arity$0 ? self__.afn.cljs$core$IFn$_invoke$arity$0() : self__.afn.call(null);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var _ = this;
  var G__10634 = a;
  return self__.afn.cljs$core$IFn$_invoke$arity$1 ? self__.afn.cljs$core$IFn$_invoke$arity$1(G__10634) : self__.afn.call(null, G__10634);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var _ = this;
  var G__10635 = a;
  var G__10636 = b;
  return self__.afn.cljs$core$IFn$_invoke$arity$2 ? self__.afn.cljs$core$IFn$_invoke$arity$2(G__10635, G__10636) : self__.afn.call(null, G__10635, G__10636);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var _ = this;
  var G__10637 = a;
  var G__10638 = b;
  var G__10639 = c;
  return self__.afn.cljs$core$IFn$_invoke$arity$3 ? self__.afn.cljs$core$IFn$_invoke$arity$3(G__10637, G__10638, G__10639) : self__.afn.call(null, G__10637, G__10638, G__10639);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var _ = this;
  var G__10640 = a;
  var G__10641 = b;
  var G__10642 = c;
  var G__10643 = d;
  return self__.afn.cljs$core$IFn$_invoke$arity$4 ? self__.afn.cljs$core$IFn$_invoke$arity$4(G__10640, G__10641, G__10642, G__10643) : self__.afn.call(null, G__10640, G__10641, G__10642, G__10643);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var _ = this;
  var G__10644 = a;
  var G__10645 = b;
  var G__10646 = c;
  var G__10647 = d;
  var G__10648 = e;
  return self__.afn.cljs$core$IFn$_invoke$arity$5 ? self__.afn.cljs$core$IFn$_invoke$arity$5(G__10644, G__10645, G__10646, G__10647, G__10648) : self__.afn.call(null, G__10644, G__10645, G__10646, G__10647, G__10648);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var _ = this;
  var G__10649 = a;
  var G__10650 = b;
  var G__10651 = c;
  var G__10652 = d;
  var G__10653 = e;
  var G__10654 = f;
  return self__.afn.cljs$core$IFn$_invoke$arity$6 ? self__.afn.cljs$core$IFn$_invoke$arity$6(G__10649, G__10650, G__10651, G__10652, G__10653, G__10654) : self__.afn.call(null, G__10649, G__10650, G__10651, G__10652, G__10653, G__10654);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var _ = this;
  var G__10655 = a;
  var G__10656 = b;
  var G__10657 = c;
  var G__10658 = d;
  var G__10659 = e;
  var G__10660 = f;
  var G__10661 = g;
  return self__.afn.cljs$core$IFn$_invoke$arity$7 ? self__.afn.cljs$core$IFn$_invoke$arity$7(G__10655, G__10656, G__10657, G__10658, G__10659, G__10660, G__10661) : self__.afn.call(null, G__10655, G__10656, G__10657, G__10658, G__10659, G__10660, G__10661);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var _ = this;
  var G__10662 = a;
  var G__10663 = b;
  var G__10664 = c;
  var G__10665 = d;
  var G__10666 = e;
  var G__10667 = f;
  var G__10668 = g;
  var G__10669 = h;
  return self__.afn.cljs$core$IFn$_invoke$arity$8 ? self__.afn.cljs$core$IFn$_invoke$arity$8(G__10662, G__10663, G__10664, G__10665, G__10666, G__10667, G__10668, G__10669) : self__.afn.call(null, G__10662, G__10663, G__10664, G__10665, G__10666, G__10667, G__10668, G__10669);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var _ = this;
  var G__10670 = a;
  var G__10671 = b;
  var G__10672 = c;
  var G__10673 = d;
  var G__10674 = e;
  var G__10675 = f;
  var G__10676 = g;
  var G__10677 = h;
  var G__10678 = i;
  return self__.afn.cljs$core$IFn$_invoke$arity$9 ? self__.afn.cljs$core$IFn$_invoke$arity$9(G__10670, G__10671, G__10672, G__10673, G__10674, G__10675, G__10676, G__10677, G__10678) : self__.afn.call(null, G__10670, G__10671, G__10672, G__10673, G__10674, G__10675, G__10676, G__10677, G__10678);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var _ = this;
  var G__10679 = a;
  var G__10680 = b;
  var G__10681 = c;
  var G__10682 = d;
  var G__10683 = e;
  var G__10684 = f;
  var G__10685 = g;
  var G__10686 = h;
  var G__10687 = i;
  var G__10688 = j;
  return self__.afn.cljs$core$IFn$_invoke$arity$10 ? self__.afn.cljs$core$IFn$_invoke$arity$10(G__10679, G__10680, G__10681, G__10682, G__10683, G__10684, G__10685, G__10686, G__10687, G__10688) : self__.afn.call(null, G__10679, G__10680, G__10681, G__10682, G__10683, G__10684, G__10685, G__10686, G__10687, G__10688);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var _ = this;
  var G__10689 = a;
  var G__10690 = b;
  var G__10691 = c;
  var G__10692 = d;
  var G__10693 = e;
  var G__10694 = f;
  var G__10695 = g;
  var G__10696 = h;
  var G__10697 = i;
  var G__10698 = j;
  var G__10699 = k;
  return self__.afn.cljs$core$IFn$_invoke$arity$11 ? self__.afn.cljs$core$IFn$_invoke$arity$11(G__10689, G__10690, G__10691, G__10692, G__10693, G__10694, G__10695, G__10696, G__10697, G__10698, G__10699) : self__.afn.call(null, G__10689, G__10690, G__10691, G__10692, G__10693, G__10694, G__10695, G__10696, G__10697, G__10698, G__10699);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var _ = this;
  var G__10700 = a;
  var G__10701 = b;
  var G__10702 = c;
  var G__10703 = d;
  var G__10704 = e;
  var G__10705 = f;
  var G__10706 = g;
  var G__10707 = h;
  var G__10708 = i;
  var G__10709 = j;
  var G__10710 = k;
  var G__10711 = l;
  return self__.afn.cljs$core$IFn$_invoke$arity$12 ? self__.afn.cljs$core$IFn$_invoke$arity$12(G__10700, G__10701, G__10702, G__10703, G__10704, G__10705, G__10706, G__10707, G__10708, G__10709, G__10710, G__10711) : self__.afn.call(null, G__10700, G__10701, G__10702, G__10703, G__10704, G__10705, G__10706, G__10707, G__10708, G__10709, G__10710, G__10711);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var _ = this;
  var G__10712 = a;
  var G__10713 = b;
  var G__10714 = c;
  var G__10715 = d;
  var G__10716 = e;
  var G__10717 = f;
  var G__10718 = g;
  var G__10719 = h;
  var G__10720 = i;
  var G__10721 = j;
  var G__10722 = k;
  var G__10723 = l;
  var G__10724 = m;
  return self__.afn.cljs$core$IFn$_invoke$arity$13 ? self__.afn.cljs$core$IFn$_invoke$arity$13(G__10712, G__10713, G__10714, G__10715, G__10716, G__10717, G__10718, G__10719, G__10720, G__10721, G__10722, G__10723, G__10724) : self__.afn.call(null, G__10712, G__10713, G__10714, G__10715, G__10716, G__10717, G__10718, G__10719, G__10720, G__10721, G__10722, G__10723, G__10724);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var _ = this;
  var G__10725 = a;
  var G__10726 = b;
  var G__10727 = c;
  var G__10728 = d;
  var G__10729 = e;
  var G__10730 = f;
  var G__10731 = g;
  var G__10732 = h;
  var G__10733 = i;
  var G__10734 = j;
  var G__10735 = k;
  var G__10736 = l;
  var G__10737 = m;
  var G__10738 = n;
  return self__.afn.cljs$core$IFn$_invoke$arity$14 ? self__.afn.cljs$core$IFn$_invoke$arity$14(G__10725, G__10726, G__10727, G__10728, G__10729, G__10730, G__10731, G__10732, G__10733, G__10734, G__10735, G__10736, G__10737, G__10738) : self__.afn.call(null, G__10725, G__10726, G__10727, G__10728, G__10729, G__10730, G__10731, G__10732, G__10733, G__10734, G__10735, G__10736, G__10737, G__10738);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var _ = this;
  var G__10739 = a;
  var G__10740 = b;
  var G__10741 = c;
  var G__10742 = d;
  var G__10743 = e;
  var G__10744 = f;
  var G__10745 = g;
  var G__10746 = h;
  var G__10747 = i;
  var G__10748 = j;
  var G__10749 = k;
  var G__10750 = l;
  var G__10751 = m;
  var G__10752 = n;
  var G__10753 = o;
  return self__.afn.cljs$core$IFn$_invoke$arity$15 ? self__.afn.cljs$core$IFn$_invoke$arity$15(G__10739, G__10740, G__10741, G__10742, G__10743, G__10744, G__10745, G__10746, G__10747, G__10748, G__10749, G__10750, G__10751, G__10752, G__10753) : self__.afn.call(null, G__10739, G__10740, G__10741, G__10742, G__10743, G__10744, G__10745, G__10746, G__10747, G__10748, G__10749, G__10750, G__10751, G__10752, G__10753);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var _ = this;
  var G__10754 = a;
  var G__10755 = b;
  var G__10756 = c;
  var G__10757 = d;
  var G__10758 = e;
  var G__10759 = f;
  var G__10760 = g;
  var G__10761 = h;
  var G__10762 = i;
  var G__10763 = j;
  var G__10764 = k;
  var G__10765 = l;
  var G__10766 = m;
  var G__10767 = n;
  var G__10768 = o;
  var G__10769 = p;
  return self__.afn.cljs$core$IFn$_invoke$arity$16 ? self__.afn.cljs$core$IFn$_invoke$arity$16(G__10754, G__10755, G__10756, G__10757, G__10758, G__10759, G__10760, G__10761, G__10762, G__10763, G__10764, G__10765, G__10766, G__10767, G__10768, G__10769) : self__.afn.call(null, G__10754, G__10755, G__10756, G__10757, G__10758, G__10759, G__10760, G__10761, G__10762, G__10763, G__10764, G__10765, G__10766, G__10767, G__10768, G__10769);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var _ = this;
  var G__10770 = a;
  var G__10771 = b;
  var G__10772 = c;
  var G__10773 = d;
  var G__10774 = e;
  var G__10775 = f;
  var G__10776 = g;
  var G__10777 = h;
  var G__10778 = i;
  var G__10779 = j;
  var G__10780 = k;
  var G__10781 = l;
  var G__10782 = m;
  var G__10783 = n;
  var G__10784 = o;
  var G__10785 = p;
  var G__10786 = q;
  return self__.afn.cljs$core$IFn$_invoke$arity$17 ? self__.afn.cljs$core$IFn$_invoke$arity$17(G__10770, G__10771, G__10772, G__10773, G__10774, G__10775, G__10776, G__10777, G__10778, G__10779, G__10780, G__10781, G__10782, G__10783, G__10784, G__10785, G__10786) : self__.afn.call(null, G__10770, G__10771, G__10772, G__10773, G__10774, G__10775, G__10776, G__10777, G__10778, G__10779, G__10780, G__10781, G__10782, G__10783, G__10784, G__10785, G__10786);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var _ = this;
  var G__10787 = a;
  var G__10788 = b;
  var G__10789 = c;
  var G__10790 = d;
  var G__10791 = e;
  var G__10792 = f;
  var G__10793 = g;
  var G__10794 = h;
  var G__10795 = i;
  var G__10796 = j;
  var G__10797 = k;
  var G__10798 = l;
  var G__10799 = m;
  var G__10800 = n;
  var G__10801 = o;
  var G__10802 = p;
  var G__10803 = q;
  var G__10804 = r;
  return self__.afn.cljs$core$IFn$_invoke$arity$18 ? self__.afn.cljs$core$IFn$_invoke$arity$18(G__10787, G__10788, G__10789, G__10790, G__10791, G__10792, G__10793, G__10794, G__10795, G__10796, G__10797, G__10798, G__10799, G__10800, G__10801, G__10802, G__10803, G__10804) : self__.afn.call(null, G__10787, G__10788, G__10789, G__10790, G__10791, G__10792, G__10793, G__10794, G__10795, G__10796, G__10797, G__10798, G__10799, G__10800, G__10801, G__10802, G__10803, G__10804);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var _ = this;
  var G__10805 = a;
  var G__10806 = b;
  var G__10807 = c;
  var G__10808 = d;
  var G__10809 = e;
  var G__10810 = f;
  var G__10811 = g;
  var G__10812 = h;
  var G__10813 = i;
  var G__10814 = j;
  var G__10815 = k;
  var G__10816 = l;
  var G__10817 = m;
  var G__10818 = n;
  var G__10819 = o;
  var G__10820 = p;
  var G__10821 = q;
  var G__10822 = r;
  var G__10823 = s;
  return self__.afn.cljs$core$IFn$_invoke$arity$19 ? self__.afn.cljs$core$IFn$_invoke$arity$19(G__10805, G__10806, G__10807, G__10808, G__10809, G__10810, G__10811, G__10812, G__10813, G__10814, G__10815, G__10816, G__10817, G__10818, G__10819, G__10820, G__10821, G__10822, G__10823) : self__.afn.call(null, G__10805, G__10806, G__10807, G__10808, G__10809, G__10810, G__10811, G__10812, G__10813, G__10814, G__10815, G__10816, G__10817, G__10818, G__10819, G__10820, G__10821, G__10822, G__10823);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var _ = this;
  var G__10824 = a;
  var G__10825 = b;
  var G__10826 = c;
  var G__10827 = d;
  var G__10828 = e;
  var G__10829 = f;
  var G__10830 = g;
  var G__10831 = h;
  var G__10832 = i;
  var G__10833 = j;
  var G__10834 = k;
  var G__10835 = l;
  var G__10836 = m;
  var G__10837 = n;
  var G__10838 = o;
  var G__10839 = p;
  var G__10840 = q;
  var G__10841 = r;
  var G__10842 = s;
  var G__10843 = t;
  return self__.afn.cljs$core$IFn$_invoke$arity$20 ? self__.afn.cljs$core$IFn$_invoke$arity$20(G__10824, G__10825, G__10826, G__10827, G__10828, G__10829, G__10830, G__10831, G__10832, G__10833, G__10834, G__10835, G__10836, G__10837, G__10838, G__10839, G__10840, G__10841, G__10842, G__10843) : self__.afn.call(null, G__10824, G__10825, G__10826, G__10827, G__10828, G__10829, G__10830, G__10831, G__10832, G__10833, G__10834, G__10835, G__10836, G__10837, G__10838, G__10839, G__10840, G__10841, G__10842, 
  G__10843);
};
cljs.core.MetaFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var _ = this;
  var G__10844 = self__.afn;
  var G__10845 = a;
  var G__10846 = b;
  var G__10847 = c;
  var G__10848 = d;
  var G__10849 = e;
  var G__10850 = f;
  var G__10851 = g;
  var G__10852 = h;
  var G__10853 = i;
  var G__10854 = j;
  var G__10855 = k;
  var G__10856 = l;
  var G__10857 = m;
  var G__10858 = n;
  var G__10859 = o;
  var G__10860 = p;
  var G__10861 = q;
  var G__10862 = r;
  var G__10863 = s;
  var G__10864 = t;
  var G__10865 = rest;
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$22 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$22(G__10844, G__10845, G__10846, G__10847, G__10848, G__10849, G__10850, G__10851, G__10852, G__10853, G__10854, G__10855, G__10856, G__10857, G__10858, G__10859, G__10860, G__10861, G__10862, G__10863, G__10864, G__10865) : cljs.core.apply.call(null, G__10844, G__10845, G__10846, G__10847, G__10848, G__10849, G__10850, G__10851, G__10852, G__10853, G__10854, G__10855, G__10856, G__10857, G__10858, 
  G__10859, G__10860, G__10861, G__10862, G__10863, G__10864, G__10865);
};
cljs.core.MetaFn.prototype.cljs$core$Fn$ = true;
cljs.core.MetaFn.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_, new_meta) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.MetaFn(self__.afn, new_meta);
};
cljs.core.MetaFn.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.MetaFn.cljs$lang$type = true;
cljs.core.MetaFn.cljs$lang$ctorStr = "cljs.core/MetaFn";
cljs.core.MetaFn.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/MetaFn");
};
cljs.core.__GT_MetaFn = function __GT_MetaFn(afn, meta) {
  return new cljs.core.MetaFn(afn, meta);
};
cljs.core.with_meta = function with_meta(o, meta) {
  if (cljs.core.fn_QMARK_(o) && !function() {
    var G__10870 = o;
    if (G__10870) {
      var bit__4606__auto__ = G__10870.cljs$lang$protocol_mask$partition0$ & 262144;
      if (bit__4606__auto__ || G__10870.cljs$core$IWithMeta$) {
        return true;
      } else {
        if (!G__10870.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta, G__10870);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IWithMeta, G__10870);
    }
  }()) {
    return new cljs.core.MetaFn(o, meta);
  } else {
    if (o == null) {
      return null;
    } else {
      return cljs.core._with_meta(o, meta);
    }
  }
};
cljs.core.meta = function meta(o) {
  if (function() {
    var and__3913__auto__ = !(o == null);
    if (and__3913__auto__) {
      var G__10874 = o;
      if (G__10874) {
        var bit__4606__auto__ = G__10874.cljs$lang$protocol_mask$partition0$ & 131072;
        if (bit__4606__auto__ || G__10874.cljs$core$IMeta$) {
          return true;
        } else {
          if (!G__10874.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, G__10874);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, G__10874);
      }
    } else {
      return and__3913__auto__;
    }
  }()) {
    return cljs.core._meta(o);
  } else {
    return null;
  }
};
cljs.core.peek = function peek(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._peek(coll);
  }
};
cljs.core.pop = function pop(coll) {
  if (coll == null) {
    return null;
  } else {
    return cljs.core._pop(coll);
  }
};
cljs.core.disj = function() {
  var disj = null;
  var disj__1 = function(coll) {
    return coll;
  };
  var disj__2 = function(coll, k) {
    if (coll == null) {
      return null;
    } else {
      return cljs.core._disjoin(coll, k);
    }
  };
  var disj__3 = function() {
    var G__10877__delegate = function(coll, k, ks) {
      while (true) {
        if (coll == null) {
          return null;
        } else {
          var ret = disj.cljs$core$IFn$_invoke$arity$2(coll, k);
          if (cljs.core.truth_(ks)) {
            var G__10878 = ret;
            var G__10879 = cljs.core.first(ks);
            var G__10880 = cljs.core.next(ks);
            coll = G__10878;
            k = G__10879;
            ks = G__10880;
            continue;
          } else {
            return ret;
          }
        }
        break;
      }
    };
    var G__10877 = function(coll, k, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        var G__10881__i = 0, G__10881__a = new Array(arguments.length - 2);
        while (G__10881__i < G__10881__a.length) {
          G__10881__a[G__10881__i] = arguments[G__10881__i + 2];
          ++G__10881__i;
        }
        ks = new cljs.core.IndexedSeq(G__10881__a, 0);
      }
      return G__10877__delegate.call(this, coll, k, ks);
    };
    G__10877.cljs$lang$maxFixedArity = 2;
    G__10877.cljs$lang$applyTo = function(arglist__10882) {
      var coll = cljs.core.first(arglist__10882);
      arglist__10882 = cljs.core.next(arglist__10882);
      var k = cljs.core.first(arglist__10882);
      var ks = cljs.core.rest(arglist__10882);
      return G__10877__delegate(coll, k, ks);
    };
    G__10877.cljs$core$IFn$_invoke$arity$variadic = G__10877__delegate;
    return G__10877;
  }();
  disj = function(coll, k, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 1:
        return disj__1.call(this, coll);
      case 2:
        return disj__2.call(this, coll, k);
      default:
        var G__10883 = null;
        if (arguments.length > 2) {
          var G__10884__i = 0, G__10884__a = new Array(arguments.length - 2);
          while (G__10884__i < G__10884__a.length) {
            G__10884__a[G__10884__i] = arguments[G__10884__i + 2];
            ++G__10884__i;
          }
          G__10883 = new cljs.core.IndexedSeq(G__10884__a, 0);
        }
        return disj__3.cljs$core$IFn$_invoke$arity$variadic(coll, k, G__10883);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  disj.cljs$lang$maxFixedArity = 2;
  disj.cljs$lang$applyTo = disj__3.cljs$lang$applyTo;
  disj.cljs$core$IFn$_invoke$arity$1 = disj__1;
  disj.cljs$core$IFn$_invoke$arity$2 = disj__2;
  disj.cljs$core$IFn$_invoke$arity$variadic = disj__3.cljs$core$IFn$_invoke$arity$variadic;
  return disj;
}();
cljs.core.empty_QMARK_ = function empty_QMARK_(coll) {
  return coll == null || cljs.core.not(cljs.core.seq(coll));
};
cljs.core.coll_QMARK_ = function coll_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__10886 = x;
    if (G__10886) {
      var bit__4606__auto__ = G__10886.cljs$lang$protocol_mask$partition0$ & 8;
      if (bit__4606__auto__ || G__10886.cljs$core$ICollection$) {
        return true;
      } else {
        if (!G__10886.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection, G__10886);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ICollection, G__10886);
    }
  }
};
cljs.core.set_QMARK_ = function set_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__10888 = x;
    if (G__10888) {
      var bit__4606__auto__ = G__10888.cljs$lang$protocol_mask$partition0$ & 4096;
      if (bit__4606__auto__ || G__10888.cljs$core$ISet$) {
        return true;
      } else {
        if (!G__10888.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ISet, G__10888);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ISet, G__10888);
    }
  }
};
cljs.core.associative_QMARK_ = function associative_QMARK_(x) {
  var G__10890 = x;
  if (G__10890) {
    var bit__4606__auto__ = G__10890.cljs$lang$protocol_mask$partition0$ & 512;
    if (bit__4606__auto__ || G__10890.cljs$core$IAssociative$) {
      return true;
    } else {
      if (!G__10890.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, G__10890);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IAssociative, G__10890);
  }
};
cljs.core.sequential_QMARK_ = function sequential_QMARK_(x) {
  var G__10892 = x;
  if (G__10892) {
    var bit__4606__auto__ = G__10892.cljs$lang$protocol_mask$partition0$ & 16777216;
    if (bit__4606__auto__ || G__10892.cljs$core$ISequential$) {
      return true;
    } else {
      if (!G__10892.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential, G__10892);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISequential, G__10892);
  }
};
cljs.core.sorted_QMARK_ = function sorted_QMARK_(x) {
  var G__10894 = x;
  if (G__10894) {
    var bit__4606__auto__ = G__10894.cljs$lang$protocol_mask$partition0$ & 268435456;
    if (bit__4606__auto__ || G__10894.cljs$core$ISorted$) {
      return true;
    } else {
      if (!G__10894.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted, G__10894);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISorted, G__10894);
  }
};
cljs.core.reduceable_QMARK_ = function reduceable_QMARK_(x) {
  var G__10896 = x;
  if (G__10896) {
    var bit__4606__auto__ = G__10896.cljs$lang$protocol_mask$partition0$ & 524288;
    if (bit__4606__auto__ || G__10896.cljs$core$IReduce$) {
      return true;
    } else {
      if (!G__10896.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, G__10896);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, G__10896);
  }
};
cljs.core.map_QMARK_ = function map_QMARK_(x) {
  if (x == null) {
    return false;
  } else {
    var G__10898 = x;
    if (G__10898) {
      var bit__4606__auto__ = G__10898.cljs$lang$protocol_mask$partition0$ & 1024;
      if (bit__4606__auto__ || G__10898.cljs$core$IMap$) {
        return true;
      } else {
        if (!G__10898.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IMap, G__10898);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IMap, G__10898);
    }
  }
};
cljs.core.vector_QMARK_ = function vector_QMARK_(x) {
  var G__10900 = x;
  if (G__10900) {
    var bit__4606__auto__ = G__10900.cljs$lang$protocol_mask$partition0$ & 16384;
    if (bit__4606__auto__ || G__10900.cljs$core$IVector$) {
      return true;
    } else {
      if (!G__10900.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IVector, G__10900);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IVector, G__10900);
  }
};
cljs.core.chunked_seq_QMARK_ = function chunked_seq_QMARK_(x) {
  var G__10902 = x;
  if (G__10902) {
    var bit__4599__auto__ = G__10902.cljs$lang$protocol_mask$partition1$ & 512;
    if (bit__4599__auto__ || G__10902.cljs$core$IChunkedSeq$) {
      return true;
    } else {
      return false;
    }
  } else {
    return false;
  }
};
cljs.core.js_obj = function() {
  var js_obj = null;
  var js_obj__0 = function() {
    var obj10908 = {};
    return obj10908;
  };
  var js_obj__1 = function() {
    var G__10911__delegate = function(keyvals) {
      var G__10909 = goog.object.create;
      var G__10910 = keyvals;
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$2 ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(G__10909, G__10910) : cljs.core.apply.call(null, G__10909, G__10910);
    };
    var G__10911 = function(var_args) {
      var keyvals = null;
      if (arguments.length > 0) {
        var G__10912__i = 0, G__10912__a = new Array(arguments.length - 0);
        while (G__10912__i < G__10912__a.length) {
          G__10912__a[G__10912__i] = arguments[G__10912__i + 0];
          ++G__10912__i;
        }
        keyvals = new cljs.core.IndexedSeq(G__10912__a, 0);
      }
      return G__10911__delegate.call(this, keyvals);
    };
    G__10911.cljs$lang$maxFixedArity = 0;
    G__10911.cljs$lang$applyTo = function(arglist__10913) {
      var keyvals = cljs.core.seq(arglist__10913);
      return G__10911__delegate(keyvals);
    };
    G__10911.cljs$core$IFn$_invoke$arity$variadic = G__10911__delegate;
    return G__10911;
  }();
  js_obj = function(var_args) {
    var keyvals = var_args;
    switch(arguments.length) {
      case 0:
        return js_obj__0.call(this);
      default:
        var G__10914 = null;
        if (arguments.length > 0) {
          var G__10915__i = 0, G__10915__a = new Array(arguments.length - 0);
          while (G__10915__i < G__10915__a.length) {
            G__10915__a[G__10915__i] = arguments[G__10915__i + 0];
            ++G__10915__i;
          }
          G__10914 = new cljs.core.IndexedSeq(G__10915__a, 0);
        }
        return js_obj__1.cljs$core$IFn$_invoke$arity$variadic(G__10914);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js_obj.cljs$lang$maxFixedArity = 0;
  js_obj.cljs$lang$applyTo = js_obj__1.cljs$lang$applyTo;
  js_obj.cljs$core$IFn$_invoke$arity$0 = js_obj__0;
  js_obj.cljs$core$IFn$_invoke$arity$variadic = js_obj__1.cljs$core$IFn$_invoke$arity$variadic;
  return js_obj;
}();
cljs.core.js_keys = function js_keys(obj) {
  var keys = [];
  var G__10918_10920 = obj;
  var G__10919_10921 = function(G__10918_10920, keys) {
    return function(val, key, obj__$1) {
      return keys.push(key);
    };
  }(G__10918_10920, keys);
  goog.object.forEach(G__10918_10920, G__10919_10921);
  return keys;
};
cljs.core.js_delete = function js_delete(obj, key) {
  return delete obj[key];
};
cljs.core.array_copy = function array_copy(from, i, to, j, len) {
  var i__$1 = i;
  var j__$1 = j;
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__10922 = i__$1 + 1;
      var G__10923 = j__$1 + 1;
      var G__10924 = len__$1 - 1;
      i__$1 = G__10922;
      j__$1 = G__10923;
      len__$1 = G__10924;
      continue;
    }
    break;
  }
};
cljs.core.array_copy_downward = function array_copy_downward(from, i, to, j, len) {
  var i__$1 = i + (len - 1);
  var j__$1 = j + (len - 1);
  var len__$1 = len;
  while (true) {
    if (len__$1 === 0) {
      return to;
    } else {
      to[j__$1] = from[i__$1];
      var G__10925 = i__$1 - 1;
      var G__10926 = j__$1 - 1;
      var G__10927 = len__$1 - 1;
      i__$1 = G__10925;
      j__$1 = G__10926;
      len__$1 = G__10927;
      continue;
    }
    break;
  }
};
cljs.core.lookup_sentinel = function() {
  var obj10929 = {};
  return obj10929;
}();
cljs.core.false_QMARK_ = function false_QMARK_(x) {
  return x === false;
};
cljs.core.true_QMARK_ = function true_QMARK_(x) {
  return x === true;
};
cljs.core.undefined_QMARK_ = function undefined_QMARK_(x) {
  return void 0 === x;
};
cljs.core.seq_QMARK_ = function seq_QMARK_(s) {
  if (s == null) {
    return false;
  } else {
    var G__10931 = s;
    if (G__10931) {
      var bit__4606__auto__ = G__10931.cljs$lang$protocol_mask$partition0$ & 64;
      if (bit__4606__auto__ || G__10931.cljs$core$ISeq$) {
        return true;
      } else {
        if (!G__10931.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__10931);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.ISeq, G__10931);
    }
  }
};
cljs.core.seqable_QMARK_ = function seqable_QMARK_(s) {
  var G__10933 = s;
  if (G__10933) {
    var bit__4606__auto__ = G__10933.cljs$lang$protocol_mask$partition0$ & 8388608;
    if (bit__4606__auto__ || G__10933.cljs$core$ISeqable$) {
      return true;
    } else {
      if (!G__10933.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, G__10933);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.ISeqable, G__10933);
  }
};
cljs.core.boolean$ = function boolean$(x) {
  if (cljs.core.truth_(x)) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ifn_QMARK_ = function ifn_QMARK_(f) {
  var or__3925__auto__ = cljs.core.fn_QMARK_(f);
  if (or__3925__auto__) {
    return or__3925__auto__;
  } else {
    var G__10937 = f;
    if (G__10937) {
      var bit__4606__auto__ = G__10937.cljs$lang$protocol_mask$partition0$ & 1;
      if (bit__4606__auto__ || G__10937.cljs$core$IFn$) {
        return true;
      } else {
        if (!G__10937.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IFn, G__10937);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IFn, G__10937);
    }
  }
};
cljs.core.integer_QMARK_ = function integer_QMARK_(n) {
  return typeof n === "number" && cljs.core.not(function() {
    var G__10950 = n;
    return isNaN(G__10950);
  }()) && !(n === Infinity) && function() {
    var G__10951 = n;
    return parseFloat(G__10951);
  }() === function() {
    var G__10952 = n;
    var G__10953 = 10;
    return parseInt(G__10952, G__10953);
  }();
};
cljs.core.contains_QMARK_ = function contains_QMARK_(coll, v) {
  if (cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return false;
  } else {
    return true;
  }
};
cljs.core.find = function find(coll, k) {
  if (!(coll == null) && cljs.core.associative_QMARK_(coll) && cljs.core.contains_QMARK_(coll, k)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [k, cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, k)], null);
  } else {
    return null;
  }
};
cljs.core.distinct_QMARK_ = function() {
  var distinct_QMARK_ = null;
  var distinct_QMARK___1 = function(x) {
    return true;
  };
  var distinct_QMARK___2 = function(x, y) {
    return!cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y);
  };
  var distinct_QMARK___3 = function() {
    var G__10954__delegate = function(x, y, more) {
      if (!cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
        var s = cljs.core.PersistentHashSet.fromArray([x, y], true);
        var xs = more;
        while (true) {
          var x__$1 = cljs.core.first(xs);
          var etc = cljs.core.next(xs);
          if (cljs.core.truth_(xs)) {
            if (cljs.core.contains_QMARK_(s, x__$1)) {
              return false;
            } else {
              var G__10955 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(s, x__$1);
              var G__10956 = etc;
              s = G__10955;
              xs = G__10956;
              continue;
            }
          } else {
            return true;
          }
          break;
        }
      } else {
        return false;
      }
    };
    var G__10954 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__10957__i = 0, G__10957__a = new Array(arguments.length - 2);
        while (G__10957__i < G__10957__a.length) {
          G__10957__a[G__10957__i] = arguments[G__10957__i + 2];
          ++G__10957__i;
        }
        more = new cljs.core.IndexedSeq(G__10957__a, 0);
      }
      return G__10954__delegate.call(this, x, y, more);
    };
    G__10954.cljs$lang$maxFixedArity = 2;
    G__10954.cljs$lang$applyTo = function(arglist__10958) {
      var x = cljs.core.first(arglist__10958);
      arglist__10958 = cljs.core.next(arglist__10958);
      var y = cljs.core.first(arglist__10958);
      var more = cljs.core.rest(arglist__10958);
      return G__10954__delegate(x, y, more);
    };
    G__10954.cljs$core$IFn$_invoke$arity$variadic = G__10954__delegate;
    return G__10954;
  }();
  distinct_QMARK_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return distinct_QMARK___1.call(this, x);
      case 2:
        return distinct_QMARK___2.call(this, x, y);
      default:
        var G__10959 = null;
        if (arguments.length > 2) {
          var G__10960__i = 0, G__10960__a = new Array(arguments.length - 2);
          while (G__10960__i < G__10960__a.length) {
            G__10960__a[G__10960__i] = arguments[G__10960__i + 2];
            ++G__10960__i;
          }
          G__10959 = new cljs.core.IndexedSeq(G__10960__a, 0);
        }
        return distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__10959);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  distinct_QMARK_.cljs$lang$maxFixedArity = 2;
  distinct_QMARK_.cljs$lang$applyTo = distinct_QMARK___3.cljs$lang$applyTo;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$1 = distinct_QMARK___1;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$2 = distinct_QMARK___2;
  distinct_QMARK_.cljs$core$IFn$_invoke$arity$variadic = distinct_QMARK___3.cljs$core$IFn$_invoke$arity$variadic;
  return distinct_QMARK_;
}();
cljs.core.compare = function compare(x, y) {
  if (x === y) {
    return 0;
  } else {
    if (x == null) {
      return-1;
    } else {
      if (y == null) {
        return 1;
      } else {
        if (cljs.core.type(x) === cljs.core.type(y)) {
          if (function() {
            var G__10964 = x;
            if (G__10964) {
              var bit__4599__auto__ = G__10964.cljs$lang$protocol_mask$partition1$ & 2048;
              if (bit__4599__auto__ || G__10964.cljs$core$IComparable$) {
                return true;
              } else {
                return false;
              }
            } else {
              return false;
            }
          }()) {
            return x.cljs$core$IComparable$_compare$arity$2(null, y);
          } else {
            var G__10965 = x;
            var G__10966 = y;
            return goog.array.defaultCompare(G__10965, G__10966);
          }
        } else {
          throw new Error("compare on non-nil objects of different types");
        }
      }
    }
  }
};
cljs.core.compare_indexed = function() {
  var compare_indexed = null;
  var compare_indexed__2 = function(xs, ys) {
    var xl = cljs.core.count(xs);
    var yl = cljs.core.count(ys);
    if (xl < yl) {
      return-1;
    } else {
      if (xl > yl) {
        return 1;
      } else {
        return compare_indexed.cljs$core$IFn$_invoke$arity$4(xs, ys, xl, 0);
      }
    }
  };
  var compare_indexed__4 = function(xs, ys, len, n) {
    while (true) {
      var d = cljs.core.compare(cljs.core.nth.cljs$core$IFn$_invoke$arity$2(xs, n), cljs.core.nth.cljs$core$IFn$_invoke$arity$2(ys, n));
      if (d === 0 && n + 1 < len) {
        var G__10971 = xs;
        var G__10972 = ys;
        var G__10973 = len;
        var G__10974 = n + 1;
        xs = G__10971;
        ys = G__10972;
        len = G__10973;
        n = G__10974;
        continue;
      } else {
        return d;
      }
      break;
    }
  };
  compare_indexed = function(xs, ys, len, n) {
    switch(arguments.length) {
      case 2:
        return compare_indexed__2.call(this, xs, ys);
      case 4:
        return compare_indexed__4.call(this, xs, ys, len, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  compare_indexed.cljs$core$IFn$_invoke$arity$2 = compare_indexed__2;
  compare_indexed.cljs$core$IFn$_invoke$arity$4 = compare_indexed__4;
  return compare_indexed;
}();
cljs.core.fn__GT_comparator = function fn__GT_comparator(f) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(f, cljs.core.compare)) {
    return cljs.core.compare;
  } else {
    return function(x, y) {
      var r = function() {
        var G__10979 = x;
        var G__10980 = y;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10979, G__10980) : f.call(null, G__10979, G__10980);
      }();
      if (typeof r === "number") {
        return r;
      } else {
        if (cljs.core.truth_(r)) {
          return-1;
        } else {
          if (cljs.core.truth_(function() {
            var G__10981 = y;
            var G__10982 = x;
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__10981, G__10982) : f.call(null, G__10981, G__10982);
          }())) {
            return 1;
          } else {
            return 0;
          }
        }
      }
    };
  }
};
cljs.core.sort = function() {
  var sort = null;
  var sort__1 = function(coll) {
    return sort.cljs$core$IFn$_invoke$arity$2(cljs.core.compare, coll);
  };
  var sort__2 = function(comp, coll) {
    if (cljs.core.seq(coll)) {
      var a = function() {
        var G__10988 = coll;
        return cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__10988) : cljs.core.to_array.call(null, G__10988);
      }();
      var G__10989_10991 = a;
      var G__10990_10992 = cljs.core.fn__GT_comparator(comp);
      goog.array.stableSort(G__10989_10991, G__10990_10992);
      return cljs.core.seq(a);
    } else {
      return cljs.core.List.EMPTY;
    }
  };
  sort = function(comp, coll) {
    switch(arguments.length) {
      case 1:
        return sort__1.call(this, comp);
      case 2:
        return sort__2.call(this, comp, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort.cljs$core$IFn$_invoke$arity$1 = sort__1;
  sort.cljs$core$IFn$_invoke$arity$2 = sort__2;
  return sort;
}();
cljs.core.sort_by = function() {
  var sort_by = null;
  var sort_by__2 = function(keyfn, coll) {
    return sort_by.cljs$core$IFn$_invoke$arity$3(keyfn, cljs.core.compare, coll);
  };
  var sort_by__3 = function(keyfn, comp, coll) {
    return cljs.core.sort.cljs$core$IFn$_invoke$arity$2(function(x, y) {
      return cljs.core.fn__GT_comparator(comp).call(null, function() {
        var G__10998 = x;
        return keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__10998) : keyfn.call(null, G__10998);
      }(), function() {
        var G__10999 = y;
        return keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__10999) : keyfn.call(null, G__10999);
      }());
    }, coll);
  };
  sort_by = function(keyfn, comp, coll) {
    switch(arguments.length) {
      case 2:
        return sort_by__2.call(this, keyfn, comp);
      case 3:
        return sort_by__3.call(this, keyfn, comp, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sort_by.cljs$core$IFn$_invoke$arity$2 = sort_by__2;
  sort_by.cljs$core$IFn$_invoke$arity$3 = sort_by__3;
  return sort_by;
}();
cljs.core.seq_reduce = function() {
  var seq_reduce = null;
  var seq_reduce__2 = function(f, coll) {
    var temp__4124__auto__ = cljs.core.seq(coll);
    if (temp__4124__auto__) {
      var s = temp__4124__auto__;
      var G__11005 = f;
      var G__11006 = cljs.core.first(s);
      var G__11007 = cljs.core.next(s);
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3 ? cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(G__11005, G__11006, G__11007) : cljs.core.reduce.call(null, G__11005, G__11006, G__11007);
    } else {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    }
  };
  var seq_reduce__3 = function(f, val, coll) {
    var val__$1 = val;
    var coll__$1 = cljs.core.seq(coll);
    while (true) {
      if (coll__$1) {
        var nval = function() {
          var G__11008 = val__$1;
          var G__11009 = cljs.core.first(coll__$1);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11008, G__11009) : f.call(null, G__11008, G__11009);
        }();
        if (cljs.core.reduced_QMARK_(nval)) {
          return cljs.core.deref(nval);
        } else {
          var G__11010 = nval;
          var G__11011 = cljs.core.next(coll__$1);
          val__$1 = G__11010;
          coll__$1 = G__11011;
          continue;
        }
      } else {
        return val__$1;
      }
      break;
    }
  };
  seq_reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return seq_reduce__2.call(this, f, val);
      case 3:
        return seq_reduce__3.call(this, f, val, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  seq_reduce.cljs$core$IFn$_invoke$arity$2 = seq_reduce__2;
  seq_reduce.cljs$core$IFn$_invoke$arity$3 = seq_reduce__3;
  return seq_reduce;
}();
cljs.core.shuffle = function shuffle(coll) {
  var a = function() {
    var G__11015 = coll;
    return cljs.core.to_array.cljs$core$IFn$_invoke$arity$1 ? cljs.core.to_array.cljs$core$IFn$_invoke$arity$1(G__11015) : cljs.core.to_array.call(null, G__11015);
  }();
  var G__11016_11018 = a;
  goog.array.shuffle(G__11016_11018);
  var G__11017 = a;
  return cljs.core.vec.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vec.cljs$core$IFn$_invoke$arity$1(G__11017) : cljs.core.vec.call(null, G__11017);
};
cljs.core.reduce = function() {
  var reduce = null;
  var reduce__2 = function(f, coll) {
    if (function() {
      var G__11021 = coll;
      if (G__11021) {
        var bit__4599__auto__ = G__11021.cljs$lang$protocol_mask$partition0$ & 524288;
        if (bit__4599__auto__ || G__11021.cljs$core$IReduce$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$2(null, f);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
      } else {
        if (typeof coll === "string") {
          return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, coll)) {
            return cljs.core._reduce.cljs$core$IFn$_invoke$arity$2(coll, f);
          } else {
            return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll);
          }
        }
      }
    }
  };
  var reduce__3 = function(f, val, coll) {
    if (function() {
      var G__11022 = coll;
      if (G__11022) {
        var bit__4599__auto__ = G__11022.cljs$lang$protocol_mask$partition0$ & 524288;
        if (bit__4599__auto__ || G__11022.cljs$core$IReduce$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return coll.cljs$core$IReduce$_reduce$arity$3(null, f, val);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
      } else {
        if (typeof coll === "string") {
          return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
        } else {
          if (cljs.core.native_satisfies_QMARK_(cljs.core.IReduce, coll)) {
            return cljs.core._reduce.cljs$core$IFn$_invoke$arity$3(coll, f, val);
          } else {
            return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, val, coll);
          }
        }
      }
    }
  };
  reduce = function(f, val, coll) {
    switch(arguments.length) {
      case 2:
        return reduce__2.call(this, f, val);
      case 3:
        return reduce__3.call(this, f, val, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reduce.cljs$core$IFn$_invoke$arity$2 = reduce__2;
  reduce.cljs$core$IFn$_invoke$arity$3 = reduce__3;
  return reduce;
}();
cljs.core.reduce_kv = function reduce_kv(f, init, coll) {
  if (!(coll == null)) {
    return cljs.core._kv_reduce(coll, f, init);
  } else {
    return init;
  }
};
cljs.core.identity = function identity(x) {
  return x;
};
cljs.core.completing = function() {
  var completing = null;
  var completing__1 = function(f) {
    return completing.cljs$core$IFn$_invoke$arity$2(f, cljs.core.identity);
  };
  var completing__2 = function(f, cf) {
    return function() {
      var G__11031 = null;
      var G__11031__0 = function() {
        return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
      };
      var G__11031__1 = function(x) {
        var G__11028 = x;
        return cf.cljs$core$IFn$_invoke$arity$1 ? cf.cljs$core$IFn$_invoke$arity$1(G__11028) : cf.call(null, G__11028);
      };
      var G__11031__2 = function(x, y) {
        var G__11029 = x;
        var G__11030 = y;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11029, G__11030) : f.call(null, G__11029, G__11030);
      };
      G__11031 = function(x, y) {
        switch(arguments.length) {
          case 0:
            return G__11031__0.call(this);
          case 1:
            return G__11031__1.call(this, x);
          case 2:
            return G__11031__2.call(this, x, y);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__11031.cljs$core$IFn$_invoke$arity$0 = G__11031__0;
      G__11031.cljs$core$IFn$_invoke$arity$1 = G__11031__1;
      G__11031.cljs$core$IFn$_invoke$arity$2 = G__11031__2;
      return G__11031;
    }();
  };
  completing = function(f, cf) {
    switch(arguments.length) {
      case 1:
        return completing__1.call(this, f);
      case 2:
        return completing__2.call(this, f, cf);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  completing.cljs$core$IFn$_invoke$arity$1 = completing__1;
  completing.cljs$core$IFn$_invoke$arity$2 = completing__2;
  return completing;
}();
cljs.core.transduce = function() {
  var transduce = null;
  var transduce__3 = function(xform, f, coll) {
    return transduce.cljs$core$IFn$_invoke$arity$4(xform, f, function() {
      return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    }(), coll);
  };
  var transduce__4 = function(xform, f, init, coll) {
    var f__$1 = function() {
      var G__11038 = f;
      return xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__11038) : xform.call(null, G__11038);
    }();
    var ret = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(f__$1, init, coll);
    var G__11039 = ret;
    return f__$1.cljs$core$IFn$_invoke$arity$1 ? f__$1.cljs$core$IFn$_invoke$arity$1(G__11039) : f__$1.call(null, G__11039);
  };
  transduce = function(xform, f, init, coll) {
    switch(arguments.length) {
      case 3:
        return transduce__3.call(this, xform, f, init);
      case 4:
        return transduce__4.call(this, xform, f, init, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  transduce.cljs$core$IFn$_invoke$arity$3 = transduce__3;
  transduce.cljs$core$IFn$_invoke$arity$4 = transduce__4;
  return transduce;
}();
cljs.core._PLUS_ = function() {
  var _PLUS_ = null;
  var _PLUS___0 = function() {
    return 0;
  };
  var _PLUS___1 = function(x) {
    return x;
  };
  var _PLUS___2 = function(x, y) {
    return x + y;
  };
  var _PLUS___3 = function() {
    var G__11040__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_PLUS_, x + y, more);
    };
    var G__11040 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__11041__i = 0, G__11041__a = new Array(arguments.length - 2);
        while (G__11041__i < G__11041__a.length) {
          G__11041__a[G__11041__i] = arguments[G__11041__i + 2];
          ++G__11041__i;
        }
        more = new cljs.core.IndexedSeq(G__11041__a, 0);
      }
      return G__11040__delegate.call(this, x, y, more);
    };
    G__11040.cljs$lang$maxFixedArity = 2;
    G__11040.cljs$lang$applyTo = function(arglist__11042) {
      var x = cljs.core.first(arglist__11042);
      arglist__11042 = cljs.core.next(arglist__11042);
      var y = cljs.core.first(arglist__11042);
      var more = cljs.core.rest(arglist__11042);
      return G__11040__delegate(x, y, more);
    };
    G__11040.cljs$core$IFn$_invoke$arity$variadic = G__11040__delegate;
    return G__11040;
  }();
  _PLUS_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _PLUS___0.call(this);
      case 1:
        return _PLUS___1.call(this, x);
      case 2:
        return _PLUS___2.call(this, x, y);
      default:
        var G__11043 = null;
        if (arguments.length > 2) {
          var G__11044__i = 0, G__11044__a = new Array(arguments.length - 2);
          while (G__11044__i < G__11044__a.length) {
            G__11044__a[G__11044__i] = arguments[G__11044__i + 2];
            ++G__11044__i;
          }
          G__11043 = new cljs.core.IndexedSeq(G__11044__a, 0);
        }
        return _PLUS___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__11043);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _PLUS_.cljs$lang$maxFixedArity = 2;
  _PLUS_.cljs$lang$applyTo = _PLUS___3.cljs$lang$applyTo;
  _PLUS_.cljs$core$IFn$_invoke$arity$0 = _PLUS___0;
  _PLUS_.cljs$core$IFn$_invoke$arity$1 = _PLUS___1;
  _PLUS_.cljs$core$IFn$_invoke$arity$2 = _PLUS___2;
  _PLUS_.cljs$core$IFn$_invoke$arity$variadic = _PLUS___3.cljs$core$IFn$_invoke$arity$variadic;
  return _PLUS_;
}();
cljs.core._ = function() {
  var _ = null;
  var ___1 = function(x) {
    return-x;
  };
  var ___2 = function(x, y) {
    return x - y;
  };
  var ___3 = function() {
    var G__11045__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_, x - y, more);
    };
    var G__11045 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__11046__i = 0, G__11046__a = new Array(arguments.length - 2);
        while (G__11046__i < G__11046__a.length) {
          G__11046__a[G__11046__i] = arguments[G__11046__i + 2];
          ++G__11046__i;
        }
        more = new cljs.core.IndexedSeq(G__11046__a, 0);
      }
      return G__11045__delegate.call(this, x, y, more);
    };
    G__11045.cljs$lang$maxFixedArity = 2;
    G__11045.cljs$lang$applyTo = function(arglist__11047) {
      var x = cljs.core.first(arglist__11047);
      arglist__11047 = cljs.core.next(arglist__11047);
      var y = cljs.core.first(arglist__11047);
      var more = cljs.core.rest(arglist__11047);
      return G__11045__delegate(x, y, more);
    };
    G__11045.cljs$core$IFn$_invoke$arity$variadic = G__11045__delegate;
    return G__11045;
  }();
  _ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return ___1.call(this, x);
      case 2:
        return ___2.call(this, x, y);
      default:
        var G__11048 = null;
        if (arguments.length > 2) {
          var G__11049__i = 0, G__11049__a = new Array(arguments.length - 2);
          while (G__11049__i < G__11049__a.length) {
            G__11049__a[G__11049__i] = arguments[G__11049__i + 2];
            ++G__11049__i;
          }
          G__11048 = new cljs.core.IndexedSeq(G__11049__a, 0);
        }
        return ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__11048);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _.cljs$lang$maxFixedArity = 2;
  _.cljs$lang$applyTo = ___3.cljs$lang$applyTo;
  _.cljs$core$IFn$_invoke$arity$1 = ___1;
  _.cljs$core$IFn$_invoke$arity$2 = ___2;
  _.cljs$core$IFn$_invoke$arity$variadic = ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _;
}();
cljs.core._STAR_ = function() {
  var _STAR_ = null;
  var _STAR___0 = function() {
    return 1;
  };
  var _STAR___1 = function(x) {
    return x;
  };
  var _STAR___2 = function(x, y) {
    return x * y;
  };
  var _STAR___3 = function() {
    var G__11050__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_STAR_, x * y, more);
    };
    var G__11050 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__11051__i = 0, G__11051__a = new Array(arguments.length - 2);
        while (G__11051__i < G__11051__a.length) {
          G__11051__a[G__11051__i] = arguments[G__11051__i + 2];
          ++G__11051__i;
        }
        more = new cljs.core.IndexedSeq(G__11051__a, 0);
      }
      return G__11050__delegate.call(this, x, y, more);
    };
    G__11050.cljs$lang$maxFixedArity = 2;
    G__11050.cljs$lang$applyTo = function(arglist__11052) {
      var x = cljs.core.first(arglist__11052);
      arglist__11052 = cljs.core.next(arglist__11052);
      var y = cljs.core.first(arglist__11052);
      var more = cljs.core.rest(arglist__11052);
      return G__11050__delegate(x, y, more);
    };
    G__11050.cljs$core$IFn$_invoke$arity$variadic = G__11050__delegate;
    return G__11050;
  }();
  _STAR_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return _STAR___0.call(this);
      case 1:
        return _STAR___1.call(this, x);
      case 2:
        return _STAR___2.call(this, x, y);
      default:
        var G__11053 = null;
        if (arguments.length > 2) {
          var G__11054__i = 0, G__11054__a = new Array(arguments.length - 2);
          while (G__11054__i < G__11054__a.length) {
            G__11054__a[G__11054__i] = arguments[G__11054__i + 2];
            ++G__11054__i;
          }
          G__11053 = new cljs.core.IndexedSeq(G__11054__a, 0);
        }
        return _STAR___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__11053);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _STAR_.cljs$lang$maxFixedArity = 2;
  _STAR_.cljs$lang$applyTo = _STAR___3.cljs$lang$applyTo;
  _STAR_.cljs$core$IFn$_invoke$arity$0 = _STAR___0;
  _STAR_.cljs$core$IFn$_invoke$arity$1 = _STAR___1;
  _STAR_.cljs$core$IFn$_invoke$arity$2 = _STAR___2;
  _STAR_.cljs$core$IFn$_invoke$arity$variadic = _STAR___3.cljs$core$IFn$_invoke$arity$variadic;
  return _STAR_;
}();
cljs.core._SLASH_ = function() {
  var _SLASH_ = null;
  var _SLASH___1 = function(x) {
    return _SLASH_.cljs$core$IFn$_invoke$arity$2(1, x);
  };
  var _SLASH___2 = function(x, y) {
    return x / y;
  };
  var _SLASH___3 = function() {
    var G__11059__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(_SLASH_, _SLASH_.cljs$core$IFn$_invoke$arity$2(x, y), more);
    };
    var G__11059 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__11060__i = 0, G__11060__a = new Array(arguments.length - 2);
        while (G__11060__i < G__11060__a.length) {
          G__11060__a[G__11060__i] = arguments[G__11060__i + 2];
          ++G__11060__i;
        }
        more = new cljs.core.IndexedSeq(G__11060__a, 0);
      }
      return G__11059__delegate.call(this, x, y, more);
    };
    G__11059.cljs$lang$maxFixedArity = 2;
    G__11059.cljs$lang$applyTo = function(arglist__11061) {
      var x = cljs.core.first(arglist__11061);
      arglist__11061 = cljs.core.next(arglist__11061);
      var y = cljs.core.first(arglist__11061);
      var more = cljs.core.rest(arglist__11061);
      return G__11059__delegate(x, y, more);
    };
    G__11059.cljs$core$IFn$_invoke$arity$variadic = G__11059__delegate;
    return G__11059;
  }();
  _SLASH_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _SLASH___1.call(this, x);
      case 2:
        return _SLASH___2.call(this, x, y);
      default:
        var G__11062 = null;
        if (arguments.length > 2) {
          var G__11063__i = 0, G__11063__a = new Array(arguments.length - 2);
          while (G__11063__i < G__11063__a.length) {
            G__11063__a[G__11063__i] = arguments[G__11063__i + 2];
            ++G__11063__i;
          }
          G__11062 = new cljs.core.IndexedSeq(G__11063__a, 0);
        }
        return _SLASH___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__11062);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _SLASH_.cljs$lang$maxFixedArity = 2;
  _SLASH_.cljs$lang$applyTo = _SLASH___3.cljs$lang$applyTo;
  _SLASH_.cljs$core$IFn$_invoke$arity$1 = _SLASH___1;
  _SLASH_.cljs$core$IFn$_invoke$arity$2 = _SLASH___2;
  _SLASH_.cljs$core$IFn$_invoke$arity$variadic = _SLASH___3.cljs$core$IFn$_invoke$arity$variadic;
  return _SLASH_;
}();
cljs.core._LT_ = function() {
  var _LT_ = null;
  var _LT___1 = function(x) {
    return true;
  };
  var _LT___2 = function(x, y) {
    return x < y;
  };
  var _LT___3 = function() {
    var G__11064__delegate = function(x, y, more) {
      while (true) {
        if (x < y) {
          if (cljs.core.next(more)) {
            var G__11065 = y;
            var G__11066 = cljs.core.first(more);
            var G__11067 = cljs.core.next(more);
            x = G__11065;
            y = G__11066;
            more = G__11067;
            continue;
          } else {
            return y < cljs.core.first(more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__11064 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__11068__i = 0, G__11068__a = new Array(arguments.length - 2);
        while (G__11068__i < G__11068__a.length) {
          G__11068__a[G__11068__i] = arguments[G__11068__i + 2];
          ++G__11068__i;
        }
        more = new cljs.core.IndexedSeq(G__11068__a, 0);
      }
      return G__11064__delegate.call(this, x, y, more);
    };
    G__11064.cljs$lang$maxFixedArity = 2;
    G__11064.cljs$lang$applyTo = function(arglist__11069) {
      var x = cljs.core.first(arglist__11069);
      arglist__11069 = cljs.core.next(arglist__11069);
      var y = cljs.core.first(arglist__11069);
      var more = cljs.core.rest(arglist__11069);
      return G__11064__delegate(x, y, more);
    };
    G__11064.cljs$core$IFn$_invoke$arity$variadic = G__11064__delegate;
    return G__11064;
  }();
  _LT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT___1.call(this, x);
      case 2:
        return _LT___2.call(this, x, y);
      default:
        var G__11070 = null;
        if (arguments.length > 2) {
          var G__11071__i = 0, G__11071__a = new Array(arguments.length - 2);
          while (G__11071__i < G__11071__a.length) {
            G__11071__a[G__11071__i] = arguments[G__11071__i + 2];
            ++G__11071__i;
          }
          G__11070 = new cljs.core.IndexedSeq(G__11071__a, 0);
        }
        return _LT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__11070);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT_.cljs$lang$maxFixedArity = 2;
  _LT_.cljs$lang$applyTo = _LT___3.cljs$lang$applyTo;
  _LT_.cljs$core$IFn$_invoke$arity$1 = _LT___1;
  _LT_.cljs$core$IFn$_invoke$arity$2 = _LT___2;
  _LT_.cljs$core$IFn$_invoke$arity$variadic = _LT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT_;
}();
cljs.core._LT__EQ_ = function() {
  var _LT__EQ_ = null;
  var _LT__EQ___1 = function(x) {
    return true;
  };
  var _LT__EQ___2 = function(x, y) {
    return x <= y;
  };
  var _LT__EQ___3 = function() {
    var G__11072__delegate = function(x, y, more) {
      while (true) {
        if (x <= y) {
          if (cljs.core.next(more)) {
            var G__11073 = y;
            var G__11074 = cljs.core.first(more);
            var G__11075 = cljs.core.next(more);
            x = G__11073;
            y = G__11074;
            more = G__11075;
            continue;
          } else {
            return y <= cljs.core.first(more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__11072 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__11076__i = 0, G__11076__a = new Array(arguments.length - 2);
        while (G__11076__i < G__11076__a.length) {
          G__11076__a[G__11076__i] = arguments[G__11076__i + 2];
          ++G__11076__i;
        }
        more = new cljs.core.IndexedSeq(G__11076__a, 0);
      }
      return G__11072__delegate.call(this, x, y, more);
    };
    G__11072.cljs$lang$maxFixedArity = 2;
    G__11072.cljs$lang$applyTo = function(arglist__11077) {
      var x = cljs.core.first(arglist__11077);
      arglist__11077 = cljs.core.next(arglist__11077);
      var y = cljs.core.first(arglist__11077);
      var more = cljs.core.rest(arglist__11077);
      return G__11072__delegate(x, y, more);
    };
    G__11072.cljs$core$IFn$_invoke$arity$variadic = G__11072__delegate;
    return G__11072;
  }();
  _LT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _LT__EQ___1.call(this, x);
      case 2:
        return _LT__EQ___2.call(this, x, y);
      default:
        var G__11078 = null;
        if (arguments.length > 2) {
          var G__11079__i = 0, G__11079__a = new Array(arguments.length - 2);
          while (G__11079__i < G__11079__a.length) {
            G__11079__a[G__11079__i] = arguments[G__11079__i + 2];
            ++G__11079__i;
          }
          G__11078 = new cljs.core.IndexedSeq(G__11079__a, 0);
        }
        return _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__11078);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _LT__EQ_.cljs$lang$maxFixedArity = 2;
  _LT__EQ_.cljs$lang$applyTo = _LT__EQ___3.cljs$lang$applyTo;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$1 = _LT__EQ___1;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$2 = _LT__EQ___2;
  _LT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _LT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _LT__EQ_;
}();
cljs.core._GT_ = function() {
  var _GT_ = null;
  var _GT___1 = function(x) {
    return true;
  };
  var _GT___2 = function(x, y) {
    return x > y;
  };
  var _GT___3 = function() {
    var G__11080__delegate = function(x, y, more) {
      while (true) {
        if (x > y) {
          if (cljs.core.next(more)) {
            var G__11081 = y;
            var G__11082 = cljs.core.first(more);
            var G__11083 = cljs.core.next(more);
            x = G__11081;
            y = G__11082;
            more = G__11083;
            continue;
          } else {
            return y > cljs.core.first(more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__11080 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__11084__i = 0, G__11084__a = new Array(arguments.length - 2);
        while (G__11084__i < G__11084__a.length) {
          G__11084__a[G__11084__i] = arguments[G__11084__i + 2];
          ++G__11084__i;
        }
        more = new cljs.core.IndexedSeq(G__11084__a, 0);
      }
      return G__11080__delegate.call(this, x, y, more);
    };
    G__11080.cljs$lang$maxFixedArity = 2;
    G__11080.cljs$lang$applyTo = function(arglist__11085) {
      var x = cljs.core.first(arglist__11085);
      arglist__11085 = cljs.core.next(arglist__11085);
      var y = cljs.core.first(arglist__11085);
      var more = cljs.core.rest(arglist__11085);
      return G__11080__delegate(x, y, more);
    };
    G__11080.cljs$core$IFn$_invoke$arity$variadic = G__11080__delegate;
    return G__11080;
  }();
  _GT_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT___1.call(this, x);
      case 2:
        return _GT___2.call(this, x, y);
      default:
        var G__11086 = null;
        if (arguments.length > 2) {
          var G__11087__i = 0, G__11087__a = new Array(arguments.length - 2);
          while (G__11087__i < G__11087__a.length) {
            G__11087__a[G__11087__i] = arguments[G__11087__i + 2];
            ++G__11087__i;
          }
          G__11086 = new cljs.core.IndexedSeq(G__11087__a, 0);
        }
        return _GT___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__11086);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT_.cljs$lang$maxFixedArity = 2;
  _GT_.cljs$lang$applyTo = _GT___3.cljs$lang$applyTo;
  _GT_.cljs$core$IFn$_invoke$arity$1 = _GT___1;
  _GT_.cljs$core$IFn$_invoke$arity$2 = _GT___2;
  _GT_.cljs$core$IFn$_invoke$arity$variadic = _GT___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT_;
}();
cljs.core._GT__EQ_ = function() {
  var _GT__EQ_ = null;
  var _GT__EQ___1 = function(x) {
    return true;
  };
  var _GT__EQ___2 = function(x, y) {
    return x >= y;
  };
  var _GT__EQ___3 = function() {
    var G__11088__delegate = function(x, y, more) {
      while (true) {
        if (x >= y) {
          if (cljs.core.next(more)) {
            var G__11089 = y;
            var G__11090 = cljs.core.first(more);
            var G__11091 = cljs.core.next(more);
            x = G__11089;
            y = G__11090;
            more = G__11091;
            continue;
          } else {
            return y >= cljs.core.first(more);
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__11088 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__11092__i = 0, G__11092__a = new Array(arguments.length - 2);
        while (G__11092__i < G__11092__a.length) {
          G__11092__a[G__11092__i] = arguments[G__11092__i + 2];
          ++G__11092__i;
        }
        more = new cljs.core.IndexedSeq(G__11092__a, 0);
      }
      return G__11088__delegate.call(this, x, y, more);
    };
    G__11088.cljs$lang$maxFixedArity = 2;
    G__11088.cljs$lang$applyTo = function(arglist__11093) {
      var x = cljs.core.first(arglist__11093);
      arglist__11093 = cljs.core.next(arglist__11093);
      var y = cljs.core.first(arglist__11093);
      var more = cljs.core.rest(arglist__11093);
      return G__11088__delegate(x, y, more);
    };
    G__11088.cljs$core$IFn$_invoke$arity$variadic = G__11088__delegate;
    return G__11088;
  }();
  _GT__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _GT__EQ___1.call(this, x);
      case 2:
        return _GT__EQ___2.call(this, x, y);
      default:
        var G__11094 = null;
        if (arguments.length > 2) {
          var G__11095__i = 0, G__11095__a = new Array(arguments.length - 2);
          while (G__11095__i < G__11095__a.length) {
            G__11095__a[G__11095__i] = arguments[G__11095__i + 2];
            ++G__11095__i;
          }
          G__11094 = new cljs.core.IndexedSeq(G__11095__a, 0);
        }
        return _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__11094);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _GT__EQ_.cljs$lang$maxFixedArity = 2;
  _GT__EQ_.cljs$lang$applyTo = _GT__EQ___3.cljs$lang$applyTo;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$1 = _GT__EQ___1;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$2 = _GT__EQ___2;
  _GT__EQ_.cljs$core$IFn$_invoke$arity$variadic = _GT__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _GT__EQ_;
}();
cljs.core.dec = function dec(x) {
  return x - 1;
};
cljs.core.max = function() {
  var max = null;
  var max__1 = function(x) {
    return x;
  };
  var max__2 = function(x, y) {
    var x__4242__auto__ = x;
    var y__4243__auto__ = y;
    return x__4242__auto__ > y__4243__auto__ ? x__4242__auto__ : y__4243__auto__;
  };
  var max__3 = function() {
    var G__11096__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(max, function() {
        var x__4242__auto__ = x;
        var y__4243__auto__ = y;
        return x__4242__auto__ > y__4243__auto__ ? x__4242__auto__ : y__4243__auto__;
      }(), more);
    };
    var G__11096 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__11097__i = 0, G__11097__a = new Array(arguments.length - 2);
        while (G__11097__i < G__11097__a.length) {
          G__11097__a[G__11097__i] = arguments[G__11097__i + 2];
          ++G__11097__i;
        }
        more = new cljs.core.IndexedSeq(G__11097__a, 0);
      }
      return G__11096__delegate.call(this, x, y, more);
    };
    G__11096.cljs$lang$maxFixedArity = 2;
    G__11096.cljs$lang$applyTo = function(arglist__11098) {
      var x = cljs.core.first(arglist__11098);
      arglist__11098 = cljs.core.next(arglist__11098);
      var y = cljs.core.first(arglist__11098);
      var more = cljs.core.rest(arglist__11098);
      return G__11096__delegate(x, y, more);
    };
    G__11096.cljs$core$IFn$_invoke$arity$variadic = G__11096__delegate;
    return G__11096;
  }();
  max = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return max__1.call(this, x);
      case 2:
        return max__2.call(this, x, y);
      default:
        var G__11099 = null;
        if (arguments.length > 2) {
          var G__11100__i = 0, G__11100__a = new Array(arguments.length - 2);
          while (G__11100__i < G__11100__a.length) {
            G__11100__a[G__11100__i] = arguments[G__11100__i + 2];
            ++G__11100__i;
          }
          G__11099 = new cljs.core.IndexedSeq(G__11100__a, 0);
        }
        return max__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__11099);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max.cljs$lang$maxFixedArity = 2;
  max.cljs$lang$applyTo = max__3.cljs$lang$applyTo;
  max.cljs$core$IFn$_invoke$arity$1 = max__1;
  max.cljs$core$IFn$_invoke$arity$2 = max__2;
  max.cljs$core$IFn$_invoke$arity$variadic = max__3.cljs$core$IFn$_invoke$arity$variadic;
  return max;
}();
cljs.core.min = function() {
  var min = null;
  var min__1 = function(x) {
    return x;
  };
  var min__2 = function(x, y) {
    var x__4249__auto__ = x;
    var y__4250__auto__ = y;
    return x__4249__auto__ < y__4250__auto__ ? x__4249__auto__ : y__4250__auto__;
  };
  var min__3 = function() {
    var G__11101__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(min, function() {
        var x__4249__auto__ = x;
        var y__4250__auto__ = y;
        return x__4249__auto__ < y__4250__auto__ ? x__4249__auto__ : y__4250__auto__;
      }(), more);
    };
    var G__11101 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__11102__i = 0, G__11102__a = new Array(arguments.length - 2);
        while (G__11102__i < G__11102__a.length) {
          G__11102__a[G__11102__i] = arguments[G__11102__i + 2];
          ++G__11102__i;
        }
        more = new cljs.core.IndexedSeq(G__11102__a, 0);
      }
      return G__11101__delegate.call(this, x, y, more);
    };
    G__11101.cljs$lang$maxFixedArity = 2;
    G__11101.cljs$lang$applyTo = function(arglist__11103) {
      var x = cljs.core.first(arglist__11103);
      arglist__11103 = cljs.core.next(arglist__11103);
      var y = cljs.core.first(arglist__11103);
      var more = cljs.core.rest(arglist__11103);
      return G__11101__delegate(x, y, more);
    };
    G__11101.cljs$core$IFn$_invoke$arity$variadic = G__11101__delegate;
    return G__11101;
  }();
  min = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return min__1.call(this, x);
      case 2:
        return min__2.call(this, x, y);
      default:
        var G__11104 = null;
        if (arguments.length > 2) {
          var G__11105__i = 0, G__11105__a = new Array(arguments.length - 2);
          while (G__11105__i < G__11105__a.length) {
            G__11105__a[G__11105__i] = arguments[G__11105__i + 2];
            ++G__11105__i;
          }
          G__11104 = new cljs.core.IndexedSeq(G__11105__a, 0);
        }
        return min__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__11104);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min.cljs$lang$maxFixedArity = 2;
  min.cljs$lang$applyTo = min__3.cljs$lang$applyTo;
  min.cljs$core$IFn$_invoke$arity$1 = min__1;
  min.cljs$core$IFn$_invoke$arity$2 = min__2;
  min.cljs$core$IFn$_invoke$arity$variadic = min__3.cljs$core$IFn$_invoke$arity$variadic;
  return min;
}();
cljs.core.byte$ = function byte$(x) {
  return x;
};
cljs.core.char$ = function char$(x) {
  if (typeof x === "number") {
    return String.fromCharCode(x);
  } else {
    if (typeof x === "string" && x.length === 1) {
      return x;
    } else {
      throw new Error("Argument to char must be a character or number");
    }
  }
};
cljs.core.short$ = function short$(x) {
  return x;
};
cljs.core.float$ = function float$(x) {
  return x;
};
cljs.core.double$ = function double$(x) {
  return x;
};
cljs.core.unchecked_byte = function unchecked_byte(x) {
  return x;
};
cljs.core.unchecked_char = function unchecked_char(x) {
  return x;
};
cljs.core.unchecked_short = function unchecked_short(x) {
  return x;
};
cljs.core.unchecked_float = function unchecked_float(x) {
  return x;
};
cljs.core.unchecked_double = function unchecked_double(x) {
  return x;
};
cljs.core.unchecked_add = function() {
  var unchecked_add = null;
  var unchecked_add__0 = function() {
    return 0;
  };
  var unchecked_add__1 = function(x) {
    return x;
  };
  var unchecked_add__2 = function(x, y) {
    return x + y;
  };
  var unchecked_add__3 = function() {
    var G__11106__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add, x + y, more);
    };
    var G__11106 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__11107__i = 0, G__11107__a = new Array(arguments.length - 2);
        while (G__11107__i < G__11107__a.length) {
          G__11107__a[G__11107__i] = arguments[G__11107__i + 2];
          ++G__11107__i;
        }
        more = new cljs.core.IndexedSeq(G__11107__a, 0);
      }
      return G__11106__delegate.call(this, x, y, more);
    };
    G__11106.cljs$lang$maxFixedArity = 2;
    G__11106.cljs$lang$applyTo = function(arglist__11108) {
      var x = cljs.core.first(arglist__11108);
      arglist__11108 = cljs.core.next(arglist__11108);
      var y = cljs.core.first(arglist__11108);
      var more = cljs.core.rest(arglist__11108);
      return G__11106__delegate(x, y, more);
    };
    G__11106.cljs$core$IFn$_invoke$arity$variadic = G__11106__delegate;
    return G__11106;
  }();
  unchecked_add = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add__0.call(this);
      case 1:
        return unchecked_add__1.call(this, x);
      case 2:
        return unchecked_add__2.call(this, x, y);
      default:
        var G__11109 = null;
        if (arguments.length > 2) {
          var G__11110__i = 0, G__11110__a = new Array(arguments.length - 2);
          while (G__11110__i < G__11110__a.length) {
            G__11110__a[G__11110__i] = arguments[G__11110__i + 2];
            ++G__11110__i;
          }
          G__11109 = new cljs.core.IndexedSeq(G__11110__a, 0);
        }
        return unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__11109);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add.cljs$lang$maxFixedArity = 2;
  unchecked_add.cljs$lang$applyTo = unchecked_add__3.cljs$lang$applyTo;
  unchecked_add.cljs$core$IFn$_invoke$arity$0 = unchecked_add__0;
  unchecked_add.cljs$core$IFn$_invoke$arity$1 = unchecked_add__1;
  unchecked_add.cljs$core$IFn$_invoke$arity$2 = unchecked_add__2;
  unchecked_add.cljs$core$IFn$_invoke$arity$variadic = unchecked_add__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add;
}();
cljs.core.unchecked_add_int = function() {
  var unchecked_add_int = null;
  var unchecked_add_int__0 = function() {
    return 0;
  };
  var unchecked_add_int__1 = function(x) {
    return x;
  };
  var unchecked_add_int__2 = function(x, y) {
    return x + y;
  };
  var unchecked_add_int__3 = function() {
    var G__11111__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_add_int, x + y, more);
    };
    var G__11111 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__11112__i = 0, G__11112__a = new Array(arguments.length - 2);
        while (G__11112__i < G__11112__a.length) {
          G__11112__a[G__11112__i] = arguments[G__11112__i + 2];
          ++G__11112__i;
        }
        more = new cljs.core.IndexedSeq(G__11112__a, 0);
      }
      return G__11111__delegate.call(this, x, y, more);
    };
    G__11111.cljs$lang$maxFixedArity = 2;
    G__11111.cljs$lang$applyTo = function(arglist__11113) {
      var x = cljs.core.first(arglist__11113);
      arglist__11113 = cljs.core.next(arglist__11113);
      var y = cljs.core.first(arglist__11113);
      var more = cljs.core.rest(arglist__11113);
      return G__11111__delegate(x, y, more);
    };
    G__11111.cljs$core$IFn$_invoke$arity$variadic = G__11111__delegate;
    return G__11111;
  }();
  unchecked_add_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_add_int__0.call(this);
      case 1:
        return unchecked_add_int__1.call(this, x);
      case 2:
        return unchecked_add_int__2.call(this, x, y);
      default:
        var G__11114 = null;
        if (arguments.length > 2) {
          var G__11115__i = 0, G__11115__a = new Array(arguments.length - 2);
          while (G__11115__i < G__11115__a.length) {
            G__11115__a[G__11115__i] = arguments[G__11115__i + 2];
            ++G__11115__i;
          }
          G__11114 = new cljs.core.IndexedSeq(G__11115__a, 0);
        }
        return unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__11114);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_add_int.cljs$lang$maxFixedArity = 2;
  unchecked_add_int.cljs$lang$applyTo = unchecked_add_int__3.cljs$lang$applyTo;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$0 = unchecked_add_int__0;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$1 = unchecked_add_int__1;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$2 = unchecked_add_int__2;
  unchecked_add_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_add_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_add_int;
}();
cljs.core.unchecked_dec = function unchecked_dec(x) {
  return x - 1;
};
cljs.core.unchecked_dec_int = function unchecked_dec_int(x) {
  return x - 1;
};
cljs.core.unchecked_divide_int = function() {
  var unchecked_divide_int = null;
  var unchecked_divide_int__1 = function(x) {
    return unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(1, x);
  };
  var unchecked_divide_int__2 = function(x, y) {
    return x / y;
  };
  var unchecked_divide_int__3 = function() {
    var G__11120__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_divide_int, unchecked_divide_int.cljs$core$IFn$_invoke$arity$2(x, y), more);
    };
    var G__11120 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__11121__i = 0, G__11121__a = new Array(arguments.length - 2);
        while (G__11121__i < G__11121__a.length) {
          G__11121__a[G__11121__i] = arguments[G__11121__i + 2];
          ++G__11121__i;
        }
        more = new cljs.core.IndexedSeq(G__11121__a, 0);
      }
      return G__11120__delegate.call(this, x, y, more);
    };
    G__11120.cljs$lang$maxFixedArity = 2;
    G__11120.cljs$lang$applyTo = function(arglist__11122) {
      var x = cljs.core.first(arglist__11122);
      arglist__11122 = cljs.core.next(arglist__11122);
      var y = cljs.core.first(arglist__11122);
      var more = cljs.core.rest(arglist__11122);
      return G__11120__delegate(x, y, more);
    };
    G__11120.cljs$core$IFn$_invoke$arity$variadic = G__11120__delegate;
    return G__11120;
  }();
  unchecked_divide_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_divide_int__1.call(this, x);
      case 2:
        return unchecked_divide_int__2.call(this, x, y);
      default:
        var G__11123 = null;
        if (arguments.length > 2) {
          var G__11124__i = 0, G__11124__a = new Array(arguments.length - 2);
          while (G__11124__i < G__11124__a.length) {
            G__11124__a[G__11124__i] = arguments[G__11124__i + 2];
            ++G__11124__i;
          }
          G__11123 = new cljs.core.IndexedSeq(G__11124__a, 0);
        }
        return unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__11123);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_divide_int.cljs$lang$maxFixedArity = 2;
  unchecked_divide_int.cljs$lang$applyTo = unchecked_divide_int__3.cljs$lang$applyTo;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$1 = unchecked_divide_int__1;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$2 = unchecked_divide_int__2;
  unchecked_divide_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_divide_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_divide_int;
}();
cljs.core.unchecked_inc = function unchecked_inc(x) {
  return x + 1;
};
cljs.core.unchecked_inc_int = function unchecked_inc_int(x) {
  return x + 1;
};
cljs.core.unchecked_multiply = function() {
  var unchecked_multiply = null;
  var unchecked_multiply__0 = function() {
    return 1;
  };
  var unchecked_multiply__1 = function(x) {
    return x;
  };
  var unchecked_multiply__2 = function(x, y) {
    return x * y;
  };
  var unchecked_multiply__3 = function() {
    var G__11125__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply, x * y, more);
    };
    var G__11125 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__11126__i = 0, G__11126__a = new Array(arguments.length - 2);
        while (G__11126__i < G__11126__a.length) {
          G__11126__a[G__11126__i] = arguments[G__11126__i + 2];
          ++G__11126__i;
        }
        more = new cljs.core.IndexedSeq(G__11126__a, 0);
      }
      return G__11125__delegate.call(this, x, y, more);
    };
    G__11125.cljs$lang$maxFixedArity = 2;
    G__11125.cljs$lang$applyTo = function(arglist__11127) {
      var x = cljs.core.first(arglist__11127);
      arglist__11127 = cljs.core.next(arglist__11127);
      var y = cljs.core.first(arglist__11127);
      var more = cljs.core.rest(arglist__11127);
      return G__11125__delegate(x, y, more);
    };
    G__11125.cljs$core$IFn$_invoke$arity$variadic = G__11125__delegate;
    return G__11125;
  }();
  unchecked_multiply = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply__0.call(this);
      case 1:
        return unchecked_multiply__1.call(this, x);
      case 2:
        return unchecked_multiply__2.call(this, x, y);
      default:
        var G__11128 = null;
        if (arguments.length > 2) {
          var G__11129__i = 0, G__11129__a = new Array(arguments.length - 2);
          while (G__11129__i < G__11129__a.length) {
            G__11129__a[G__11129__i] = arguments[G__11129__i + 2];
            ++G__11129__i;
          }
          G__11128 = new cljs.core.IndexedSeq(G__11129__a, 0);
        }
        return unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__11128);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply.cljs$lang$maxFixedArity = 2;
  unchecked_multiply.cljs$lang$applyTo = unchecked_multiply__3.cljs$lang$applyTo;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply__0;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply__1;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply__2;
  unchecked_multiply.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply;
}();
cljs.core.unchecked_multiply_int = function() {
  var unchecked_multiply_int = null;
  var unchecked_multiply_int__0 = function() {
    return 1;
  };
  var unchecked_multiply_int__1 = function(x) {
    return x;
  };
  var unchecked_multiply_int__2 = function(x, y) {
    return x * y;
  };
  var unchecked_multiply_int__3 = function() {
    var G__11130__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_multiply_int, x * y, more);
    };
    var G__11130 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__11131__i = 0, G__11131__a = new Array(arguments.length - 2);
        while (G__11131__i < G__11131__a.length) {
          G__11131__a[G__11131__i] = arguments[G__11131__i + 2];
          ++G__11131__i;
        }
        more = new cljs.core.IndexedSeq(G__11131__a, 0);
      }
      return G__11130__delegate.call(this, x, y, more);
    };
    G__11130.cljs$lang$maxFixedArity = 2;
    G__11130.cljs$lang$applyTo = function(arglist__11132) {
      var x = cljs.core.first(arglist__11132);
      arglist__11132 = cljs.core.next(arglist__11132);
      var y = cljs.core.first(arglist__11132);
      var more = cljs.core.rest(arglist__11132);
      return G__11130__delegate(x, y, more);
    };
    G__11130.cljs$core$IFn$_invoke$arity$variadic = G__11130__delegate;
    return G__11130;
  }();
  unchecked_multiply_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 0:
        return unchecked_multiply_int__0.call(this);
      case 1:
        return unchecked_multiply_int__1.call(this, x);
      case 2:
        return unchecked_multiply_int__2.call(this, x, y);
      default:
        var G__11133 = null;
        if (arguments.length > 2) {
          var G__11134__i = 0, G__11134__a = new Array(arguments.length - 2);
          while (G__11134__i < G__11134__a.length) {
            G__11134__a[G__11134__i] = arguments[G__11134__i + 2];
            ++G__11134__i;
          }
          G__11133 = new cljs.core.IndexedSeq(G__11134__a, 0);
        }
        return unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__11133);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_multiply_int.cljs$lang$maxFixedArity = 2;
  unchecked_multiply_int.cljs$lang$applyTo = unchecked_multiply_int__3.cljs$lang$applyTo;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$0 = unchecked_multiply_int__0;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$1 = unchecked_multiply_int__1;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$2 = unchecked_multiply_int__2;
  unchecked_multiply_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_multiply_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_multiply_int;
}();
cljs.core.unchecked_negate = function unchecked_negate(x) {
  return-x;
};
cljs.core.unchecked_negate_int = function unchecked_negate_int(x) {
  return-x;
};
cljs.core.unchecked_remainder_int = function unchecked_remainder_int(x, n) {
  var G__11137 = x;
  var G__11138 = n;
  return cljs.core.mod.cljs$core$IFn$_invoke$arity$2 ? cljs.core.mod.cljs$core$IFn$_invoke$arity$2(G__11137, G__11138) : cljs.core.mod.call(null, G__11137, G__11138);
};
cljs.core.unchecked_subtract = function() {
  var unchecked_subtract = null;
  var unchecked_subtract__1 = function(x) {
    return-x;
  };
  var unchecked_subtract__2 = function(x, y) {
    return x - y;
  };
  var unchecked_subtract__3 = function() {
    var G__11139__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract, x - y, more);
    };
    var G__11139 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__11140__i = 0, G__11140__a = new Array(arguments.length - 2);
        while (G__11140__i < G__11140__a.length) {
          G__11140__a[G__11140__i] = arguments[G__11140__i + 2];
          ++G__11140__i;
        }
        more = new cljs.core.IndexedSeq(G__11140__a, 0);
      }
      return G__11139__delegate.call(this, x, y, more);
    };
    G__11139.cljs$lang$maxFixedArity = 2;
    G__11139.cljs$lang$applyTo = function(arglist__11141) {
      var x = cljs.core.first(arglist__11141);
      arglist__11141 = cljs.core.next(arglist__11141);
      var y = cljs.core.first(arglist__11141);
      var more = cljs.core.rest(arglist__11141);
      return G__11139__delegate(x, y, more);
    };
    G__11139.cljs$core$IFn$_invoke$arity$variadic = G__11139__delegate;
    return G__11139;
  }();
  unchecked_subtract = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_subtract__1.call(this, x);
      case 2:
        return unchecked_subtract__2.call(this, x, y);
      default:
        var G__11142 = null;
        if (arguments.length > 2) {
          var G__11143__i = 0, G__11143__a = new Array(arguments.length - 2);
          while (G__11143__i < G__11143__a.length) {
            G__11143__a[G__11143__i] = arguments[G__11143__i + 2];
            ++G__11143__i;
          }
          G__11142 = new cljs.core.IndexedSeq(G__11143__a, 0);
        }
        return unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__11142);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_subtract.cljs$lang$maxFixedArity = 2;
  unchecked_subtract.cljs$lang$applyTo = unchecked_subtract__3.cljs$lang$applyTo;
  unchecked_subtract.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract__1;
  unchecked_subtract.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract__2;
  unchecked_subtract.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_subtract;
}();
cljs.core.unchecked_subtract_int = function() {
  var unchecked_subtract_int = null;
  var unchecked_subtract_int__1 = function(x) {
    return-x;
  };
  var unchecked_subtract_int__2 = function(x, y) {
    return x - y;
  };
  var unchecked_subtract_int__3 = function() {
    var G__11144__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(unchecked_subtract_int, x - y, more);
    };
    var G__11144 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__11145__i = 0, G__11145__a = new Array(arguments.length - 2);
        while (G__11145__i < G__11145__a.length) {
          G__11145__a[G__11145__i] = arguments[G__11145__i + 2];
          ++G__11145__i;
        }
        more = new cljs.core.IndexedSeq(G__11145__a, 0);
      }
      return G__11144__delegate.call(this, x, y, more);
    };
    G__11144.cljs$lang$maxFixedArity = 2;
    G__11144.cljs$lang$applyTo = function(arglist__11146) {
      var x = cljs.core.first(arglist__11146);
      arglist__11146 = cljs.core.next(arglist__11146);
      var y = cljs.core.first(arglist__11146);
      var more = cljs.core.rest(arglist__11146);
      return G__11144__delegate(x, y, more);
    };
    G__11144.cljs$core$IFn$_invoke$arity$variadic = G__11144__delegate;
    return G__11144;
  }();
  unchecked_subtract_int = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return unchecked_subtract_int__1.call(this, x);
      case 2:
        return unchecked_subtract_int__2.call(this, x, y);
      default:
        var G__11147 = null;
        if (arguments.length > 2) {
          var G__11148__i = 0, G__11148__a = new Array(arguments.length - 2);
          while (G__11148__i < G__11148__a.length) {
            G__11148__a[G__11148__i] = arguments[G__11148__i + 2];
            ++G__11148__i;
          }
          G__11147 = new cljs.core.IndexedSeq(G__11148__a, 0);
        }
        return unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__11147);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unchecked_subtract_int.cljs$lang$maxFixedArity = 2;
  unchecked_subtract_int.cljs$lang$applyTo = unchecked_subtract_int__3.cljs$lang$applyTo;
  unchecked_subtract_int.cljs$core$IFn$_invoke$arity$1 = unchecked_subtract_int__1;
  unchecked_subtract_int.cljs$core$IFn$_invoke$arity$2 = unchecked_subtract_int__2;
  unchecked_subtract_int.cljs$core$IFn$_invoke$arity$variadic = unchecked_subtract_int__3.cljs$core$IFn$_invoke$arity$variadic;
  return unchecked_subtract_int;
}();
cljs.core.fix = function fix(q) {
  if (q >= 0) {
    var G__11151 = q;
    return Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__11151) : Math.floor.call(null, G__11151);
  } else {
    var G__11152 = q;
    return Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__11152) : Math.ceil.call(null, G__11152);
  }
};
cljs.core.int$ = function int$(x) {
  return x | 0;
};
cljs.core.unchecked_int = function unchecked_int(x) {
  return cljs.core.fix(x);
};
cljs.core.long$ = function long$(x) {
  return cljs.core.fix(x);
};
cljs.core.unchecked_long = function unchecked_long(x) {
  return cljs.core.fix(x);
};
cljs.core.booleans = function booleans(x) {
  return x;
};
cljs.core.bytes = function bytes(x) {
  return x;
};
cljs.core.chars = function chars(x) {
  return x;
};
cljs.core.shorts = function shorts(x) {
  return x;
};
cljs.core.ints = function ints(x) {
  return x;
};
cljs.core.floats = function floats(x) {
  return x;
};
cljs.core.doubles = function doubles(x) {
  return x;
};
cljs.core.longs = function longs(x) {
  return x;
};
cljs.core.js_mod = function js_mod(n, d) {
  return n % d;
};
cljs.core.mod = function mod(n, d) {
  return(n % d + d) % d;
};
cljs.core.quot = function quot(n, d) {
  var rem = n % d;
  return cljs.core.fix((n - rem) / d);
};
cljs.core.rem = function rem(n, d) {
  var q = cljs.core.quot(n, d);
  return n - d * q;
};
cljs.core.bit_xor = function() {
  var bit_xor = null;
  var bit_xor__2 = function(x, y) {
    return x ^ y;
  };
  var bit_xor__3 = function() {
    var G__11153__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_xor, x ^ y, more);
    };
    var G__11153 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__11154__i = 0, G__11154__a = new Array(arguments.length - 2);
        while (G__11154__i < G__11154__a.length) {
          G__11154__a[G__11154__i] = arguments[G__11154__i + 2];
          ++G__11154__i;
        }
        more = new cljs.core.IndexedSeq(G__11154__a, 0);
      }
      return G__11153__delegate.call(this, x, y, more);
    };
    G__11153.cljs$lang$maxFixedArity = 2;
    G__11153.cljs$lang$applyTo = function(arglist__11155) {
      var x = cljs.core.first(arglist__11155);
      arglist__11155 = cljs.core.next(arglist__11155);
      var y = cljs.core.first(arglist__11155);
      var more = cljs.core.rest(arglist__11155);
      return G__11153__delegate(x, y, more);
    };
    G__11153.cljs$core$IFn$_invoke$arity$variadic = G__11153__delegate;
    return G__11153;
  }();
  bit_xor = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return bit_xor__2.call(this, x, y);
      default:
        var G__11156 = null;
        if (arguments.length > 2) {
          var G__11157__i = 0, G__11157__a = new Array(arguments.length - 2);
          while (G__11157__i < G__11157__a.length) {
            G__11157__a[G__11157__i] = arguments[G__11157__i + 2];
            ++G__11157__i;
          }
          G__11156 = new cljs.core.IndexedSeq(G__11157__a, 0);
        }
        return bit_xor__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__11156);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  bit_xor.cljs$lang$maxFixedArity = 2;
  bit_xor.cljs$lang$applyTo = bit_xor__3.cljs$lang$applyTo;
  bit_xor.cljs$core$IFn$_invoke$arity$2 = bit_xor__2;
  bit_xor.cljs$core$IFn$_invoke$arity$variadic = bit_xor__3.cljs$core$IFn$_invoke$arity$variadic;
  return bit_xor;
}();
cljs.core.bit_and = function() {
  var bit_and = null;
  var bit_and__2 = function(x, y) {
    return x & y;
  };
  var bit_and__3 = function() {
    var G__11158__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and, x & y, more);
    };
    var G__11158 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__11159__i = 0, G__11159__a = new Array(arguments.length - 2);
        while (G__11159__i < G__11159__a.length) {
          G__11159__a[G__11159__i] = arguments[G__11159__i + 2];
          ++G__11159__i;
        }
        more = new cljs.core.IndexedSeq(G__11159__a, 0);
      }
      return G__11158__delegate.call(this, x, y, more);
    };
    G__11158.cljs$lang$maxFixedArity = 2;
    G__11158.cljs$lang$applyTo = function(arglist__11160) {
      var x = cljs.core.first(arglist__11160);
      arglist__11160 = cljs.core.next(arglist__11160);
      var y = cljs.core.first(arglist__11160);
      var more = cljs.core.rest(arglist__11160);
      return G__11158__delegate(x, y, more);
    };
    G__11158.cljs$core$IFn$_invoke$arity$variadic = G__11158__delegate;
    return G__11158;
  }();
  bit_and = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return bit_and__2.call(this, x, y);
      default:
        var G__11161 = null;
        if (arguments.length > 2) {
          var G__11162__i = 0, G__11162__a = new Array(arguments.length - 2);
          while (G__11162__i < G__11162__a.length) {
            G__11162__a[G__11162__i] = arguments[G__11162__i + 2];
            ++G__11162__i;
          }
          G__11161 = new cljs.core.IndexedSeq(G__11162__a, 0);
        }
        return bit_and__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__11161);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  bit_and.cljs$lang$maxFixedArity = 2;
  bit_and.cljs$lang$applyTo = bit_and__3.cljs$lang$applyTo;
  bit_and.cljs$core$IFn$_invoke$arity$2 = bit_and__2;
  bit_and.cljs$core$IFn$_invoke$arity$variadic = bit_and__3.cljs$core$IFn$_invoke$arity$variadic;
  return bit_and;
}();
cljs.core.bit_or = function() {
  var bit_or = null;
  var bit_or__2 = function(x, y) {
    return x | y;
  };
  var bit_or__3 = function() {
    var G__11163__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_or, x | y, more);
    };
    var G__11163 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__11164__i = 0, G__11164__a = new Array(arguments.length - 2);
        while (G__11164__i < G__11164__a.length) {
          G__11164__a[G__11164__i] = arguments[G__11164__i + 2];
          ++G__11164__i;
        }
        more = new cljs.core.IndexedSeq(G__11164__a, 0);
      }
      return G__11163__delegate.call(this, x, y, more);
    };
    G__11163.cljs$lang$maxFixedArity = 2;
    G__11163.cljs$lang$applyTo = function(arglist__11165) {
      var x = cljs.core.first(arglist__11165);
      arglist__11165 = cljs.core.next(arglist__11165);
      var y = cljs.core.first(arglist__11165);
      var more = cljs.core.rest(arglist__11165);
      return G__11163__delegate(x, y, more);
    };
    G__11163.cljs$core$IFn$_invoke$arity$variadic = G__11163__delegate;
    return G__11163;
  }();
  bit_or = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return bit_or__2.call(this, x, y);
      default:
        var G__11166 = null;
        if (arguments.length > 2) {
          var G__11167__i = 0, G__11167__a = new Array(arguments.length - 2);
          while (G__11167__i < G__11167__a.length) {
            G__11167__a[G__11167__i] = arguments[G__11167__i + 2];
            ++G__11167__i;
          }
          G__11166 = new cljs.core.IndexedSeq(G__11167__a, 0);
        }
        return bit_or__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__11166);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  bit_or.cljs$lang$maxFixedArity = 2;
  bit_or.cljs$lang$applyTo = bit_or__3.cljs$lang$applyTo;
  bit_or.cljs$core$IFn$_invoke$arity$2 = bit_or__2;
  bit_or.cljs$core$IFn$_invoke$arity$variadic = bit_or__3.cljs$core$IFn$_invoke$arity$variadic;
  return bit_or;
}();
cljs.core.bit_and_not = function() {
  var bit_and_not = null;
  var bit_and_not__2 = function(x, y) {
    return x & ~y;
  };
  var bit_and_not__3 = function() {
    var G__11168__delegate = function(x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(bit_and_not, x & ~y, more);
    };
    var G__11168 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__11169__i = 0, G__11169__a = new Array(arguments.length - 2);
        while (G__11169__i < G__11169__a.length) {
          G__11169__a[G__11169__i] = arguments[G__11169__i + 2];
          ++G__11169__i;
        }
        more = new cljs.core.IndexedSeq(G__11169__a, 0);
      }
      return G__11168__delegate.call(this, x, y, more);
    };
    G__11168.cljs$lang$maxFixedArity = 2;
    G__11168.cljs$lang$applyTo = function(arglist__11170) {
      var x = cljs.core.first(arglist__11170);
      arglist__11170 = cljs.core.next(arglist__11170);
      var y = cljs.core.first(arglist__11170);
      var more = cljs.core.rest(arglist__11170);
      return G__11168__delegate(x, y, more);
    };
    G__11168.cljs$core$IFn$_invoke$arity$variadic = G__11168__delegate;
    return G__11168;
  }();
  bit_and_not = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return bit_and_not__2.call(this, x, y);
      default:
        var G__11171 = null;
        if (arguments.length > 2) {
          var G__11172__i = 0, G__11172__a = new Array(arguments.length - 2);
          while (G__11172__i < G__11172__a.length) {
            G__11172__a[G__11172__i] = arguments[G__11172__i + 2];
            ++G__11172__i;
          }
          G__11171 = new cljs.core.IndexedSeq(G__11172__a, 0);
        }
        return bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__11171);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  bit_and_not.cljs$lang$maxFixedArity = 2;
  bit_and_not.cljs$lang$applyTo = bit_and_not__3.cljs$lang$applyTo;
  bit_and_not.cljs$core$IFn$_invoke$arity$2 = bit_and_not__2;
  bit_and_not.cljs$core$IFn$_invoke$arity$variadic = bit_and_not__3.cljs$core$IFn$_invoke$arity$variadic;
  return bit_and_not;
}();
cljs.core.bit_clear = function bit_clear(x, n) {
  return x & ~(1 << n);
};
cljs.core.bit_flip = function bit_flip(x, n) {
  return x ^ 1 << n;
};
cljs.core.bit_not = function bit_not(x) {
  return~x;
};
cljs.core.bit_set = function bit_set(x, n) {
  return x | 1 << n;
};
cljs.core.bit_test = function bit_test(x, n) {
  return(x & 1 << n) != 0;
};
cljs.core.bit_shift_left = function bit_shift_left(x, n) {
  return x << n;
};
cljs.core.bit_shift_right = function bit_shift_right(x, n) {
  return x >> n;
};
cljs.core.bit_shift_right_zero_fill = function bit_shift_right_zero_fill(x, n) {
  return x >>> n;
};
cljs.core.unsigned_bit_shift_right = function unsigned_bit_shift_right(x, n) {
  return x >>> n;
};
cljs.core.bit_count = function bit_count(v) {
  var v__$1 = v - (v >> 1 & 1431655765);
  var v__$2 = (v__$1 & 858993459) + (v__$1 >> 2 & 858993459);
  return(v__$2 + (v__$2 >> 4) & 252645135) * 16843009 >> 24;
};
cljs.core._EQ__EQ_ = function() {
  var _EQ__EQ_ = null;
  var _EQ__EQ___1 = function(x) {
    return true;
  };
  var _EQ__EQ___2 = function(x, y) {
    return cljs.core._equiv(x, y);
  };
  var _EQ__EQ___3 = function() {
    var G__11177__delegate = function(x, y, more) {
      while (true) {
        if (_EQ__EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
          if (cljs.core.next(more)) {
            var G__11178 = y;
            var G__11179 = cljs.core.first(more);
            var G__11180 = cljs.core.next(more);
            x = G__11178;
            y = G__11179;
            more = G__11180;
            continue;
          } else {
            return _EQ__EQ_.cljs$core$IFn$_invoke$arity$2(y, cljs.core.first(more));
          }
        } else {
          return false;
        }
        break;
      }
    };
    var G__11177 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__11181__i = 0, G__11181__a = new Array(arguments.length - 2);
        while (G__11181__i < G__11181__a.length) {
          G__11181__a[G__11181__i] = arguments[G__11181__i + 2];
          ++G__11181__i;
        }
        more = new cljs.core.IndexedSeq(G__11181__a, 0);
      }
      return G__11177__delegate.call(this, x, y, more);
    };
    G__11177.cljs$lang$maxFixedArity = 2;
    G__11177.cljs$lang$applyTo = function(arglist__11182) {
      var x = cljs.core.first(arglist__11182);
      arglist__11182 = cljs.core.next(arglist__11182);
      var y = cljs.core.first(arglist__11182);
      var more = cljs.core.rest(arglist__11182);
      return G__11177__delegate(x, y, more);
    };
    G__11177.cljs$core$IFn$_invoke$arity$variadic = G__11177__delegate;
    return G__11177;
  }();
  _EQ__EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return _EQ__EQ___1.call(this, x);
      case 2:
        return _EQ__EQ___2.call(this, x, y);
      default:
        var G__11183 = null;
        if (arguments.length > 2) {
          var G__11184__i = 0, G__11184__a = new Array(arguments.length - 2);
          while (G__11184__i < G__11184__a.length) {
            G__11184__a[G__11184__i] = arguments[G__11184__i + 2];
            ++G__11184__i;
          }
          G__11183 = new cljs.core.IndexedSeq(G__11184__a, 0);
        }
        return _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__11183);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  _EQ__EQ_.cljs$lang$maxFixedArity = 2;
  _EQ__EQ_.cljs$lang$applyTo = _EQ__EQ___3.cljs$lang$applyTo;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$1 = _EQ__EQ___1;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$2 = _EQ__EQ___2;
  _EQ__EQ_.cljs$core$IFn$_invoke$arity$variadic = _EQ__EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return _EQ__EQ_;
}();
cljs.core.pos_QMARK_ = function pos_QMARK_(n) {
  return n > 0;
};
cljs.core.zero_QMARK_ = function zero_QMARK_(n) {
  return n === 0;
};
cljs.core.neg_QMARK_ = function neg_QMARK_(x) {
  return x < 0;
};
cljs.core.nthnext = function nthnext(coll, n) {
  var n__$1 = n;
  var xs = cljs.core.seq(coll);
  while (true) {
    if (xs && n__$1 > 0) {
      var G__11185 = n__$1 - 1;
      var G__11186 = cljs.core.next(xs);
      n__$1 = G__11185;
      xs = G__11186;
      continue;
    } else {
      return xs;
    }
    break;
  }
};
cljs.core.str = function() {
  var str = null;
  var str__0 = function() {
    return "";
  };
  var str__1 = function(x) {
    if (x == null) {
      return "";
    } else {
      var G__11190 = x;
      return goog.string.buildString(G__11190);
    }
  };
  var str__2 = function() {
    var G__11191__delegate = function(x, ys) {
      var sb = new goog.string.StringBuffer(str.cljs$core$IFn$_invoke$arity$1(x));
      var more = ys;
      while (true) {
        if (cljs.core.truth_(more)) {
          var G__11192 = sb.append(str.cljs$core$IFn$_invoke$arity$1(cljs.core.first(more)));
          var G__11193 = cljs.core.next(more);
          sb = G__11192;
          more = G__11193;
          continue;
        } else {
          return sb.toString();
        }
        break;
      }
    };
    var G__11191 = function(x, var_args) {
      var ys = null;
      if (arguments.length > 1) {
        var G__11194__i = 0, G__11194__a = new Array(arguments.length - 1);
        while (G__11194__i < G__11194__a.length) {
          G__11194__a[G__11194__i] = arguments[G__11194__i + 1];
          ++G__11194__i;
        }
        ys = new cljs.core.IndexedSeq(G__11194__a, 0);
      }
      return G__11191__delegate.call(this, x, ys);
    };
    G__11191.cljs$lang$maxFixedArity = 1;
    G__11191.cljs$lang$applyTo = function(arglist__11195) {
      var x = cljs.core.first(arglist__11195);
      var ys = cljs.core.rest(arglist__11195);
      return G__11191__delegate(x, ys);
    };
    G__11191.cljs$core$IFn$_invoke$arity$variadic = G__11191__delegate;
    return G__11191;
  }();
  str = function(x, var_args) {
    var ys = var_args;
    switch(arguments.length) {
      case 0:
        return str__0.call(this);
      case 1:
        return str__1.call(this, x);
      default:
        var G__11196 = null;
        if (arguments.length > 1) {
          var G__11197__i = 0, G__11197__a = new Array(arguments.length - 1);
          while (G__11197__i < G__11197__a.length) {
            G__11197__a[G__11197__i] = arguments[G__11197__i + 1];
            ++G__11197__i;
          }
          G__11196 = new cljs.core.IndexedSeq(G__11197__a, 0);
        }
        return str__2.cljs$core$IFn$_invoke$arity$variadic(x, G__11196);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  str.cljs$lang$maxFixedArity = 1;
  str.cljs$lang$applyTo = str__2.cljs$lang$applyTo;
  str.cljs$core$IFn$_invoke$arity$0 = str__0;
  str.cljs$core$IFn$_invoke$arity$1 = str__1;
  str.cljs$core$IFn$_invoke$arity$variadic = str__2.cljs$core$IFn$_invoke$arity$variadic;
  return str;
}();
cljs.core.subs = function() {
  var subs = null;
  var subs__2 = function(s, start) {
    return s.substring(start);
  };
  var subs__3 = function(s, start, end) {
    return s.substring(start, end);
  };
  subs = function(s, start, end) {
    switch(arguments.length) {
      case 2:
        return subs__2.call(this, s, start);
      case 3:
        return subs__3.call(this, s, start, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subs.cljs$core$IFn$_invoke$arity$2 = subs__2;
  subs.cljs$core$IFn$_invoke$arity$3 = subs__3;
  return subs;
}();
cljs.core.equiv_sequential = function equiv_sequential(x, y) {
  return cljs.core.boolean$(cljs.core.sequential_QMARK_(y) ? cljs.core.counted_QMARK_(x) && cljs.core.counted_QMARK_(y) && !(cljs.core.count(x) === cljs.core.count(y)) ? false : function() {
    var xs = cljs.core.seq(x);
    var ys = cljs.core.seq(y);
    while (true) {
      if (xs == null) {
        return ys == null;
      } else {
        if (ys == null) {
          return false;
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(xs), cljs.core.first(ys))) {
            var G__11198 = cljs.core.next(xs);
            var G__11199 = cljs.core.next(ys);
            xs = G__11198;
            ys = G__11199;
            continue;
          } else {
            return false;
          }
        }
      }
      break;
    }
  }() : null);
};
cljs.core.hash_coll = function hash_coll(coll) {
  if (cljs.core.seq(coll)) {
    var res = cljs.core.hash(cljs.core.first(coll));
    var s = cljs.core.next(coll);
    while (true) {
      if (s == null) {
        return res;
      } else {
        var G__11200 = cljs.core.hash_combine(res, cljs.core.hash(cljs.core.first(s)));
        var G__11201 = cljs.core.next(s);
        res = G__11200;
        s = G__11201;
        continue;
      }
      break;
    }
  } else {
    return 0;
  }
};
cljs.core.hash_imap = function hash_imap(m) {
  var h = 0;
  var s = cljs.core.seq(m);
  while (true) {
    if (s) {
      var e = cljs.core.first(s);
      var G__11206 = (h + (cljs.core.hash(function() {
        var G__11204 = e;
        return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__11204) : cljs.core.key.call(null, G__11204);
      }()) ^ cljs.core.hash(function() {
        var G__11205 = e;
        return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__11205) : cljs.core.val.call(null, G__11205);
      }()))) % 4503599627370496;
      var G__11207 = cljs.core.next(s);
      h = G__11206;
      s = G__11207;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.hash_iset = function hash_iset(s) {
  var h = 0;
  var s__$1 = cljs.core.seq(s);
  while (true) {
    if (s__$1) {
      var e = cljs.core.first(s__$1);
      var G__11208 = (h + cljs.core.hash(e)) % 4503599627370496;
      var G__11209 = cljs.core.next(s__$1);
      h = G__11208;
      s__$1 = G__11209;
      continue;
    } else {
      return h;
    }
    break;
  }
};
cljs.core.extend_object_BANG_ = function extend_object_BANG_(obj, fn_map) {
  var seq__11220_11230 = cljs.core.seq(fn_map);
  var chunk__11221_11231 = null;
  var count__11222_11232 = 0;
  var i__11223_11233 = 0;
  while (true) {
    if (i__11223_11233 < count__11222_11232) {
      var vec__11224_11234 = chunk__11221_11231.cljs$core$IIndexed$_nth$arity$2(null, i__11223_11233);
      var key_name_11235 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11224_11234, 0, null);
      var f_11236 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11224_11234, 1, null);
      var str_name_11237 = function() {
        var G__11225 = key_name_11235;
        return cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__11225) : cljs.core.name.call(null, G__11225);
      }();
      obj[str_name_11237] = f_11236;
      var G__11238 = seq__11220_11230;
      var G__11239 = chunk__11221_11231;
      var G__11240 = count__11222_11232;
      var G__11241 = i__11223_11233 + 1;
      seq__11220_11230 = G__11238;
      chunk__11221_11231 = G__11239;
      count__11222_11232 = G__11240;
      i__11223_11233 = G__11241;
      continue;
    } else {
      var temp__4126__auto___11242 = cljs.core.seq(seq__11220_11230);
      if (temp__4126__auto___11242) {
        var seq__11220_11243__$1 = temp__4126__auto___11242;
        if (cljs.core.chunked_seq_QMARK_(seq__11220_11243__$1)) {
          var c__4712__auto___11244 = function() {
            var G__11226 = seq__11220_11243__$1;
            return cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_first.cljs$core$IFn$_invoke$arity$1(G__11226) : cljs.core.chunk_first.call(null, G__11226);
          }();
          var G__11245 = function() {
            var G__11227 = seq__11220_11243__$1;
            return cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1 ? cljs.core.chunk_rest.cljs$core$IFn$_invoke$arity$1(G__11227) : cljs.core.chunk_rest.call(null, G__11227);
          }();
          var G__11246 = c__4712__auto___11244;
          var G__11247 = cljs.core.count(c__4712__auto___11244);
          var G__11248 = 0;
          seq__11220_11230 = G__11245;
          chunk__11221_11231 = G__11246;
          count__11222_11232 = G__11247;
          i__11223_11233 = G__11248;
          continue;
        } else {
          var vec__11228_11249 = cljs.core.first(seq__11220_11243__$1);
          var key_name_11250 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11228_11249, 0, null);
          var f_11251 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__11228_11249, 1, null);
          var str_name_11252 = function() {
            var G__11229 = key_name_11250;
            return cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__11229) : cljs.core.name.call(null, G__11229);
          }();
          obj[str_name_11252] = f_11251;
          var G__11253 = cljs.core.next(seq__11220_11243__$1);
          var G__11254 = null;
          var G__11255 = 0;
          var G__11256 = 0;
          seq__11220_11230 = G__11253;
          chunk__11221_11231 = G__11254;
          count__11222_11232 = G__11255;
          i__11223_11233 = G__11256;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return obj;
};
cljs.core.List = function(meta, first, rest, count, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.count = count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65937646;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.List.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.List.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.List.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.List.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.List(self__.meta, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return null;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.List.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._rest(coll__$1);
};
cljs.core.List.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4346__auto__ = self__.__hash;
  if (!(h__4346__auto__ == null)) {
    return h__4346__auto__;
  } else {
    var h__4346__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4346__auto____$1;
    return h__4346__auto____$1;
  }
};
cljs.core.List.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.List.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.List.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.List.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.List.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.count === 1) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.List.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.List.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(meta__$1, self__.first, self__.rest, self__.count, self__.__hash);
};
cljs.core.List.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, coll__$1, self__.count + 1, null);
};
cljs.core.List.cljs$lang$type = true;
cljs.core.List.cljs$lang$ctorStr = "cljs.core/List";
cljs.core.List.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/List");
};
cljs.core.__GT_List = function __GT_List(meta, first, rest, count, __hash) {
  return new cljs.core.List(meta, first, rest, count, __hash);
};
cljs.core.List.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4903__auto__ = this;
  return cljs.core.es6_iterator(this__4903__auto__);
};
cljs.core.EmptyList = function(meta) {
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition0$ = 65937614;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.EmptyList.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.EmptyList.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.EmptyList.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.EmptyList.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.EmptyList(self__.meta);
};
cljs.core.EmptyList.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return 0;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  throw new Error("Can't pop empty list");
};
cljs.core.EmptyList.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.empty_ordered_hash;
};
cljs.core.EmptyList.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.EmptyList.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.EmptyList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return null;
};
cljs.core.EmptyList.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.EmptyList(meta__$1);
};
cljs.core.EmptyList.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.List(self__.meta, o, null, 1, null);
};
cljs.core.EmptyList.cljs$lang$type = true;
cljs.core.EmptyList.cljs$lang$ctorStr = "cljs.core/EmptyList";
cljs.core.EmptyList.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/EmptyList");
};
cljs.core.__GT_EmptyList = function __GT_EmptyList(meta) {
  return new cljs.core.EmptyList(meta);
};
cljs.core.List.EMPTY = new cljs.core.EmptyList(null);
cljs.core.EmptyList.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4903__auto__ = this;
  return cljs.core.es6_iterator(this__4903__auto__);
};
cljs.core.reversible_QMARK_ = function reversible_QMARK_(coll) {
  var G__11258 = coll;
  if (G__11258) {
    var bit__4606__auto__ = G__11258.cljs$lang$protocol_mask$partition0$ & 134217728;
    if (bit__4606__auto__ || G__11258.cljs$core$IReversible$) {
      return true;
    } else {
      if (!G__11258.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible, G__11258);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IReversible, G__11258);
  }
};
cljs.core.rseq = function rseq(coll) {
  return cljs.core._rseq(coll);
};
cljs.core.reverse = function reverse(coll) {
  if (cljs.core.reversible_QMARK_(coll)) {
    return cljs.core.rseq(coll);
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.List.EMPTY, coll);
  }
};
cljs.core.list = function() {
  var list__delegate = function(xs) {
    var arr = xs instanceof cljs.core.IndexedSeq && xs.i === 0 ? xs.arr : function() {
      var arr = [];
      var xs__$1 = xs;
      while (true) {
        if (!(xs__$1 == null)) {
          arr.push(xs__$1.cljs$core$ISeq$_first$arity$1(null));
          var G__11259 = xs__$1.cljs$core$INext$_next$arity$1(null);
          xs__$1 = G__11259;
          continue;
        } else {
          return arr;
        }
        break;
      }
    }();
    var i = arr.length;
    var r = cljs.core.List.EMPTY;
    while (true) {
      if (i > 0) {
        var G__11260 = i - 1;
        var G__11261 = r.cljs$core$ICollection$_conj$arity$2(null, arr[i - 1]);
        i = G__11260;
        r = G__11261;
        continue;
      } else {
        return r;
      }
      break;
    }
  };
  var list = function(var_args) {
    var xs = null;
    if (arguments.length > 0) {
      var G__11262__i = 0, G__11262__a = new Array(arguments.length - 0);
      while (G__11262__i < G__11262__a.length) {
        G__11262__a[G__11262__i] = arguments[G__11262__i + 0];
        ++G__11262__i;
      }
      xs = new cljs.core.IndexedSeq(G__11262__a, 0);
    }
    return list__delegate.call(this, xs);
  };
  list.cljs$lang$maxFixedArity = 0;
  list.cljs$lang$applyTo = function(arglist__11263) {
    var xs = cljs.core.seq(arglist__11263);
    return list__delegate(xs);
  };
  list.cljs$core$IFn$_invoke$arity$variadic = list__delegate;
  return list;
}();
cljs.core.Cons = function(meta, first, rest, __hash) {
  this.meta = meta;
  this.first = first;
  this.rest = rest;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 65929452;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Cons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Cons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Cons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Cons.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Cons(self__.meta, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core.seq(self__.rest);
  }
};
cljs.core.Cons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4346__auto__ = self__.__hash;
  if (!(h__4346__auto__ == null)) {
    return h__4346__auto__;
  } else {
    var h__4346__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4346__auto____$1;
    return h__4346__auto____$1;
  }
};
cljs.core.Cons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.Cons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.Cons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.first;
};
cljs.core.Cons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.Cons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.Cons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(meta__$1, self__.first, self__.rest, self__.__hash);
};
cljs.core.Cons.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.Cons(null, o, coll__$1, self__.__hash);
};
cljs.core.Cons.cljs$lang$type = true;
cljs.core.Cons.cljs$lang$ctorStr = "cljs.core/Cons";
cljs.core.Cons.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/Cons");
};
cljs.core.__GT_Cons = function __GT_Cons(meta, first, rest, __hash) {
  return new cljs.core.Cons(meta, first, rest, __hash);
};
cljs.core.Cons.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4903__auto__ = this;
  return cljs.core.es6_iterator(this__4903__auto__);
};
cljs.core.cons = function cons(x, coll) {
  if (function() {
    var or__3925__auto__ = coll == null;
    if (or__3925__auto__) {
      return or__3925__auto__;
    } else {
      var G__11267 = coll;
      if (G__11267) {
        var bit__4599__auto__ = G__11267.cljs$lang$protocol_mask$partition0$ & 64;
        if (bit__4599__auto__ || G__11267.cljs$core$ISeq$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }
  }()) {
    return new cljs.core.Cons(null, x, coll, null);
  } else {
    return new cljs.core.Cons(null, x, cljs.core.seq(coll), null);
  }
};
cljs.core.list_QMARK_ = function list_QMARK_(x) {
  var G__11269 = x;
  if (G__11269) {
    var bit__4606__auto__ = G__11269.cljs$lang$protocol_mask$partition0$ & 33554432;
    if (bit__4606__auto__ || G__11269.cljs$core$IList$) {
      return true;
    } else {
      if (!G__11269.cljs$lang$protocol_mask$partition0$) {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IList, G__11269);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_(cljs.core.IList, G__11269);
  }
};
cljs.core.hash_keyword = function hash_keyword(k) {
  return cljs.core.hash_symbol(k) + 2654435769 | 0;
};
cljs.core.compare_keywords = function compare_keywords(a, b) {
  if (a.fqn === b.fqn) {
    return 0;
  } else {
    if (cljs.core.truth_(function() {
      var and__3913__auto__ = cljs.core.not(a.ns);
      if (and__3913__auto__) {
        return b.ns;
      } else {
        return and__3913__auto__;
      }
    }())) {
      return-1;
    } else {
      if (cljs.core.truth_(a.ns)) {
        if (cljs.core.not(b.ns)) {
          return 1;
        } else {
          var nsc = function() {
            var G__11276 = a.ns;
            var G__11277 = b.ns;
            return goog.array.defaultCompare(G__11276, G__11277);
          }();
          if (0 === nsc) {
            var G__11278 = a.name;
            var G__11279 = b.name;
            return goog.array.defaultCompare(G__11278, G__11279);
          } else {
            return nsc;
          }
        }
      } else {
        var G__11280 = a.name;
        var G__11281 = b.name;
        return goog.array.defaultCompare(G__11280, G__11281);
      }
    }
  }
};
cljs.core.Keyword = function(ns, name, fqn, _hash) {
  this.ns = ns;
  this.name = name;
  this.fqn = fqn;
  this._hash = _hash;
  this.cljs$lang$protocol_mask$partition0$ = 2153775105;
  this.cljs$lang$protocol_mask$partition1$ = 4096;
};
cljs.core.Keyword.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(o, writer, _) {
  var self__ = this;
  var o__$1 = this;
  return cljs.core._write(writer, [cljs.core.str(":"), cljs.core.str(self__.fqn)].join(""));
};
cljs.core.Keyword.prototype.cljs$core$INamed$_name$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.name;
};
cljs.core.Keyword.prototype.cljs$core$INamed$_namespace$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.ns;
};
cljs.core.Keyword.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var h__4346__auto__ = self__._hash;
  if (!(h__4346__auto__ == null)) {
    return h__4346__auto__;
  } else {
    var h__4346__auto____$1 = cljs.core.hash_keyword(this$__$1);
    self__._hash = h__4346__auto____$1;
    return h__4346__auto____$1;
  }
};
cljs.core.Keyword.prototype.call = function() {
  var G__11283 = null;
  var G__11283__2 = function(self__, coll) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, kw);
  };
  var G__11283__3 = function(self__, coll, not_found) {
    var self__ = this;
    var self____$1 = this;
    var kw = self____$1;
    return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, kw, not_found);
  };
  G__11283 = function(self__, coll, not_found) {
    switch(arguments.length) {
      case 2:
        return G__11283__2.call(this, self__, coll);
      case 3:
        return G__11283__3.call(this, self__, coll, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__11283.cljs$core$IFn$_invoke$arity$2 = G__11283__2;
  G__11283.cljs$core$IFn$_invoke$arity$3 = G__11283__3;
  return G__11283;
}();
cljs.core.Keyword.prototype.apply = function(self__, args11282) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args11282)));
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$1 = function(coll) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$2(coll, kw);
};
cljs.core.Keyword.prototype.cljs$core$IFn$_invoke$arity$2 = function(coll, not_found) {
  var self__ = this;
  var kw = this;
  return cljs.core.get.cljs$core$IFn$_invoke$arity$3(coll, kw, not_found);
};
cljs.core.Keyword.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  if (other instanceof cljs.core.Keyword) {
    return self__.fqn === other.fqn;
  } else {
    return false;
  }
};
cljs.core.Keyword.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return[cljs.core.str(":"), cljs.core.str(self__.fqn)].join("");
};
cljs.core.Keyword.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Keyword.cljs$lang$type = true;
cljs.core.Keyword.cljs$lang$ctorStr = "cljs.core/Keyword";
cljs.core.Keyword.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/Keyword");
};
cljs.core.__GT_Keyword = function __GT_Keyword(ns, name, fqn, _hash) {
  return new cljs.core.Keyword(ns, name, fqn, _hash);
};
cljs.core.keyword_QMARK_ = function keyword_QMARK_(x) {
  return x instanceof cljs.core.Keyword;
};
cljs.core.keyword_identical_QMARK_ = function keyword_identical_QMARK_(x, y) {
  if (x === y) {
    return true;
  } else {
    if (x instanceof cljs.core.Keyword && y instanceof cljs.core.Keyword) {
      return x.fqn === y.fqn;
    } else {
      return false;
    }
  }
};
cljs.core.namespace = function namespace(x) {
  if (function() {
    var G__11285 = x;
    if (G__11285) {
      var bit__4599__auto__ = G__11285.cljs$lang$protocol_mask$partition1$ & 4096;
      if (bit__4599__auto__ || G__11285.cljs$core$INamed$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return x.cljs$core$INamed$_namespace$arity$1(null);
  } else {
    throw new Error([cljs.core.str("Doesn't support namespace: "), cljs.core.str(x)].join(""));
  }
};
cljs.core.keyword = function() {
  var keyword = null;
  var keyword__1 = function(name) {
    if (name instanceof cljs.core.Keyword) {
      return name;
    } else {
      if (name instanceof cljs.core.Symbol) {
        return new cljs.core.Keyword(cljs.core.namespace(name), function() {
          var G__11287 = name;
          return cljs.core.name.cljs$core$IFn$_invoke$arity$1 ? cljs.core.name.cljs$core$IFn$_invoke$arity$1(G__11287) : cljs.core.name.call(null, G__11287);
        }(), name.str, null);
      } else {
        if (typeof name === "string") {
          var parts = name.split("/");
          if (parts.length === 2) {
            return new cljs.core.Keyword(parts[0], parts[1], name, null);
          } else {
            return new cljs.core.Keyword(null, parts[0], name, null);
          }
        } else {
          return null;
        }
      }
    }
  };
  var keyword__2 = function(ns, name) {
    return new cljs.core.Keyword(ns, name, [cljs.core.str(cljs.core.truth_(ns) ? [cljs.core.str(ns), cljs.core.str("/")].join("") : null), cljs.core.str(name)].join(""), null);
  };
  keyword = function(ns, name) {
    switch(arguments.length) {
      case 1:
        return keyword__1.call(this, ns);
      case 2:
        return keyword__2.call(this, ns, name);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keyword.cljs$core$IFn$_invoke$arity$1 = keyword__1;
  keyword.cljs$core$IFn$_invoke$arity$2 = keyword__2;
  return keyword;
}();
cljs.core.LazySeq = function(meta, fn, s, __hash) {
  this.meta = meta;
  this.fn = fn;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.LazySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.LazySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.LazySeq.prototype.sval = function() {
  var self__ = this;
  var coll = this;
  if (self__.fn == null) {
    return self__.s;
  } else {
    self__.s = function() {
      return self__.fn.cljs$core$IFn$_invoke$arity$0 ? self__.fn.cljs$core$IFn$_invoke$arity$0() : self__.fn.call(null);
    }();
    self__.fn = null;
    return self__.s;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.LazySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.next(self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4346__auto__ = self__.__hash;
  if (!(h__4346__auto__ == null)) {
    return h__4346__auto__;
  } else {
    var h__4346__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4346__auto____$1;
    return h__4346__auto____$1;
  }
};
cljs.core.LazySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.LazySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (self__.s == null) {
    return null;
  } else {
    return cljs.core.first(self__.s);
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  cljs.core._seq(coll__$1);
  if (!(self__.s == null)) {
    return cljs.core.rest(self__.s);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.LazySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  coll__$1.sval();
  if (self__.s == null) {
    return null;
  } else {
    var ls = self__.s;
    while (true) {
      if (ls instanceof cljs.core.LazySeq) {
        var G__11288 = ls.sval();
        ls = G__11288;
        continue;
      } else {
        self__.s = ls;
        return cljs.core.seq(self__.s);
      }
      break;
    }
  }
};
cljs.core.LazySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.LazySeq(meta__$1, self__.fn, self__.s, self__.__hash);
};
cljs.core.LazySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.LazySeq.cljs$lang$type = true;
cljs.core.LazySeq.cljs$lang$ctorStr = "cljs.core/LazySeq";
cljs.core.LazySeq.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/LazySeq");
};
cljs.core.__GT_LazySeq = function __GT_LazySeq(meta, fn, s, __hash) {
  return new cljs.core.LazySeq(meta, fn, s, __hash);
};
cljs.core.LazySeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4903__auto__ = this;
  return cljs.core.es6_iterator(this__4903__auto__);
};
cljs.core.ChunkBuffer = function(buf, end) {
  this.buf = buf;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.ChunkBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end;
};
cljs.core.ChunkBuffer.prototype.add = function(o) {
  var self__ = this;
  var _ = this;
  self__.buf[self__.end] = o;
  return self__.end = self__.end + 1;
};
cljs.core.ChunkBuffer.prototype.chunk = function(o) {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.ArrayChunk(self__.buf, 0, self__.end);
  self__.buf = null;
  return ret;
};
cljs.core.ChunkBuffer.cljs$lang$type = true;
cljs.core.ChunkBuffer.cljs$lang$ctorStr = "cljs.core/ChunkBuffer";
cljs.core.ChunkBuffer.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/ChunkBuffer");
};
cljs.core.__GT_ChunkBuffer = function __GT_ChunkBuffer(buf, end) {
  return new cljs.core.ChunkBuffer(buf, end);
};
cljs.core.chunk_buffer = function chunk_buffer(capacity) {
  return new cljs.core.ChunkBuffer(new Array(capacity), 0);
};
cljs.core.ArrayChunk = function(arr, off, end) {
  this.arr = arr;
  this.off = off;
  this.end = end;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 524306;
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, self__.arr[self__.off], self__.off + 1);
};
cljs.core.ArrayChunk.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_reduce.cljs$core$IFn$_invoke$arity$4(self__.arr, f, start, self__.off);
};
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$ = true;
cljs.core.ArrayChunk.prototype.cljs$core$IChunk$_drop_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off === self__.end) {
    throw new Error("-drop-first of empty chunk");
  } else {
    return new cljs.core.ArrayChunk(self__.arr, self__.off + 1, self__.end);
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, i) {
  var self__ = this;
  var coll__$1 = this;
  return self__.arr[self__.off + i];
};
cljs.core.ArrayChunk.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, i, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (i >= 0 && i < self__.end - self__.off) {
    return self__.arr[self__.off + i];
  } else {
    return not_found;
  }
};
cljs.core.ArrayChunk.prototype.cljs$core$ICounted$_count$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.end - self__.off;
};
cljs.core.ArrayChunk.cljs$lang$type = true;
cljs.core.ArrayChunk.cljs$lang$ctorStr = "cljs.core/ArrayChunk";
cljs.core.ArrayChunk.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/ArrayChunk");
};
cljs.core.__GT_ArrayChunk = function __GT_ArrayChunk(arr, off, end) {
  return new cljs.core.ArrayChunk(arr, off, end);
};
cljs.core.array_chunk = function() {
  var array_chunk = null;
  var array_chunk__1 = function(arr) {
    return new cljs.core.ArrayChunk(arr, 0, arr.length);
  };
  var array_chunk__2 = function(arr, off) {
    return new cljs.core.ArrayChunk(arr, off, arr.length);
  };
  var array_chunk__3 = function(arr, off, end) {
    return new cljs.core.ArrayChunk(arr, off, end);
  };
  array_chunk = function(arr, off, end) {
    switch(arguments.length) {
      case 1:
        return array_chunk__1.call(this, arr);
      case 2:
        return array_chunk__2.call(this, arr, off);
      case 3:
        return array_chunk__3.call(this, arr, off, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  array_chunk.cljs$core$IFn$_invoke$arity$1 = array_chunk__1;
  array_chunk.cljs$core$IFn$_invoke$arity$2 = array_chunk__2;
  array_chunk.cljs$core$IFn$_invoke$arity$3 = array_chunk__3;
  return array_chunk;
}();
cljs.core.ChunkedCons = function(chunk, more, meta, __hash) {
  this.chunk = chunk;
  this.more = more;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31850732;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedCons.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ChunkedCons.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedCons.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count(self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk), self__.more, self__.meta, null);
  } else {
    var more__$1 = cljs.core._seq(self__.more);
    if (more__$1 == null) {
      return null;
    } else {
      return more__$1;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4346__auto__ = self__.__hash;
  if (!(h__4346__auto__ == null)) {
    return h__4346__auto__;
  } else {
    var h__4346__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4346__auto____$1;
    return h__4346__auto____$1;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ChunkedCons.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.chunk, 0);
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._count(self__.chunk) > 1) {
    return new cljs.core.ChunkedCons(cljs.core._drop_first(self__.chunk), self__.more, self__.meta, null);
  } else {
    if (self__.more == null) {
      return cljs.core.List.EMPTY;
    } else {
      return self__.more;
    }
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.chunk;
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ChunkedCons(self__.chunk, self__.more, m, self__.__hash);
};
cljs.core.ChunkedCons.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons(o, this$__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.more == null) {
    return null;
  } else {
    return self__.more;
  }
};
cljs.core.ChunkedCons.cljs$lang$type = true;
cljs.core.ChunkedCons.cljs$lang$ctorStr = "cljs.core/ChunkedCons";
cljs.core.ChunkedCons.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/ChunkedCons");
};
cljs.core.__GT_ChunkedCons = function __GT_ChunkedCons(chunk, more, meta, __hash) {
  return new cljs.core.ChunkedCons(chunk, more, meta, __hash);
};
cljs.core.ChunkedCons.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4903__auto__ = this;
  return cljs.core.es6_iterator(this__4903__auto__);
};
cljs.core.chunk_cons = function chunk_cons(chunk, rest) {
  if (cljs.core._count(chunk) === 0) {
    return rest;
  } else {
    return new cljs.core.ChunkedCons(chunk, rest, null, null);
  }
};
cljs.core.chunk_append = function chunk_append(b, x) {
  return b.add(x);
};
cljs.core.chunk = function chunk(b) {
  return b.chunk();
};
cljs.core.chunk_first = function chunk_first(s) {
  return cljs.core._chunked_first(s);
};
cljs.core.chunk_rest = function chunk_rest(s) {
  return cljs.core._chunked_rest(s);
};
cljs.core.chunk_next = function chunk_next(s) {
  if (function() {
    var G__11290 = s;
    if (G__11290) {
      var bit__4599__auto__ = G__11290.cljs$lang$protocol_mask$partition1$ & 1024;
      if (bit__4599__auto__ || G__11290.cljs$core$IChunkedNext$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return cljs.core._chunked_next(s);
  } else {
    return cljs.core.seq(cljs.core._chunked_rest(s));
  }
};
cljs.core.to_array = function to_array(s) {
  var ary = [];
  var s__$1 = s;
  while (true) {
    if (cljs.core.seq(s__$1)) {
      ary.push(cljs.core.first(s__$1));
      var G__11291 = cljs.core.next(s__$1);
      s__$1 = G__11291;
      continue;
    } else {
      return ary;
    }
    break;
  }
};
cljs.core.to_array_2d = function to_array_2d(coll) {
  var ret = new Array(cljs.core.count(coll));
  var i_11292 = 0;
  var xs_11293 = cljs.core.seq(coll);
  while (true) {
    if (xs_11293) {
      ret[i_11292] = cljs.core.to_array(cljs.core.first(xs_11293));
      var G__11294 = i_11292 + 1;
      var G__11295 = cljs.core.next(xs_11293);
      i_11292 = G__11294;
      xs_11293 = G__11295;
      continue;
    } else {
    }
    break;
  }
  return ret;
};
cljs.core.int_array = function() {
  var int_array = null;
  var int_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return int_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
    } else {
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
    }
  };
  var int_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_(init_val_or_seq)) {
      var s = cljs.core.seq(init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first(s__$1);
          var G__11298 = i + 1;
          var G__11299 = cljs.core.next(s__$1);
          i = G__11298;
          s__$1 = G__11299;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4812__auto___11300 = size;
      var i_11301 = 0;
      while (true) {
        if (i_11301 < n__4812__auto___11300) {
          a[i_11301] = init_val_or_seq;
          var G__11302 = i_11301 + 1;
          i_11301 = G__11302;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  int_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return int_array__1.call(this, size);
      case 2:
        return int_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  int_array.cljs$core$IFn$_invoke$arity$1 = int_array__1;
  int_array.cljs$core$IFn$_invoke$arity$2 = int_array__2;
  return int_array;
}();
cljs.core.long_array = function() {
  var long_array = null;
  var long_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return long_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
    } else {
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
    }
  };
  var long_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_(init_val_or_seq)) {
      var s = cljs.core.seq(init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first(s__$1);
          var G__11305 = i + 1;
          var G__11306 = cljs.core.next(s__$1);
          i = G__11305;
          s__$1 = G__11306;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4812__auto___11307 = size;
      var i_11308 = 0;
      while (true) {
        if (i_11308 < n__4812__auto___11307) {
          a[i_11308] = init_val_or_seq;
          var G__11309 = i_11308 + 1;
          i_11308 = G__11309;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  long_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return long_array__1.call(this, size);
      case 2:
        return long_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  long_array.cljs$core$IFn$_invoke$arity$1 = long_array__1;
  long_array.cljs$core$IFn$_invoke$arity$2 = long_array__2;
  return long_array;
}();
cljs.core.double_array = function() {
  var double_array = null;
  var double_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return double_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
    } else {
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
    }
  };
  var double_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_(init_val_or_seq)) {
      var s = cljs.core.seq(init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first(s__$1);
          var G__11312 = i + 1;
          var G__11313 = cljs.core.next(s__$1);
          i = G__11312;
          s__$1 = G__11313;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4812__auto___11314 = size;
      var i_11315 = 0;
      while (true) {
        if (i_11315 < n__4812__auto___11314) {
          a[i_11315] = init_val_or_seq;
          var G__11316 = i_11315 + 1;
          i_11315 = G__11316;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  double_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return double_array__1.call(this, size);
      case 2:
        return double_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  double_array.cljs$core$IFn$_invoke$arity$1 = double_array__1;
  double_array.cljs$core$IFn$_invoke$arity$2 = double_array__2;
  return double_array;
}();
cljs.core.object_array = function() {
  var object_array = null;
  var object_array__1 = function(size_or_seq) {
    if (typeof size_or_seq === "number") {
      return object_array.cljs$core$IFn$_invoke$arity$2(size_or_seq, null);
    } else {
      return cljs.core.into_array.cljs$core$IFn$_invoke$arity$1(size_or_seq);
    }
  };
  var object_array__2 = function(size, init_val_or_seq) {
    var a = new Array(size);
    if (cljs.core.seq_QMARK_(init_val_or_seq)) {
      var s = cljs.core.seq(init_val_or_seq);
      var i = 0;
      var s__$1 = s;
      while (true) {
        if (s__$1 && i < size) {
          a[i] = cljs.core.first(s__$1);
          var G__11319 = i + 1;
          var G__11320 = cljs.core.next(s__$1);
          i = G__11319;
          s__$1 = G__11320;
          continue;
        } else {
          return a;
        }
        break;
      }
    } else {
      var n__4812__auto___11321 = size;
      var i_11322 = 0;
      while (true) {
        if (i_11322 < n__4812__auto___11321) {
          a[i_11322] = init_val_or_seq;
          var G__11323 = i_11322 + 1;
          i_11322 = G__11323;
          continue;
        } else {
        }
        break;
      }
      return a;
    }
  };
  object_array = function(size, init_val_or_seq) {
    switch(arguments.length) {
      case 1:
        return object_array__1.call(this, size);
      case 2:
        return object_array__2.call(this, size, init_val_or_seq);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  object_array.cljs$core$IFn$_invoke$arity$1 = object_array__1;
  object_array.cljs$core$IFn$_invoke$arity$2 = object_array__2;
  return object_array;
}();
cljs.core.bounded_count = function bounded_count(s, n) {
  if (cljs.core.counted_QMARK_(s)) {
    return cljs.core.count(s);
  } else {
    var s__$1 = s;
    var i = n;
    var sum = 0;
    while (true) {
      if (i > 0 && cljs.core.seq(s__$1)) {
        var G__11324 = cljs.core.next(s__$1);
        var G__11325 = i - 1;
        var G__11326 = sum + 1;
        s__$1 = G__11324;
        i = G__11325;
        sum = G__11326;
        continue;
      } else {
        return sum;
      }
      break;
    }
  }
};
cljs.core.spread = function spread(arglist) {
  if (arglist == null) {
    return null;
  } else {
    if (cljs.core.next(arglist) == null) {
      return cljs.core.seq(cljs.core.first(arglist));
    } else {
      return cljs.core.cons(cljs.core.first(arglist), spread(cljs.core.next(arglist)));
    }
  }
};
cljs.core.concat = function() {
  var concat = null;
  var concat__0 = function() {
    return new cljs.core.LazySeq(null, function() {
      return null;
    }, null, null);
  };
  var concat__1 = function(x) {
    return new cljs.core.LazySeq(null, function() {
      return x;
    }, null, null);
  };
  var concat__2 = function(x, y) {
    return new cljs.core.LazySeq(null, function() {
      var s = cljs.core.seq(x);
      if (s) {
        if (cljs.core.chunked_seq_QMARK_(s)) {
          return cljs.core.chunk_cons(cljs.core.chunk_first(s), concat.cljs$core$IFn$_invoke$arity$2(cljs.core.chunk_rest(s), y));
        } else {
          return cljs.core.cons(cljs.core.first(s), concat.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s), y));
        }
      } else {
        return y;
      }
    }, null, null);
  };
  var concat__3 = function() {
    var G__11346__delegate = function(x, y, zs) {
      var cat = function cat(xys, zs__$1) {
        return new cljs.core.LazySeq(null, function() {
          var xys__$1 = cljs.core.seq(xys);
          if (xys__$1) {
            if (cljs.core.chunked_seq_QMARK_(xys__$1)) {
              return cljs.core.chunk_cons(cljs.core.chunk_first(xys__$1), cat(cljs.core.chunk_rest(xys__$1), zs__$1));
            } else {
              return cljs.core.cons(cljs.core.first(xys__$1), cat(cljs.core.rest(xys__$1), zs__$1));
            }
          } else {
            if (cljs.core.truth_(zs__$1)) {
              return cat(cljs.core.first(zs__$1), cljs.core.next(zs__$1));
            } else {
              return null;
            }
          }
        }, null, null);
      };
      return cat(concat.cljs$core$IFn$_invoke$arity$2(x, y), zs);
    };
    var G__11346 = function(x, y, var_args) {
      var zs = null;
      if (arguments.length > 2) {
        var G__11347__i = 0, G__11347__a = new Array(arguments.length - 2);
        while (G__11347__i < G__11347__a.length) {
          G__11347__a[G__11347__i] = arguments[G__11347__i + 2];
          ++G__11347__i;
        }
        zs = new cljs.core.IndexedSeq(G__11347__a, 0);
      }
      return G__11346__delegate.call(this, x, y, zs);
    };
    G__11346.cljs$lang$maxFixedArity = 2;
    G__11346.cljs$lang$applyTo = function(arglist__11348) {
      var x = cljs.core.first(arglist__11348);
      arglist__11348 = cljs.core.next(arglist__11348);
      var y = cljs.core.first(arglist__11348);
      var zs = cljs.core.rest(arglist__11348);
      return G__11346__delegate(x, y, zs);
    };
    G__11346.cljs$core$IFn$_invoke$arity$variadic = G__11346__delegate;
    return G__11346;
  }();
  concat = function(x, y, var_args) {
    var zs = var_args;
    switch(arguments.length) {
      case 0:
        return concat__0.call(this);
      case 1:
        return concat__1.call(this, x);
      case 2:
        return concat__2.call(this, x, y);
      default:
        var G__11349 = null;
        if (arguments.length > 2) {
          var G__11350__i = 0, G__11350__a = new Array(arguments.length - 2);
          while (G__11350__i < G__11350__a.length) {
            G__11350__a[G__11350__i] = arguments[G__11350__i + 2];
            ++G__11350__i;
          }
          G__11349 = new cljs.core.IndexedSeq(G__11350__a, 0);
        }
        return concat__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__11349);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  concat.cljs$lang$maxFixedArity = 2;
  concat.cljs$lang$applyTo = concat__3.cljs$lang$applyTo;
  concat.cljs$core$IFn$_invoke$arity$0 = concat__0;
  concat.cljs$core$IFn$_invoke$arity$1 = concat__1;
  concat.cljs$core$IFn$_invoke$arity$2 = concat__2;
  concat.cljs$core$IFn$_invoke$arity$variadic = concat__3.cljs$core$IFn$_invoke$arity$variadic;
  return concat;
}();
cljs.core.list_STAR_ = function() {
  var list_STAR_ = null;
  var list_STAR___1 = function(args) {
    return cljs.core.seq(args);
  };
  var list_STAR___2 = function(a, args) {
    return cljs.core.cons(a, args);
  };
  var list_STAR___3 = function(a, b, args) {
    return cljs.core.cons(a, cljs.core.cons(b, args));
  };
  var list_STAR___4 = function(a, b, c, args) {
    return cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, args)));
  };
  var list_STAR___5 = function() {
    var G__11351__delegate = function(a, b, c, d, more) {
      return cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, cljs.core.cons(d, cljs.core.spread(more)))));
    };
    var G__11351 = function(a, b, c, d, var_args) {
      var more = null;
      if (arguments.length > 4) {
        var G__11352__i = 0, G__11352__a = new Array(arguments.length - 4);
        while (G__11352__i < G__11352__a.length) {
          G__11352__a[G__11352__i] = arguments[G__11352__i + 4];
          ++G__11352__i;
        }
        more = new cljs.core.IndexedSeq(G__11352__a, 0);
      }
      return G__11351__delegate.call(this, a, b, c, d, more);
    };
    G__11351.cljs$lang$maxFixedArity = 4;
    G__11351.cljs$lang$applyTo = function(arglist__11353) {
      var a = cljs.core.first(arglist__11353);
      arglist__11353 = cljs.core.next(arglist__11353);
      var b = cljs.core.first(arglist__11353);
      arglist__11353 = cljs.core.next(arglist__11353);
      var c = cljs.core.first(arglist__11353);
      arglist__11353 = cljs.core.next(arglist__11353);
      var d = cljs.core.first(arglist__11353);
      var more = cljs.core.rest(arglist__11353);
      return G__11351__delegate(a, b, c, d, more);
    };
    G__11351.cljs$core$IFn$_invoke$arity$variadic = G__11351__delegate;
    return G__11351;
  }();
  list_STAR_ = function(a, b, c, d, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return list_STAR___1.call(this, a);
      case 2:
        return list_STAR___2.call(this, a, b);
      case 3:
        return list_STAR___3.call(this, a, b, c);
      case 4:
        return list_STAR___4.call(this, a, b, c, d);
      default:
        var G__11354 = null;
        if (arguments.length > 4) {
          var G__11355__i = 0, G__11355__a = new Array(arguments.length - 4);
          while (G__11355__i < G__11355__a.length) {
            G__11355__a[G__11355__i] = arguments[G__11355__i + 4];
            ++G__11355__i;
          }
          G__11354 = new cljs.core.IndexedSeq(G__11355__a, 0);
        }
        return list_STAR___5.cljs$core$IFn$_invoke$arity$variadic(a, b, c, d, G__11354);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  list_STAR_.cljs$lang$maxFixedArity = 4;
  list_STAR_.cljs$lang$applyTo = list_STAR___5.cljs$lang$applyTo;
  list_STAR_.cljs$core$IFn$_invoke$arity$1 = list_STAR___1;
  list_STAR_.cljs$core$IFn$_invoke$arity$2 = list_STAR___2;
  list_STAR_.cljs$core$IFn$_invoke$arity$3 = list_STAR___3;
  list_STAR_.cljs$core$IFn$_invoke$arity$4 = list_STAR___4;
  list_STAR_.cljs$core$IFn$_invoke$arity$variadic = list_STAR___5.cljs$core$IFn$_invoke$arity$variadic;
  return list_STAR_;
}();
cljs.core.transient$ = function transient$(coll) {
  return cljs.core._as_transient(coll);
};
cljs.core.persistent_BANG_ = function persistent_BANG_(tcoll) {
  return cljs.core._persistent_BANG_(tcoll);
};
cljs.core.conj_BANG_ = function() {
  var conj_BANG_ = null;
  var conj_BANG___0 = function() {
    return cljs.core.transient$(cljs.core.PersistentVector.EMPTY);
  };
  var conj_BANG___1 = function(coll) {
    return coll;
  };
  var conj_BANG___2 = function(tcoll, val) {
    return cljs.core._conj_BANG_(tcoll, val);
  };
  var conj_BANG___3 = function() {
    var G__11356__delegate = function(tcoll, val, vals) {
      while (true) {
        var ntcoll = cljs.core._conj_BANG_(tcoll, val);
        if (cljs.core.truth_(vals)) {
          var G__11357 = ntcoll;
          var G__11358 = cljs.core.first(vals);
          var G__11359 = cljs.core.next(vals);
          tcoll = G__11357;
          val = G__11358;
          vals = G__11359;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__11356 = function(tcoll, val, var_args) {
      var vals = null;
      if (arguments.length > 2) {
        var G__11360__i = 0, G__11360__a = new Array(arguments.length - 2);
        while (G__11360__i < G__11360__a.length) {
          G__11360__a[G__11360__i] = arguments[G__11360__i + 2];
          ++G__11360__i;
        }
        vals = new cljs.core.IndexedSeq(G__11360__a, 0);
      }
      return G__11356__delegate.call(this, tcoll, val, vals);
    };
    G__11356.cljs$lang$maxFixedArity = 2;
    G__11356.cljs$lang$applyTo = function(arglist__11361) {
      var tcoll = cljs.core.first(arglist__11361);
      arglist__11361 = cljs.core.next(arglist__11361);
      var val = cljs.core.first(arglist__11361);
      var vals = cljs.core.rest(arglist__11361);
      return G__11356__delegate(tcoll, val, vals);
    };
    G__11356.cljs$core$IFn$_invoke$arity$variadic = G__11356__delegate;
    return G__11356;
  }();
  conj_BANG_ = function(tcoll, val, var_args) {
    var vals = var_args;
    switch(arguments.length) {
      case 0:
        return conj_BANG___0.call(this);
      case 1:
        return conj_BANG___1.call(this, tcoll);
      case 2:
        return conj_BANG___2.call(this, tcoll, val);
      default:
        var G__11362 = null;
        if (arguments.length > 2) {
          var G__11363__i = 0, G__11363__a = new Array(arguments.length - 2);
          while (G__11363__i < G__11363__a.length) {
            G__11363__a[G__11363__i] = arguments[G__11363__i + 2];
            ++G__11363__i;
          }
          G__11362 = new cljs.core.IndexedSeq(G__11363__a, 0);
        }
        return conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, val, G__11362);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  conj_BANG_.cljs$lang$maxFixedArity = 2;
  conj_BANG_.cljs$lang$applyTo = conj_BANG___3.cljs$lang$applyTo;
  conj_BANG_.cljs$core$IFn$_invoke$arity$0 = conj_BANG___0;
  conj_BANG_.cljs$core$IFn$_invoke$arity$1 = conj_BANG___1;
  conj_BANG_.cljs$core$IFn$_invoke$arity$2 = conj_BANG___2;
  conj_BANG_.cljs$core$IFn$_invoke$arity$variadic = conj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return conj_BANG_;
}();
cljs.core.assoc_BANG_ = function() {
  var assoc_BANG_ = null;
  var assoc_BANG___3 = function(tcoll, key, val) {
    return cljs.core._assoc_BANG_(tcoll, key, val);
  };
  var assoc_BANG___4 = function() {
    var G__11364__delegate = function(tcoll, key, val, kvs) {
      while (true) {
        var ntcoll = cljs.core._assoc_BANG_(tcoll, key, val);
        if (cljs.core.truth_(kvs)) {
          var G__11365 = ntcoll;
          var G__11366 = cljs.core.first(kvs);
          var G__11367 = cljs.core.second(kvs);
          var G__11368 = cljs.core.nnext(kvs);
          tcoll = G__11365;
          key = G__11366;
          val = G__11367;
          kvs = G__11368;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__11364 = function(tcoll, key, val, var_args) {
      var kvs = null;
      if (arguments.length > 3) {
        var G__11369__i = 0, G__11369__a = new Array(arguments.length - 3);
        while (G__11369__i < G__11369__a.length) {
          G__11369__a[G__11369__i] = arguments[G__11369__i + 3];
          ++G__11369__i;
        }
        kvs = new cljs.core.IndexedSeq(G__11369__a, 0);
      }
      return G__11364__delegate.call(this, tcoll, key, val, kvs);
    };
    G__11364.cljs$lang$maxFixedArity = 3;
    G__11364.cljs$lang$applyTo = function(arglist__11370) {
      var tcoll = cljs.core.first(arglist__11370);
      arglist__11370 = cljs.core.next(arglist__11370);
      var key = cljs.core.first(arglist__11370);
      arglist__11370 = cljs.core.next(arglist__11370);
      var val = cljs.core.first(arglist__11370);
      var kvs = cljs.core.rest(arglist__11370);
      return G__11364__delegate(tcoll, key, val, kvs);
    };
    G__11364.cljs$core$IFn$_invoke$arity$variadic = G__11364__delegate;
    return G__11364;
  }();
  assoc_BANG_ = function(tcoll, key, val, var_args) {
    var kvs = var_args;
    switch(arguments.length) {
      case 3:
        return assoc_BANG___3.call(this, tcoll, key, val);
      default:
        var G__11371 = null;
        if (arguments.length > 3) {
          var G__11372__i = 0, G__11372__a = new Array(arguments.length - 3);
          while (G__11372__i < G__11372__a.length) {
            G__11372__a[G__11372__i] = arguments[G__11372__i + 3];
            ++G__11372__i;
          }
          G__11371 = new cljs.core.IndexedSeq(G__11372__a, 0);
        }
        return assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic(tcoll, key, val, G__11371);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  assoc_BANG_.cljs$lang$maxFixedArity = 3;
  assoc_BANG_.cljs$lang$applyTo = assoc_BANG___4.cljs$lang$applyTo;
  assoc_BANG_.cljs$core$IFn$_invoke$arity$3 = assoc_BANG___3;
  assoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = assoc_BANG___4.cljs$core$IFn$_invoke$arity$variadic;
  return assoc_BANG_;
}();
cljs.core.dissoc_BANG_ = function() {
  var dissoc_BANG_ = null;
  var dissoc_BANG___2 = function(tcoll, key) {
    return cljs.core._dissoc_BANG_(tcoll, key);
  };
  var dissoc_BANG___3 = function() {
    var G__11373__delegate = function(tcoll, key, ks) {
      while (true) {
        var ntcoll = cljs.core._dissoc_BANG_(tcoll, key);
        if (cljs.core.truth_(ks)) {
          var G__11374 = ntcoll;
          var G__11375 = cljs.core.first(ks);
          var G__11376 = cljs.core.next(ks);
          tcoll = G__11374;
          key = G__11375;
          ks = G__11376;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__11373 = function(tcoll, key, var_args) {
      var ks = null;
      if (arguments.length > 2) {
        var G__11377__i = 0, G__11377__a = new Array(arguments.length - 2);
        while (G__11377__i < G__11377__a.length) {
          G__11377__a[G__11377__i] = arguments[G__11377__i + 2];
          ++G__11377__i;
        }
        ks = new cljs.core.IndexedSeq(G__11377__a, 0);
      }
      return G__11373__delegate.call(this, tcoll, key, ks);
    };
    G__11373.cljs$lang$maxFixedArity = 2;
    G__11373.cljs$lang$applyTo = function(arglist__11378) {
      var tcoll = cljs.core.first(arglist__11378);
      arglist__11378 = cljs.core.next(arglist__11378);
      var key = cljs.core.first(arglist__11378);
      var ks = cljs.core.rest(arglist__11378);
      return G__11373__delegate(tcoll, key, ks);
    };
    G__11373.cljs$core$IFn$_invoke$arity$variadic = G__11373__delegate;
    return G__11373;
  }();
  dissoc_BANG_ = function(tcoll, key, var_args) {
    var ks = var_args;
    switch(arguments.length) {
      case 2:
        return dissoc_BANG___2.call(this, tcoll, key);
      default:
        var G__11379 = null;
        if (arguments.length > 2) {
          var G__11380__i = 0, G__11380__a = new Array(arguments.length - 2);
          while (G__11380__i < G__11380__a.length) {
            G__11380__a[G__11380__i] = arguments[G__11380__i + 2];
            ++G__11380__i;
          }
          G__11379 = new cljs.core.IndexedSeq(G__11380__a, 0);
        }
        return dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, key, G__11379);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dissoc_BANG_.cljs$lang$maxFixedArity = 2;
  dissoc_BANG_.cljs$lang$applyTo = dissoc_BANG___3.cljs$lang$applyTo;
  dissoc_BANG_.cljs$core$IFn$_invoke$arity$2 = dissoc_BANG___2;
  dissoc_BANG_.cljs$core$IFn$_invoke$arity$variadic = dissoc_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return dissoc_BANG_;
}();
cljs.core.pop_BANG_ = function pop_BANG_(tcoll) {
  return cljs.core._pop_BANG_(tcoll);
};
cljs.core.disj_BANG_ = function() {
  var disj_BANG_ = null;
  var disj_BANG___2 = function(tcoll, val) {
    return cljs.core._disjoin_BANG_(tcoll, val);
  };
  var disj_BANG___3 = function() {
    var G__11381__delegate = function(tcoll, val, vals) {
      while (true) {
        var ntcoll = cljs.core._disjoin_BANG_(tcoll, val);
        if (cljs.core.truth_(vals)) {
          var G__11382 = ntcoll;
          var G__11383 = cljs.core.first(vals);
          var G__11384 = cljs.core.next(vals);
          tcoll = G__11382;
          val = G__11383;
          vals = G__11384;
          continue;
        } else {
          return ntcoll;
        }
        break;
      }
    };
    var G__11381 = function(tcoll, val, var_args) {
      var vals = null;
      if (arguments.length > 2) {
        var G__11385__i = 0, G__11385__a = new Array(arguments.length - 2);
        while (G__11385__i < G__11385__a.length) {
          G__11385__a[G__11385__i] = arguments[G__11385__i + 2];
          ++G__11385__i;
        }
        vals = new cljs.core.IndexedSeq(G__11385__a, 0);
      }
      return G__11381__delegate.call(this, tcoll, val, vals);
    };
    G__11381.cljs$lang$maxFixedArity = 2;
    G__11381.cljs$lang$applyTo = function(arglist__11386) {
      var tcoll = cljs.core.first(arglist__11386);
      arglist__11386 = cljs.core.next(arglist__11386);
      var val = cljs.core.first(arglist__11386);
      var vals = cljs.core.rest(arglist__11386);
      return G__11381__delegate(tcoll, val, vals);
    };
    G__11381.cljs$core$IFn$_invoke$arity$variadic = G__11381__delegate;
    return G__11381;
  }();
  disj_BANG_ = function(tcoll, val, var_args) {
    var vals = var_args;
    switch(arguments.length) {
      case 2:
        return disj_BANG___2.call(this, tcoll, val);
      default:
        var G__11387 = null;
        if (arguments.length > 2) {
          var G__11388__i = 0, G__11388__a = new Array(arguments.length - 2);
          while (G__11388__i < G__11388__a.length) {
            G__11388__a[G__11388__i] = arguments[G__11388__i + 2];
            ++G__11388__i;
          }
          G__11387 = new cljs.core.IndexedSeq(G__11388__a, 0);
        }
        return disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic(tcoll, val, G__11387);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  disj_BANG_.cljs$lang$maxFixedArity = 2;
  disj_BANG_.cljs$lang$applyTo = disj_BANG___3.cljs$lang$applyTo;
  disj_BANG_.cljs$core$IFn$_invoke$arity$2 = disj_BANG___2;
  disj_BANG_.cljs$core$IFn$_invoke$arity$variadic = disj_BANG___3.cljs$core$IFn$_invoke$arity$variadic;
  return disj_BANG_;
}();
cljs.core.apply_to = function apply_to(f, argc, args) {
  var args__$1 = cljs.core.seq(args);
  if (argc === 0) {
    return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
  } else {
    var a4856 = cljs.core._first(args__$1);
    var args__$2 = cljs.core._rest(args__$1);
    if (argc === 1) {
      if (f.cljs$core$IFn$_invoke$arity$1) {
        return f.cljs$core$IFn$_invoke$arity$1(a4856);
      } else {
        var G__11599 = a4856;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11599) : f.call(null, G__11599);
      }
    } else {
      var b4857 = cljs.core._first(args__$2);
      var args__$3 = cljs.core._rest(args__$2);
      if (argc === 2) {
        if (f.cljs$core$IFn$_invoke$arity$2) {
          return f.cljs$core$IFn$_invoke$arity$2(a4856, b4857);
        } else {
          var G__11600 = a4856;
          var G__11601 = b4857;
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11600, G__11601) : f.call(null, G__11600, G__11601);
        }
      } else {
        var c4858 = cljs.core._first(args__$3);
        var args__$4 = cljs.core._rest(args__$3);
        if (argc === 3) {
          if (f.cljs$core$IFn$_invoke$arity$3) {
            return f.cljs$core$IFn$_invoke$arity$3(a4856, b4857, c4858);
          } else {
            var G__11602 = a4856;
            var G__11603 = b4857;
            var G__11604 = c4858;
            return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__11602, G__11603, G__11604) : f.call(null, G__11602, G__11603, G__11604);
          }
        } else {
          var d4859 = cljs.core._first(args__$4);
          var args__$5 = cljs.core._rest(args__$4);
          if (argc === 4) {
            if (f.cljs$core$IFn$_invoke$arity$4) {
              return f.cljs$core$IFn$_invoke$arity$4(a4856, b4857, c4858, d4859);
            } else {
              var G__11605 = a4856;
              var G__11606 = b4857;
              var G__11607 = c4858;
              var G__11608 = d4859;
              return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__11605, G__11606, G__11607, G__11608) : f.call(null, G__11605, G__11606, G__11607, G__11608);
            }
          } else {
            var e4860 = cljs.core._first(args__$5);
            var args__$6 = cljs.core._rest(args__$5);
            if (argc === 5) {
              if (f.cljs$core$IFn$_invoke$arity$5) {
                return f.cljs$core$IFn$_invoke$arity$5(a4856, b4857, c4858, d4859, e4860);
              } else {
                var G__11609 = a4856;
                var G__11610 = b4857;
                var G__11611 = c4858;
                var G__11612 = d4859;
                var G__11613 = e4860;
                return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__11609, G__11610, G__11611, G__11612, G__11613) : f.call(null, G__11609, G__11610, G__11611, G__11612, G__11613);
              }
            } else {
              var f4861 = cljs.core._first(args__$6);
              var args__$7 = cljs.core._rest(args__$6);
              if (argc === 6) {
                if (f.cljs$core$IFn$_invoke$arity$6) {
                  return f.cljs$core$IFn$_invoke$arity$6(a4856, b4857, c4858, d4859, e4860, f4861);
                } else {
                  var G__11614 = a4856;
                  var G__11615 = b4857;
                  var G__11616 = c4858;
                  var G__11617 = d4859;
                  var G__11618 = e4860;
                  var G__11619 = f4861;
                  return f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__11614, G__11615, G__11616, G__11617, G__11618, G__11619) : f.call(null, G__11614, G__11615, G__11616, G__11617, G__11618, G__11619);
                }
              } else {
                var g4862 = cljs.core._first(args__$7);
                var args__$8 = cljs.core._rest(args__$7);
                if (argc === 7) {
                  if (f.cljs$core$IFn$_invoke$arity$7) {
                    return f.cljs$core$IFn$_invoke$arity$7(a4856, b4857, c4858, d4859, e4860, f4861, g4862);
                  } else {
                    var G__11620 = a4856;
                    var G__11621 = b4857;
                    var G__11622 = c4858;
                    var G__11623 = d4859;
                    var G__11624 = e4860;
                    var G__11625 = f4861;
                    var G__11626 = g4862;
                    return f.cljs$core$IFn$_invoke$arity$7 ? f.cljs$core$IFn$_invoke$arity$7(G__11620, G__11621, G__11622, G__11623, G__11624, G__11625, G__11626) : f.call(null, G__11620, G__11621, G__11622, G__11623, G__11624, G__11625, G__11626);
                  }
                } else {
                  var h4863 = cljs.core._first(args__$8);
                  var args__$9 = cljs.core._rest(args__$8);
                  if (argc === 8) {
                    if (f.cljs$core$IFn$_invoke$arity$8) {
                      return f.cljs$core$IFn$_invoke$arity$8(a4856, b4857, c4858, d4859, e4860, f4861, g4862, h4863);
                    } else {
                      var G__11627 = a4856;
                      var G__11628 = b4857;
                      var G__11629 = c4858;
                      var G__11630 = d4859;
                      var G__11631 = e4860;
                      var G__11632 = f4861;
                      var G__11633 = g4862;
                      var G__11634 = h4863;
                      return f.cljs$core$IFn$_invoke$arity$8 ? f.cljs$core$IFn$_invoke$arity$8(G__11627, G__11628, G__11629, G__11630, G__11631, G__11632, G__11633, G__11634) : f.call(null, G__11627, G__11628, G__11629, G__11630, G__11631, G__11632, G__11633, G__11634);
                    }
                  } else {
                    var i4864 = cljs.core._first(args__$9);
                    var args__$10 = cljs.core._rest(args__$9);
                    if (argc === 9) {
                      if (f.cljs$core$IFn$_invoke$arity$9) {
                        return f.cljs$core$IFn$_invoke$arity$9(a4856, b4857, c4858, d4859, e4860, f4861, g4862, h4863, i4864);
                      } else {
                        var G__11635 = a4856;
                        var G__11636 = b4857;
                        var G__11637 = c4858;
                        var G__11638 = d4859;
                        var G__11639 = e4860;
                        var G__11640 = f4861;
                        var G__11641 = g4862;
                        var G__11642 = h4863;
                        var G__11643 = i4864;
                        return f.cljs$core$IFn$_invoke$arity$9 ? f.cljs$core$IFn$_invoke$arity$9(G__11635, G__11636, G__11637, G__11638, G__11639, G__11640, G__11641, G__11642, G__11643) : f.call(null, G__11635, G__11636, G__11637, G__11638, G__11639, G__11640, G__11641, G__11642, G__11643);
                      }
                    } else {
                      var j4865 = cljs.core._first(args__$10);
                      var args__$11 = cljs.core._rest(args__$10);
                      if (argc === 10) {
                        if (f.cljs$core$IFn$_invoke$arity$10) {
                          return f.cljs$core$IFn$_invoke$arity$10(a4856, b4857, c4858, d4859, e4860, f4861, g4862, h4863, i4864, j4865);
                        } else {
                          var G__11644 = a4856;
                          var G__11645 = b4857;
                          var G__11646 = c4858;
                          var G__11647 = d4859;
                          var G__11648 = e4860;
                          var G__11649 = f4861;
                          var G__11650 = g4862;
                          var G__11651 = h4863;
                          var G__11652 = i4864;
                          var G__11653 = j4865;
                          return f.cljs$core$IFn$_invoke$arity$10 ? f.cljs$core$IFn$_invoke$arity$10(G__11644, G__11645, G__11646, G__11647, G__11648, G__11649, G__11650, G__11651, G__11652, G__11653) : f.call(null, G__11644, G__11645, G__11646, G__11647, G__11648, G__11649, G__11650, G__11651, G__11652, G__11653);
                        }
                      } else {
                        var k4866 = cljs.core._first(args__$11);
                        var args__$12 = cljs.core._rest(args__$11);
                        if (argc === 11) {
                          if (f.cljs$core$IFn$_invoke$arity$11) {
                            return f.cljs$core$IFn$_invoke$arity$11(a4856, b4857, c4858, d4859, e4860, f4861, g4862, h4863, i4864, j4865, k4866);
                          } else {
                            var G__11654 = a4856;
                            var G__11655 = b4857;
                            var G__11656 = c4858;
                            var G__11657 = d4859;
                            var G__11658 = e4860;
                            var G__11659 = f4861;
                            var G__11660 = g4862;
                            var G__11661 = h4863;
                            var G__11662 = i4864;
                            var G__11663 = j4865;
                            var G__11664 = k4866;
                            return f.cljs$core$IFn$_invoke$arity$11 ? f.cljs$core$IFn$_invoke$arity$11(G__11654, G__11655, G__11656, G__11657, G__11658, G__11659, G__11660, G__11661, G__11662, G__11663, G__11664) : f.call(null, G__11654, G__11655, G__11656, G__11657, G__11658, G__11659, G__11660, G__11661, G__11662, G__11663, G__11664);
                          }
                        } else {
                          var l4867 = cljs.core._first(args__$12);
                          var args__$13 = cljs.core._rest(args__$12);
                          if (argc === 12) {
                            if (f.cljs$core$IFn$_invoke$arity$12) {
                              return f.cljs$core$IFn$_invoke$arity$12(a4856, b4857, c4858, d4859, e4860, f4861, g4862, h4863, i4864, j4865, k4866, l4867);
                            } else {
                              var G__11665 = a4856;
                              var G__11666 = b4857;
                              var G__11667 = c4858;
                              var G__11668 = d4859;
                              var G__11669 = e4860;
                              var G__11670 = f4861;
                              var G__11671 = g4862;
                              var G__11672 = h4863;
                              var G__11673 = i4864;
                              var G__11674 = j4865;
                              var G__11675 = k4866;
                              var G__11676 = l4867;
                              return f.cljs$core$IFn$_invoke$arity$12 ? f.cljs$core$IFn$_invoke$arity$12(G__11665, G__11666, G__11667, G__11668, G__11669, G__11670, G__11671, G__11672, G__11673, G__11674, G__11675, G__11676) : f.call(null, G__11665, G__11666, G__11667, G__11668, G__11669, G__11670, G__11671, G__11672, G__11673, G__11674, G__11675, G__11676);
                            }
                          } else {
                            var m4868 = cljs.core._first(args__$13);
                            var args__$14 = cljs.core._rest(args__$13);
                            if (argc === 13) {
                              if (f.cljs$core$IFn$_invoke$arity$13) {
                                return f.cljs$core$IFn$_invoke$arity$13(a4856, b4857, c4858, d4859, e4860, f4861, g4862, h4863, i4864, j4865, k4866, l4867, m4868);
                              } else {
                                var G__11677 = a4856;
                                var G__11678 = b4857;
                                var G__11679 = c4858;
                                var G__11680 = d4859;
                                var G__11681 = e4860;
                                var G__11682 = f4861;
                                var G__11683 = g4862;
                                var G__11684 = h4863;
                                var G__11685 = i4864;
                                var G__11686 = j4865;
                                var G__11687 = k4866;
                                var G__11688 = l4867;
                                var G__11689 = m4868;
                                return f.cljs$core$IFn$_invoke$arity$13 ? f.cljs$core$IFn$_invoke$arity$13(G__11677, G__11678, G__11679, G__11680, G__11681, G__11682, G__11683, G__11684, G__11685, G__11686, G__11687, G__11688, G__11689) : f.call(null, G__11677, G__11678, G__11679, G__11680, G__11681, G__11682, G__11683, G__11684, G__11685, G__11686, G__11687, G__11688, G__11689);
                              }
                            } else {
                              var n4869 = cljs.core._first(args__$14);
                              var args__$15 = cljs.core._rest(args__$14);
                              if (argc === 14) {
                                if (f.cljs$core$IFn$_invoke$arity$14) {
                                  return f.cljs$core$IFn$_invoke$arity$14(a4856, b4857, c4858, d4859, e4860, f4861, g4862, h4863, i4864, j4865, k4866, l4867, m4868, n4869);
                                } else {
                                  var G__11690 = a4856;
                                  var G__11691 = b4857;
                                  var G__11692 = c4858;
                                  var G__11693 = d4859;
                                  var G__11694 = e4860;
                                  var G__11695 = f4861;
                                  var G__11696 = g4862;
                                  var G__11697 = h4863;
                                  var G__11698 = i4864;
                                  var G__11699 = j4865;
                                  var G__11700 = k4866;
                                  var G__11701 = l4867;
                                  var G__11702 = m4868;
                                  var G__11703 = n4869;
                                  return f.cljs$core$IFn$_invoke$arity$14 ? f.cljs$core$IFn$_invoke$arity$14(G__11690, G__11691, G__11692, G__11693, G__11694, G__11695, G__11696, G__11697, G__11698, G__11699, G__11700, G__11701, G__11702, G__11703) : f.call(null, G__11690, G__11691, G__11692, G__11693, G__11694, G__11695, G__11696, G__11697, G__11698, G__11699, G__11700, G__11701, G__11702, G__11703);
                                }
                              } else {
                                var o4870 = cljs.core._first(args__$15);
                                var args__$16 = cljs.core._rest(args__$15);
                                if (argc === 15) {
                                  if (f.cljs$core$IFn$_invoke$arity$15) {
                                    return f.cljs$core$IFn$_invoke$arity$15(a4856, b4857, c4858, d4859, e4860, f4861, g4862, h4863, i4864, j4865, k4866, l4867, m4868, n4869, o4870);
                                  } else {
                                    var G__11704 = a4856;
                                    var G__11705 = b4857;
                                    var G__11706 = c4858;
                                    var G__11707 = d4859;
                                    var G__11708 = e4860;
                                    var G__11709 = f4861;
                                    var G__11710 = g4862;
                                    var G__11711 = h4863;
                                    var G__11712 = i4864;
                                    var G__11713 = j4865;
                                    var G__11714 = k4866;
                                    var G__11715 = l4867;
                                    var G__11716 = m4868;
                                    var G__11717 = n4869;
                                    var G__11718 = o4870;
                                    return f.cljs$core$IFn$_invoke$arity$15 ? f.cljs$core$IFn$_invoke$arity$15(G__11704, G__11705, G__11706, G__11707, G__11708, G__11709, G__11710, G__11711, G__11712, G__11713, G__11714, G__11715, G__11716, G__11717, G__11718) : f.call(null, G__11704, G__11705, G__11706, G__11707, G__11708, G__11709, G__11710, G__11711, G__11712, G__11713, G__11714, G__11715, G__11716, G__11717, G__11718);
                                  }
                                } else {
                                  var p4871 = cljs.core._first(args__$16);
                                  var args__$17 = cljs.core._rest(args__$16);
                                  if (argc === 16) {
                                    if (f.cljs$core$IFn$_invoke$arity$16) {
                                      return f.cljs$core$IFn$_invoke$arity$16(a4856, b4857, c4858, d4859, e4860, f4861, g4862, h4863, i4864, j4865, k4866, l4867, m4868, n4869, o4870, p4871);
                                    } else {
                                      var G__11719 = a4856;
                                      var G__11720 = b4857;
                                      var G__11721 = c4858;
                                      var G__11722 = d4859;
                                      var G__11723 = e4860;
                                      var G__11724 = f4861;
                                      var G__11725 = g4862;
                                      var G__11726 = h4863;
                                      var G__11727 = i4864;
                                      var G__11728 = j4865;
                                      var G__11729 = k4866;
                                      var G__11730 = l4867;
                                      var G__11731 = m4868;
                                      var G__11732 = n4869;
                                      var G__11733 = o4870;
                                      var G__11734 = p4871;
                                      return f.cljs$core$IFn$_invoke$arity$16 ? f.cljs$core$IFn$_invoke$arity$16(G__11719, G__11720, G__11721, G__11722, G__11723, G__11724, G__11725, G__11726, G__11727, G__11728, G__11729, G__11730, G__11731, G__11732, G__11733, G__11734) : f.call(null, G__11719, G__11720, G__11721, G__11722, G__11723, G__11724, G__11725, G__11726, G__11727, G__11728, G__11729, G__11730, G__11731, G__11732, G__11733, G__11734);
                                    }
                                  } else {
                                    var q4872 = cljs.core._first(args__$17);
                                    var args__$18 = cljs.core._rest(args__$17);
                                    if (argc === 17) {
                                      if (f.cljs$core$IFn$_invoke$arity$17) {
                                        return f.cljs$core$IFn$_invoke$arity$17(a4856, b4857, c4858, d4859, e4860, f4861, g4862, h4863, i4864, j4865, k4866, l4867, m4868, n4869, o4870, p4871, q4872);
                                      } else {
                                        var G__11735 = a4856;
                                        var G__11736 = b4857;
                                        var G__11737 = c4858;
                                        var G__11738 = d4859;
                                        var G__11739 = e4860;
                                        var G__11740 = f4861;
                                        var G__11741 = g4862;
                                        var G__11742 = h4863;
                                        var G__11743 = i4864;
                                        var G__11744 = j4865;
                                        var G__11745 = k4866;
                                        var G__11746 = l4867;
                                        var G__11747 = m4868;
                                        var G__11748 = n4869;
                                        var G__11749 = o4870;
                                        var G__11750 = p4871;
                                        var G__11751 = q4872;
                                        return f.cljs$core$IFn$_invoke$arity$17 ? f.cljs$core$IFn$_invoke$arity$17(G__11735, G__11736, G__11737, G__11738, G__11739, G__11740, G__11741, G__11742, G__11743, G__11744, G__11745, G__11746, G__11747, G__11748, G__11749, G__11750, G__11751) : f.call(null, G__11735, G__11736, G__11737, G__11738, G__11739, G__11740, G__11741, G__11742, G__11743, G__11744, G__11745, G__11746, G__11747, G__11748, G__11749, G__11750, G__11751);
                                      }
                                    } else {
                                      var r4873 = cljs.core._first(args__$18);
                                      var args__$19 = cljs.core._rest(args__$18);
                                      if (argc === 18) {
                                        if (f.cljs$core$IFn$_invoke$arity$18) {
                                          return f.cljs$core$IFn$_invoke$arity$18(a4856, b4857, c4858, d4859, e4860, f4861, g4862, h4863, i4864, j4865, k4866, l4867, m4868, n4869, o4870, p4871, q4872, r4873);
                                        } else {
                                          var G__11752 = a4856;
                                          var G__11753 = b4857;
                                          var G__11754 = c4858;
                                          var G__11755 = d4859;
                                          var G__11756 = e4860;
                                          var G__11757 = f4861;
                                          var G__11758 = g4862;
                                          var G__11759 = h4863;
                                          var G__11760 = i4864;
                                          var G__11761 = j4865;
                                          var G__11762 = k4866;
                                          var G__11763 = l4867;
                                          var G__11764 = m4868;
                                          var G__11765 = n4869;
                                          var G__11766 = o4870;
                                          var G__11767 = p4871;
                                          var G__11768 = q4872;
                                          var G__11769 = r4873;
                                          return f.cljs$core$IFn$_invoke$arity$18 ? f.cljs$core$IFn$_invoke$arity$18(G__11752, G__11753, G__11754, G__11755, G__11756, G__11757, G__11758, G__11759, G__11760, G__11761, G__11762, G__11763, G__11764, G__11765, G__11766, G__11767, G__11768, G__11769) : f.call(null, G__11752, G__11753, G__11754, G__11755, G__11756, G__11757, G__11758, G__11759, G__11760, G__11761, G__11762, G__11763, G__11764, G__11765, G__11766, G__11767, G__11768, G__11769);
                                        }
                                      } else {
                                        var s4874 = cljs.core._first(args__$19);
                                        var args__$20 = cljs.core._rest(args__$19);
                                        if (argc === 19) {
                                          if (f.cljs$core$IFn$_invoke$arity$19) {
                                            return f.cljs$core$IFn$_invoke$arity$19(a4856, b4857, c4858, d4859, e4860, f4861, g4862, h4863, i4864, j4865, k4866, l4867, m4868, n4869, o4870, p4871, q4872, r4873, s4874);
                                          } else {
                                            var G__11770 = a4856;
                                            var G__11771 = b4857;
                                            var G__11772 = c4858;
                                            var G__11773 = d4859;
                                            var G__11774 = e4860;
                                            var G__11775 = f4861;
                                            var G__11776 = g4862;
                                            var G__11777 = h4863;
                                            var G__11778 = i4864;
                                            var G__11779 = j4865;
                                            var G__11780 = k4866;
                                            var G__11781 = l4867;
                                            var G__11782 = m4868;
                                            var G__11783 = n4869;
                                            var G__11784 = o4870;
                                            var G__11785 = p4871;
                                            var G__11786 = q4872;
                                            var G__11787 = r4873;
                                            var G__11788 = s4874;
                                            return f.cljs$core$IFn$_invoke$arity$19 ? f.cljs$core$IFn$_invoke$arity$19(G__11770, G__11771, G__11772, G__11773, G__11774, G__11775, G__11776, G__11777, G__11778, G__11779, G__11780, G__11781, G__11782, G__11783, G__11784, G__11785, G__11786, G__11787, G__11788) : f.call(null, G__11770, G__11771, G__11772, G__11773, G__11774, G__11775, G__11776, G__11777, G__11778, G__11779, G__11780, G__11781, G__11782, G__11783, G__11784, G__11785, G__11786, G__11787, 
                                            G__11788);
                                          }
                                        } else {
                                          var t4875 = cljs.core._first(args__$20);
                                          var args__$21 = cljs.core._rest(args__$20);
                                          if (argc === 20) {
                                            if (f.cljs$core$IFn$_invoke$arity$20) {
                                              return f.cljs$core$IFn$_invoke$arity$20(a4856, b4857, c4858, d4859, e4860, f4861, g4862, h4863, i4864, j4865, k4866, l4867, m4868, n4869, o4870, p4871, q4872, r4873, s4874, t4875);
                                            } else {
                                              var G__11789 = a4856;
                                              var G__11790 = b4857;
                                              var G__11791 = c4858;
                                              var G__11792 = d4859;
                                              var G__11793 = e4860;
                                              var G__11794 = f4861;
                                              var G__11795 = g4862;
                                              var G__11796 = h4863;
                                              var G__11797 = i4864;
                                              var G__11798 = j4865;
                                              var G__11799 = k4866;
                                              var G__11800 = l4867;
                                              var G__11801 = m4868;
                                              var G__11802 = n4869;
                                              var G__11803 = o4870;
                                              var G__11804 = p4871;
                                              var G__11805 = q4872;
                                              var G__11806 = r4873;
                                              var G__11807 = s4874;
                                              var G__11808 = t4875;
                                              return f.cljs$core$IFn$_invoke$arity$20 ? f.cljs$core$IFn$_invoke$arity$20(G__11789, G__11790, G__11791, G__11792, G__11793, G__11794, G__11795, G__11796, G__11797, G__11798, G__11799, G__11800, G__11801, G__11802, G__11803, G__11804, G__11805, G__11806, G__11807, G__11808) : f.call(null, G__11789, G__11790, G__11791, G__11792, G__11793, G__11794, G__11795, G__11796, G__11797, G__11798, G__11799, G__11800, G__11801, G__11802, G__11803, G__11804, G__11805, 
                                              G__11806, G__11807, G__11808);
                                            }
                                          } else {
                                            throw new Error("Only up to 20 arguments supported on functions");
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.apply = function() {
  var apply = null;
  var apply__2 = function(f, args) {
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count(args, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to(f, bc, args);
      } else {
        return f.cljs$lang$applyTo(args);
      }
    } else {
      return f.apply(f, cljs.core.to_array(args));
    }
  };
  var apply__3 = function(f, x, args) {
    var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$2(x, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to(f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array(arglist));
    }
  };
  var apply__4 = function(f, x, y, args) {
    var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$3(x, y, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to(f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array(arglist));
    }
  };
  var apply__5 = function(f, x, y, z, args) {
    var arglist = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(x, y, z, args);
    var fixed_arity = f.cljs$lang$maxFixedArity;
    if (f.cljs$lang$applyTo) {
      var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
      if (bc <= fixed_arity) {
        return cljs.core.apply_to(f, bc, arglist);
      } else {
        return f.cljs$lang$applyTo(arglist);
      }
    } else {
      return f.apply(f, cljs.core.to_array(arglist));
    }
  };
  var apply__6 = function() {
    var G__11809__delegate = function(f, a, b, c, d, args) {
      var arglist = cljs.core.cons(a, cljs.core.cons(b, cljs.core.cons(c, cljs.core.cons(d, cljs.core.spread(args)))));
      var fixed_arity = f.cljs$lang$maxFixedArity;
      if (f.cljs$lang$applyTo) {
        var bc = cljs.core.bounded_count(arglist, fixed_arity + 1);
        if (bc <= fixed_arity) {
          return cljs.core.apply_to(f, bc, arglist);
        } else {
          return f.cljs$lang$applyTo(arglist);
        }
      } else {
        return f.apply(f, cljs.core.to_array(arglist));
      }
    };
    var G__11809 = function(f, a, b, c, d, var_args) {
      var args = null;
      if (arguments.length > 5) {
        var G__11810__i = 0, G__11810__a = new Array(arguments.length - 5);
        while (G__11810__i < G__11810__a.length) {
          G__11810__a[G__11810__i] = arguments[G__11810__i + 5];
          ++G__11810__i;
        }
        args = new cljs.core.IndexedSeq(G__11810__a, 0);
      }
      return G__11809__delegate.call(this, f, a, b, c, d, args);
    };
    G__11809.cljs$lang$maxFixedArity = 5;
    G__11809.cljs$lang$applyTo = function(arglist__11811) {
      var f = cljs.core.first(arglist__11811);
      arglist__11811 = cljs.core.next(arglist__11811);
      var a = cljs.core.first(arglist__11811);
      arglist__11811 = cljs.core.next(arglist__11811);
      var b = cljs.core.first(arglist__11811);
      arglist__11811 = cljs.core.next(arglist__11811);
      var c = cljs.core.first(arglist__11811);
      arglist__11811 = cljs.core.next(arglist__11811);
      var d = cljs.core.first(arglist__11811);
      var args = cljs.core.rest(arglist__11811);
      return G__11809__delegate(f, a, b, c, d, args);
    };
    G__11809.cljs$core$IFn$_invoke$arity$variadic = G__11809__delegate;
    return G__11809;
  }();
  apply = function(f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return apply__2.call(this, f, a);
      case 3:
        return apply__3.call(this, f, a, b);
      case 4:
        return apply__4.call(this, f, a, b, c);
      case 5:
        return apply__5.call(this, f, a, b, c, d);
      default:
        var G__11812 = null;
        if (arguments.length > 5) {
          var G__11813__i = 0, G__11813__a = new Array(arguments.length - 5);
          while (G__11813__i < G__11813__a.length) {
            G__11813__a[G__11813__i] = arguments[G__11813__i + 5];
            ++G__11813__i;
          }
          G__11812 = new cljs.core.IndexedSeq(G__11813__a, 0);
        }
        return apply__6.cljs$core$IFn$_invoke$arity$variadic(f, a, b, c, d, G__11812);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  apply.cljs$lang$maxFixedArity = 5;
  apply.cljs$lang$applyTo = apply__6.cljs$lang$applyTo;
  apply.cljs$core$IFn$_invoke$arity$2 = apply__2;
  apply.cljs$core$IFn$_invoke$arity$3 = apply__3;
  apply.cljs$core$IFn$_invoke$arity$4 = apply__4;
  apply.cljs$core$IFn$_invoke$arity$5 = apply__5;
  apply.cljs$core$IFn$_invoke$arity$variadic = apply__6.cljs$core$IFn$_invoke$arity$variadic;
  return apply;
}();
cljs.core.vary_meta = function() {
  var vary_meta = null;
  var vary_meta__2 = function(obj, f) {
    return cljs.core.with_meta(obj, function() {
      var G__11829 = cljs.core.meta(obj);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11829) : f.call(null, G__11829);
    }());
  };
  var vary_meta__3 = function(obj, f, a) {
    return cljs.core.with_meta(obj, function() {
      var G__11830 = cljs.core.meta(obj);
      var G__11831 = a;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11830, G__11831) : f.call(null, G__11830, G__11831);
    }());
  };
  var vary_meta__4 = function(obj, f, a, b) {
    return cljs.core.with_meta(obj, function() {
      var G__11832 = cljs.core.meta(obj);
      var G__11833 = a;
      var G__11834 = b;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__11832, G__11833, G__11834) : f.call(null, G__11832, G__11833, G__11834);
    }());
  };
  var vary_meta__5 = function(obj, f, a, b, c) {
    return cljs.core.with_meta(obj, function() {
      var G__11835 = cljs.core.meta(obj);
      var G__11836 = a;
      var G__11837 = b;
      var G__11838 = c;
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__11835, G__11836, G__11837, G__11838) : f.call(null, G__11835, G__11836, G__11837, G__11838);
    }());
  };
  var vary_meta__6 = function(obj, f, a, b, c, d) {
    return cljs.core.with_meta(obj, function() {
      var G__11839 = cljs.core.meta(obj);
      var G__11840 = a;
      var G__11841 = b;
      var G__11842 = c;
      var G__11843 = d;
      return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__11839, G__11840, G__11841, G__11842, G__11843) : f.call(null, G__11839, G__11840, G__11841, G__11842, G__11843);
    }());
  };
  var vary_meta__7 = function() {
    var G__11844__delegate = function(obj, f, a, b, c, d, args) {
      return cljs.core.with_meta(obj, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.meta(obj), a, b, c, cljs.core.array_seq([d, args], 0)));
    };
    var G__11844 = function(obj, f, a, b, c, d, var_args) {
      var args = null;
      if (arguments.length > 6) {
        var G__11845__i = 0, G__11845__a = new Array(arguments.length - 6);
        while (G__11845__i < G__11845__a.length) {
          G__11845__a[G__11845__i] = arguments[G__11845__i + 6];
          ++G__11845__i;
        }
        args = new cljs.core.IndexedSeq(G__11845__a, 0);
      }
      return G__11844__delegate.call(this, obj, f, a, b, c, d, args);
    };
    G__11844.cljs$lang$maxFixedArity = 6;
    G__11844.cljs$lang$applyTo = function(arglist__11846) {
      var obj = cljs.core.first(arglist__11846);
      arglist__11846 = cljs.core.next(arglist__11846);
      var f = cljs.core.first(arglist__11846);
      arglist__11846 = cljs.core.next(arglist__11846);
      var a = cljs.core.first(arglist__11846);
      arglist__11846 = cljs.core.next(arglist__11846);
      var b = cljs.core.first(arglist__11846);
      arglist__11846 = cljs.core.next(arglist__11846);
      var c = cljs.core.first(arglist__11846);
      arglist__11846 = cljs.core.next(arglist__11846);
      var d = cljs.core.first(arglist__11846);
      var args = cljs.core.rest(arglist__11846);
      return G__11844__delegate(obj, f, a, b, c, d, args);
    };
    G__11844.cljs$core$IFn$_invoke$arity$variadic = G__11844__delegate;
    return G__11844;
  }();
  vary_meta = function(obj, f, a, b, c, d, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 2:
        return vary_meta__2.call(this, obj, f);
      case 3:
        return vary_meta__3.call(this, obj, f, a);
      case 4:
        return vary_meta__4.call(this, obj, f, a, b);
      case 5:
        return vary_meta__5.call(this, obj, f, a, b, c);
      case 6:
        return vary_meta__6.call(this, obj, f, a, b, c, d);
      default:
        var G__11847 = null;
        if (arguments.length > 6) {
          var G__11848__i = 0, G__11848__a = new Array(arguments.length - 6);
          while (G__11848__i < G__11848__a.length) {
            G__11848__a[G__11848__i] = arguments[G__11848__i + 6];
            ++G__11848__i;
          }
          G__11847 = new cljs.core.IndexedSeq(G__11848__a, 0);
        }
        return vary_meta__7.cljs$core$IFn$_invoke$arity$variadic(obj, f, a, b, c, d, G__11847);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  vary_meta.cljs$lang$maxFixedArity = 6;
  vary_meta.cljs$lang$applyTo = vary_meta__7.cljs$lang$applyTo;
  vary_meta.cljs$core$IFn$_invoke$arity$2 = vary_meta__2;
  vary_meta.cljs$core$IFn$_invoke$arity$3 = vary_meta__3;
  vary_meta.cljs$core$IFn$_invoke$arity$4 = vary_meta__4;
  vary_meta.cljs$core$IFn$_invoke$arity$5 = vary_meta__5;
  vary_meta.cljs$core$IFn$_invoke$arity$6 = vary_meta__6;
  vary_meta.cljs$core$IFn$_invoke$arity$variadic = vary_meta__7.cljs$core$IFn$_invoke$arity$variadic;
  return vary_meta;
}();
cljs.core.not_EQ_ = function() {
  var not_EQ_ = null;
  var not_EQ___1 = function(x) {
    return false;
  };
  var not_EQ___2 = function(x, y) {
    return!cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y);
  };
  var not_EQ___3 = function() {
    var G__11849__delegate = function(x, y, more) {
      return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core._EQ_, x, y, more));
    };
    var G__11849 = function(x, y, var_args) {
      var more = null;
      if (arguments.length > 2) {
        var G__11850__i = 0, G__11850__a = new Array(arguments.length - 2);
        while (G__11850__i < G__11850__a.length) {
          G__11850__a[G__11850__i] = arguments[G__11850__i + 2];
          ++G__11850__i;
        }
        more = new cljs.core.IndexedSeq(G__11850__a, 0);
      }
      return G__11849__delegate.call(this, x, y, more);
    };
    G__11849.cljs$lang$maxFixedArity = 2;
    G__11849.cljs$lang$applyTo = function(arglist__11851) {
      var x = cljs.core.first(arglist__11851);
      arglist__11851 = cljs.core.next(arglist__11851);
      var y = cljs.core.first(arglist__11851);
      var more = cljs.core.rest(arglist__11851);
      return G__11849__delegate(x, y, more);
    };
    G__11849.cljs$core$IFn$_invoke$arity$variadic = G__11849__delegate;
    return G__11849;
  }();
  not_EQ_ = function(x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return not_EQ___1.call(this, x);
      case 2:
        return not_EQ___2.call(this, x, y);
      default:
        var G__11852 = null;
        if (arguments.length > 2) {
          var G__11853__i = 0, G__11853__a = new Array(arguments.length - 2);
          while (G__11853__i < G__11853__a.length) {
            G__11853__a[G__11853__i] = arguments[G__11853__i + 2];
            ++G__11853__i;
          }
          G__11852 = new cljs.core.IndexedSeq(G__11853__a, 0);
        }
        return not_EQ___3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__11852);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  not_EQ_.cljs$lang$maxFixedArity = 2;
  not_EQ_.cljs$lang$applyTo = not_EQ___3.cljs$lang$applyTo;
  not_EQ_.cljs$core$IFn$_invoke$arity$1 = not_EQ___1;
  not_EQ_.cljs$core$IFn$_invoke$arity$2 = not_EQ___2;
  not_EQ_.cljs$core$IFn$_invoke$arity$variadic = not_EQ___3.cljs$core$IFn$_invoke$arity$variadic;
  return not_EQ_;
}();
cljs.core.not_empty = function not_empty(coll) {
  if (cljs.core.seq(coll)) {
    return coll;
  } else {
    return null;
  }
};
cljs.core.nil_iter = function nil_iter() {
  if (typeof cljs.core.t11857 !== "undefined") {
  } else {
    cljs.core.t11857 = function(nil_iter, meta11858) {
      this.nil_iter = nil_iter;
      this.meta11858 = meta11858;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.t11857.prototype.hasNext = function() {
      var self__ = this;
      var _ = this;
      return false;
    };
    cljs.core.t11857.prototype.next = function() {
      var self__ = this;
      var _ = this;
      return new Error("No such element");
    };
    cljs.core.t11857.prototype.remove = function() {
      var self__ = this;
      var _ = this;
      return new Error("Unsupported operation");
    };
    cljs.core.t11857.prototype.cljs$core$IMeta$_meta$arity$1 = function(_11859) {
      var self__ = this;
      var _11859__$1 = this;
      return self__.meta11858;
    };
    cljs.core.t11857.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_11859, meta11858__$1) {
      var self__ = this;
      var _11859__$1 = this;
      return new cljs.core.t11857(self__.nil_iter, meta11858__$1);
    };
    cljs.core.t11857.cljs$lang$type = true;
    cljs.core.t11857.cljs$lang$ctorStr = "cljs.core/t11857";
    cljs.core.t11857.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
      return cljs.core._write(writer__4513__auto__, "cljs.core/t11857");
    };
    cljs.core.__GT_t11857 = function __GT_t11857(nil_iter__$1, meta11858) {
      return new cljs.core.t11857(nil_iter__$1, meta11858);
    };
  }
  return new cljs.core.t11857(nil_iter, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.StringIter = function(s, i) {
  this.s = s;
  this.i = i;
};
cljs.core.StringIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.s.length;
};
cljs.core.StringIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.s.charAt(self__.i);
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.StringIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.StringIter.cljs$lang$type = true;
cljs.core.StringIter.cljs$lang$ctorStr = "cljs.core/StringIter";
cljs.core.StringIter.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/StringIter");
};
cljs.core.__GT_StringIter = function __GT_StringIter(s, i) {
  return new cljs.core.StringIter(s, i);
};
cljs.core.string_iter = function string_iter(x) {
  return new cljs.core.StringIter(x, 0);
};
cljs.core.ArrayIter = function(arr, i) {
  this.arr = arr;
  this.i = i;
};
cljs.core.ArrayIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.arr.length;
};
cljs.core.ArrayIter.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.arr[self__.i];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.ArrayIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.ArrayIter.cljs$lang$type = true;
cljs.core.ArrayIter.cljs$lang$ctorStr = "cljs.core/ArrayIter";
cljs.core.ArrayIter.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/ArrayIter");
};
cljs.core.__GT_ArrayIter = function __GT_ArrayIter(arr, i) {
  return new cljs.core.ArrayIter(arr, i);
};
cljs.core.array_iter = function array_iter(x) {
  return new cljs.core.ArrayIter(x, 0);
};
cljs.core.INIT = {};
cljs.core.START = {};
cljs.core.SeqIter = function(_seq, _next) {
  this._seq = _seq;
  this._next = _next;
};
cljs.core.SeqIter.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__._seq === cljs.core.INIT) {
    self__._seq = cljs.core.START;
    self__._next = cljs.core.seq(self__._next);
  } else {
    if (self__._seq === self__._next) {
      self__._next = cljs.core.next(self__._seq);
    } else {
    }
  }
  return!(self__._next == null);
};
cljs.core.SeqIter.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (cljs.core.not(this$.hasNext())) {
    throw new Error("No such element");
  } else {
    self__._seq = self__._next;
    return cljs.core.first(self__._next);
  }
};
cljs.core.SeqIter.prototype.remove = function() {
  var self__ = this;
  var _ = this;
  return new Error("Unsupported operation");
};
cljs.core.SeqIter.cljs$lang$type = true;
cljs.core.SeqIter.cljs$lang$ctorStr = "cljs.core/SeqIter";
cljs.core.SeqIter.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/SeqIter");
};
cljs.core.__GT_SeqIter = function __GT_SeqIter(_seq, _next) {
  return new cljs.core.SeqIter(_seq, _next);
};
cljs.core.seq_iter = function seq_iter(coll) {
  return new cljs.core.SeqIter(cljs.core.INIT, coll);
};
cljs.core.iter = function iter(coll) {
  if (coll == null) {
    return cljs.core.nil_iter();
  } else {
    if (typeof coll === "string") {
      return cljs.core.string_iter(coll);
    } else {
      if (coll instanceof Array) {
        return cljs.core.array_iter(coll);
      } else {
        if (cljs.core.iterable_QMARK_(coll)) {
          return cljs.core._iterator(coll);
        } else {
          if (cljs.core.seqable_QMARK_(coll)) {
            return cljs.core.seq_iter(coll);
          } else {
            throw new Error([cljs.core.str("Cannot create iterator from "), cljs.core.str(coll)].join(""));
          }
        }
      }
    }
  }
};
cljs.core.lazy_transformer = function lazy_transformer(stepper) {
  return new cljs.core.LazyTransformer(stepper, null, null, null);
};
cljs.core.Stepper = function(xform, iter) {
  this.xform = xform;
  this.iter = iter;
};
cljs.core.Stepper.prototype.step = function(lt) {
  var self__ = this;
  var this$ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__3913__auto__ = !(lt.stepper == null);
      if (and__3913__auto__) {
        return self__.iter.hasNext();
      } else {
        return and__3913__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_(function() {
        var G__11860 = lt;
        var G__11861 = self__.iter.next();
        return self__.xform.cljs$core$IFn$_invoke$arity$2 ? self__.xform.cljs$core$IFn$_invoke$arity$2(G__11860, G__11861) : self__.xform.call(null, G__11860, G__11861);
      }())) {
        if (lt.rest == null) {
        } else {
          lt.rest.stepper = null;
        }
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    var G__11862 = lt;
    return self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__11862) : self__.xform.call(null, G__11862);
  }
};
cljs.core.Stepper.cljs$lang$type = true;
cljs.core.Stepper.cljs$lang$ctorStr = "cljs.core/Stepper";
cljs.core.Stepper.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/Stepper");
};
cljs.core.__GT_Stepper = function __GT_Stepper(xform, iter) {
  return new cljs.core.Stepper(xform, iter);
};
cljs.core.stepper = function stepper(xform, iter) {
  var stepfn = function() {
    var stepfn = null;
    var stepfn__1 = function(result) {
      var lt = cljs.core.reduced_QMARK_(result) ? cljs.core.deref(result) : result;
      lt.stepper = null;
      return result;
    };
    var stepfn__2 = function(result, input) {
      var lt = result;
      lt.first = input;
      lt.rest = cljs.core.lazy_transformer(lt.stepper);
      lt.stepper = null;
      return lt.rest;
    };
    stepfn = function(result, input) {
      switch(arguments.length) {
        case 1:
          return stepfn__1.call(this, result);
        case 2:
          return stepfn__2.call(this, result, input);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
    stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
    return stepfn;
  }();
  return new cljs.core.Stepper(function() {
    var G__11864 = stepfn;
    return xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__11864) : xform.call(null, G__11864);
  }(), iter);
};
cljs.core.MultiStepper = function(xform, iters, nexts) {
  this.xform = xform;
  this.iters = iters;
  this.nexts = nexts;
};
cljs.core.MultiStepper.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  var iters__$1 = cljs.core.seq(self__.iters);
  while (true) {
    if (!(iters__$1 == null)) {
      var iter = cljs.core.first(iters__$1);
      if (cljs.core.not(iter.hasNext())) {
        return false;
      } else {
        var G__11866 = cljs.core.next(iters__$1);
        iters__$1 = G__11866;
        continue;
      }
    } else {
      return true;
    }
    break;
  }
};
cljs.core.MultiStepper.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var n__4812__auto___11867 = self__.iters.length;
  var i_11868 = 0;
  while (true) {
    if (i_11868 < n__4812__auto___11867) {
      self__.nexts[i_11868] = self__.iters[i_11868].next();
      var G__11869 = i_11868 + 1;
      i_11868 = G__11869;
      continue;
    } else {
    }
    break;
  }
  return cljs.core.prim_seq.cljs$core$IFn$_invoke$arity$2(self__.nexts, 0);
};
cljs.core.MultiStepper.prototype.step = function(lt) {
  var self__ = this;
  var this$ = this;
  while (true) {
    if (cljs.core.truth_(function() {
      var and__3913__auto__ = !(lt.stepper == null);
      if (and__3913__auto__) {
        return this$.hasNext();
      } else {
        return and__3913__auto__;
      }
    }())) {
      if (cljs.core.reduced_QMARK_(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(self__.xform, cljs.core.cons(lt, this$.next())))) {
        if (lt.rest == null) {
        } else {
          lt.rest.stepper = null;
        }
      } else {
        continue;
      }
    } else {
    }
    break;
  }
  if (lt.stepper == null) {
    return null;
  } else {
    var G__11865 = lt;
    return self__.xform.cljs$core$IFn$_invoke$arity$1 ? self__.xform.cljs$core$IFn$_invoke$arity$1(G__11865) : self__.xform.call(null, G__11865);
  }
};
cljs.core.MultiStepper.cljs$lang$type = true;
cljs.core.MultiStepper.cljs$lang$ctorStr = "cljs.core/MultiStepper";
cljs.core.MultiStepper.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/MultiStepper");
};
cljs.core.__GT_MultiStepper = function __GT_MultiStepper(xform, iters, nexts) {
  return new cljs.core.MultiStepper(xform, iters, nexts);
};
cljs.core.multi_stepper = function() {
  var multi_stepper = null;
  var multi_stepper__2 = function(xform, iters) {
    return multi_stepper.cljs$core$IFn$_invoke$arity$3(xform, iters, new Array(iters.length));
  };
  var multi_stepper__3 = function(xform, iters, nexts) {
    var stepfn = function() {
      var stepfn = null;
      var stepfn__1 = function(result) {
        var lt = cljs.core.reduced_QMARK_(result) ? cljs.core.deref(result) : result;
        lt.stepper = null;
        return lt;
      };
      var stepfn__2 = function(result, input) {
        var lt = result;
        lt.first = input;
        lt.rest = cljs.core.lazy_transformer(lt.stepper);
        lt.stepper = null;
        return lt.rest;
      };
      stepfn = function(result, input) {
        switch(arguments.length) {
          case 1:
            return stepfn__1.call(this, result);
          case 2:
            return stepfn__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      stepfn.cljs$core$IFn$_invoke$arity$1 = stepfn__1;
      stepfn.cljs$core$IFn$_invoke$arity$2 = stepfn__2;
      return stepfn;
    }();
    return new cljs.core.MultiStepper(function() {
      var G__11874 = stepfn;
      return xform.cljs$core$IFn$_invoke$arity$1 ? xform.cljs$core$IFn$_invoke$arity$1(G__11874) : xform.call(null, G__11874);
    }(), iters, nexts);
  };
  multi_stepper = function(xform, iters, nexts) {
    switch(arguments.length) {
      case 2:
        return multi_stepper__2.call(this, xform, iters);
      case 3:
        return multi_stepper__3.call(this, xform, iters, nexts);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  multi_stepper.cljs$core$IFn$_invoke$arity$2 = multi_stepper__2;
  multi_stepper.cljs$core$IFn$_invoke$arity$3 = multi_stepper__3;
  return multi_stepper;
}();
cljs.core.LazyTransformer = function(stepper, first, rest, meta) {
  this.stepper = stepper;
  this.first = first;
  this.rest = rest;
  this.meta = meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31719628;
};
cljs.core.LazyTransformer.prototype.cljs$core$INext$_next$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return cljs.core._seq(self__.rest);
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return self__.first;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    cljs.core._seq(this$__$1);
  }
  if (self__.rest == null) {
    return cljs.core.List.EMPTY;
  } else {
    return self__.rest;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.stepper == null) {
  } else {
    self__.stepper.step(this$__$1);
  }
  if (self__.rest == null) {
    return null;
  } else {
    return this$__$1;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.hash_ordered_coll(this$__$1);
};
cljs.core.LazyTransformer.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this$, other) {
  var self__ = this;
  var this$__$1 = this;
  var s = cljs.core._seq(this$__$1);
  if (!(s == null)) {
    return cljs.core.equiv_sequential(this$__$1, other);
  } else {
    return cljs.core.sequential_QMARK_(other) && cljs.core.seq(other) == null;
  }
};
cljs.core.LazyTransformer.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.List.EMPTY;
};
cljs.core.LazyTransformer.prototype.cljs$core$ICollection$_conj$arity$2 = function(this$, o) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.cons(o, cljs.core._seq(this$__$1));
};
cljs.core.LazyTransformer.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this$, new_meta) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.LazyTransformer(self__.stepper, self__.first, self__.rest, new_meta);
};
cljs.core.LazyTransformer.cljs$lang$type = true;
cljs.core.LazyTransformer.cljs$lang$ctorStr = "cljs.core/LazyTransformer";
cljs.core.LazyTransformer.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/LazyTransformer");
};
cljs.core.__GT_LazyTransformer = function __GT_LazyTransformer(stepper, first, rest, meta) {
  return new cljs.core.LazyTransformer(stepper, first, rest, meta);
};
cljs.core.LazyTransformer.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4903__auto__ = this;
  return cljs.core.es6_iterator(this__4903__auto__);
};
cljs.core.LazyTransformer.create = function(xform, coll) {
  return new cljs.core.LazyTransformer(cljs.core.stepper(xform, cljs.core.iter(coll)), null, null, null);
};
cljs.core.LazyTransformer.createMulti = function(xform, colls) {
  var iters = [];
  var seq__11875_11879 = cljs.core.seq(colls);
  var chunk__11876_11880 = null;
  var count__11877_11881 = 0;
  var i__11878_11882 = 0;
  while (true) {
    if (i__11878_11882 < count__11877_11881) {
      var coll_11883 = chunk__11876_11880.cljs$core$IIndexed$_nth$arity$2(null, i__11878_11882);
      iters.push(cljs.core.iter(coll_11883));
      var G__11884 = seq__11875_11879;
      var G__11885 = chunk__11876_11880;
      var G__11886 = count__11877_11881;
      var G__11887 = i__11878_11882 + 1;
      seq__11875_11879 = G__11884;
      chunk__11876_11880 = G__11885;
      count__11877_11881 = G__11886;
      i__11878_11882 = G__11887;
      continue;
    } else {
      var temp__4126__auto___11888 = cljs.core.seq(seq__11875_11879);
      if (temp__4126__auto___11888) {
        var seq__11875_11889__$1 = temp__4126__auto___11888;
        if (cljs.core.chunked_seq_QMARK_(seq__11875_11889__$1)) {
          var c__4712__auto___11890 = cljs.core.chunk_first(seq__11875_11889__$1);
          var G__11891 = cljs.core.chunk_rest(seq__11875_11889__$1);
          var G__11892 = c__4712__auto___11890;
          var G__11893 = cljs.core.count(c__4712__auto___11890);
          var G__11894 = 0;
          seq__11875_11879 = G__11891;
          chunk__11876_11880 = G__11892;
          count__11877_11881 = G__11893;
          i__11878_11882 = G__11894;
          continue;
        } else {
          var coll_11895 = cljs.core.first(seq__11875_11889__$1);
          iters.push(cljs.core.iter(coll_11895));
          var G__11896 = cljs.core.next(seq__11875_11889__$1);
          var G__11897 = null;
          var G__11898 = 0;
          var G__11899 = 0;
          seq__11875_11879 = G__11896;
          chunk__11876_11880 = G__11897;
          count__11877_11881 = G__11898;
          i__11878_11882 = G__11899;
          continue;
        }
      } else {
      }
    }
    break;
  }
  return new cljs.core.LazyTransformer(cljs.core.multi_stepper.cljs$core$IFn$_invoke$arity$3(xform, iters, new Array(iters.length)), null, null, null);
};
cljs.core.sequence = function() {
  var sequence = null;
  var sequence__1 = function(coll) {
    if (cljs.core.seq_QMARK_(coll)) {
      return coll;
    } else {
      var or__3925__auto__ = cljs.core.seq(coll);
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        return cljs.core.List.EMPTY;
      }
    }
  };
  var sequence__2 = function(xform, coll) {
    return cljs.core.LazyTransformer.create(xform, coll);
  };
  var sequence__3 = function() {
    var G__11900__delegate = function(xform, coll, colls) {
      return cljs.core.LazyTransformer.createMulti(xform, cljs.core.to_array(cljs.core.cons(coll, colls)));
    };
    var G__11900 = function(xform, coll, var_args) {
      var colls = null;
      if (arguments.length > 2) {
        var G__11901__i = 0, G__11901__a = new Array(arguments.length - 2);
        while (G__11901__i < G__11901__a.length) {
          G__11901__a[G__11901__i] = arguments[G__11901__i + 2];
          ++G__11901__i;
        }
        colls = new cljs.core.IndexedSeq(G__11901__a, 0);
      }
      return G__11900__delegate.call(this, xform, coll, colls);
    };
    G__11900.cljs$lang$maxFixedArity = 2;
    G__11900.cljs$lang$applyTo = function(arglist__11902) {
      var xform = cljs.core.first(arglist__11902);
      arglist__11902 = cljs.core.next(arglist__11902);
      var coll = cljs.core.first(arglist__11902);
      var colls = cljs.core.rest(arglist__11902);
      return G__11900__delegate(xform, coll, colls);
    };
    G__11900.cljs$core$IFn$_invoke$arity$variadic = G__11900__delegate;
    return G__11900;
  }();
  sequence = function(xform, coll, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 1:
        return sequence__1.call(this, xform);
      case 2:
        return sequence__2.call(this, xform, coll);
      default:
        var G__11903 = null;
        if (arguments.length > 2) {
          var G__11904__i = 0, G__11904__a = new Array(arguments.length - 2);
          while (G__11904__i < G__11904__a.length) {
            G__11904__a[G__11904__i] = arguments[G__11904__i + 2];
            ++G__11904__i;
          }
          G__11903 = new cljs.core.IndexedSeq(G__11904__a, 0);
        }
        return sequence__3.cljs$core$IFn$_invoke$arity$variadic(xform, coll, G__11903);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sequence.cljs$lang$maxFixedArity = 2;
  sequence.cljs$lang$applyTo = sequence__3.cljs$lang$applyTo;
  sequence.cljs$core$IFn$_invoke$arity$1 = sequence__1;
  sequence.cljs$core$IFn$_invoke$arity$2 = sequence__2;
  sequence.cljs$core$IFn$_invoke$arity$variadic = sequence__3.cljs$core$IFn$_invoke$arity$variadic;
  return sequence;
}();
cljs.core.every_QMARK_ = function every_QMARK_(pred, coll) {
  while (true) {
    if (cljs.core.seq(coll) == null) {
      return true;
    } else {
      if (cljs.core.truth_(function() {
        var G__11906 = cljs.core.first(coll);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__11906) : pred.call(null, G__11906);
      }())) {
        var G__11907 = pred;
        var G__11908 = cljs.core.next(coll);
        pred = G__11907;
        coll = G__11908;
        continue;
      } else {
        return false;
      }
    }
    break;
  }
};
cljs.core.not_every_QMARK_ = function not_every_QMARK_(pred, coll) {
  return!cljs.core.every_QMARK_(pred, coll);
};
cljs.core.some = function some(pred, coll) {
  while (true) {
    if (cljs.core.seq(coll)) {
      var or__3925__auto__ = function() {
        var G__11912 = cljs.core.first(coll);
        return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__11912) : pred.call(null, G__11912);
      }();
      if (cljs.core.truth_(or__3925__auto__)) {
        return or__3925__auto__;
      } else {
        var G__11913 = pred;
        var G__11914 = cljs.core.next(coll);
        pred = G__11913;
        coll = G__11914;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.not_any_QMARK_ = function not_any_QMARK_(pred, coll) {
  return cljs.core.not(cljs.core.some(pred, coll));
};
cljs.core.even_QMARK_ = function even_QMARK_(n) {
  if (cljs.core.integer_QMARK_(n)) {
    return(n & 1) === 0;
  } else {
    throw new Error([cljs.core.str("Argument must be an integer: "), cljs.core.str(n)].join(""));
  }
};
cljs.core.odd_QMARK_ = function odd_QMARK_(n) {
  return!cljs.core.even_QMARK_(n);
};
cljs.core.complement = function complement(f) {
  return function() {
    var G__11921 = null;
    var G__11921__0 = function() {
      return cljs.core.not(function() {
        return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
      }());
    };
    var G__11921__1 = function(x) {
      return cljs.core.not(function() {
        var G__11918 = x;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11918) : f.call(null, G__11918);
      }());
    };
    var G__11921__2 = function(x, y) {
      return cljs.core.not(function() {
        var G__11919 = x;
        var G__11920 = y;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__11919, G__11920) : f.call(null, G__11919, G__11920);
      }());
    };
    var G__11921__3 = function() {
      var G__11922__delegate = function(x, y, zs) {
        return cljs.core.not(cljs.core.apply.cljs$core$IFn$_invoke$arity$4(f, x, y, zs));
      };
      var G__11922 = function(x, y, var_args) {
        var zs = null;
        if (arguments.length > 2) {
          var G__11923__i = 0, G__11923__a = new Array(arguments.length - 2);
          while (G__11923__i < G__11923__a.length) {
            G__11923__a[G__11923__i] = arguments[G__11923__i + 2];
            ++G__11923__i;
          }
          zs = new cljs.core.IndexedSeq(G__11923__a, 0);
        }
        return G__11922__delegate.call(this, x, y, zs);
      };
      G__11922.cljs$lang$maxFixedArity = 2;
      G__11922.cljs$lang$applyTo = function(arglist__11924) {
        var x = cljs.core.first(arglist__11924);
        arglist__11924 = cljs.core.next(arglist__11924);
        var y = cljs.core.first(arglist__11924);
        var zs = cljs.core.rest(arglist__11924);
        return G__11922__delegate(x, y, zs);
      };
      G__11922.cljs$core$IFn$_invoke$arity$variadic = G__11922__delegate;
      return G__11922;
    }();
    G__11921 = function(x, y, var_args) {
      var zs = var_args;
      switch(arguments.length) {
        case 0:
          return G__11921__0.call(this);
        case 1:
          return G__11921__1.call(this, x);
        case 2:
          return G__11921__2.call(this, x, y);
        default:
          var G__11925 = null;
          if (arguments.length > 2) {
            var G__11926__i = 0, G__11926__a = new Array(arguments.length - 2);
            while (G__11926__i < G__11926__a.length) {
              G__11926__a[G__11926__i] = arguments[G__11926__i + 2];
              ++G__11926__i;
            }
            G__11925 = new cljs.core.IndexedSeq(G__11926__a, 0);
          }
          return G__11921__3.cljs$core$IFn$_invoke$arity$variadic(x, y, G__11925);
      }
      throw new Error("Invalid arity: " + arguments.length);
    };
    G__11921.cljs$lang$maxFixedArity = 2;
    G__11921.cljs$lang$applyTo = G__11921__3.cljs$lang$applyTo;
    G__11921.cljs$core$IFn$_invoke$arity$0 = G__11921__0;
    G__11921.cljs$core$IFn$_invoke$arity$1 = G__11921__1;
    G__11921.cljs$core$IFn$_invoke$arity$2 = G__11921__2;
    G__11921.cljs$core$IFn$_invoke$arity$variadic = G__11921__3.cljs$core$IFn$_invoke$arity$variadic;
    return G__11921;
  }();
};
cljs.core.constantly = function constantly(x) {
  return function() {
    var G__11927__delegate = function(args) {
      return x;
    };
    var G__11927 = function(var_args) {
      var args = null;
      if (arguments.length > 0) {
        var G__11928__i = 0, G__11928__a = new Array(arguments.length - 0);
        while (G__11928__i < G__11928__a.length) {
          G__11928__a[G__11928__i] = arguments[G__11928__i + 0];
          ++G__11928__i;
        }
        args = new cljs.core.IndexedSeq(G__11928__a, 0);
      }
      return G__11927__delegate.call(this, args);
    };
    G__11927.cljs$lang$maxFixedArity = 0;
    G__11927.cljs$lang$applyTo = function(arglist__11929) {
      var args = cljs.core.seq(arglist__11929);
      return G__11927__delegate(args);
    };
    G__11927.cljs$core$IFn$_invoke$arity$variadic = G__11927__delegate;
    return G__11927;
  }();
};
cljs.core.comp = function() {
  var comp = null;
  var comp__0 = function() {
    return cljs.core.identity;
  };
  var comp__1 = function(f) {
    return f;
  };
  var comp__2 = function(f, g) {
    return function() {
      var G__11984 = null;
      var G__11984__0 = function() {
        var G__11957 = function() {
          return g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11957) : f.call(null, G__11957);
      };
      var G__11984__1 = function(x) {
        var G__11958 = function() {
          var G__11959 = x;
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__11959) : g.call(null, G__11959);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11958) : f.call(null, G__11958);
      };
      var G__11984__2 = function(x, y) {
        var G__11960 = function() {
          var G__11961 = x;
          var G__11962 = y;
          return g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__11961, G__11962) : g.call(null, G__11961, G__11962);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11960) : f.call(null, G__11960);
      };
      var G__11984__3 = function(x, y, z) {
        var G__11963 = function() {
          var G__11964 = x;
          var G__11965 = y;
          var G__11966 = z;
          return g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__11964, G__11965, G__11966) : g.call(null, G__11964, G__11965, G__11966);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11963) : f.call(null, G__11963);
      };
      var G__11984__4 = function() {
        var G__11985__delegate = function(x, y, z, args) {
          var G__11967 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args);
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11967) : f.call(null, G__11967);
        };
        var G__11985 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__11986__i = 0, G__11986__a = new Array(arguments.length - 3);
            while (G__11986__i < G__11986__a.length) {
              G__11986__a[G__11986__i] = arguments[G__11986__i + 3];
              ++G__11986__i;
            }
            args = new cljs.core.IndexedSeq(G__11986__a, 0);
          }
          return G__11985__delegate.call(this, x, y, z, args);
        };
        G__11985.cljs$lang$maxFixedArity = 3;
        G__11985.cljs$lang$applyTo = function(arglist__11987) {
          var x = cljs.core.first(arglist__11987);
          arglist__11987 = cljs.core.next(arglist__11987);
          var y = cljs.core.first(arglist__11987);
          arglist__11987 = cljs.core.next(arglist__11987);
          var z = cljs.core.first(arglist__11987);
          var args = cljs.core.rest(arglist__11987);
          return G__11985__delegate(x, y, z, args);
        };
        G__11985.cljs$core$IFn$_invoke$arity$variadic = G__11985__delegate;
        return G__11985;
      }();
      G__11984 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__11984__0.call(this);
          case 1:
            return G__11984__1.call(this, x);
          case 2:
            return G__11984__2.call(this, x, y);
          case 3:
            return G__11984__3.call(this, x, y, z);
          default:
            var G__11988 = null;
            if (arguments.length > 3) {
              var G__11989__i = 0, G__11989__a = new Array(arguments.length - 3);
              while (G__11989__i < G__11989__a.length) {
                G__11989__a[G__11989__i] = arguments[G__11989__i + 3];
                ++G__11989__i;
              }
              G__11988 = new cljs.core.IndexedSeq(G__11989__a, 0);
            }
            return G__11984__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__11988);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__11984.cljs$lang$maxFixedArity = 3;
      G__11984.cljs$lang$applyTo = G__11984__4.cljs$lang$applyTo;
      G__11984.cljs$core$IFn$_invoke$arity$0 = G__11984__0;
      G__11984.cljs$core$IFn$_invoke$arity$1 = G__11984__1;
      G__11984.cljs$core$IFn$_invoke$arity$2 = G__11984__2;
      G__11984.cljs$core$IFn$_invoke$arity$3 = G__11984__3;
      G__11984.cljs$core$IFn$_invoke$arity$variadic = G__11984__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__11984;
    }();
  };
  var comp__3 = function(f, g, h) {
    return function() {
      var G__11990 = null;
      var G__11990__0 = function() {
        var G__11968 = function() {
          var G__11969 = function() {
            return h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null);
          }();
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__11969) : g.call(null, G__11969);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11968) : f.call(null, G__11968);
      };
      var G__11990__1 = function(x) {
        var G__11970 = function() {
          var G__11971 = function() {
            var G__11972 = x;
            return h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__11972) : h.call(null, G__11972);
          }();
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__11971) : g.call(null, G__11971);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11970) : f.call(null, G__11970);
      };
      var G__11990__2 = function(x, y) {
        var G__11973 = function() {
          var G__11974 = function() {
            var G__11975 = x;
            var G__11976 = y;
            return h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__11975, G__11976) : h.call(null, G__11975, G__11976);
          }();
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__11974) : g.call(null, G__11974);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11973) : f.call(null, G__11973);
      };
      var G__11990__3 = function(x, y, z) {
        var G__11977 = function() {
          var G__11978 = function() {
            var G__11979 = x;
            var G__11980 = y;
            var G__11981 = z;
            return h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__11979, G__11980, G__11981) : h.call(null, G__11979, G__11980, G__11981);
          }();
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__11978) : g.call(null, G__11978);
        }();
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11977) : f.call(null, G__11977);
      };
      var G__11990__4 = function() {
        var G__11991__delegate = function(x, y, z, args) {
          var G__11982 = function() {
            var G__11983 = cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h, x, y, z, args);
            return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__11983) : g.call(null, G__11983);
          }();
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__11982) : f.call(null, G__11982);
        };
        var G__11991 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__11992__i = 0, G__11992__a = new Array(arguments.length - 3);
            while (G__11992__i < G__11992__a.length) {
              G__11992__a[G__11992__i] = arguments[G__11992__i + 3];
              ++G__11992__i;
            }
            args = new cljs.core.IndexedSeq(G__11992__a, 0);
          }
          return G__11991__delegate.call(this, x, y, z, args);
        };
        G__11991.cljs$lang$maxFixedArity = 3;
        G__11991.cljs$lang$applyTo = function(arglist__11993) {
          var x = cljs.core.first(arglist__11993);
          arglist__11993 = cljs.core.next(arglist__11993);
          var y = cljs.core.first(arglist__11993);
          arglist__11993 = cljs.core.next(arglist__11993);
          var z = cljs.core.first(arglist__11993);
          var args = cljs.core.rest(arglist__11993);
          return G__11991__delegate(x, y, z, args);
        };
        G__11991.cljs$core$IFn$_invoke$arity$variadic = G__11991__delegate;
        return G__11991;
      }();
      G__11990 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__11990__0.call(this);
          case 1:
            return G__11990__1.call(this, x);
          case 2:
            return G__11990__2.call(this, x, y);
          case 3:
            return G__11990__3.call(this, x, y, z);
          default:
            var G__11994 = null;
            if (arguments.length > 3) {
              var G__11995__i = 0, G__11995__a = new Array(arguments.length - 3);
              while (G__11995__i < G__11995__a.length) {
                G__11995__a[G__11995__i] = arguments[G__11995__i + 3];
                ++G__11995__i;
              }
              G__11994 = new cljs.core.IndexedSeq(G__11995__a, 0);
            }
            return G__11990__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__11994);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__11990.cljs$lang$maxFixedArity = 3;
      G__11990.cljs$lang$applyTo = G__11990__4.cljs$lang$applyTo;
      G__11990.cljs$core$IFn$_invoke$arity$0 = G__11990__0;
      G__11990.cljs$core$IFn$_invoke$arity$1 = G__11990__1;
      G__11990.cljs$core$IFn$_invoke$arity$2 = G__11990__2;
      G__11990.cljs$core$IFn$_invoke$arity$3 = G__11990__3;
      G__11990.cljs$core$IFn$_invoke$arity$variadic = G__11990__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__11990;
    }();
  };
  var comp__4 = function() {
    var G__11996__delegate = function(f1, f2, f3, fs) {
      var fs__$1 = cljs.core.reverse(cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f1, f2, f3, fs));
      return function(fs__$1) {
        return function() {
          var G__11997__delegate = function(args) {
            var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.first(fs__$1), args);
            var fs__$2 = cljs.core.next(fs__$1);
            while (true) {
              if (fs__$2) {
                var G__11998 = cljs.core.first(fs__$2).call(null, ret);
                var G__11999 = cljs.core.next(fs__$2);
                ret = G__11998;
                fs__$2 = G__11999;
                continue;
              } else {
                return ret;
              }
              break;
            }
          };
          var G__11997 = function(var_args) {
            var args = null;
            if (arguments.length > 0) {
              var G__12000__i = 0, G__12000__a = new Array(arguments.length - 0);
              while (G__12000__i < G__12000__a.length) {
                G__12000__a[G__12000__i] = arguments[G__12000__i + 0];
                ++G__12000__i;
              }
              args = new cljs.core.IndexedSeq(G__12000__a, 0);
            }
            return G__11997__delegate.call(this, args);
          };
          G__11997.cljs$lang$maxFixedArity = 0;
          G__11997.cljs$lang$applyTo = function(arglist__12001) {
            var args = cljs.core.seq(arglist__12001);
            return G__11997__delegate(args);
          };
          G__11997.cljs$core$IFn$_invoke$arity$variadic = G__11997__delegate;
          return G__11997;
        }();
      }(fs__$1);
    };
    var G__11996 = function(f1, f2, f3, var_args) {
      var fs = null;
      if (arguments.length > 3) {
        var G__12002__i = 0, G__12002__a = new Array(arguments.length - 3);
        while (G__12002__i < G__12002__a.length) {
          G__12002__a[G__12002__i] = arguments[G__12002__i + 3];
          ++G__12002__i;
        }
        fs = new cljs.core.IndexedSeq(G__12002__a, 0);
      }
      return G__11996__delegate.call(this, f1, f2, f3, fs);
    };
    G__11996.cljs$lang$maxFixedArity = 3;
    G__11996.cljs$lang$applyTo = function(arglist__12003) {
      var f1 = cljs.core.first(arglist__12003);
      arglist__12003 = cljs.core.next(arglist__12003);
      var f2 = cljs.core.first(arglist__12003);
      arglist__12003 = cljs.core.next(arglist__12003);
      var f3 = cljs.core.first(arglist__12003);
      var fs = cljs.core.rest(arglist__12003);
      return G__11996__delegate(f1, f2, f3, fs);
    };
    G__11996.cljs$core$IFn$_invoke$arity$variadic = G__11996__delegate;
    return G__11996;
  }();
  comp = function(f1, f2, f3, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 0:
        return comp__0.call(this);
      case 1:
        return comp__1.call(this, f1);
      case 2:
        return comp__2.call(this, f1, f2);
      case 3:
        return comp__3.call(this, f1, f2, f3);
      default:
        var G__12004 = null;
        if (arguments.length > 3) {
          var G__12005__i = 0, G__12005__a = new Array(arguments.length - 3);
          while (G__12005__i < G__12005__a.length) {
            G__12005__a[G__12005__i] = arguments[G__12005__i + 3];
            ++G__12005__i;
          }
          G__12004 = new cljs.core.IndexedSeq(G__12005__a, 0);
        }
        return comp__4.cljs$core$IFn$_invoke$arity$variadic(f1, f2, f3, G__12004);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  comp.cljs$lang$maxFixedArity = 3;
  comp.cljs$lang$applyTo = comp__4.cljs$lang$applyTo;
  comp.cljs$core$IFn$_invoke$arity$0 = comp__0;
  comp.cljs$core$IFn$_invoke$arity$1 = comp__1;
  comp.cljs$core$IFn$_invoke$arity$2 = comp__2;
  comp.cljs$core$IFn$_invoke$arity$3 = comp__3;
  comp.cljs$core$IFn$_invoke$arity$variadic = comp__4.cljs$core$IFn$_invoke$arity$variadic;
  return comp;
}();
cljs.core.partial = function() {
  var partial = null;
  var partial__1 = function(f) {
    return f;
  };
  var partial__2 = function(f, arg1) {
    return function() {
      var G__12090 = null;
      var G__12090__0 = function() {
        var G__12048 = arg1;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12048) : f.call(null, G__12048);
      };
      var G__12090__1 = function(x) {
        var G__12049 = arg1;
        var G__12050 = x;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12049, G__12050) : f.call(null, G__12049, G__12050);
      };
      var G__12090__2 = function(x, y) {
        var G__12051 = arg1;
        var G__12052 = x;
        var G__12053 = y;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__12051, G__12052, G__12053) : f.call(null, G__12051, G__12052, G__12053);
      };
      var G__12090__3 = function(x, y, z) {
        var G__12054 = arg1;
        var G__12055 = x;
        var G__12056 = y;
        var G__12057 = z;
        return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__12054, G__12055, G__12056, G__12057) : f.call(null, G__12054, G__12055, G__12056, G__12057);
      };
      var G__12090__4 = function() {
        var G__12091__delegate = function(x, y, z, args) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, x, y, z, cljs.core.array_seq([args], 0));
        };
        var G__12091 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__12092__i = 0, G__12092__a = new Array(arguments.length - 3);
            while (G__12092__i < G__12092__a.length) {
              G__12092__a[G__12092__i] = arguments[G__12092__i + 3];
              ++G__12092__i;
            }
            args = new cljs.core.IndexedSeq(G__12092__a, 0);
          }
          return G__12091__delegate.call(this, x, y, z, args);
        };
        G__12091.cljs$lang$maxFixedArity = 3;
        G__12091.cljs$lang$applyTo = function(arglist__12093) {
          var x = cljs.core.first(arglist__12093);
          arglist__12093 = cljs.core.next(arglist__12093);
          var y = cljs.core.first(arglist__12093);
          arglist__12093 = cljs.core.next(arglist__12093);
          var z = cljs.core.first(arglist__12093);
          var args = cljs.core.rest(arglist__12093);
          return G__12091__delegate(x, y, z, args);
        };
        G__12091.cljs$core$IFn$_invoke$arity$variadic = G__12091__delegate;
        return G__12091;
      }();
      G__12090 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__12090__0.call(this);
          case 1:
            return G__12090__1.call(this, x);
          case 2:
            return G__12090__2.call(this, x, y);
          case 3:
            return G__12090__3.call(this, x, y, z);
          default:
            var G__12094 = null;
            if (arguments.length > 3) {
              var G__12095__i = 0, G__12095__a = new Array(arguments.length - 3);
              while (G__12095__i < G__12095__a.length) {
                G__12095__a[G__12095__i] = arguments[G__12095__i + 3];
                ++G__12095__i;
              }
              G__12094 = new cljs.core.IndexedSeq(G__12095__a, 0);
            }
            return G__12090__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__12094);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__12090.cljs$lang$maxFixedArity = 3;
      G__12090.cljs$lang$applyTo = G__12090__4.cljs$lang$applyTo;
      G__12090.cljs$core$IFn$_invoke$arity$0 = G__12090__0;
      G__12090.cljs$core$IFn$_invoke$arity$1 = G__12090__1;
      G__12090.cljs$core$IFn$_invoke$arity$2 = G__12090__2;
      G__12090.cljs$core$IFn$_invoke$arity$3 = G__12090__3;
      G__12090.cljs$core$IFn$_invoke$arity$variadic = G__12090__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__12090;
    }();
  };
  var partial__3 = function(f, arg1, arg2) {
    return function() {
      var G__12096 = null;
      var G__12096__0 = function() {
        var G__12058 = arg1;
        var G__12059 = arg2;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12058, G__12059) : f.call(null, G__12058, G__12059);
      };
      var G__12096__1 = function(x) {
        var G__12060 = arg1;
        var G__12061 = arg2;
        var G__12062 = x;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__12060, G__12061, G__12062) : f.call(null, G__12060, G__12061, G__12062);
      };
      var G__12096__2 = function(x, y) {
        var G__12063 = arg1;
        var G__12064 = arg2;
        var G__12065 = x;
        var G__12066 = y;
        return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__12063, G__12064, G__12065, G__12066) : f.call(null, G__12063, G__12064, G__12065, G__12066);
      };
      var G__12096__3 = function(x, y, z) {
        var G__12067 = arg1;
        var G__12068 = arg2;
        var G__12069 = x;
        var G__12070 = y;
        var G__12071 = z;
        return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__12067, G__12068, G__12069, G__12070, G__12071) : f.call(null, G__12067, G__12068, G__12069, G__12070, G__12071);
      };
      var G__12096__4 = function() {
        var G__12097__delegate = function(x, y, z, args) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, x, y, cljs.core.array_seq([z, args], 0));
        };
        var G__12097 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__12098__i = 0, G__12098__a = new Array(arguments.length - 3);
            while (G__12098__i < G__12098__a.length) {
              G__12098__a[G__12098__i] = arguments[G__12098__i + 3];
              ++G__12098__i;
            }
            args = new cljs.core.IndexedSeq(G__12098__a, 0);
          }
          return G__12097__delegate.call(this, x, y, z, args);
        };
        G__12097.cljs$lang$maxFixedArity = 3;
        G__12097.cljs$lang$applyTo = function(arglist__12099) {
          var x = cljs.core.first(arglist__12099);
          arglist__12099 = cljs.core.next(arglist__12099);
          var y = cljs.core.first(arglist__12099);
          arglist__12099 = cljs.core.next(arglist__12099);
          var z = cljs.core.first(arglist__12099);
          var args = cljs.core.rest(arglist__12099);
          return G__12097__delegate(x, y, z, args);
        };
        G__12097.cljs$core$IFn$_invoke$arity$variadic = G__12097__delegate;
        return G__12097;
      }();
      G__12096 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__12096__0.call(this);
          case 1:
            return G__12096__1.call(this, x);
          case 2:
            return G__12096__2.call(this, x, y);
          case 3:
            return G__12096__3.call(this, x, y, z);
          default:
            var G__12100 = null;
            if (arguments.length > 3) {
              var G__12101__i = 0, G__12101__a = new Array(arguments.length - 3);
              while (G__12101__i < G__12101__a.length) {
                G__12101__a[G__12101__i] = arguments[G__12101__i + 3];
                ++G__12101__i;
              }
              G__12100 = new cljs.core.IndexedSeq(G__12101__a, 0);
            }
            return G__12096__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__12100);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__12096.cljs$lang$maxFixedArity = 3;
      G__12096.cljs$lang$applyTo = G__12096__4.cljs$lang$applyTo;
      G__12096.cljs$core$IFn$_invoke$arity$0 = G__12096__0;
      G__12096.cljs$core$IFn$_invoke$arity$1 = G__12096__1;
      G__12096.cljs$core$IFn$_invoke$arity$2 = G__12096__2;
      G__12096.cljs$core$IFn$_invoke$arity$3 = G__12096__3;
      G__12096.cljs$core$IFn$_invoke$arity$variadic = G__12096__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__12096;
    }();
  };
  var partial__4 = function(f, arg1, arg2, arg3) {
    return function() {
      var G__12102 = null;
      var G__12102__0 = function() {
        var G__12072 = arg1;
        var G__12073 = arg2;
        var G__12074 = arg3;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__12072, G__12073, G__12074) : f.call(null, G__12072, G__12073, G__12074);
      };
      var G__12102__1 = function(x) {
        var G__12075 = arg1;
        var G__12076 = arg2;
        var G__12077 = arg3;
        var G__12078 = x;
        return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__12075, G__12076, G__12077, G__12078) : f.call(null, G__12075, G__12076, G__12077, G__12078);
      };
      var G__12102__2 = function(x, y) {
        var G__12079 = arg1;
        var G__12080 = arg2;
        var G__12081 = arg3;
        var G__12082 = x;
        var G__12083 = y;
        return f.cljs$core$IFn$_invoke$arity$5 ? f.cljs$core$IFn$_invoke$arity$5(G__12079, G__12080, G__12081, G__12082, G__12083) : f.call(null, G__12079, G__12080, G__12081, G__12082, G__12083);
      };
      var G__12102__3 = function(x, y, z) {
        var G__12084 = arg1;
        var G__12085 = arg2;
        var G__12086 = arg3;
        var G__12087 = x;
        var G__12088 = y;
        var G__12089 = z;
        return f.cljs$core$IFn$_invoke$arity$6 ? f.cljs$core$IFn$_invoke$arity$6(G__12084, G__12085, G__12086, G__12087, G__12088, G__12089) : f.call(null, G__12084, G__12085, G__12086, G__12087, G__12088, G__12089);
      };
      var G__12102__4 = function() {
        var G__12103__delegate = function(x, y, z, args) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, arg3, x, cljs.core.array_seq([y, z, args], 0));
        };
        var G__12103 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__12104__i = 0, G__12104__a = new Array(arguments.length - 3);
            while (G__12104__i < G__12104__a.length) {
              G__12104__a[G__12104__i] = arguments[G__12104__i + 3];
              ++G__12104__i;
            }
            args = new cljs.core.IndexedSeq(G__12104__a, 0);
          }
          return G__12103__delegate.call(this, x, y, z, args);
        };
        G__12103.cljs$lang$maxFixedArity = 3;
        G__12103.cljs$lang$applyTo = function(arglist__12105) {
          var x = cljs.core.first(arglist__12105);
          arglist__12105 = cljs.core.next(arglist__12105);
          var y = cljs.core.first(arglist__12105);
          arglist__12105 = cljs.core.next(arglist__12105);
          var z = cljs.core.first(arglist__12105);
          var args = cljs.core.rest(arglist__12105);
          return G__12103__delegate(x, y, z, args);
        };
        G__12103.cljs$core$IFn$_invoke$arity$variadic = G__12103__delegate;
        return G__12103;
      }();
      G__12102 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__12102__0.call(this);
          case 1:
            return G__12102__1.call(this, x);
          case 2:
            return G__12102__2.call(this, x, y);
          case 3:
            return G__12102__3.call(this, x, y, z);
          default:
            var G__12106 = null;
            if (arguments.length > 3) {
              var G__12107__i = 0, G__12107__a = new Array(arguments.length - 3);
              while (G__12107__i < G__12107__a.length) {
                G__12107__a[G__12107__i] = arguments[G__12107__i + 3];
                ++G__12107__i;
              }
              G__12106 = new cljs.core.IndexedSeq(G__12107__a, 0);
            }
            return G__12102__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__12106);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__12102.cljs$lang$maxFixedArity = 3;
      G__12102.cljs$lang$applyTo = G__12102__4.cljs$lang$applyTo;
      G__12102.cljs$core$IFn$_invoke$arity$0 = G__12102__0;
      G__12102.cljs$core$IFn$_invoke$arity$1 = G__12102__1;
      G__12102.cljs$core$IFn$_invoke$arity$2 = G__12102__2;
      G__12102.cljs$core$IFn$_invoke$arity$3 = G__12102__3;
      G__12102.cljs$core$IFn$_invoke$arity$variadic = G__12102__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__12102;
    }();
  };
  var partial__5 = function() {
    var G__12108__delegate = function(f, arg1, arg2, arg3, more) {
      return function() {
        var G__12109__delegate = function(args) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, arg1, arg2, arg3, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(more, args));
        };
        var G__12109 = function(var_args) {
          var args = null;
          if (arguments.length > 0) {
            var G__12110__i = 0, G__12110__a = new Array(arguments.length - 0);
            while (G__12110__i < G__12110__a.length) {
              G__12110__a[G__12110__i] = arguments[G__12110__i + 0];
              ++G__12110__i;
            }
            args = new cljs.core.IndexedSeq(G__12110__a, 0);
          }
          return G__12109__delegate.call(this, args);
        };
        G__12109.cljs$lang$maxFixedArity = 0;
        G__12109.cljs$lang$applyTo = function(arglist__12111) {
          var args = cljs.core.seq(arglist__12111);
          return G__12109__delegate(args);
        };
        G__12109.cljs$core$IFn$_invoke$arity$variadic = G__12109__delegate;
        return G__12109;
      }();
    };
    var G__12108 = function(f, arg1, arg2, arg3, var_args) {
      var more = null;
      if (arguments.length > 4) {
        var G__12112__i = 0, G__12112__a = new Array(arguments.length - 4);
        while (G__12112__i < G__12112__a.length) {
          G__12112__a[G__12112__i] = arguments[G__12112__i + 4];
          ++G__12112__i;
        }
        more = new cljs.core.IndexedSeq(G__12112__a, 0);
      }
      return G__12108__delegate.call(this, f, arg1, arg2, arg3, more);
    };
    G__12108.cljs$lang$maxFixedArity = 4;
    G__12108.cljs$lang$applyTo = function(arglist__12113) {
      var f = cljs.core.first(arglist__12113);
      arglist__12113 = cljs.core.next(arglist__12113);
      var arg1 = cljs.core.first(arglist__12113);
      arglist__12113 = cljs.core.next(arglist__12113);
      var arg2 = cljs.core.first(arglist__12113);
      arglist__12113 = cljs.core.next(arglist__12113);
      var arg3 = cljs.core.first(arglist__12113);
      var more = cljs.core.rest(arglist__12113);
      return G__12108__delegate(f, arg1, arg2, arg3, more);
    };
    G__12108.cljs$core$IFn$_invoke$arity$variadic = G__12108__delegate;
    return G__12108;
  }();
  partial = function(f, arg1, arg2, arg3, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 1:
        return partial__1.call(this, f);
      case 2:
        return partial__2.call(this, f, arg1);
      case 3:
        return partial__3.call(this, f, arg1, arg2);
      case 4:
        return partial__4.call(this, f, arg1, arg2, arg3);
      default:
        var G__12114 = null;
        if (arguments.length > 4) {
          var G__12115__i = 0, G__12115__a = new Array(arguments.length - 4);
          while (G__12115__i < G__12115__a.length) {
            G__12115__a[G__12115__i] = arguments[G__12115__i + 4];
            ++G__12115__i;
          }
          G__12114 = new cljs.core.IndexedSeq(G__12115__a, 0);
        }
        return partial__5.cljs$core$IFn$_invoke$arity$variadic(f, arg1, arg2, arg3, G__12114);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partial.cljs$lang$maxFixedArity = 4;
  partial.cljs$lang$applyTo = partial__5.cljs$lang$applyTo;
  partial.cljs$core$IFn$_invoke$arity$1 = partial__1;
  partial.cljs$core$IFn$_invoke$arity$2 = partial__2;
  partial.cljs$core$IFn$_invoke$arity$3 = partial__3;
  partial.cljs$core$IFn$_invoke$arity$4 = partial__4;
  partial.cljs$core$IFn$_invoke$arity$variadic = partial__5.cljs$core$IFn$_invoke$arity$variadic;
  return partial;
}();
cljs.core.fnil = function() {
  var fnil = null;
  var fnil__2 = function(f, x) {
    return function() {
      var G__12148 = null;
      var G__12148__1 = function(a) {
        var G__12132 = a == null ? x : a;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12132) : f.call(null, G__12132);
      };
      var G__12148__2 = function(a, b) {
        var G__12133 = a == null ? x : a;
        var G__12134 = b;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12133, G__12134) : f.call(null, G__12133, G__12134);
      };
      var G__12148__3 = function(a, b, c) {
        var G__12135 = a == null ? x : a;
        var G__12136 = b;
        var G__12137 = c;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__12135, G__12136, G__12137) : f.call(null, G__12135, G__12136, G__12137);
      };
      var G__12148__4 = function() {
        var G__12149__delegate = function(a, b, c, ds) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b, c, ds);
        };
        var G__12149 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            var G__12150__i = 0, G__12150__a = new Array(arguments.length - 3);
            while (G__12150__i < G__12150__a.length) {
              G__12150__a[G__12150__i] = arguments[G__12150__i + 3];
              ++G__12150__i;
            }
            ds = new cljs.core.IndexedSeq(G__12150__a, 0);
          }
          return G__12149__delegate.call(this, a, b, c, ds);
        };
        G__12149.cljs$lang$maxFixedArity = 3;
        G__12149.cljs$lang$applyTo = function(arglist__12151) {
          var a = cljs.core.first(arglist__12151);
          arglist__12151 = cljs.core.next(arglist__12151);
          var b = cljs.core.first(arglist__12151);
          arglist__12151 = cljs.core.next(arglist__12151);
          var c = cljs.core.first(arglist__12151);
          var ds = cljs.core.rest(arglist__12151);
          return G__12149__delegate(a, b, c, ds);
        };
        G__12149.cljs$core$IFn$_invoke$arity$variadic = G__12149__delegate;
        return G__12149;
      }();
      G__12148 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 1:
            return G__12148__1.call(this, a);
          case 2:
            return G__12148__2.call(this, a, b);
          case 3:
            return G__12148__3.call(this, a, b, c);
          default:
            var G__12152 = null;
            if (arguments.length > 3) {
              var G__12153__i = 0, G__12153__a = new Array(arguments.length - 3);
              while (G__12153__i < G__12153__a.length) {
                G__12153__a[G__12153__i] = arguments[G__12153__i + 3];
                ++G__12153__i;
              }
              G__12152 = new cljs.core.IndexedSeq(G__12153__a, 0);
            }
            return G__12148__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__12152);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__12148.cljs$lang$maxFixedArity = 3;
      G__12148.cljs$lang$applyTo = G__12148__4.cljs$lang$applyTo;
      G__12148.cljs$core$IFn$_invoke$arity$1 = G__12148__1;
      G__12148.cljs$core$IFn$_invoke$arity$2 = G__12148__2;
      G__12148.cljs$core$IFn$_invoke$arity$3 = G__12148__3;
      G__12148.cljs$core$IFn$_invoke$arity$variadic = G__12148__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__12148;
    }();
  };
  var fnil__3 = function(f, x, y) {
    return function() {
      var G__12154 = null;
      var G__12154__2 = function(a, b) {
        var G__12138 = a == null ? x : a;
        var G__12139 = b == null ? y : b;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12138, G__12139) : f.call(null, G__12138, G__12139);
      };
      var G__12154__3 = function(a, b, c) {
        var G__12140 = a == null ? x : a;
        var G__12141 = b == null ? y : b;
        var G__12142 = c;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__12140, G__12141, G__12142) : f.call(null, G__12140, G__12141, G__12142);
      };
      var G__12154__4 = function() {
        var G__12155__delegate = function(a, b, c, ds) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b == null ? y : b, c, ds);
        };
        var G__12155 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            var G__12156__i = 0, G__12156__a = new Array(arguments.length - 3);
            while (G__12156__i < G__12156__a.length) {
              G__12156__a[G__12156__i] = arguments[G__12156__i + 3];
              ++G__12156__i;
            }
            ds = new cljs.core.IndexedSeq(G__12156__a, 0);
          }
          return G__12155__delegate.call(this, a, b, c, ds);
        };
        G__12155.cljs$lang$maxFixedArity = 3;
        G__12155.cljs$lang$applyTo = function(arglist__12157) {
          var a = cljs.core.first(arglist__12157);
          arglist__12157 = cljs.core.next(arglist__12157);
          var b = cljs.core.first(arglist__12157);
          arglist__12157 = cljs.core.next(arglist__12157);
          var c = cljs.core.first(arglist__12157);
          var ds = cljs.core.rest(arglist__12157);
          return G__12155__delegate(a, b, c, ds);
        };
        G__12155.cljs$core$IFn$_invoke$arity$variadic = G__12155__delegate;
        return G__12155;
      }();
      G__12154 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__12154__2.call(this, a, b);
          case 3:
            return G__12154__3.call(this, a, b, c);
          default:
            var G__12158 = null;
            if (arguments.length > 3) {
              var G__12159__i = 0, G__12159__a = new Array(arguments.length - 3);
              while (G__12159__i < G__12159__a.length) {
                G__12159__a[G__12159__i] = arguments[G__12159__i + 3];
                ++G__12159__i;
              }
              G__12158 = new cljs.core.IndexedSeq(G__12159__a, 0);
            }
            return G__12154__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__12158);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__12154.cljs$lang$maxFixedArity = 3;
      G__12154.cljs$lang$applyTo = G__12154__4.cljs$lang$applyTo;
      G__12154.cljs$core$IFn$_invoke$arity$2 = G__12154__2;
      G__12154.cljs$core$IFn$_invoke$arity$3 = G__12154__3;
      G__12154.cljs$core$IFn$_invoke$arity$variadic = G__12154__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__12154;
    }();
  };
  var fnil__4 = function(f, x, y, z) {
    return function() {
      var G__12160 = null;
      var G__12160__2 = function(a, b) {
        var G__12143 = a == null ? x : a;
        var G__12144 = b == null ? y : b;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12143, G__12144) : f.call(null, G__12143, G__12144);
      };
      var G__12160__3 = function(a, b, c) {
        var G__12145 = a == null ? x : a;
        var G__12146 = b == null ? y : b;
        var G__12147 = c == null ? z : c;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__12145, G__12146, G__12147) : f.call(null, G__12145, G__12146, G__12147);
      };
      var G__12160__4 = function() {
        var G__12161__delegate = function(a, b, c, ds) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a == null ? x : a, b == null ? y : b, c == null ? z : c, ds);
        };
        var G__12161 = function(a, b, c, var_args) {
          var ds = null;
          if (arguments.length > 3) {
            var G__12162__i = 0, G__12162__a = new Array(arguments.length - 3);
            while (G__12162__i < G__12162__a.length) {
              G__12162__a[G__12162__i] = arguments[G__12162__i + 3];
              ++G__12162__i;
            }
            ds = new cljs.core.IndexedSeq(G__12162__a, 0);
          }
          return G__12161__delegate.call(this, a, b, c, ds);
        };
        G__12161.cljs$lang$maxFixedArity = 3;
        G__12161.cljs$lang$applyTo = function(arglist__12163) {
          var a = cljs.core.first(arglist__12163);
          arglist__12163 = cljs.core.next(arglist__12163);
          var b = cljs.core.first(arglist__12163);
          arglist__12163 = cljs.core.next(arglist__12163);
          var c = cljs.core.first(arglist__12163);
          var ds = cljs.core.rest(arglist__12163);
          return G__12161__delegate(a, b, c, ds);
        };
        G__12161.cljs$core$IFn$_invoke$arity$variadic = G__12161__delegate;
        return G__12161;
      }();
      G__12160 = function(a, b, c, var_args) {
        var ds = var_args;
        switch(arguments.length) {
          case 2:
            return G__12160__2.call(this, a, b);
          case 3:
            return G__12160__3.call(this, a, b, c);
          default:
            var G__12164 = null;
            if (arguments.length > 3) {
              var G__12165__i = 0, G__12165__a = new Array(arguments.length - 3);
              while (G__12165__i < G__12165__a.length) {
                G__12165__a[G__12165__i] = arguments[G__12165__i + 3];
                ++G__12165__i;
              }
              G__12164 = new cljs.core.IndexedSeq(G__12165__a, 0);
            }
            return G__12160__4.cljs$core$IFn$_invoke$arity$variadic(a, b, c, G__12164);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__12160.cljs$lang$maxFixedArity = 3;
      G__12160.cljs$lang$applyTo = G__12160__4.cljs$lang$applyTo;
      G__12160.cljs$core$IFn$_invoke$arity$2 = G__12160__2;
      G__12160.cljs$core$IFn$_invoke$arity$3 = G__12160__3;
      G__12160.cljs$core$IFn$_invoke$arity$variadic = G__12160__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__12160;
    }();
  };
  fnil = function(f, x, y, z) {
    switch(arguments.length) {
      case 2:
        return fnil__2.call(this, f, x);
      case 3:
        return fnil__3.call(this, f, x, y);
      case 4:
        return fnil__4.call(this, f, x, y, z);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  fnil.cljs$core$IFn$_invoke$arity$2 = fnil__2;
  fnil.cljs$core$IFn$_invoke$arity$3 = fnil__3;
  fnil.cljs$core$IFn$_invoke$arity$4 = fnil__4;
  return fnil;
}();
cljs.core.map_indexed = function() {
  var map_indexed = null;
  var map_indexed__1 = function(f) {
    return function(rf) {
      var i = function() {
        var G__12196 = -1;
        return cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1 ? cljs.core.volatile_BANG_.cljs$core$IFn$_invoke$arity$1(G__12196) : cljs.core.volatile_BANG_.call(null, G__12196);
      }();
      return function(i) {
        return function() {
          var G__12226 = null;
          var G__12226__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__12226__1 = function(result) {
            var G__12197 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__12197) : rf.call(null, G__12197);
          };
          var G__12226__2 = function(result, input) {
            var G__12198 = result;
            var G__12199 = function() {
              var G__12200 = cljs.core._vreset_BANG_(i, cljs.core._deref(i) + 1);
              var G__12201 = input;
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12200, G__12201) : f.call(null, G__12200, G__12201);
            }();
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__12198, G__12199) : rf.call(null, G__12198, G__12199);
          };
          G__12226 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__12226__0.call(this);
              case 1:
                return G__12226__1.call(this, result);
              case 2:
                return G__12226__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__12226.cljs$core$IFn$_invoke$arity$0 = G__12226__0;
          G__12226.cljs$core$IFn$_invoke$arity$1 = G__12226__1;
          G__12226.cljs$core$IFn$_invoke$arity$2 = G__12226__2;
          return G__12226;
        }();
      }(i);
    };
  };
  var map_indexed__2 = function(f, coll) {
    var mapi = function mapi(idx, coll__$1) {
      return new cljs.core.LazySeq(null, function() {
        var temp__4126__auto__ = cljs.core.seq(coll__$1);
        if (temp__4126__auto__) {
          var s = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_(s)) {
            var c = cljs.core.chunk_first(s);
            var size = cljs.core.count(c);
            var b = cljs.core.chunk_buffer(size);
            var n__4812__auto___12227 = size;
            var i_12228 = 0;
            while (true) {
              if (i_12228 < n__4812__auto___12227) {
                cljs.core.chunk_append(b, function() {
                  var G__12222 = idx + i_12228;
                  var G__12223 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_12228);
                  return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12222, G__12223) : f.call(null, G__12222, G__12223);
                }());
                var G__12229 = i_12228 + 1;
                i_12228 = G__12229;
                continue;
              } else {
              }
              break;
            }
            return cljs.core.chunk_cons(cljs.core.chunk(b), mapi(idx + size, cljs.core.chunk_rest(s)));
          } else {
            return cljs.core.cons(function() {
              var G__12224 = idx;
              var G__12225 = cljs.core.first(s);
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12224, G__12225) : f.call(null, G__12224, G__12225);
            }(), mapi(idx + 1, cljs.core.rest(s)));
          }
        } else {
          return null;
        }
      }, null, null);
    };
    return mapi(0, coll);
  };
  map_indexed = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return map_indexed__1.call(this, f);
      case 2:
        return map_indexed__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  map_indexed.cljs$core$IFn$_invoke$arity$1 = map_indexed__1;
  map_indexed.cljs$core$IFn$_invoke$arity$2 = map_indexed__2;
  return map_indexed;
}();
cljs.core.keep = function() {
  var keep = null;
  var keep__1 = function(f) {
    return function(rf) {
      return function() {
        var G__12248 = null;
        var G__12248__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__12248__1 = function(result) {
          var G__12242 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__12242) : rf.call(null, G__12242);
        };
        var G__12248__2 = function(result, input) {
          var v = function() {
            var G__12243 = input;
            return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12243) : f.call(null, G__12243);
          }();
          if (v == null) {
            return result;
          } else {
            var G__12244 = result;
            var G__12245 = v;
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__12244, G__12245) : rf.call(null, G__12244, G__12245);
          }
        };
        G__12248 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__12248__0.call(this);
            case 1:
              return G__12248__1.call(this, result);
            case 2:
              return G__12248__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__12248.cljs$core$IFn$_invoke$arity$0 = G__12248__0;
        G__12248.cljs$core$IFn$_invoke$arity$1 = G__12248__1;
        G__12248.cljs$core$IFn$_invoke$arity$2 = G__12248__2;
        return G__12248;
      }();
    };
  };
  var keep__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__4812__auto___12249 = size;
          var i_12250 = 0;
          while (true) {
            if (i_12250 < n__4812__auto___12249) {
              var x_12251 = function() {
                var G__12246 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_12250);
                return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12246) : f.call(null, G__12246);
              }();
              if (x_12251 == null) {
              } else {
                cljs.core.chunk_append(b, x_12251);
              }
              var G__12252 = i_12250 + 1;
              i_12250 = G__12252;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.chunk_rest(s)));
        } else {
          var x = function() {
            var G__12247 = cljs.core.first(s);
            return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12247) : f.call(null, G__12247);
          }();
          if (x == null) {
            return keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s));
          } else {
            return cljs.core.cons(x, keep.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s)));
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  keep = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return keep__1.call(this, f);
      case 2:
        return keep__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keep.cljs$core$IFn$_invoke$arity$1 = keep__1;
  keep.cljs$core$IFn$_invoke$arity$2 = keep__2;
  return keep;
}();
cljs.core.Atom = function(state, meta, validator, watches) {
  this.state = state;
  this.meta = meta;
  this.validator = validator;
  this.watches = watches;
  this.cljs$lang$protocol_mask$partition0$ = 6455296;
  this.cljs$lang$protocol_mask$partition1$ = 16386;
};
cljs.core.Atom.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var G__12253 = this$__$1;
  return goog.getUid(G__12253);
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_notify_watches$arity$3 = function(this$, oldval, newval) {
  var self__ = this;
  var this$__$1 = this;
  var seq__12254 = cljs.core.seq(self__.watches);
  var chunk__12255 = null;
  var count__12256 = 0;
  var i__12257 = 0;
  while (true) {
    if (i__12257 < count__12256) {
      var vec__12258 = chunk__12255.cljs$core$IIndexed$_nth$arity$2(null, i__12257);
      var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12258, 0, null);
      var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12258, 1, null);
      var G__12259_12268 = key;
      var G__12260_12269 = this$__$1;
      var G__12261_12270 = oldval;
      var G__12262_12271 = newval;
      f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__12259_12268, G__12260_12269, G__12261_12270, G__12262_12271) : f.call(null, G__12259_12268, G__12260_12269, G__12261_12270, G__12262_12271);
      var G__12272 = seq__12254;
      var G__12273 = chunk__12255;
      var G__12274 = count__12256;
      var G__12275 = i__12257 + 1;
      seq__12254 = G__12272;
      chunk__12255 = G__12273;
      count__12256 = G__12274;
      i__12257 = G__12275;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__12254);
      if (temp__4126__auto__) {
        var seq__12254__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__12254__$1)) {
          var c__4712__auto__ = cljs.core.chunk_first(seq__12254__$1);
          var G__12276 = cljs.core.chunk_rest(seq__12254__$1);
          var G__12277 = c__4712__auto__;
          var G__12278 = cljs.core.count(c__4712__auto__);
          var G__12279 = 0;
          seq__12254 = G__12276;
          chunk__12255 = G__12277;
          count__12256 = G__12278;
          i__12257 = G__12279;
          continue;
        } else {
          var vec__12263 = cljs.core.first(seq__12254__$1);
          var key = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12263, 0, null);
          var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__12263, 1, null);
          var G__12264_12280 = key;
          var G__12265_12281 = this$__$1;
          var G__12266_12282 = oldval;
          var G__12267_12283 = newval;
          f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__12264_12280, G__12265_12281, G__12266_12282, G__12267_12283) : f.call(null, G__12264_12280, G__12265_12281, G__12266_12282, G__12267_12283);
          var G__12284 = cljs.core.next(seq__12254__$1);
          var G__12285 = null;
          var G__12286 = 0;
          var G__12287 = 0;
          seq__12254 = G__12284;
          chunk__12255 = G__12285;
          count__12256 = G__12286;
          i__12257 = G__12287;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_add_watch$arity$3 = function(this$, key, f) {
  var self__ = this;
  var this$__$1 = this;
  this$__$1.watches = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.watches, key, f);
  return this$__$1;
};
cljs.core.Atom.prototype.cljs$core$IWatchable$_remove_watch$arity$2 = function(this$, key) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1.watches = cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.watches, key);
};
cljs.core.Atom.prototype.cljs$core$IMeta$_meta$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.meta;
};
cljs.core.Atom.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Atom.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return o__$1 === other;
};
cljs.core.Atom.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Atom.cljs$lang$type = true;
cljs.core.Atom.cljs$lang$ctorStr = "cljs.core/Atom";
cljs.core.Atom.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/Atom");
};
cljs.core.__GT_Atom = function __GT_Atom(state, meta, validator, watches) {
  return new cljs.core.Atom(state, meta, validator, watches);
};
cljs.core.atom = function() {
  var atom = null;
  var atom__1 = function(x) {
    return new cljs.core.Atom(x, null, null, null);
  };
  var atom__2 = function() {
    var G__12291__delegate = function(x, p__12288) {
      var map__12290 = p__12288;
      var map__12290__$1 = cljs.core.seq_QMARK_(map__12290) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__12290) : map__12290;
      var validator = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12290__$1, new cljs.core.Keyword(null, "validator", "validator", -1966190681));
      var meta = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__12290__$1, new cljs.core.Keyword(null, "meta", "meta", 1499536964));
      return new cljs.core.Atom(x, meta, validator, null);
    };
    var G__12291 = function(x, var_args) {
      var p__12288 = null;
      if (arguments.length > 1) {
        var G__12292__i = 0, G__12292__a = new Array(arguments.length - 1);
        while (G__12292__i < G__12292__a.length) {
          G__12292__a[G__12292__i] = arguments[G__12292__i + 1];
          ++G__12292__i;
        }
        p__12288 = new cljs.core.IndexedSeq(G__12292__a, 0);
      }
      return G__12291__delegate.call(this, x, p__12288);
    };
    G__12291.cljs$lang$maxFixedArity = 1;
    G__12291.cljs$lang$applyTo = function(arglist__12293) {
      var x = cljs.core.first(arglist__12293);
      var p__12288 = cljs.core.rest(arglist__12293);
      return G__12291__delegate(x, p__12288);
    };
    G__12291.cljs$core$IFn$_invoke$arity$variadic = G__12291__delegate;
    return G__12291;
  }();
  atom = function(x, var_args) {
    var p__12288 = var_args;
    switch(arguments.length) {
      case 1:
        return atom__1.call(this, x);
      default:
        var G__12294 = null;
        if (arguments.length > 1) {
          var G__12295__i = 0, G__12295__a = new Array(arguments.length - 1);
          while (G__12295__i < G__12295__a.length) {
            G__12295__a[G__12295__i] = arguments[G__12295__i + 1];
            ++G__12295__i;
          }
          G__12294 = new cljs.core.IndexedSeq(G__12295__a, 0);
        }
        return atom__2.cljs$core$IFn$_invoke$arity$variadic(x, G__12294);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  atom.cljs$lang$maxFixedArity = 1;
  atom.cljs$lang$applyTo = atom__2.cljs$lang$applyTo;
  atom.cljs$core$IFn$_invoke$arity$1 = atom__1;
  atom.cljs$core$IFn$_invoke$arity$variadic = atom__2.cljs$core$IFn$_invoke$arity$variadic;
  return atom;
}();
cljs.core.reset_BANG_ = function reset_BANG_(a, new_value) {
  if (a instanceof cljs.core.Atom) {
    var validate = a.validator;
    if (validate == null) {
    } else {
      if (cljs.core.truth_(function() {
        var G__12298 = new_value;
        return validate.cljs$core$IFn$_invoke$arity$1 ? validate.cljs$core$IFn$_invoke$arity$1(G__12298) : validate.call(null, G__12298);
      }())) {
      } else {
        throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Validator rejected reference state"), cljs.core.str("\n"), cljs.core.str(function() {
          var G__12299 = cljs.core.list(new cljs.core.Symbol(null, "validate", "validate", 1439230700, null), new cljs.core.Symbol(null, "new-value", "new-value", -1567397401, null));
          return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1 ? cljs.core.pr_str.cljs$core$IFn$_invoke$arity$1(G__12299) : cljs.core.pr_str.call(null, G__12299);
        }())].join(""));
      }
    }
    var old_value = a.state;
    a.state = new_value;
    if (a.watches == null) {
    } else {
      cljs.core._notify_watches(a, old_value, new_value);
    }
    return new_value;
  } else {
    return cljs.core._reset_BANG_(a, new_value);
  }
};
cljs.core.swap_BANG_ = function() {
  var swap_BANG_ = null;
  var swap_BANG___2 = function(a, f) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_(a, function() {
        var G__12306 = a.state;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__12306) : f.call(null, G__12306);
      }());
    } else {
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$2(a, f);
    }
  };
  var swap_BANG___3 = function(a, f, x) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_(a, function() {
        var G__12307 = a.state;
        var G__12308 = x;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12307, G__12308) : f.call(null, G__12307, G__12308);
      }());
    } else {
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$3(a, f, x);
    }
  };
  var swap_BANG___4 = function(a, f, x, y) {
    if (a instanceof cljs.core.Atom) {
      return cljs.core.reset_BANG_(a, function() {
        var G__12309 = a.state;
        var G__12310 = x;
        var G__12311 = y;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__12309, G__12310, G__12311) : f.call(null, G__12309, G__12310, G__12311);
      }());
    } else {
      return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$4(a, f, x, y);
    }
  };
  var swap_BANG___5 = function() {
    var G__12312__delegate = function(a, f, x, y, more) {
      if (a instanceof cljs.core.Atom) {
        return cljs.core.reset_BANG_(a, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, a.state, x, y, more));
      } else {
        return cljs.core._swap_BANG_.cljs$core$IFn$_invoke$arity$5(a, f, x, y, more);
      }
    };
    var G__12312 = function(a, f, x, y, var_args) {
      var more = null;
      if (arguments.length > 4) {
        var G__12313__i = 0, G__12313__a = new Array(arguments.length - 4);
        while (G__12313__i < G__12313__a.length) {
          G__12313__a[G__12313__i] = arguments[G__12313__i + 4];
          ++G__12313__i;
        }
        more = new cljs.core.IndexedSeq(G__12313__a, 0);
      }
      return G__12312__delegate.call(this, a, f, x, y, more);
    };
    G__12312.cljs$lang$maxFixedArity = 4;
    G__12312.cljs$lang$applyTo = function(arglist__12314) {
      var a = cljs.core.first(arglist__12314);
      arglist__12314 = cljs.core.next(arglist__12314);
      var f = cljs.core.first(arglist__12314);
      arglist__12314 = cljs.core.next(arglist__12314);
      var x = cljs.core.first(arglist__12314);
      arglist__12314 = cljs.core.next(arglist__12314);
      var y = cljs.core.first(arglist__12314);
      var more = cljs.core.rest(arglist__12314);
      return G__12312__delegate(a, f, x, y, more);
    };
    G__12312.cljs$core$IFn$_invoke$arity$variadic = G__12312__delegate;
    return G__12312;
  }();
  swap_BANG_ = function(a, f, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return swap_BANG___2.call(this, a, f);
      case 3:
        return swap_BANG___3.call(this, a, f, x);
      case 4:
        return swap_BANG___4.call(this, a, f, x, y);
      default:
        var G__12315 = null;
        if (arguments.length > 4) {
          var G__12316__i = 0, G__12316__a = new Array(arguments.length - 4);
          while (G__12316__i < G__12316__a.length) {
            G__12316__a[G__12316__i] = arguments[G__12316__i + 4];
            ++G__12316__i;
          }
          G__12315 = new cljs.core.IndexedSeq(G__12316__a, 0);
        }
        return swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic(a, f, x, y, G__12315);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  swap_BANG_.cljs$lang$maxFixedArity = 4;
  swap_BANG_.cljs$lang$applyTo = swap_BANG___5.cljs$lang$applyTo;
  swap_BANG_.cljs$core$IFn$_invoke$arity$2 = swap_BANG___2;
  swap_BANG_.cljs$core$IFn$_invoke$arity$3 = swap_BANG___3;
  swap_BANG_.cljs$core$IFn$_invoke$arity$4 = swap_BANG___4;
  swap_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_BANG___5.cljs$core$IFn$_invoke$arity$variadic;
  return swap_BANG_;
}();
cljs.core.compare_and_set_BANG_ = function compare_and_set_BANG_(a, oldval, newval) {
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(a.cljs$core$IDeref$_deref$arity$1(null), oldval)) {
    cljs.core.reset_BANG_(a, newval);
    return true;
  } else {
    return false;
  }
};
cljs.core.set_validator_BANG_ = function set_validator_BANG_(iref, val) {
  return iref.validator = val;
};
cljs.core.get_validator = function get_validator(iref) {
  return iref.validator;
};
cljs.core.Volatile = function(state) {
  this.state = state;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Volatile.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.state;
};
cljs.core.Volatile.prototype.cljs$core$IVolatile$ = true;
cljs.core.Volatile.prototype.cljs$core$IVolatile$_vreset_BANG_$arity$2 = function(_, new_state) {
  var self__ = this;
  var ___$1 = this;
  return self__.state = new_state;
};
cljs.core.Volatile.cljs$lang$type = true;
cljs.core.Volatile.cljs$lang$ctorStr = "cljs.core/Volatile";
cljs.core.Volatile.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/Volatile");
};
cljs.core.__GT_Volatile = function __GT_Volatile(state) {
  return new cljs.core.Volatile(state);
};
cljs.core.volatile_BANG_ = function volatile_BANG_(val) {
  return new cljs.core.Volatile(val);
};
cljs.core.volatile_QMARK_ = function volatile_QMARK_(x) {
  return x instanceof cljs.core.Volatile;
};
cljs.core.vreset_BANG_ = function vreset_BANG_(vol, newval) {
  return cljs.core._vreset_BANG_(vol, newval);
};
cljs.core.keep_indexed = function() {
  var keep_indexed = null;
  var keep_indexed__1 = function(f) {
    return function(rf) {
      var ia = cljs.core.volatile_BANG_(-1);
      return function(ia) {
        return function() {
          var G__12383 = null;
          var G__12383__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__12383__1 = function(result) {
            var G__12350 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__12350) : rf.call(null, G__12350);
          };
          var G__12383__2 = function(result, input) {
            var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, ia.cljs$core$IDeref$_deref$arity$1(null) + 1);
            var v = function() {
              var G__12351 = i;
              var G__12352 = input;
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12351, G__12352) : f.call(null, G__12351, G__12352);
            }();
            if (v == null) {
              return result;
            } else {
              var G__12353 = result;
              var G__12354 = v;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__12353, G__12354) : rf.call(null, G__12353, G__12354);
            }
          };
          G__12383 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__12383__0.call(this);
              case 1:
                return G__12383__1.call(this, result);
              case 2:
                return G__12383__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__12383.cljs$core$IFn$_invoke$arity$0 = G__12383__0;
          G__12383.cljs$core$IFn$_invoke$arity$1 = G__12383__1;
          G__12383.cljs$core$IFn$_invoke$arity$2 = G__12383__2;
          return G__12383;
        }();
      }(ia);
    };
  };
  var keep_indexed__2 = function(f, coll) {
    var keepi = function keepi(idx, coll__$1) {
      return new cljs.core.LazySeq(null, function() {
        var temp__4126__auto__ = cljs.core.seq(coll__$1);
        if (temp__4126__auto__) {
          var s = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_(s)) {
            var c = cljs.core.chunk_first(s);
            var size = cljs.core.count(c);
            var b = cljs.core.chunk_buffer(size);
            var n__4812__auto___12384 = size;
            var i_12385 = 0;
            while (true) {
              if (i_12385 < n__4812__auto___12384) {
                var x_12386 = function() {
                  var G__12379 = idx + i_12385;
                  var G__12380 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_12385);
                  return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12379, G__12380) : f.call(null, G__12379, G__12380);
                }();
                if (x_12386 == null) {
                } else {
                  cljs.core.chunk_append(b, x_12386);
                }
                var G__12387 = i_12385 + 1;
                i_12385 = G__12387;
                continue;
              } else {
              }
              break;
            }
            return cljs.core.chunk_cons(cljs.core.chunk(b), keepi(idx + size, cljs.core.chunk_rest(s)));
          } else {
            var x = function() {
              var G__12381 = idx;
              var G__12382 = cljs.core.first(s);
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__12381, G__12382) : f.call(null, G__12381, G__12382);
            }();
            if (x == null) {
              return keepi(idx + 1, cljs.core.rest(s));
            } else {
              return cljs.core.cons(x, keepi(idx + 1, cljs.core.rest(s)));
            }
          }
        } else {
          return null;
        }
      }, null, null);
    };
    return keepi(0, coll);
  };
  keep_indexed = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return keep_indexed__1.call(this, f);
      case 2:
        return keep_indexed__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  keep_indexed.cljs$core$IFn$_invoke$arity$1 = keep_indexed__1;
  keep_indexed.cljs$core$IFn$_invoke$arity$2 = keep_indexed__2;
  return keep_indexed;
}();
cljs.core.every_pred = function() {
  var every_pred = null;
  var every_pred__1 = function(p) {
    return function() {
      var ep1 = null;
      var ep1__0 = function() {
        return true;
      };
      var ep1__1 = function(x) {
        return cljs.core.boolean$(function() {
          var G__12601 = x;
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__12601) : p.call(null, G__12601);
        }());
      };
      var ep1__2 = function(x, y) {
        return cljs.core.boolean$(function() {
          var and__3913__auto__ = function() {
            var G__12603 = x;
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__12603) : p.call(null, G__12603);
          }();
          if (cljs.core.truth_(and__3913__auto__)) {
            var G__12604 = y;
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__12604) : p.call(null, G__12604);
          } else {
            return and__3913__auto__;
          }
        }());
      };
      var ep1__3 = function(x, y, z) {
        return cljs.core.boolean$(function() {
          var and__3913__auto__ = function() {
            var G__12606 = x;
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__12606) : p.call(null, G__12606);
          }();
          if (cljs.core.truth_(and__3913__auto__)) {
            var and__3913__auto____$1 = function() {
              var G__12608 = y;
              return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__12608) : p.call(null, G__12608);
            }();
            if (cljs.core.truth_(and__3913__auto____$1)) {
              var G__12609 = z;
              return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__12609) : p.call(null, G__12609);
            } else {
              return and__3913__auto____$1;
            }
          } else {
            return and__3913__auto__;
          }
        }());
      };
      var ep1__4 = function() {
        var G__12778__delegate = function(x, y, z, args) {
          return cljs.core.boolean$(ep1.cljs$core$IFn$_invoke$arity$3(x, y, z) && cljs.core.every_QMARK_(p, args));
        };
        var G__12778 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__12779__i = 0, G__12779__a = new Array(arguments.length - 3);
            while (G__12779__i < G__12779__a.length) {
              G__12779__a[G__12779__i] = arguments[G__12779__i + 3];
              ++G__12779__i;
            }
            args = new cljs.core.IndexedSeq(G__12779__a, 0);
          }
          return G__12778__delegate.call(this, x, y, z, args);
        };
        G__12778.cljs$lang$maxFixedArity = 3;
        G__12778.cljs$lang$applyTo = function(arglist__12780) {
          var x = cljs.core.first(arglist__12780);
          arglist__12780 = cljs.core.next(arglist__12780);
          var y = cljs.core.first(arglist__12780);
          arglist__12780 = cljs.core.next(arglist__12780);
          var z = cljs.core.first(arglist__12780);
          var args = cljs.core.rest(arglist__12780);
          return G__12778__delegate(x, y, z, args);
        };
        G__12778.cljs$core$IFn$_invoke$arity$variadic = G__12778__delegate;
        return G__12778;
      }();
      ep1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep1__0.call(this);
          case 1:
            return ep1__1.call(this, x);
          case 2:
            return ep1__2.call(this, x, y);
          case 3:
            return ep1__3.call(this, x, y, z);
          default:
            var G__12781 = null;
            if (arguments.length > 3) {
              var G__12782__i = 0, G__12782__a = new Array(arguments.length - 3);
              while (G__12782__i < G__12782__a.length) {
                G__12782__a[G__12782__i] = arguments[G__12782__i + 3];
                ++G__12782__i;
              }
              G__12781 = new cljs.core.IndexedSeq(G__12782__a, 0);
            }
            return ep1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__12781);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep1.cljs$lang$maxFixedArity = 3;
      ep1.cljs$lang$applyTo = ep1__4.cljs$lang$applyTo;
      ep1.cljs$core$IFn$_invoke$arity$0 = ep1__0;
      ep1.cljs$core$IFn$_invoke$arity$1 = ep1__1;
      ep1.cljs$core$IFn$_invoke$arity$2 = ep1__2;
      ep1.cljs$core$IFn$_invoke$arity$3 = ep1__3;
      ep1.cljs$core$IFn$_invoke$arity$variadic = ep1__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep1;
    }();
  };
  var every_pred__2 = function(p1, p2) {
    return function() {
      var ep2 = null;
      var ep2__0 = function() {
        return true;
      };
      var ep2__1 = function(x) {
        return cljs.core.boolean$(function() {
          var and__3913__auto__ = function() {
            var G__12641 = x;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__12641) : p1.call(null, G__12641);
          }();
          if (cljs.core.truth_(and__3913__auto__)) {
            var G__12642 = x;
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__12642) : p2.call(null, G__12642);
          } else {
            return and__3913__auto__;
          }
        }());
      };
      var ep2__2 = function(x, y) {
        return cljs.core.boolean$(function() {
          var and__3913__auto__ = function() {
            var G__12644 = x;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__12644) : p1.call(null, G__12644);
          }();
          if (cljs.core.truth_(and__3913__auto__)) {
            var and__3913__auto____$1 = function() {
              var G__12646 = y;
              return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__12646) : p1.call(null, G__12646);
            }();
            if (cljs.core.truth_(and__3913__auto____$1)) {
              var and__3913__auto____$2 = function() {
                var G__12648 = x;
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__12648) : p2.call(null, G__12648);
              }();
              if (cljs.core.truth_(and__3913__auto____$2)) {
                var G__12649 = y;
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__12649) : p2.call(null, G__12649);
              } else {
                return and__3913__auto____$2;
              }
            } else {
              return and__3913__auto____$1;
            }
          } else {
            return and__3913__auto__;
          }
        }());
      };
      var ep2__3 = function(x, y, z) {
        return cljs.core.boolean$(function() {
          var and__3913__auto__ = function() {
            var G__12651 = x;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__12651) : p1.call(null, G__12651);
          }();
          if (cljs.core.truth_(and__3913__auto__)) {
            var and__3913__auto____$1 = function() {
              var G__12653 = y;
              return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__12653) : p1.call(null, G__12653);
            }();
            if (cljs.core.truth_(and__3913__auto____$1)) {
              var and__3913__auto____$2 = function() {
                var G__12655 = z;
                return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__12655) : p1.call(null, G__12655);
              }();
              if (cljs.core.truth_(and__3913__auto____$2)) {
                var and__3913__auto____$3 = function() {
                  var G__12657 = x;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__12657) : p2.call(null, G__12657);
                }();
                if (cljs.core.truth_(and__3913__auto____$3)) {
                  var and__3913__auto____$4 = function() {
                    var G__12659 = y;
                    return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__12659) : p2.call(null, G__12659);
                  }();
                  if (cljs.core.truth_(and__3913__auto____$4)) {
                    var G__12660 = z;
                    return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__12660) : p2.call(null, G__12660);
                  } else {
                    return and__3913__auto____$4;
                  }
                } else {
                  return and__3913__auto____$3;
                }
              } else {
                return and__3913__auto____$2;
              }
            } else {
              return and__3913__auto____$1;
            }
          } else {
            return and__3913__auto__;
          }
        }());
      };
      var ep2__4 = function() {
        var G__12783__delegate = function(x, y, z, args) {
          return cljs.core.boolean$(ep2.cljs$core$IFn$_invoke$arity$3(x, y, z) && cljs.core.every_QMARK_(function(p1__12388_SHARP_) {
            var and__3913__auto__ = function() {
              var G__12665 = p1__12388_SHARP_;
              return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__12665) : p1.call(null, G__12665);
            }();
            if (cljs.core.truth_(and__3913__auto__)) {
              var G__12666 = p1__12388_SHARP_;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__12666) : p2.call(null, G__12666);
            } else {
              return and__3913__auto__;
            }
          }, args));
        };
        var G__12783 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__12784__i = 0, G__12784__a = new Array(arguments.length - 3);
            while (G__12784__i < G__12784__a.length) {
              G__12784__a[G__12784__i] = arguments[G__12784__i + 3];
              ++G__12784__i;
            }
            args = new cljs.core.IndexedSeq(G__12784__a, 0);
          }
          return G__12783__delegate.call(this, x, y, z, args);
        };
        G__12783.cljs$lang$maxFixedArity = 3;
        G__12783.cljs$lang$applyTo = function(arglist__12785) {
          var x = cljs.core.first(arglist__12785);
          arglist__12785 = cljs.core.next(arglist__12785);
          var y = cljs.core.first(arglist__12785);
          arglist__12785 = cljs.core.next(arglist__12785);
          var z = cljs.core.first(arglist__12785);
          var args = cljs.core.rest(arglist__12785);
          return G__12783__delegate(x, y, z, args);
        };
        G__12783.cljs$core$IFn$_invoke$arity$variadic = G__12783__delegate;
        return G__12783;
      }();
      ep2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep2__0.call(this);
          case 1:
            return ep2__1.call(this, x);
          case 2:
            return ep2__2.call(this, x, y);
          case 3:
            return ep2__3.call(this, x, y, z);
          default:
            var G__12786 = null;
            if (arguments.length > 3) {
              var G__12787__i = 0, G__12787__a = new Array(arguments.length - 3);
              while (G__12787__i < G__12787__a.length) {
                G__12787__a[G__12787__i] = arguments[G__12787__i + 3];
                ++G__12787__i;
              }
              G__12786 = new cljs.core.IndexedSeq(G__12787__a, 0);
            }
            return ep2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__12786);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep2.cljs$lang$maxFixedArity = 3;
      ep2.cljs$lang$applyTo = ep2__4.cljs$lang$applyTo;
      ep2.cljs$core$IFn$_invoke$arity$0 = ep2__0;
      ep2.cljs$core$IFn$_invoke$arity$1 = ep2__1;
      ep2.cljs$core$IFn$_invoke$arity$2 = ep2__2;
      ep2.cljs$core$IFn$_invoke$arity$3 = ep2__3;
      ep2.cljs$core$IFn$_invoke$arity$variadic = ep2__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep2;
    }();
  };
  var every_pred__3 = function(p1, p2, p3) {
    return function() {
      var ep3 = null;
      var ep3__0 = function() {
        return true;
      };
      var ep3__1 = function(x) {
        return cljs.core.boolean$(function() {
          var and__3913__auto__ = function() {
            var G__12712 = x;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__12712) : p1.call(null, G__12712);
          }();
          if (cljs.core.truth_(and__3913__auto__)) {
            var and__3913__auto____$1 = function() {
              var G__12714 = x;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__12714) : p2.call(null, G__12714);
            }();
            if (cljs.core.truth_(and__3913__auto____$1)) {
              var G__12715 = x;
              return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__12715) : p3.call(null, G__12715);
            } else {
              return and__3913__auto____$1;
            }
          } else {
            return and__3913__auto__;
          }
        }());
      };
      var ep3__2 = function(x, y) {
        return cljs.core.boolean$(function() {
          var and__3913__auto__ = function() {
            var G__12717 = x;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__12717) : p1.call(null, G__12717);
          }();
          if (cljs.core.truth_(and__3913__auto__)) {
            var and__3913__auto____$1 = function() {
              var G__12719 = x;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__12719) : p2.call(null, G__12719);
            }();
            if (cljs.core.truth_(and__3913__auto____$1)) {
              var and__3913__auto____$2 = function() {
                var G__12721 = x;
                return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__12721) : p3.call(null, G__12721);
              }();
              if (cljs.core.truth_(and__3913__auto____$2)) {
                var and__3913__auto____$3 = function() {
                  var G__12723 = y;
                  return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__12723) : p1.call(null, G__12723);
                }();
                if (cljs.core.truth_(and__3913__auto____$3)) {
                  var and__3913__auto____$4 = function() {
                    var G__12725 = y;
                    return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__12725) : p2.call(null, G__12725);
                  }();
                  if (cljs.core.truth_(and__3913__auto____$4)) {
                    var G__12726 = y;
                    return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__12726) : p3.call(null, G__12726);
                  } else {
                    return and__3913__auto____$4;
                  }
                } else {
                  return and__3913__auto____$3;
                }
              } else {
                return and__3913__auto____$2;
              }
            } else {
              return and__3913__auto____$1;
            }
          } else {
            return and__3913__auto__;
          }
        }());
      };
      var ep3__3 = function(x, y, z) {
        return cljs.core.boolean$(function() {
          var and__3913__auto__ = function() {
            var G__12728 = x;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__12728) : p1.call(null, G__12728);
          }();
          if (cljs.core.truth_(and__3913__auto__)) {
            var and__3913__auto____$1 = function() {
              var G__12730 = x;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__12730) : p2.call(null, G__12730);
            }();
            if (cljs.core.truth_(and__3913__auto____$1)) {
              var and__3913__auto____$2 = function() {
                var G__12732 = x;
                return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__12732) : p3.call(null, G__12732);
              }();
              if (cljs.core.truth_(and__3913__auto____$2)) {
                var and__3913__auto____$3 = function() {
                  var G__12734 = y;
                  return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__12734) : p1.call(null, G__12734);
                }();
                if (cljs.core.truth_(and__3913__auto____$3)) {
                  var and__3913__auto____$4 = function() {
                    var G__12736 = y;
                    return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__12736) : p2.call(null, G__12736);
                  }();
                  if (cljs.core.truth_(and__3913__auto____$4)) {
                    var and__3913__auto____$5 = function() {
                      var G__12738 = y;
                      return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__12738) : p3.call(null, G__12738);
                    }();
                    if (cljs.core.truth_(and__3913__auto____$5)) {
                      var and__3913__auto____$6 = function() {
                        var G__12740 = z;
                        return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__12740) : p1.call(null, G__12740);
                      }();
                      if (cljs.core.truth_(and__3913__auto____$6)) {
                        var and__3913__auto____$7 = function() {
                          var G__12742 = z;
                          return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__12742) : p2.call(null, G__12742);
                        }();
                        if (cljs.core.truth_(and__3913__auto____$7)) {
                          var G__12743 = z;
                          return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__12743) : p3.call(null, G__12743);
                        } else {
                          return and__3913__auto____$7;
                        }
                      } else {
                        return and__3913__auto____$6;
                      }
                    } else {
                      return and__3913__auto____$5;
                    }
                  } else {
                    return and__3913__auto____$4;
                  }
                } else {
                  return and__3913__auto____$3;
                }
              } else {
                return and__3913__auto____$2;
              }
            } else {
              return and__3913__auto____$1;
            }
          } else {
            return and__3913__auto__;
          }
        }());
      };
      var ep3__4 = function() {
        var G__12788__delegate = function(x, y, z, args) {
          return cljs.core.boolean$(ep3.cljs$core$IFn$_invoke$arity$3(x, y, z) && cljs.core.every_QMARK_(function(p1__12389_SHARP_) {
            var and__3913__auto__ = function() {
              var G__12750 = p1__12389_SHARP_;
              return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__12750) : p1.call(null, G__12750);
            }();
            if (cljs.core.truth_(and__3913__auto__)) {
              var and__3913__auto____$1 = function() {
                var G__12752 = p1__12389_SHARP_;
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__12752) : p2.call(null, G__12752);
              }();
              if (cljs.core.truth_(and__3913__auto____$1)) {
                var G__12753 = p1__12389_SHARP_;
                return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__12753) : p3.call(null, G__12753);
              } else {
                return and__3913__auto____$1;
              }
            } else {
              return and__3913__auto__;
            }
          }, args));
        };
        var G__12788 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__12789__i = 0, G__12789__a = new Array(arguments.length - 3);
            while (G__12789__i < G__12789__a.length) {
              G__12789__a[G__12789__i] = arguments[G__12789__i + 3];
              ++G__12789__i;
            }
            args = new cljs.core.IndexedSeq(G__12789__a, 0);
          }
          return G__12788__delegate.call(this, x, y, z, args);
        };
        G__12788.cljs$lang$maxFixedArity = 3;
        G__12788.cljs$lang$applyTo = function(arglist__12790) {
          var x = cljs.core.first(arglist__12790);
          arglist__12790 = cljs.core.next(arglist__12790);
          var y = cljs.core.first(arglist__12790);
          arglist__12790 = cljs.core.next(arglist__12790);
          var z = cljs.core.first(arglist__12790);
          var args = cljs.core.rest(arglist__12790);
          return G__12788__delegate(x, y, z, args);
        };
        G__12788.cljs$core$IFn$_invoke$arity$variadic = G__12788__delegate;
        return G__12788;
      }();
      ep3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return ep3__0.call(this);
          case 1:
            return ep3__1.call(this, x);
          case 2:
            return ep3__2.call(this, x, y);
          case 3:
            return ep3__3.call(this, x, y, z);
          default:
            var G__12791 = null;
            if (arguments.length > 3) {
              var G__12792__i = 0, G__12792__a = new Array(arguments.length - 3);
              while (G__12792__i < G__12792__a.length) {
                G__12792__a[G__12792__i] = arguments[G__12792__i + 3];
                ++G__12792__i;
              }
              G__12791 = new cljs.core.IndexedSeq(G__12792__a, 0);
            }
            return ep3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__12791);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      ep3.cljs$lang$maxFixedArity = 3;
      ep3.cljs$lang$applyTo = ep3__4.cljs$lang$applyTo;
      ep3.cljs$core$IFn$_invoke$arity$0 = ep3__0;
      ep3.cljs$core$IFn$_invoke$arity$1 = ep3__1;
      ep3.cljs$core$IFn$_invoke$arity$2 = ep3__2;
      ep3.cljs$core$IFn$_invoke$arity$3 = ep3__3;
      ep3.cljs$core$IFn$_invoke$arity$variadic = ep3__4.cljs$core$IFn$_invoke$arity$variadic;
      return ep3;
    }();
  };
  var every_pred__4 = function() {
    var G__12793__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1, p2, p3, ps);
      return function(ps__$1) {
        return function() {
          var epn = null;
          var epn__0 = function() {
            return true;
          };
          var epn__1 = function(x) {
            return cljs.core.every_QMARK_(function(ps__$1) {
              return function(p1__12390_SHARP_) {
                var G__12769 = x;
                return p1__12390_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__12390_SHARP_.cljs$core$IFn$_invoke$arity$1(G__12769) : p1__12390_SHARP_.call(null, G__12769);
              };
            }(ps__$1), ps__$1);
          };
          var epn__2 = function(x, y) {
            return cljs.core.every_QMARK_(function(ps__$1) {
              return function(p1__12391_SHARP_) {
                var and__3913__auto__ = function() {
                  var G__12771 = x;
                  return p1__12391_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__12391_SHARP_.cljs$core$IFn$_invoke$arity$1(G__12771) : p1__12391_SHARP_.call(null, G__12771);
                }();
                if (cljs.core.truth_(and__3913__auto__)) {
                  var G__12772 = y;
                  return p1__12391_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__12391_SHARP_.cljs$core$IFn$_invoke$arity$1(G__12772) : p1__12391_SHARP_.call(null, G__12772);
                } else {
                  return and__3913__auto__;
                }
              };
            }(ps__$1), ps__$1);
          };
          var epn__3 = function(x, y, z) {
            return cljs.core.every_QMARK_(function(ps__$1) {
              return function(p1__12392_SHARP_) {
                var and__3913__auto__ = function() {
                  var G__12774 = x;
                  return p1__12392_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__12392_SHARP_.cljs$core$IFn$_invoke$arity$1(G__12774) : p1__12392_SHARP_.call(null, G__12774);
                }();
                if (cljs.core.truth_(and__3913__auto__)) {
                  var and__3913__auto____$1 = function() {
                    var G__12776 = y;
                    return p1__12392_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__12392_SHARP_.cljs$core$IFn$_invoke$arity$1(G__12776) : p1__12392_SHARP_.call(null, G__12776);
                  }();
                  if (cljs.core.truth_(and__3913__auto____$1)) {
                    var G__12777 = z;
                    return p1__12392_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__12392_SHARP_.cljs$core$IFn$_invoke$arity$1(G__12777) : p1__12392_SHARP_.call(null, G__12777);
                  } else {
                    return and__3913__auto____$1;
                  }
                } else {
                  return and__3913__auto__;
                }
              };
            }(ps__$1), ps__$1);
          };
          var epn__4 = function() {
            var G__12794__delegate = function(x, y, z, args) {
              return cljs.core.boolean$(epn.cljs$core$IFn$_invoke$arity$3(x, y, z) && cljs.core.every_QMARK_(function(ps__$1) {
                return function(p1__12393_SHARP_) {
                  return cljs.core.every_QMARK_(p1__12393_SHARP_, args);
                };
              }(ps__$1), ps__$1));
            };
            var G__12794 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                var G__12795__i = 0, G__12795__a = new Array(arguments.length - 3);
                while (G__12795__i < G__12795__a.length) {
                  G__12795__a[G__12795__i] = arguments[G__12795__i + 3];
                  ++G__12795__i;
                }
                args = new cljs.core.IndexedSeq(G__12795__a, 0);
              }
              return G__12794__delegate.call(this, x, y, z, args);
            };
            G__12794.cljs$lang$maxFixedArity = 3;
            G__12794.cljs$lang$applyTo = function(arglist__12796) {
              var x = cljs.core.first(arglist__12796);
              arglist__12796 = cljs.core.next(arglist__12796);
              var y = cljs.core.first(arglist__12796);
              arglist__12796 = cljs.core.next(arglist__12796);
              var z = cljs.core.first(arglist__12796);
              var args = cljs.core.rest(arglist__12796);
              return G__12794__delegate(x, y, z, args);
            };
            G__12794.cljs$core$IFn$_invoke$arity$variadic = G__12794__delegate;
            return G__12794;
          }();
          epn = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return epn__0.call(this);
              case 1:
                return epn__1.call(this, x);
              case 2:
                return epn__2.call(this, x, y);
              case 3:
                return epn__3.call(this, x, y, z);
              default:
                var G__12797 = null;
                if (arguments.length > 3) {
                  var G__12798__i = 0, G__12798__a = new Array(arguments.length - 3);
                  while (G__12798__i < G__12798__a.length) {
                    G__12798__a[G__12798__i] = arguments[G__12798__i + 3];
                    ++G__12798__i;
                  }
                  G__12797 = new cljs.core.IndexedSeq(G__12798__a, 0);
                }
                return epn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__12797);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          epn.cljs$lang$maxFixedArity = 3;
          epn.cljs$lang$applyTo = epn__4.cljs$lang$applyTo;
          epn.cljs$core$IFn$_invoke$arity$0 = epn__0;
          epn.cljs$core$IFn$_invoke$arity$1 = epn__1;
          epn.cljs$core$IFn$_invoke$arity$2 = epn__2;
          epn.cljs$core$IFn$_invoke$arity$3 = epn__3;
          epn.cljs$core$IFn$_invoke$arity$variadic = epn__4.cljs$core$IFn$_invoke$arity$variadic;
          return epn;
        }();
      }(ps__$1);
    };
    var G__12793 = function(p1, p2, p3, var_args) {
      var ps = null;
      if (arguments.length > 3) {
        var G__12799__i = 0, G__12799__a = new Array(arguments.length - 3);
        while (G__12799__i < G__12799__a.length) {
          G__12799__a[G__12799__i] = arguments[G__12799__i + 3];
          ++G__12799__i;
        }
        ps = new cljs.core.IndexedSeq(G__12799__a, 0);
      }
      return G__12793__delegate.call(this, p1, p2, p3, ps);
    };
    G__12793.cljs$lang$maxFixedArity = 3;
    G__12793.cljs$lang$applyTo = function(arglist__12800) {
      var p1 = cljs.core.first(arglist__12800);
      arglist__12800 = cljs.core.next(arglist__12800);
      var p2 = cljs.core.first(arglist__12800);
      arglist__12800 = cljs.core.next(arglist__12800);
      var p3 = cljs.core.first(arglist__12800);
      var ps = cljs.core.rest(arglist__12800);
      return G__12793__delegate(p1, p2, p3, ps);
    };
    G__12793.cljs$core$IFn$_invoke$arity$variadic = G__12793__delegate;
    return G__12793;
  }();
  every_pred = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return every_pred__1.call(this, p1);
      case 2:
        return every_pred__2.call(this, p1, p2);
      case 3:
        return every_pred__3.call(this, p1, p2, p3);
      default:
        var G__12801 = null;
        if (arguments.length > 3) {
          var G__12802__i = 0, G__12802__a = new Array(arguments.length - 3);
          while (G__12802__i < G__12802__a.length) {
            G__12802__a[G__12802__i] = arguments[G__12802__i + 3];
            ++G__12802__i;
          }
          G__12801 = new cljs.core.IndexedSeq(G__12802__a, 0);
        }
        return every_pred__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, G__12801);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  every_pred.cljs$lang$maxFixedArity = 3;
  every_pred.cljs$lang$applyTo = every_pred__4.cljs$lang$applyTo;
  every_pred.cljs$core$IFn$_invoke$arity$1 = every_pred__1;
  every_pred.cljs$core$IFn$_invoke$arity$2 = every_pred__2;
  every_pred.cljs$core$IFn$_invoke$arity$3 = every_pred__3;
  every_pred.cljs$core$IFn$_invoke$arity$variadic = every_pred__4.cljs$core$IFn$_invoke$arity$variadic;
  return every_pred;
}();
cljs.core.some_fn = function() {
  var some_fn = null;
  var some_fn__1 = function(p) {
    return function() {
      var sp1 = null;
      var sp1__0 = function() {
        return null;
      };
      var sp1__1 = function(x) {
        var G__13008 = x;
        return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__13008) : p.call(null, G__13008);
      };
      var sp1__2 = function(x, y) {
        var or__3925__auto__ = function() {
          var G__13010 = x;
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__13010) : p.call(null, G__13010);
        }();
        if (cljs.core.truth_(or__3925__auto__)) {
          return or__3925__auto__;
        } else {
          var G__13011 = y;
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__13011) : p.call(null, G__13011);
        }
      };
      var sp1__3 = function(x, y, z) {
        var or__3925__auto__ = function() {
          var G__13013 = x;
          return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__13013) : p.call(null, G__13013);
        }();
        if (cljs.core.truth_(or__3925__auto__)) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = function() {
            var G__13015 = y;
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__13015) : p.call(null, G__13015);
          }();
          if (cljs.core.truth_(or__3925__auto____$1)) {
            return or__3925__auto____$1;
          } else {
            var G__13016 = z;
            return p.cljs$core$IFn$_invoke$arity$1 ? p.cljs$core$IFn$_invoke$arity$1(G__13016) : p.call(null, G__13016);
          }
        }
      };
      var sp1__4 = function() {
        var G__13177__delegate = function(x, y, z, args) {
          var or__3925__auto__ = sp1.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(or__3925__auto__)) {
            return or__3925__auto__;
          } else {
            return cljs.core.some(p, args);
          }
        };
        var G__13177 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__13178__i = 0, G__13178__a = new Array(arguments.length - 3);
            while (G__13178__i < G__13178__a.length) {
              G__13178__a[G__13178__i] = arguments[G__13178__i + 3];
              ++G__13178__i;
            }
            args = new cljs.core.IndexedSeq(G__13178__a, 0);
          }
          return G__13177__delegate.call(this, x, y, z, args);
        };
        G__13177.cljs$lang$maxFixedArity = 3;
        G__13177.cljs$lang$applyTo = function(arglist__13179) {
          var x = cljs.core.first(arglist__13179);
          arglist__13179 = cljs.core.next(arglist__13179);
          var y = cljs.core.first(arglist__13179);
          arglist__13179 = cljs.core.next(arglist__13179);
          var z = cljs.core.first(arglist__13179);
          var args = cljs.core.rest(arglist__13179);
          return G__13177__delegate(x, y, z, args);
        };
        G__13177.cljs$core$IFn$_invoke$arity$variadic = G__13177__delegate;
        return G__13177;
      }();
      sp1 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp1__0.call(this);
          case 1:
            return sp1__1.call(this, x);
          case 2:
            return sp1__2.call(this, x, y);
          case 3:
            return sp1__3.call(this, x, y, z);
          default:
            var G__13180 = null;
            if (arguments.length > 3) {
              var G__13181__i = 0, G__13181__a = new Array(arguments.length - 3);
              while (G__13181__i < G__13181__a.length) {
                G__13181__a[G__13181__i] = arguments[G__13181__i + 3];
                ++G__13181__i;
              }
              G__13180 = new cljs.core.IndexedSeq(G__13181__a, 0);
            }
            return sp1__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__13180);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp1.cljs$lang$maxFixedArity = 3;
      sp1.cljs$lang$applyTo = sp1__4.cljs$lang$applyTo;
      sp1.cljs$core$IFn$_invoke$arity$0 = sp1__0;
      sp1.cljs$core$IFn$_invoke$arity$1 = sp1__1;
      sp1.cljs$core$IFn$_invoke$arity$2 = sp1__2;
      sp1.cljs$core$IFn$_invoke$arity$3 = sp1__3;
      sp1.cljs$core$IFn$_invoke$arity$variadic = sp1__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp1;
    }();
  };
  var some_fn__2 = function(p1, p2) {
    return function() {
      var sp2 = null;
      var sp2__0 = function() {
        return null;
      };
      var sp2__1 = function(x) {
        var or__3925__auto__ = function() {
          var G__13048 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13048) : p1.call(null, G__13048);
        }();
        if (cljs.core.truth_(or__3925__auto__)) {
          return or__3925__auto__;
        } else {
          var G__13049 = x;
          return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13049) : p2.call(null, G__13049);
        }
      };
      var sp2__2 = function(x, y) {
        var or__3925__auto__ = function() {
          var G__13051 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13051) : p1.call(null, G__13051);
        }();
        if (cljs.core.truth_(or__3925__auto__)) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = function() {
            var G__13053 = y;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13053) : p1.call(null, G__13053);
          }();
          if (cljs.core.truth_(or__3925__auto____$1)) {
            return or__3925__auto____$1;
          } else {
            var or__3925__auto____$2 = function() {
              var G__13055 = x;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13055) : p2.call(null, G__13055);
            }();
            if (cljs.core.truth_(or__3925__auto____$2)) {
              return or__3925__auto____$2;
            } else {
              var G__13056 = y;
              return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13056) : p2.call(null, G__13056);
            }
          }
        }
      };
      var sp2__3 = function(x, y, z) {
        var or__3925__auto__ = function() {
          var G__13058 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13058) : p1.call(null, G__13058);
        }();
        if (cljs.core.truth_(or__3925__auto__)) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = function() {
            var G__13060 = y;
            return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13060) : p1.call(null, G__13060);
          }();
          if (cljs.core.truth_(or__3925__auto____$1)) {
            return or__3925__auto____$1;
          } else {
            var or__3925__auto____$2 = function() {
              var G__13062 = z;
              return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13062) : p1.call(null, G__13062);
            }();
            if (cljs.core.truth_(or__3925__auto____$2)) {
              return or__3925__auto____$2;
            } else {
              var or__3925__auto____$3 = function() {
                var G__13064 = x;
                return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13064) : p2.call(null, G__13064);
              }();
              if (cljs.core.truth_(or__3925__auto____$3)) {
                return or__3925__auto____$3;
              } else {
                var or__3925__auto____$4 = function() {
                  var G__13066 = y;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13066) : p2.call(null, G__13066);
                }();
                if (cljs.core.truth_(or__3925__auto____$4)) {
                  return or__3925__auto____$4;
                } else {
                  var G__13067 = z;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13067) : p2.call(null, G__13067);
                }
              }
            }
          }
        }
      };
      var sp2__4 = function() {
        var G__13182__delegate = function(x, y, z, args) {
          var or__3925__auto__ = sp2.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(or__3925__auto__)) {
            return or__3925__auto__;
          } else {
            return cljs.core.some(function(or__3925__auto__) {
              return function(p1__12803_SHARP_) {
                var or__3925__auto____$1 = function() {
                  var G__13069 = p1__12803_SHARP_;
                  return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13069) : p1.call(null, G__13069);
                }();
                if (cljs.core.truth_(or__3925__auto____$1)) {
                  return or__3925__auto____$1;
                } else {
                  var G__13070 = p1__12803_SHARP_;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13070) : p2.call(null, G__13070);
                }
              };
            }(or__3925__auto__), args);
          }
        };
        var G__13182 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__13183__i = 0, G__13183__a = new Array(arguments.length - 3);
            while (G__13183__i < G__13183__a.length) {
              G__13183__a[G__13183__i] = arguments[G__13183__i + 3];
              ++G__13183__i;
            }
            args = new cljs.core.IndexedSeq(G__13183__a, 0);
          }
          return G__13182__delegate.call(this, x, y, z, args);
        };
        G__13182.cljs$lang$maxFixedArity = 3;
        G__13182.cljs$lang$applyTo = function(arglist__13184) {
          var x = cljs.core.first(arglist__13184);
          arglist__13184 = cljs.core.next(arglist__13184);
          var y = cljs.core.first(arglist__13184);
          arglist__13184 = cljs.core.next(arglist__13184);
          var z = cljs.core.first(arglist__13184);
          var args = cljs.core.rest(arglist__13184);
          return G__13182__delegate(x, y, z, args);
        };
        G__13182.cljs$core$IFn$_invoke$arity$variadic = G__13182__delegate;
        return G__13182;
      }();
      sp2 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp2__0.call(this);
          case 1:
            return sp2__1.call(this, x);
          case 2:
            return sp2__2.call(this, x, y);
          case 3:
            return sp2__3.call(this, x, y, z);
          default:
            var G__13185 = null;
            if (arguments.length > 3) {
              var G__13186__i = 0, G__13186__a = new Array(arguments.length - 3);
              while (G__13186__i < G__13186__a.length) {
                G__13186__a[G__13186__i] = arguments[G__13186__i + 3];
                ++G__13186__i;
              }
              G__13185 = new cljs.core.IndexedSeq(G__13186__a, 0);
            }
            return sp2__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__13185);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp2.cljs$lang$maxFixedArity = 3;
      sp2.cljs$lang$applyTo = sp2__4.cljs$lang$applyTo;
      sp2.cljs$core$IFn$_invoke$arity$0 = sp2__0;
      sp2.cljs$core$IFn$_invoke$arity$1 = sp2__1;
      sp2.cljs$core$IFn$_invoke$arity$2 = sp2__2;
      sp2.cljs$core$IFn$_invoke$arity$3 = sp2__3;
      sp2.cljs$core$IFn$_invoke$arity$variadic = sp2__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp2;
    }();
  };
  var some_fn__3 = function(p1, p2, p3) {
    return function() {
      var sp3 = null;
      var sp3__0 = function() {
        return null;
      };
      var sp3__1 = function(x) {
        var or__3925__auto__ = function() {
          var G__13116 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13116) : p1.call(null, G__13116);
        }();
        if (cljs.core.truth_(or__3925__auto__)) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = function() {
            var G__13118 = x;
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13118) : p2.call(null, G__13118);
          }();
          if (cljs.core.truth_(or__3925__auto____$1)) {
            return or__3925__auto____$1;
          } else {
            var G__13119 = x;
            return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__13119) : p3.call(null, G__13119);
          }
        }
      };
      var sp3__2 = function(x, y) {
        var or__3925__auto__ = function() {
          var G__13121 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13121) : p1.call(null, G__13121);
        }();
        if (cljs.core.truth_(or__3925__auto__)) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = function() {
            var G__13123 = x;
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13123) : p2.call(null, G__13123);
          }();
          if (cljs.core.truth_(or__3925__auto____$1)) {
            return or__3925__auto____$1;
          } else {
            var or__3925__auto____$2 = function() {
              var G__13125 = x;
              return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__13125) : p3.call(null, G__13125);
            }();
            if (cljs.core.truth_(or__3925__auto____$2)) {
              return or__3925__auto____$2;
            } else {
              var or__3925__auto____$3 = function() {
                var G__13127 = y;
                return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13127) : p1.call(null, G__13127);
              }();
              if (cljs.core.truth_(or__3925__auto____$3)) {
                return or__3925__auto____$3;
              } else {
                var or__3925__auto____$4 = function() {
                  var G__13129 = y;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13129) : p2.call(null, G__13129);
                }();
                if (cljs.core.truth_(or__3925__auto____$4)) {
                  return or__3925__auto____$4;
                } else {
                  var G__13130 = y;
                  return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__13130) : p3.call(null, G__13130);
                }
              }
            }
          }
        }
      };
      var sp3__3 = function(x, y, z) {
        var or__3925__auto__ = function() {
          var G__13132 = x;
          return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13132) : p1.call(null, G__13132);
        }();
        if (cljs.core.truth_(or__3925__auto__)) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = function() {
            var G__13134 = x;
            return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13134) : p2.call(null, G__13134);
          }();
          if (cljs.core.truth_(or__3925__auto____$1)) {
            return or__3925__auto____$1;
          } else {
            var or__3925__auto____$2 = function() {
              var G__13136 = x;
              return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__13136) : p3.call(null, G__13136);
            }();
            if (cljs.core.truth_(or__3925__auto____$2)) {
              return or__3925__auto____$2;
            } else {
              var or__3925__auto____$3 = function() {
                var G__13138 = y;
                return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13138) : p1.call(null, G__13138);
              }();
              if (cljs.core.truth_(or__3925__auto____$3)) {
                return or__3925__auto____$3;
              } else {
                var or__3925__auto____$4 = function() {
                  var G__13140 = y;
                  return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13140) : p2.call(null, G__13140);
                }();
                if (cljs.core.truth_(or__3925__auto____$4)) {
                  return or__3925__auto____$4;
                } else {
                  var or__3925__auto____$5 = function() {
                    var G__13142 = y;
                    return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__13142) : p3.call(null, G__13142);
                  }();
                  if (cljs.core.truth_(or__3925__auto____$5)) {
                    return or__3925__auto____$5;
                  } else {
                    var or__3925__auto____$6 = function() {
                      var G__13144 = z;
                      return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13144) : p1.call(null, G__13144);
                    }();
                    if (cljs.core.truth_(or__3925__auto____$6)) {
                      return or__3925__auto____$6;
                    } else {
                      var or__3925__auto____$7 = function() {
                        var G__13146 = z;
                        return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13146) : p2.call(null, G__13146);
                      }();
                      if (cljs.core.truth_(or__3925__auto____$7)) {
                        return or__3925__auto____$7;
                      } else {
                        var G__13147 = z;
                        return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__13147) : p3.call(null, G__13147);
                      }
                    }
                  }
                }
              }
            }
          }
        }
      };
      var sp3__4 = function() {
        var G__13187__delegate = function(x, y, z, args) {
          var or__3925__auto__ = sp3.cljs$core$IFn$_invoke$arity$3(x, y, z);
          if (cljs.core.truth_(or__3925__auto__)) {
            return or__3925__auto__;
          } else {
            return cljs.core.some(function(or__3925__auto__) {
              return function(p1__12804_SHARP_) {
                var or__3925__auto____$1 = function() {
                  var G__13149 = p1__12804_SHARP_;
                  return p1.cljs$core$IFn$_invoke$arity$1 ? p1.cljs$core$IFn$_invoke$arity$1(G__13149) : p1.call(null, G__13149);
                }();
                if (cljs.core.truth_(or__3925__auto____$1)) {
                  return or__3925__auto____$1;
                } else {
                  var or__3925__auto____$2 = function() {
                    var G__13151 = p1__12804_SHARP_;
                    return p2.cljs$core$IFn$_invoke$arity$1 ? p2.cljs$core$IFn$_invoke$arity$1(G__13151) : p2.call(null, G__13151);
                  }();
                  if (cljs.core.truth_(or__3925__auto____$2)) {
                    return or__3925__auto____$2;
                  } else {
                    var G__13152 = p1__12804_SHARP_;
                    return p3.cljs$core$IFn$_invoke$arity$1 ? p3.cljs$core$IFn$_invoke$arity$1(G__13152) : p3.call(null, G__13152);
                  }
                }
              };
            }(or__3925__auto__), args);
          }
        };
        var G__13187 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__13188__i = 0, G__13188__a = new Array(arguments.length - 3);
            while (G__13188__i < G__13188__a.length) {
              G__13188__a[G__13188__i] = arguments[G__13188__i + 3];
              ++G__13188__i;
            }
            args = new cljs.core.IndexedSeq(G__13188__a, 0);
          }
          return G__13187__delegate.call(this, x, y, z, args);
        };
        G__13187.cljs$lang$maxFixedArity = 3;
        G__13187.cljs$lang$applyTo = function(arglist__13189) {
          var x = cljs.core.first(arglist__13189);
          arglist__13189 = cljs.core.next(arglist__13189);
          var y = cljs.core.first(arglist__13189);
          arglist__13189 = cljs.core.next(arglist__13189);
          var z = cljs.core.first(arglist__13189);
          var args = cljs.core.rest(arglist__13189);
          return G__13187__delegate(x, y, z, args);
        };
        G__13187.cljs$core$IFn$_invoke$arity$variadic = G__13187__delegate;
        return G__13187;
      }();
      sp3 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return sp3__0.call(this);
          case 1:
            return sp3__1.call(this, x);
          case 2:
            return sp3__2.call(this, x, y);
          case 3:
            return sp3__3.call(this, x, y, z);
          default:
            var G__13190 = null;
            if (arguments.length > 3) {
              var G__13191__i = 0, G__13191__a = new Array(arguments.length - 3);
              while (G__13191__i < G__13191__a.length) {
                G__13191__a[G__13191__i] = arguments[G__13191__i + 3];
                ++G__13191__i;
              }
              G__13190 = new cljs.core.IndexedSeq(G__13191__a, 0);
            }
            return sp3__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__13190);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      sp3.cljs$lang$maxFixedArity = 3;
      sp3.cljs$lang$applyTo = sp3__4.cljs$lang$applyTo;
      sp3.cljs$core$IFn$_invoke$arity$0 = sp3__0;
      sp3.cljs$core$IFn$_invoke$arity$1 = sp3__1;
      sp3.cljs$core$IFn$_invoke$arity$2 = sp3__2;
      sp3.cljs$core$IFn$_invoke$arity$3 = sp3__3;
      sp3.cljs$core$IFn$_invoke$arity$variadic = sp3__4.cljs$core$IFn$_invoke$arity$variadic;
      return sp3;
    }();
  };
  var some_fn__4 = function() {
    var G__13192__delegate = function(p1, p2, p3, ps) {
      var ps__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(p1, p2, p3, ps);
      return function(ps__$1) {
        return function() {
          var spn = null;
          var spn__0 = function() {
            return null;
          };
          var spn__1 = function(x) {
            return cljs.core.some(function(ps__$1) {
              return function(p1__12805_SHARP_) {
                var G__13168 = x;
                return p1__12805_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__12805_SHARP_.cljs$core$IFn$_invoke$arity$1(G__13168) : p1__12805_SHARP_.call(null, G__13168);
              };
            }(ps__$1), ps__$1);
          };
          var spn__2 = function(x, y) {
            return cljs.core.some(function(ps__$1) {
              return function(p1__12806_SHARP_) {
                var or__3925__auto__ = function() {
                  var G__13170 = x;
                  return p1__12806_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__12806_SHARP_.cljs$core$IFn$_invoke$arity$1(G__13170) : p1__12806_SHARP_.call(null, G__13170);
                }();
                if (cljs.core.truth_(or__3925__auto__)) {
                  return or__3925__auto__;
                } else {
                  var G__13171 = y;
                  return p1__12806_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__12806_SHARP_.cljs$core$IFn$_invoke$arity$1(G__13171) : p1__12806_SHARP_.call(null, G__13171);
                }
              };
            }(ps__$1), ps__$1);
          };
          var spn__3 = function(x, y, z) {
            return cljs.core.some(function(ps__$1) {
              return function(p1__12807_SHARP_) {
                var or__3925__auto__ = function() {
                  var G__13173 = x;
                  return p1__12807_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__12807_SHARP_.cljs$core$IFn$_invoke$arity$1(G__13173) : p1__12807_SHARP_.call(null, G__13173);
                }();
                if (cljs.core.truth_(or__3925__auto__)) {
                  return or__3925__auto__;
                } else {
                  var or__3925__auto____$1 = function() {
                    var G__13175 = y;
                    return p1__12807_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__12807_SHARP_.cljs$core$IFn$_invoke$arity$1(G__13175) : p1__12807_SHARP_.call(null, G__13175);
                  }();
                  if (cljs.core.truth_(or__3925__auto____$1)) {
                    return or__3925__auto____$1;
                  } else {
                    var G__13176 = z;
                    return p1__12807_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p1__12807_SHARP_.cljs$core$IFn$_invoke$arity$1(G__13176) : p1__12807_SHARP_.call(null, G__13176);
                  }
                }
              };
            }(ps__$1), ps__$1);
          };
          var spn__4 = function() {
            var G__13193__delegate = function(x, y, z, args) {
              var or__3925__auto__ = spn.cljs$core$IFn$_invoke$arity$3(x, y, z);
              if (cljs.core.truth_(or__3925__auto__)) {
                return or__3925__auto__;
              } else {
                return cljs.core.some(function(or__3925__auto__, ps__$1) {
                  return function(p1__12808_SHARP_) {
                    return cljs.core.some(p1__12808_SHARP_, args);
                  };
                }(or__3925__auto__, ps__$1), ps__$1);
              }
            };
            var G__13193 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                var G__13194__i = 0, G__13194__a = new Array(arguments.length - 3);
                while (G__13194__i < G__13194__a.length) {
                  G__13194__a[G__13194__i] = arguments[G__13194__i + 3];
                  ++G__13194__i;
                }
                args = new cljs.core.IndexedSeq(G__13194__a, 0);
              }
              return G__13193__delegate.call(this, x, y, z, args);
            };
            G__13193.cljs$lang$maxFixedArity = 3;
            G__13193.cljs$lang$applyTo = function(arglist__13195) {
              var x = cljs.core.first(arglist__13195);
              arglist__13195 = cljs.core.next(arglist__13195);
              var y = cljs.core.first(arglist__13195);
              arglist__13195 = cljs.core.next(arglist__13195);
              var z = cljs.core.first(arglist__13195);
              var args = cljs.core.rest(arglist__13195);
              return G__13193__delegate(x, y, z, args);
            };
            G__13193.cljs$core$IFn$_invoke$arity$variadic = G__13193__delegate;
            return G__13193;
          }();
          spn = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return spn__0.call(this);
              case 1:
                return spn__1.call(this, x);
              case 2:
                return spn__2.call(this, x, y);
              case 3:
                return spn__3.call(this, x, y, z);
              default:
                var G__13196 = null;
                if (arguments.length > 3) {
                  var G__13197__i = 0, G__13197__a = new Array(arguments.length - 3);
                  while (G__13197__i < G__13197__a.length) {
                    G__13197__a[G__13197__i] = arguments[G__13197__i + 3];
                    ++G__13197__i;
                  }
                  G__13196 = new cljs.core.IndexedSeq(G__13197__a, 0);
                }
                return spn__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__13196);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          spn.cljs$lang$maxFixedArity = 3;
          spn.cljs$lang$applyTo = spn__4.cljs$lang$applyTo;
          spn.cljs$core$IFn$_invoke$arity$0 = spn__0;
          spn.cljs$core$IFn$_invoke$arity$1 = spn__1;
          spn.cljs$core$IFn$_invoke$arity$2 = spn__2;
          spn.cljs$core$IFn$_invoke$arity$3 = spn__3;
          spn.cljs$core$IFn$_invoke$arity$variadic = spn__4.cljs$core$IFn$_invoke$arity$variadic;
          return spn;
        }();
      }(ps__$1);
    };
    var G__13192 = function(p1, p2, p3, var_args) {
      var ps = null;
      if (arguments.length > 3) {
        var G__13198__i = 0, G__13198__a = new Array(arguments.length - 3);
        while (G__13198__i < G__13198__a.length) {
          G__13198__a[G__13198__i] = arguments[G__13198__i + 3];
          ++G__13198__i;
        }
        ps = new cljs.core.IndexedSeq(G__13198__a, 0);
      }
      return G__13192__delegate.call(this, p1, p2, p3, ps);
    };
    G__13192.cljs$lang$maxFixedArity = 3;
    G__13192.cljs$lang$applyTo = function(arglist__13199) {
      var p1 = cljs.core.first(arglist__13199);
      arglist__13199 = cljs.core.next(arglist__13199);
      var p2 = cljs.core.first(arglist__13199);
      arglist__13199 = cljs.core.next(arglist__13199);
      var p3 = cljs.core.first(arglist__13199);
      var ps = cljs.core.rest(arglist__13199);
      return G__13192__delegate(p1, p2, p3, ps);
    };
    G__13192.cljs$core$IFn$_invoke$arity$variadic = G__13192__delegate;
    return G__13192;
  }();
  some_fn = function(p1, p2, p3, var_args) {
    var ps = var_args;
    switch(arguments.length) {
      case 1:
        return some_fn__1.call(this, p1);
      case 2:
        return some_fn__2.call(this, p1, p2);
      case 3:
        return some_fn__3.call(this, p1, p2, p3);
      default:
        var G__13200 = null;
        if (arguments.length > 3) {
          var G__13201__i = 0, G__13201__a = new Array(arguments.length - 3);
          while (G__13201__i < G__13201__a.length) {
            G__13201__a[G__13201__i] = arguments[G__13201__i + 3];
            ++G__13201__i;
          }
          G__13200 = new cljs.core.IndexedSeq(G__13201__a, 0);
        }
        return some_fn__4.cljs$core$IFn$_invoke$arity$variadic(p1, p2, p3, G__13200);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  some_fn.cljs$lang$maxFixedArity = 3;
  some_fn.cljs$lang$applyTo = some_fn__4.cljs$lang$applyTo;
  some_fn.cljs$core$IFn$_invoke$arity$1 = some_fn__1;
  some_fn.cljs$core$IFn$_invoke$arity$2 = some_fn__2;
  some_fn.cljs$core$IFn$_invoke$arity$3 = some_fn__3;
  some_fn.cljs$core$IFn$_invoke$arity$variadic = some_fn__4.cljs$core$IFn$_invoke$arity$variadic;
  return some_fn;
}();
cljs.core.map = function() {
  var map = null;
  var map__1 = function(f) {
    return function(rf) {
      return function() {
        var G__13256 = null;
        var G__13256__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__13256__1 = function(result) {
          var G__13242 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__13242) : rf.call(null, G__13242);
        };
        var G__13256__2 = function(result, input) {
          var G__13243 = result;
          var G__13244 = function() {
            var G__13245 = input;
            return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13245) : f.call(null, G__13245);
          }();
          return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__13243, G__13244) : rf.call(null, G__13243, G__13244);
        };
        var G__13256__3 = function() {
          var G__13257__delegate = function(result, input, inputs) {
            var G__13246 = result;
            var G__13247 = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f, input, inputs);
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__13246, G__13247) : rf.call(null, G__13246, G__13247);
          };
          var G__13257 = function(result, input, var_args) {
            var inputs = null;
            if (arguments.length > 2) {
              var G__13258__i = 0, G__13258__a = new Array(arguments.length - 2);
              while (G__13258__i < G__13258__a.length) {
                G__13258__a[G__13258__i] = arguments[G__13258__i + 2];
                ++G__13258__i;
              }
              inputs = new cljs.core.IndexedSeq(G__13258__a, 0);
            }
            return G__13257__delegate.call(this, result, input, inputs);
          };
          G__13257.cljs$lang$maxFixedArity = 2;
          G__13257.cljs$lang$applyTo = function(arglist__13259) {
            var result = cljs.core.first(arglist__13259);
            arglist__13259 = cljs.core.next(arglist__13259);
            var input = cljs.core.first(arglist__13259);
            var inputs = cljs.core.rest(arglist__13259);
            return G__13257__delegate(result, input, inputs);
          };
          G__13257.cljs$core$IFn$_invoke$arity$variadic = G__13257__delegate;
          return G__13257;
        }();
        G__13256 = function(result, input, var_args) {
          var inputs = var_args;
          switch(arguments.length) {
            case 0:
              return G__13256__0.call(this);
            case 1:
              return G__13256__1.call(this, result);
            case 2:
              return G__13256__2.call(this, result, input);
            default:
              var G__13260 = null;
              if (arguments.length > 2) {
                var G__13261__i = 0, G__13261__a = new Array(arguments.length - 2);
                while (G__13261__i < G__13261__a.length) {
                  G__13261__a[G__13261__i] = arguments[G__13261__i + 2];
                  ++G__13261__i;
                }
                G__13260 = new cljs.core.IndexedSeq(G__13261__a, 0);
              }
              return G__13256__3.cljs$core$IFn$_invoke$arity$variadic(result, input, G__13260);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__13256.cljs$lang$maxFixedArity = 2;
        G__13256.cljs$lang$applyTo = G__13256__3.cljs$lang$applyTo;
        G__13256.cljs$core$IFn$_invoke$arity$0 = G__13256__0;
        G__13256.cljs$core$IFn$_invoke$arity$1 = G__13256__1;
        G__13256.cljs$core$IFn$_invoke$arity$2 = G__13256__2;
        G__13256.cljs$core$IFn$_invoke$arity$variadic = G__13256__3.cljs$core$IFn$_invoke$arity$variadic;
        return G__13256;
      }();
    };
  };
  var map__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__4812__auto___13262 = size;
          var i_13263 = 0;
          while (true) {
            if (i_13263 < n__4812__auto___13262) {
              cljs.core.chunk_append(b, function() {
                var G__13248 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_13263);
                return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13248) : f.call(null, G__13248);
              }());
              var G__13264 = i_13263 + 1;
              i_13263 = G__13264;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), map.cljs$core$IFn$_invoke$arity$2(f, cljs.core.chunk_rest(s)));
        } else {
          return cljs.core.cons(function() {
            var G__13249 = cljs.core.first(s);
            return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13249) : f.call(null, G__13249);
          }(), map.cljs$core$IFn$_invoke$arity$2(f, cljs.core.rest(s)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  var map__3 = function(f, c1, c2) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq(c1);
      var s2 = cljs.core.seq(c2);
      if (s1 && s2) {
        return cljs.core.cons(function() {
          var G__13250 = cljs.core.first(s1);
          var G__13251 = cljs.core.first(s2);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13250, G__13251) : f.call(null, G__13250, G__13251);
        }(), map.cljs$core$IFn$_invoke$arity$3(f, cljs.core.rest(s1), cljs.core.rest(s2)));
      } else {
        return null;
      }
    }, null, null);
  };
  var map__4 = function(f, c1, c2, c3) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq(c1);
      var s2 = cljs.core.seq(c2);
      var s3 = cljs.core.seq(c3);
      if (s1 && s2 && s3) {
        return cljs.core.cons(function() {
          var G__13252 = cljs.core.first(s1);
          var G__13253 = cljs.core.first(s2);
          var G__13254 = cljs.core.first(s3);
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13252, G__13253, G__13254) : f.call(null, G__13252, G__13253, G__13254);
        }(), map.cljs$core$IFn$_invoke$arity$4(f, cljs.core.rest(s1), cljs.core.rest(s2), cljs.core.rest(s3)));
      } else {
        return null;
      }
    }, null, null);
  };
  var map__5 = function() {
    var G__13265__delegate = function(f, c1, c2, c3, colls) {
      var step = function step(cs) {
        return new cljs.core.LazySeq(null, function() {
          var ss = map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq, cs);
          if (cljs.core.every_QMARK_(cljs.core.identity, ss)) {
            return cljs.core.cons(map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, ss), step(map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest, ss)));
          } else {
            return null;
          }
        }, null, null);
      };
      return map.cljs$core$IFn$_invoke$arity$2(function(step) {
        return function(p1__13202_SHARP_) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, p1__13202_SHARP_);
        };
      }(step), step(cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls, c3, cljs.core.array_seq([c2, c1], 0))));
    };
    var G__13265 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if (arguments.length > 4) {
        var G__13266__i = 0, G__13266__a = new Array(arguments.length - 4);
        while (G__13266__i < G__13266__a.length) {
          G__13266__a[G__13266__i] = arguments[G__13266__i + 4];
          ++G__13266__i;
        }
        colls = new cljs.core.IndexedSeq(G__13266__a, 0);
      }
      return G__13265__delegate.call(this, f, c1, c2, c3, colls);
    };
    G__13265.cljs$lang$maxFixedArity = 4;
    G__13265.cljs$lang$applyTo = function(arglist__13267) {
      var f = cljs.core.first(arglist__13267);
      arglist__13267 = cljs.core.next(arglist__13267);
      var c1 = cljs.core.first(arglist__13267);
      arglist__13267 = cljs.core.next(arglist__13267);
      var c2 = cljs.core.first(arglist__13267);
      arglist__13267 = cljs.core.next(arglist__13267);
      var c3 = cljs.core.first(arglist__13267);
      var colls = cljs.core.rest(arglist__13267);
      return G__13265__delegate(f, c1, c2, c3, colls);
    };
    G__13265.cljs$core$IFn$_invoke$arity$variadic = G__13265__delegate;
    return G__13265;
  }();
  map = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 1:
        return map__1.call(this, f);
      case 2:
        return map__2.call(this, f, c1);
      case 3:
        return map__3.call(this, f, c1, c2);
      case 4:
        return map__4.call(this, f, c1, c2, c3);
      default:
        var G__13268 = null;
        if (arguments.length > 4) {
          var G__13269__i = 0, G__13269__a = new Array(arguments.length - 4);
          while (G__13269__i < G__13269__a.length) {
            G__13269__a[G__13269__i] = arguments[G__13269__i + 4];
            ++G__13269__i;
          }
          G__13268 = new cljs.core.IndexedSeq(G__13269__a, 0);
        }
        return map__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, G__13268);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  map.cljs$lang$maxFixedArity = 4;
  map.cljs$lang$applyTo = map__5.cljs$lang$applyTo;
  map.cljs$core$IFn$_invoke$arity$1 = map__1;
  map.cljs$core$IFn$_invoke$arity$2 = map__2;
  map.cljs$core$IFn$_invoke$arity$3 = map__3;
  map.cljs$core$IFn$_invoke$arity$4 = map__4;
  map.cljs$core$IFn$_invoke$arity$variadic = map__5.cljs$core$IFn$_invoke$arity$variadic;
  return map;
}();
cljs.core.take = function() {
  var take = null;
  var take__1 = function(n) {
    return function(rf) {
      var na = cljs.core.volatile_BANG_(n);
      return function(na) {
        return function() {
          var G__13278 = null;
          var G__13278__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__13278__1 = function(result) {
            var G__13275 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__13275) : rf.call(null, G__13275);
          };
          var G__13278__2 = function(result, input) {
            var n__$1 = cljs.core.deref(na);
            var nn = na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, na.cljs$core$IDeref$_deref$arity$1(null) - 1);
            var result__$1 = n__$1 > 0 ? function() {
              var G__13276 = result;
              var G__13277 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__13276, G__13277) : rf.call(null, G__13276, G__13277);
            }() : result;
            if (!(nn > 0)) {
              return cljs.core.ensure_reduced(result__$1);
            } else {
              return result__$1;
            }
          };
          G__13278 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__13278__0.call(this);
              case 1:
                return G__13278__1.call(this, result);
              case 2:
                return G__13278__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__13278.cljs$core$IFn$_invoke$arity$0 = G__13278__0;
          G__13278.cljs$core$IFn$_invoke$arity$1 = G__13278__1;
          G__13278.cljs$core$IFn$_invoke$arity$2 = G__13278__2;
          return G__13278;
        }();
      }(na);
    };
  };
  var take__2 = function(n, coll) {
    return new cljs.core.LazySeq(null, function() {
      if (n > 0) {
        var temp__4126__auto__ = cljs.core.seq(coll);
        if (temp__4126__auto__) {
          var s = temp__4126__auto__;
          return cljs.core.cons(cljs.core.first(s), take.cljs$core$IFn$_invoke$arity$2(n - 1, cljs.core.rest(s)));
        } else {
          return null;
        }
      } else {
        return null;
      }
    }, null, null);
  };
  take = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return take__1.call(this, n);
      case 2:
        return take__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take.cljs$core$IFn$_invoke$arity$1 = take__1;
  take.cljs$core$IFn$_invoke$arity$2 = take__2;
  return take;
}();
cljs.core.drop = function() {
  var drop = null;
  var drop__1 = function(n) {
    return function(rf) {
      var na = cljs.core.volatile_BANG_(n);
      return function(na) {
        return function() {
          var G__13285 = null;
          var G__13285__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__13285__1 = function(result) {
            var G__13282 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__13282) : rf.call(null, G__13282);
          };
          var G__13285__2 = function(result, input) {
            var n__$1 = cljs.core.deref(na);
            na.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, na.cljs$core$IDeref$_deref$arity$1(null) - 1);
            if (n__$1 > 0) {
              return result;
            } else {
              var G__13283 = result;
              var G__13284 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__13283, G__13284) : rf.call(null, G__13283, G__13284);
            }
          };
          G__13285 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__13285__0.call(this);
              case 1:
                return G__13285__1.call(this, result);
              case 2:
                return G__13285__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__13285.cljs$core$IFn$_invoke$arity$0 = G__13285__0;
          G__13285.cljs$core$IFn$_invoke$arity$1 = G__13285__1;
          G__13285.cljs$core$IFn$_invoke$arity$2 = G__13285__2;
          return G__13285;
        }();
      }(na);
    };
  };
  var drop__2 = function(n, coll) {
    var step = function(n__$1, coll__$1) {
      while (true) {
        var s = cljs.core.seq(coll__$1);
        if (n__$1 > 0 && s) {
          var G__13286 = n__$1 - 1;
          var G__13287 = cljs.core.rest(s);
          n__$1 = G__13286;
          coll__$1 = G__13287;
          continue;
        } else {
          return s;
        }
        break;
      }
    };
    return new cljs.core.LazySeq(null, function(step) {
      return function() {
        return step(n, coll);
      };
    }(step), null, null);
  };
  drop = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return drop__1.call(this, n);
      case 2:
        return drop__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop.cljs$core$IFn$_invoke$arity$1 = drop__1;
  drop.cljs$core$IFn$_invoke$arity$2 = drop__2;
  return drop;
}();
cljs.core.drop_last = function() {
  var drop_last = null;
  var drop_last__1 = function(s) {
    return drop_last.cljs$core$IFn$_invoke$arity$2(1, s);
  };
  var drop_last__2 = function(n, s) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$3(function(x, _) {
      return x;
    }, s, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, s));
  };
  drop_last = function(n, s) {
    switch(arguments.length) {
      case 1:
        return drop_last__1.call(this, n);
      case 2:
        return drop_last__2.call(this, n, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop_last.cljs$core$IFn$_invoke$arity$1 = drop_last__1;
  drop_last.cljs$core$IFn$_invoke$arity$2 = drop_last__2;
  return drop_last;
}();
cljs.core.take_last = function take_last(n, coll) {
  var s = cljs.core.seq(coll);
  var lead = cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, coll));
  while (true) {
    if (lead) {
      var G__13290 = cljs.core.next(s);
      var G__13291 = cljs.core.next(lead);
      s = G__13290;
      lead = G__13291;
      continue;
    } else {
      return s;
    }
    break;
  }
};
cljs.core.drop_while = function() {
  var drop_while = null;
  var drop_while__1 = function(pred) {
    return function(rf) {
      var da = cljs.core.volatile_BANG_(true);
      return function(da) {
        return function() {
          var G__13304 = null;
          var G__13304__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__13304__1 = function(result) {
            var G__13298 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__13298) : rf.call(null, G__13298);
          };
          var G__13304__2 = function(result, input) {
            var drop_QMARK_ = cljs.core.deref(da);
            if (cljs.core.truth_(function() {
              var and__3913__auto__ = drop_QMARK_;
              if (cljs.core.truth_(and__3913__auto__)) {
                var G__13299 = input;
                return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__13299) : pred.call(null, G__13299);
              } else {
                return and__3913__auto__;
              }
            }())) {
              return result;
            } else {
              cljs.core.vreset_BANG_(da, null);
              var G__13300 = result;
              var G__13301 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__13300, G__13301) : rf.call(null, G__13300, G__13301);
            }
          };
          G__13304 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__13304__0.call(this);
              case 1:
                return G__13304__1.call(this, result);
              case 2:
                return G__13304__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__13304.cljs$core$IFn$_invoke$arity$0 = G__13304__0;
          G__13304.cljs$core$IFn$_invoke$arity$1 = G__13304__1;
          G__13304.cljs$core$IFn$_invoke$arity$2 = G__13304__2;
          return G__13304;
        }();
      }(da);
    };
  };
  var drop_while__2 = function(pred, coll) {
    var step = function(pred__$1, coll__$1) {
      while (true) {
        var s = cljs.core.seq(coll__$1);
        if (cljs.core.truth_(function() {
          var and__3913__auto__ = s;
          if (and__3913__auto__) {
            var G__13303 = cljs.core.first(s);
            return pred__$1.cljs$core$IFn$_invoke$arity$1 ? pred__$1.cljs$core$IFn$_invoke$arity$1(G__13303) : pred__$1.call(null, G__13303);
          } else {
            return and__3913__auto__;
          }
        }())) {
          var G__13305 = pred__$1;
          var G__13306 = cljs.core.rest(s);
          pred__$1 = G__13305;
          coll__$1 = G__13306;
          continue;
        } else {
          return s;
        }
        break;
      }
    };
    return new cljs.core.LazySeq(null, function(step) {
      return function() {
        return step(pred, coll);
      };
    }(step), null, null);
  };
  drop_while = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return drop_while__1.call(this, pred);
      case 2:
        return drop_while__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  drop_while.cljs$core$IFn$_invoke$arity$1 = drop_while__1;
  drop_while.cljs$core$IFn$_invoke$arity$2 = drop_while__2;
  return drop_while;
}();
cljs.core.cycle = function cycle(coll) {
  return new cljs.core.LazySeq(null, function() {
    var temp__4126__auto__ = cljs.core.seq(coll);
    if (temp__4126__auto__) {
      var s = temp__4126__auto__;
      return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(s, cycle(s));
    } else {
      return null;
    }
  }, null, null);
};
cljs.core.split_at = function split_at(n, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, coll), cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, coll)], null);
};
cljs.core.repeat = function() {
  var repeat = null;
  var repeat__1 = function(x) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons(x, repeat.cljs$core$IFn$_invoke$arity$1(x));
    }, null, null);
  };
  var repeat__2 = function(n, x) {
    return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, repeat.cljs$core$IFn$_invoke$arity$1(x));
  };
  repeat = function(n, x) {
    switch(arguments.length) {
      case 1:
        return repeat__1.call(this, n);
      case 2:
        return repeat__2.call(this, n, x);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeat.cljs$core$IFn$_invoke$arity$1 = repeat__1;
  repeat.cljs$core$IFn$_invoke$arity$2 = repeat__2;
  return repeat;
}();
cljs.core.replicate = function replicate(n, x) {
  return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(x));
};
cljs.core.repeatedly = function() {
  var repeatedly = null;
  var repeatedly__1 = function(f) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons(function() {
        return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
      }(), repeatedly.cljs$core$IFn$_invoke$arity$1(f));
    }, null, null);
  };
  var repeatedly__2 = function(n, f) {
    return cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, repeatedly.cljs$core$IFn$_invoke$arity$1(f));
  };
  repeatedly = function(n, f) {
    switch(arguments.length) {
      case 1:
        return repeatedly__1.call(this, n);
      case 2:
        return repeatedly__2.call(this, n, f);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  repeatedly.cljs$core$IFn$_invoke$arity$1 = repeatedly__1;
  repeatedly.cljs$core$IFn$_invoke$arity$2 = repeatedly__2;
  return repeatedly;
}();
cljs.core.iterate = function iterate(f, x) {
  return cljs.core.cons(x, new cljs.core.LazySeq(null, function() {
    return iterate(f, function() {
      var G__13315 = x;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13315) : f.call(null, G__13315);
    }());
  }, null, null));
};
cljs.core.interleave = function() {
  var interleave = null;
  var interleave__2 = function(c1, c2) {
    return new cljs.core.LazySeq(null, function() {
      var s1 = cljs.core.seq(c1);
      var s2 = cljs.core.seq(c2);
      if (s1 && s2) {
        return cljs.core.cons(cljs.core.first(s1), cljs.core.cons(cljs.core.first(s2), interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.rest(s1), cljs.core.rest(s2))));
      } else {
        return null;
      }
    }, null, null);
  };
  var interleave__3 = function() {
    var G__13318__delegate = function(c1, c2, colls) {
      return new cljs.core.LazySeq(null, function() {
        var ss = cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.seq, cljs.core.conj.cljs$core$IFn$_invoke$arity$variadic(colls, c2, cljs.core.array_seq([c1], 0)));
        if (cljs.core.every_QMARK_(cljs.core.identity, ss)) {
          return cljs.core.concat.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.first, ss), cljs.core.apply.cljs$core$IFn$_invoke$arity$2(interleave, cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.rest, ss)));
        } else {
          return null;
        }
      }, null, null);
    };
    var G__13318 = function(c1, c2, var_args) {
      var colls = null;
      if (arguments.length > 2) {
        var G__13319__i = 0, G__13319__a = new Array(arguments.length - 2);
        while (G__13319__i < G__13319__a.length) {
          G__13319__a[G__13319__i] = arguments[G__13319__i + 2];
          ++G__13319__i;
        }
        colls = new cljs.core.IndexedSeq(G__13319__a, 0);
      }
      return G__13318__delegate.call(this, c1, c2, colls);
    };
    G__13318.cljs$lang$maxFixedArity = 2;
    G__13318.cljs$lang$applyTo = function(arglist__13320) {
      var c1 = cljs.core.first(arglist__13320);
      arglist__13320 = cljs.core.next(arglist__13320);
      var c2 = cljs.core.first(arglist__13320);
      var colls = cljs.core.rest(arglist__13320);
      return G__13318__delegate(c1, c2, colls);
    };
    G__13318.cljs$core$IFn$_invoke$arity$variadic = G__13318__delegate;
    return G__13318;
  }();
  interleave = function(c1, c2, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return interleave__2.call(this, c1, c2);
      default:
        var G__13321 = null;
        if (arguments.length > 2) {
          var G__13322__i = 0, G__13322__a = new Array(arguments.length - 2);
          while (G__13322__i < G__13322__a.length) {
            G__13322__a[G__13322__i] = arguments[G__13322__i + 2];
            ++G__13322__i;
          }
          G__13321 = new cljs.core.IndexedSeq(G__13322__a, 0);
        }
        return interleave__3.cljs$core$IFn$_invoke$arity$variadic(c1, c2, G__13321);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  interleave.cljs$lang$maxFixedArity = 2;
  interleave.cljs$lang$applyTo = interleave__3.cljs$lang$applyTo;
  interleave.cljs$core$IFn$_invoke$arity$2 = interleave__2;
  interleave.cljs$core$IFn$_invoke$arity$variadic = interleave__3.cljs$core$IFn$_invoke$arity$variadic;
  return interleave;
}();
cljs.core.interpose = function() {
  var interpose = null;
  var interpose__1 = function(sep) {
    return function(rf) {
      var started = cljs.core.volatile_BANG_(false);
      return function(started) {
        return function() {
          var G__13337 = null;
          var G__13337__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__13337__1 = function(result) {
            var G__13330 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__13330) : rf.call(null, G__13330);
          };
          var G__13337__2 = function(result, input) {
            if (cljs.core.truth_(cljs.core.deref(started))) {
              var sepr = function() {
                var G__13331 = result;
                var G__13332 = sep;
                return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__13331, G__13332) : rf.call(null, G__13331, G__13332);
              }();
              if (cljs.core.reduced_QMARK_(sepr)) {
                return sepr;
              } else {
                var G__13333 = sepr;
                var G__13334 = input;
                return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__13333, G__13334) : rf.call(null, G__13333, G__13334);
              }
            } else {
              cljs.core.vreset_BANG_(started, true);
              var G__13335 = result;
              var G__13336 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__13335, G__13336) : rf.call(null, G__13335, G__13336);
            }
          };
          G__13337 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__13337__0.call(this);
              case 1:
                return G__13337__1.call(this, result);
              case 2:
                return G__13337__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__13337.cljs$core$IFn$_invoke$arity$0 = G__13337__0;
          G__13337.cljs$core$IFn$_invoke$arity$1 = G__13337__1;
          G__13337.cljs$core$IFn$_invoke$arity$2 = G__13337__2;
          return G__13337;
        }();
      }(started);
    };
  };
  var interpose__2 = function(sep, coll) {
    return cljs.core.drop.cljs$core$IFn$_invoke$arity$2(1, cljs.core.interleave.cljs$core$IFn$_invoke$arity$2(cljs.core.repeat.cljs$core$IFn$_invoke$arity$1(sep), coll));
  };
  interpose = function(sep, coll) {
    switch(arguments.length) {
      case 1:
        return interpose__1.call(this, sep);
      case 2:
        return interpose__2.call(this, sep, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  interpose.cljs$core$IFn$_invoke$arity$1 = interpose__1;
  interpose.cljs$core$IFn$_invoke$arity$2 = interpose__2;
  return interpose;
}();
cljs.core.flatten1 = function flatten1(colls) {
  var cat = function cat(coll, colls__$1) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4124__auto__ = cljs.core.seq(coll);
      if (temp__4124__auto__) {
        var coll__$1 = temp__4124__auto__;
        return cljs.core.cons(cljs.core.first(coll__$1), cat(cljs.core.rest(coll__$1), colls__$1));
      } else {
        if (cljs.core.seq(colls__$1)) {
          return cat(cljs.core.first(colls__$1), cljs.core.rest(colls__$1));
        } else {
          return null;
        }
      }
    }, null, null);
  };
  return cat(null, colls);
};
cljs.core.mapcat = function() {
  var mapcat = null;
  var mapcat__1 = function(f) {
    return cljs.core.comp.cljs$core$IFn$_invoke$arity$2(cljs.core.map.cljs$core$IFn$_invoke$arity$1(f), cljs.core.cat);
  };
  var mapcat__2 = function() {
    var G__13346__delegate = function(f, colls) {
      return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.concat, cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.map, f, colls));
    };
    var G__13346 = function(f, var_args) {
      var colls = null;
      if (arguments.length > 1) {
        var G__13347__i = 0, G__13347__a = new Array(arguments.length - 1);
        while (G__13347__i < G__13347__a.length) {
          G__13347__a[G__13347__i] = arguments[G__13347__i + 1];
          ++G__13347__i;
        }
        colls = new cljs.core.IndexedSeq(G__13347__a, 0);
      }
      return G__13346__delegate.call(this, f, colls);
    };
    G__13346.cljs$lang$maxFixedArity = 1;
    G__13346.cljs$lang$applyTo = function(arglist__13348) {
      var f = cljs.core.first(arglist__13348);
      var colls = cljs.core.rest(arglist__13348);
      return G__13346__delegate(f, colls);
    };
    G__13346.cljs$core$IFn$_invoke$arity$variadic = G__13346__delegate;
    return G__13346;
  }();
  mapcat = function(f, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 1:
        return mapcat__1.call(this, f);
      default:
        var G__13349 = null;
        if (arguments.length > 1) {
          var G__13350__i = 0, G__13350__a = new Array(arguments.length - 1);
          while (G__13350__i < G__13350__a.length) {
            G__13350__a[G__13350__i] = arguments[G__13350__i + 1];
            ++G__13350__i;
          }
          G__13349 = new cljs.core.IndexedSeq(G__13350__a, 0);
        }
        return mapcat__2.cljs$core$IFn$_invoke$arity$variadic(f, G__13349);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat.cljs$lang$maxFixedArity = 1;
  mapcat.cljs$lang$applyTo = mapcat__2.cljs$lang$applyTo;
  mapcat.cljs$core$IFn$_invoke$arity$1 = mapcat__1;
  mapcat.cljs$core$IFn$_invoke$arity$variadic = mapcat__2.cljs$core$IFn$_invoke$arity$variadic;
  return mapcat;
}();
cljs.core.filter = function() {
  var filter = null;
  var filter__1 = function(pred) {
    return function(rf) {
      return function() {
        var G__13369 = null;
        var G__13369__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__13369__1 = function(result) {
          var G__13363 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__13363) : rf.call(null, G__13363);
        };
        var G__13369__2 = function(result, input) {
          if (cljs.core.truth_(function() {
            var G__13364 = input;
            return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__13364) : pred.call(null, G__13364);
          }())) {
            var G__13365 = result;
            var G__13366 = input;
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__13365, G__13366) : rf.call(null, G__13365, G__13366);
          } else {
            return result;
          }
        };
        G__13369 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__13369__0.call(this);
            case 1:
              return G__13369__1.call(this, result);
            case 2:
              return G__13369__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__13369.cljs$core$IFn$_invoke$arity$0 = G__13369__0;
        G__13369.cljs$core$IFn$_invoke$arity$1 = G__13369__1;
        G__13369.cljs$core$IFn$_invoke$arity$2 = G__13369__2;
        return G__13369;
      }();
    };
  };
  var filter__2 = function(pred, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(s)) {
          var c = cljs.core.chunk_first(s);
          var size = cljs.core.count(c);
          var b = cljs.core.chunk_buffer(size);
          var n__4812__auto___13370 = size;
          var i_13371 = 0;
          while (true) {
            if (i_13371 < n__4812__auto___13370) {
              if (cljs.core.truth_(function() {
                var G__13367 = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_13371);
                return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__13367) : pred.call(null, G__13367);
              }())) {
                cljs.core.chunk_append(b, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c, i_13371));
              } else {
              }
              var G__13372 = i_13371 + 1;
              i_13371 = G__13372;
              continue;
            } else {
            }
            break;
          }
          return cljs.core.chunk_cons(cljs.core.chunk(b), filter.cljs$core$IFn$_invoke$arity$2(pred, cljs.core.chunk_rest(s)));
        } else {
          var f = cljs.core.first(s);
          var r = cljs.core.rest(s);
          if (cljs.core.truth_(function() {
            var G__13368 = f;
            return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__13368) : pred.call(null, G__13368);
          }())) {
            return cljs.core.cons(f, filter.cljs$core$IFn$_invoke$arity$2(pred, r));
          } else {
            return filter.cljs$core$IFn$_invoke$arity$2(pred, r);
          }
        }
      } else {
        return null;
      }
    }, null, null);
  };
  filter = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return filter__1.call(this, pred);
      case 2:
        return filter__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  filter.cljs$core$IFn$_invoke$arity$1 = filter__1;
  filter.cljs$core$IFn$_invoke$arity$2 = filter__2;
  return filter;
}();
cljs.core.remove = function() {
  var remove = null;
  var remove__1 = function(pred) {
    return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(cljs.core.complement(pred));
  };
  var remove__2 = function(pred, coll) {
    return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(cljs.core.complement(pred), coll);
  };
  remove = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return remove__1.call(this, pred);
      case 2:
        return remove__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  remove.cljs$core$IFn$_invoke$arity$1 = remove__1;
  remove.cljs$core$IFn$_invoke$arity$2 = remove__2;
  return remove;
}();
cljs.core.tree_seq = function tree_seq(branch_QMARK_, children, root) {
  var walk = function walk(node) {
    return new cljs.core.LazySeq(null, function() {
      return cljs.core.cons(node, cljs.core.truth_(function() {
        var G__13379 = node;
        return branch_QMARK_.cljs$core$IFn$_invoke$arity$1 ? branch_QMARK_.cljs$core$IFn$_invoke$arity$1(G__13379) : branch_QMARK_.call(null, G__13379);
      }()) ? cljs.core.mapcat.cljs$core$IFn$_invoke$arity$variadic(walk, cljs.core.array_seq([function() {
        var G__13380 = node;
        return children.cljs$core$IFn$_invoke$arity$1 ? children.cljs$core$IFn$_invoke$arity$1(G__13380) : children.call(null, G__13380);
      }()], 0)) : null);
    }, null, null);
  };
  return walk(root);
};
cljs.core.flatten = function flatten(x) {
  return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(p1__13381_SHARP_) {
    return!cljs.core.sequential_QMARK_(p1__13381_SHARP_);
  }, cljs.core.rest(cljs.core.tree_seq(cljs.core.sequential_QMARK_, cljs.core.seq, x)));
};
cljs.core.into = function() {
  var into = null;
  var into__2 = function(to, from) {
    if (!(to == null)) {
      if (function() {
        var G__13384 = to;
        if (G__13384) {
          var bit__4599__auto__ = G__13384.cljs$lang$protocol_mask$partition1$ & 4;
          if (bit__4599__auto__ || G__13384.cljs$core$IEditableCollection$) {
            return true;
          } else {
            return false;
          }
        } else {
          return false;
        }
      }()) {
        return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_, cljs.core.transient$(to), from)), cljs.core.meta(to));
      } else {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, to, from);
      }
    } else {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.List.EMPTY, from);
    }
  };
  var into__3 = function(to, xform, from) {
    if (function() {
      var G__13385 = to;
      if (G__13385) {
        var bit__4599__auto__ = G__13385.cljs$lang$protocol_mask$partition1$ & 4;
        if (bit__4599__auto__ || G__13385.cljs$core$IEditableCollection$) {
          return true;
        } else {
          return false;
        }
      } else {
        return false;
      }
    }()) {
      return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, cljs.core.conj_BANG_, cljs.core.transient$(to), from)), cljs.core.meta(to));
    } else {
      return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(xform, cljs.core.conj, to, from);
    }
  };
  into = function(to, xform, from) {
    switch(arguments.length) {
      case 2:
        return into__2.call(this, to, xform);
      case 3:
        return into__3.call(this, to, xform, from);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  into.cljs$core$IFn$_invoke$arity$2 = into__2;
  into.cljs$core$IFn$_invoke$arity$3 = into__3;
  return into;
}();
cljs.core.mapv = function() {
  var mapv = null;
  var mapv__2 = function(f, coll) {
    return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(v, o) {
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v, function() {
        var G__13387 = o;
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13387) : f.call(null, G__13387);
      }());
    }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), coll));
  };
  var mapv__3 = function(f, c1, c2) {
    return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$3(f, c1, c2));
  };
  var mapv__4 = function(f, c1, c2, c3) {
    return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.map.cljs$core$IFn$_invoke$arity$4(f, c1, c2, c3));
  };
  var mapv__5 = function() {
    var G__13388__delegate = function(f, c1, c2, c3, colls) {
      return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentVector.EMPTY, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(cljs.core.map, f, c1, c2, c3, cljs.core.array_seq([colls], 0)));
    };
    var G__13388 = function(f, c1, c2, c3, var_args) {
      var colls = null;
      if (arguments.length > 4) {
        var G__13389__i = 0, G__13389__a = new Array(arguments.length - 4);
        while (G__13389__i < G__13389__a.length) {
          G__13389__a[G__13389__i] = arguments[G__13389__i + 4];
          ++G__13389__i;
        }
        colls = new cljs.core.IndexedSeq(G__13389__a, 0);
      }
      return G__13388__delegate.call(this, f, c1, c2, c3, colls);
    };
    G__13388.cljs$lang$maxFixedArity = 4;
    G__13388.cljs$lang$applyTo = function(arglist__13390) {
      var f = cljs.core.first(arglist__13390);
      arglist__13390 = cljs.core.next(arglist__13390);
      var c1 = cljs.core.first(arglist__13390);
      arglist__13390 = cljs.core.next(arglist__13390);
      var c2 = cljs.core.first(arglist__13390);
      arglist__13390 = cljs.core.next(arglist__13390);
      var c3 = cljs.core.first(arglist__13390);
      var colls = cljs.core.rest(arglist__13390);
      return G__13388__delegate(f, c1, c2, c3, colls);
    };
    G__13388.cljs$core$IFn$_invoke$arity$variadic = G__13388__delegate;
    return G__13388;
  }();
  mapv = function(f, c1, c2, c3, var_args) {
    var colls = var_args;
    switch(arguments.length) {
      case 2:
        return mapv__2.call(this, f, c1);
      case 3:
        return mapv__3.call(this, f, c1, c2);
      case 4:
        return mapv__4.call(this, f, c1, c2, c3);
      default:
        var G__13391 = null;
        if (arguments.length > 4) {
          var G__13392__i = 0, G__13392__a = new Array(arguments.length - 4);
          while (G__13392__i < G__13392__a.length) {
            G__13392__a[G__13392__i] = arguments[G__13392__i + 4];
            ++G__13392__i;
          }
          G__13391 = new cljs.core.IndexedSeq(G__13392__a, 0);
        }
        return mapv__5.cljs$core$IFn$_invoke$arity$variadic(f, c1, c2, c3, G__13391);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapv.cljs$lang$maxFixedArity = 4;
  mapv.cljs$lang$applyTo = mapv__5.cljs$lang$applyTo;
  mapv.cljs$core$IFn$_invoke$arity$2 = mapv__2;
  mapv.cljs$core$IFn$_invoke$arity$3 = mapv__3;
  mapv.cljs$core$IFn$_invoke$arity$4 = mapv__4;
  mapv.cljs$core$IFn$_invoke$arity$variadic = mapv__5.cljs$core$IFn$_invoke$arity$variadic;
  return mapv;
}();
cljs.core.filterv = function filterv(pred, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(v, o) {
    if (cljs.core.truth_(function() {
      var G__13394 = o;
      return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__13394) : pred.call(null, G__13394);
    }())) {
      return cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(v, o);
    } else {
      return v;
    }
  }, cljs.core.transient$(cljs.core.PersistentVector.EMPTY), coll));
};
cljs.core.partition = function() {
  var partition = null;
  var partition__2 = function(n, coll) {
    return partition.cljs$core$IFn$_invoke$arity$3(n, n, coll);
  };
  var partition__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s);
        if (n === cljs.core.count(p)) {
          return cljs.core.cons(p, partition.cljs$core$IFn$_invoke$arity$3(n, step, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
        } else {
          return null;
        }
      } else {
        return null;
      }
    }, null, null);
  };
  var partition__4 = function(n, step, pad, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        var p = cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s);
        if (n === cljs.core.count(p)) {
          return cljs.core.cons(p, partition.cljs$core$IFn$_invoke$arity$4(n, step, pad, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
        } else {
          return cljs.core._conj(cljs.core.List.EMPTY, cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.concat.cljs$core$IFn$_invoke$arity$2(p, pad)));
        }
      } else {
        return null;
      }
    }, null, null);
  };
  partition = function(n, step, pad, coll) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, step);
      case 3:
        return partition__3.call(this, n, step, pad);
      case 4:
        return partition__4.call(this, n, step, pad, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
  partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
  partition.cljs$core$IFn$_invoke$arity$4 = partition__4;
  return partition;
}();
cljs.core.get_in = function() {
  var get_in = null;
  var get_in__2 = function(m, ks) {
    return get_in.cljs$core$IFn$_invoke$arity$3(m, ks, null);
  };
  var get_in__3 = function(m, ks, not_found) {
    var sentinel = cljs.core.lookup_sentinel;
    var m__$1 = m;
    var ks__$1 = cljs.core.seq(ks);
    while (true) {
      if (ks__$1) {
        if (!function() {
          var G__13409 = m__$1;
          if (G__13409) {
            var bit__4606__auto__ = G__13409.cljs$lang$protocol_mask$partition0$ & 256;
            if (bit__4606__auto__ || G__13409.cljs$core$ILookup$) {
              return true;
            } else {
              if (!G__13409.cljs$lang$protocol_mask$partition0$) {
                return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, G__13409);
              } else {
                return false;
              }
            }
          } else {
            return cljs.core.native_satisfies_QMARK_(cljs.core.ILookup, G__13409);
          }
        }()) {
          return not_found;
        } else {
          var m__$2 = cljs.core.get.cljs$core$IFn$_invoke$arity$3(m__$1, cljs.core.first(ks__$1), sentinel);
          if (sentinel === m__$2) {
            return not_found;
          } else {
            var G__13410 = sentinel;
            var G__13411 = m__$2;
            var G__13412 = cljs.core.next(ks__$1);
            sentinel = G__13410;
            m__$1 = G__13411;
            ks__$1 = G__13412;
            continue;
          }
        }
      } else {
        return m__$1;
      }
      break;
    }
  };
  get_in = function(m, ks, not_found) {
    switch(arguments.length) {
      case 2:
        return get_in__2.call(this, m, ks);
      case 3:
        return get_in__3.call(this, m, ks, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  get_in.cljs$core$IFn$_invoke$arity$2 = get_in__2;
  get_in.cljs$core$IFn$_invoke$arity$3 = get_in__3;
  return get_in;
}();
cljs.core.assoc_in = function assoc_in(m, p__13413, v) {
  var vec__13418 = p__13413;
  var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13418, 0, null);
  var ks = cljs.core.nthnext(vec__13418, 1);
  if (ks) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, assoc_in(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, v));
  } else {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, v);
  }
};
cljs.core.update_in = function() {
  var update_in = null;
  var update_in__3 = function(m, p__13419, f) {
    var vec__13457 = p__13419;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13457, 0, null);
    var ks = cljs.core.nthnext(vec__13457, 1);
    if (ks) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, update_in.cljs$core$IFn$_invoke$arity$3(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f));
    } else {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
        var G__13458 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
        return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13458) : f.call(null, G__13458);
      }());
    }
  };
  var update_in__4 = function(m, p__13420, f, a) {
    var vec__13459 = p__13420;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13459, 0, null);
    var ks = cljs.core.nthnext(vec__13459, 1);
    if (ks) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, update_in.cljs$core$IFn$_invoke$arity$4(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a));
    } else {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
        var G__13460 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
        var G__13461 = a;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13460, G__13461) : f.call(null, G__13460, G__13461);
      }());
    }
  };
  var update_in__5 = function(m, p__13421, f, a, b) {
    var vec__13462 = p__13421;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13462, 0, null);
    var ks = cljs.core.nthnext(vec__13462, 1);
    if (ks) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, update_in.cljs$core$IFn$_invoke$arity$5(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, b));
    } else {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
        var G__13463 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
        var G__13464 = a;
        var G__13465 = b;
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13463, G__13464, G__13465) : f.call(null, G__13463, G__13464, G__13465);
      }());
    }
  };
  var update_in__6 = function(m, p__13422, f, a, b, c) {
    var vec__13466 = p__13422;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13466, 0, null);
    var ks = cljs.core.nthnext(vec__13466, 1);
    if (ks) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, update_in.cljs$core$IFn$_invoke$arity$6(cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, b, c));
    } else {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
        var G__13467 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
        var G__13468 = a;
        var G__13469 = b;
        var G__13470 = c;
        return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__13467, G__13468, G__13469, G__13470) : f.call(null, G__13467, G__13468, G__13469, G__13470);
      }());
    }
  };
  var update_in__7 = function() {
    var G__13472__delegate = function(m, p__13423, f, a, b, c, args) {
      var vec__13471 = p__13423;
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13471, 0, null);
      var ks = cljs.core.nthnext(vec__13471, 1);
      if (ks) {
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(update_in, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), ks, f, a, cljs.core.array_seq([b, c, args], 0)));
      } else {
        return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), a, b, c, cljs.core.array_seq([args], 0)));
      }
    };
    var G__13472 = function(m, p__13423, f, a, b, c, var_args) {
      var args = null;
      if (arguments.length > 6) {
        var G__13473__i = 0, G__13473__a = new Array(arguments.length - 6);
        while (G__13473__i < G__13473__a.length) {
          G__13473__a[G__13473__i] = arguments[G__13473__i + 6];
          ++G__13473__i;
        }
        args = new cljs.core.IndexedSeq(G__13473__a, 0);
      }
      return G__13472__delegate.call(this, m, p__13423, f, a, b, c, args);
    };
    G__13472.cljs$lang$maxFixedArity = 6;
    G__13472.cljs$lang$applyTo = function(arglist__13474) {
      var m = cljs.core.first(arglist__13474);
      arglist__13474 = cljs.core.next(arglist__13474);
      var p__13423 = cljs.core.first(arglist__13474);
      arglist__13474 = cljs.core.next(arglist__13474);
      var f = cljs.core.first(arglist__13474);
      arglist__13474 = cljs.core.next(arglist__13474);
      var a = cljs.core.first(arglist__13474);
      arglist__13474 = cljs.core.next(arglist__13474);
      var b = cljs.core.first(arglist__13474);
      arglist__13474 = cljs.core.next(arglist__13474);
      var c = cljs.core.first(arglist__13474);
      var args = cljs.core.rest(arglist__13474);
      return G__13472__delegate(m, p__13423, f, a, b, c, args);
    };
    G__13472.cljs$core$IFn$_invoke$arity$variadic = G__13472__delegate;
    return G__13472;
  }();
  update_in = function(m, p__13423, f, a, b, c, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 3:
        return update_in__3.call(this, m, p__13423, f);
      case 4:
        return update_in__4.call(this, m, p__13423, f, a);
      case 5:
        return update_in__5.call(this, m, p__13423, f, a, b);
      case 6:
        return update_in__6.call(this, m, p__13423, f, a, b, c);
      default:
        var G__13475 = null;
        if (arguments.length > 6) {
          var G__13476__i = 0, G__13476__a = new Array(arguments.length - 6);
          while (G__13476__i < G__13476__a.length) {
            G__13476__a[G__13476__i] = arguments[G__13476__i + 6];
            ++G__13476__i;
          }
          G__13475 = new cljs.core.IndexedSeq(G__13476__a, 0);
        }
        return update_in__7.cljs$core$IFn$_invoke$arity$variadic(m, p__13423, f, a, b, c, G__13475);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update_in.cljs$lang$maxFixedArity = 6;
  update_in.cljs$lang$applyTo = update_in__7.cljs$lang$applyTo;
  update_in.cljs$core$IFn$_invoke$arity$3 = update_in__3;
  update_in.cljs$core$IFn$_invoke$arity$4 = update_in__4;
  update_in.cljs$core$IFn$_invoke$arity$5 = update_in__5;
  update_in.cljs$core$IFn$_invoke$arity$6 = update_in__6;
  update_in.cljs$core$IFn$_invoke$arity$variadic = update_in__7.cljs$core$IFn$_invoke$arity$variadic;
  return update_in;
}();
cljs.core.update = function() {
  var update = null;
  var update__3 = function(m, k, f) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__13487 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__13487) : f.call(null, G__13487);
    }());
  };
  var update__4 = function(m, k, f, x) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__13488 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__13489 = x;
      return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13488, G__13489) : f.call(null, G__13488, G__13489);
    }());
  };
  var update__5 = function(m, k, f, x, y) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__13490 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__13491 = x;
      var G__13492 = y;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13490, G__13491, G__13492) : f.call(null, G__13490, G__13491, G__13492);
    }());
  };
  var update__6 = function(m, k, f, x, y, z) {
    return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
      var G__13493 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
      var G__13494 = x;
      var G__13495 = y;
      var G__13496 = z;
      return f.cljs$core$IFn$_invoke$arity$4 ? f.cljs$core$IFn$_invoke$arity$4(G__13493, G__13494, G__13495, G__13496) : f.call(null, G__13493, G__13494, G__13495, G__13496);
    }());
  };
  var update__7 = function() {
    var G__13497__delegate = function(m, k, f, x, y, z, more) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(f, cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k), x, y, z, cljs.core.array_seq([more], 0)));
    };
    var G__13497 = function(m, k, f, x, y, z, var_args) {
      var more = null;
      if (arguments.length > 6) {
        var G__13498__i = 0, G__13498__a = new Array(arguments.length - 6);
        while (G__13498__i < G__13498__a.length) {
          G__13498__a[G__13498__i] = arguments[G__13498__i + 6];
          ++G__13498__i;
        }
        more = new cljs.core.IndexedSeq(G__13498__a, 0);
      }
      return G__13497__delegate.call(this, m, k, f, x, y, z, more);
    };
    G__13497.cljs$lang$maxFixedArity = 6;
    G__13497.cljs$lang$applyTo = function(arglist__13499) {
      var m = cljs.core.first(arglist__13499);
      arglist__13499 = cljs.core.next(arglist__13499);
      var k = cljs.core.first(arglist__13499);
      arglist__13499 = cljs.core.next(arglist__13499);
      var f = cljs.core.first(arglist__13499);
      arglist__13499 = cljs.core.next(arglist__13499);
      var x = cljs.core.first(arglist__13499);
      arglist__13499 = cljs.core.next(arglist__13499);
      var y = cljs.core.first(arglist__13499);
      arglist__13499 = cljs.core.next(arglist__13499);
      var z = cljs.core.first(arglist__13499);
      var more = cljs.core.rest(arglist__13499);
      return G__13497__delegate(m, k, f, x, y, z, more);
    };
    G__13497.cljs$core$IFn$_invoke$arity$variadic = G__13497__delegate;
    return G__13497;
  }();
  update = function(m, k, f, x, y, z, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 3:
        return update__3.call(this, m, k, f);
      case 4:
        return update__4.call(this, m, k, f, x);
      case 5:
        return update__5.call(this, m, k, f, x, y);
      case 6:
        return update__6.call(this, m, k, f, x, y, z);
      default:
        var G__13500 = null;
        if (arguments.length > 6) {
          var G__13501__i = 0, G__13501__a = new Array(arguments.length - 6);
          while (G__13501__i < G__13501__a.length) {
            G__13501__a[G__13501__i] = arguments[G__13501__i + 6];
            ++G__13501__i;
          }
          G__13500 = new cljs.core.IndexedSeq(G__13501__a, 0);
        }
        return update__7.cljs$core$IFn$_invoke$arity$variadic(m, k, f, x, y, z, G__13500);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  update.cljs$lang$maxFixedArity = 6;
  update.cljs$lang$applyTo = update__7.cljs$lang$applyTo;
  update.cljs$core$IFn$_invoke$arity$3 = update__3;
  update.cljs$core$IFn$_invoke$arity$4 = update__4;
  update.cljs$core$IFn$_invoke$arity$5 = update__5;
  update.cljs$core$IFn$_invoke$arity$6 = update__6;
  update.cljs$core$IFn$_invoke$arity$variadic = update__7.cljs$core$IFn$_invoke$arity$variadic;
  return update;
}();
cljs.core.VectorNode = function(edit, arr) {
  this.edit = edit;
  this.arr = arr;
};
cljs.core.VectorNode.cljs$lang$type = true;
cljs.core.VectorNode.cljs$lang$ctorStr = "cljs.core/VectorNode";
cljs.core.VectorNode.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/VectorNode");
};
cljs.core.__GT_VectorNode = function __GT_VectorNode(edit, arr) {
  return new cljs.core.VectorNode(edit, arr);
};
cljs.core.pv_fresh_node = function pv_fresh_node(edit) {
  return new cljs.core.VectorNode(edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
};
cljs.core.pv_aget = function pv_aget(node, idx) {
  return node.arr[idx];
};
cljs.core.pv_aset = function pv_aset(node, idx, val) {
  return node.arr[idx] = val;
};
cljs.core.pv_clone_node = function pv_clone_node(node) {
  return new cljs.core.VectorNode(node.edit, cljs.core.aclone(node.arr));
};
cljs.core.tail_off = function tail_off(pv) {
  var cnt = pv.cnt;
  if (cnt < 32) {
    return 0;
  } else {
    return cnt - 1 >>> 5 << 5;
  }
};
cljs.core.new_path = function new_path(edit, level, node) {
  var ll = level;
  var ret = node;
  while (true) {
    if (ll === 0) {
      return ret;
    } else {
      var embed = ret;
      var r = cljs.core.pv_fresh_node(edit);
      var _ = cljs.core.pv_aset(r, 0, embed);
      var G__13502 = ll - 5;
      var G__13503 = r;
      ll = G__13502;
      ret = G__13503;
      continue;
    }
    break;
  }
};
cljs.core.push_tail = function push_tail(pv, level, parent, tailnode) {
  var ret = cljs.core.pv_clone_node(parent);
  var subidx = pv.cnt - 1 >>> level & 31;
  if (5 === level) {
    cljs.core.pv_aset(ret, subidx, tailnode);
    return ret;
  } else {
    var child = cljs.core.pv_aget(parent, subidx);
    if (!(child == null)) {
      var node_to_insert = push_tail(pv, level - 5, child, tailnode);
      cljs.core.pv_aset(ret, subidx, node_to_insert);
      return ret;
    } else {
      var node_to_insert = cljs.core.new_path(null, level - 5, tailnode);
      cljs.core.pv_aset(ret, subidx, node_to_insert);
      return ret;
    }
  }
};
cljs.core.vector_index_out_of_bounds = function vector_index_out_of_bounds(i, cnt) {
  throw new Error([cljs.core.str("No item "), cljs.core.str(i), cljs.core.str(" in vector of length "), cljs.core.str(cnt)].join(""));
};
cljs.core.first_array_for_longvec = function first_array_for_longvec(pv) {
  var node = pv.root;
  var level = pv.shift;
  while (true) {
    if (level > 0) {
      var G__13508 = cljs.core.pv_aget(node, 0);
      var G__13509 = level - 5;
      node = G__13508;
      level = G__13509;
      continue;
    } else {
      return node.arr;
    }
    break;
  }
};
cljs.core.unchecked_array_for = function unchecked_array_for(pv, i) {
  if (i >= cljs.core.tail_off(pv)) {
    return pv.tail;
  } else {
    var node = pv.root;
    var level = pv.shift;
    while (true) {
      if (level > 0) {
        var G__13510 = cljs.core.pv_aget(node, i >>> level & 31);
        var G__13511 = level - 5;
        node = G__13510;
        level = G__13511;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.array_for = function array_for(pv, i) {
  if (0 <= i && i < pv.cnt) {
    return cljs.core.unchecked_array_for(pv, i);
  } else {
    return cljs.core.vector_index_out_of_bounds(i, pv.cnt);
  }
};
cljs.core.do_assoc = function do_assoc(pv, level, node, i, val) {
  var ret = cljs.core.pv_clone_node(node);
  if (level === 0) {
    cljs.core.pv_aset(ret, i & 31, val);
    return ret;
  } else {
    var subidx = i >>> level & 31;
    cljs.core.pv_aset(ret, subidx, do_assoc(pv, level - 5, cljs.core.pv_aget(node, subidx), i, val));
    return ret;
  }
};
cljs.core.pop_tail = function pop_tail(pv, level, node) {
  var subidx = pv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = pop_tail(pv, level - 5, cljs.core.pv_aget(node, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node(node);
      cljs.core.pv_aset(ret, subidx, new_child);
      return ret;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      var ret = cljs.core.pv_clone_node(node);
      cljs.core.pv_aset(ret, subidx, null);
      return ret;
    }
  }
};
cljs.core.RangedIterator = function(i, base, arr, v, start, end) {
  this.i = i;
  this.base = base;
  this.arr = arr;
  this.v = v;
  this.start = start;
  this.end = end;
};
cljs.core.RangedIterator.prototype.hasNext = function() {
  var self__ = this;
  var this$ = this;
  return self__.i < self__.end;
};
cljs.core.RangedIterator.prototype.next = function() {
  var self__ = this;
  var this$ = this;
  if (self__.i - self__.base === 32) {
    self__.arr = cljs.core.unchecked_array_for(self__.v, self__.i);
    self__.base = self__.base + 32;
  } else {
  }
  var ret = self__.arr[self__.i & 31];
  self__.i = self__.i + 1;
  return ret;
};
cljs.core.RangedIterator.cljs$lang$type = true;
cljs.core.RangedIterator.cljs$lang$ctorStr = "cljs.core/RangedIterator";
cljs.core.RangedIterator.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/RangedIterator");
};
cljs.core.__GT_RangedIterator = function __GT_RangedIterator(i, base, arr, v, start, end) {
  return new cljs.core.RangedIterator(i, base, arr, v, start, end);
};
cljs.core.ranged_iterator = function ranged_iterator(v, start, end) {
  var i = start;
  return new cljs.core.RangedIterator(i, i - i % 32, start < cljs.core.count(v) ? cljs.core.unchecked_array_for(v, i) : null, v, start, end);
};
cljs.core.PersistentVector = function(meta, cnt, shift, root, tail, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 167668511;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentVector.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentVector.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for(v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = function() {
              var G__13521 = init__$2;
              var G__13522 = j + i;
              var G__13523 = arr[j];
              return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13521, G__13522, G__13523) : f.call(null, G__13521, G__13522, G__13523);
            }();
            if (cljs.core.reduced_QMARK_(init__$3)) {
              return init__$3;
            } else {
              var G__13534 = j + 1;
              var G__13535 = init__$3;
              j = G__13534;
              init__$2 = G__13535;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__13524 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__13524) : cljs.core.deref.call(null, G__13524);
      } else {
        var G__13536 = i + len;
        var G__13537 = init__$2;
        i = G__13536;
        init__$1 = G__13537;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_for(coll__$1, n)[n & 31];
};
cljs.core.PersistentVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core.unchecked_array_for(coll__$1, n)[n & 31];
  } else {
    return not_found;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    if (cljs.core.tail_off(coll__$1) <= n) {
      var new_tail = cljs.core.aclone(self__.tail);
      new_tail[n & 31] = val;
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, new_tail, null);
    } else {
      return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, cljs.core.do_assoc(coll__$1, self__.shift, self__.root, n, val), self__.tail, null);
    }
  } else {
    if (n === self__.cnt) {
      return cljs.core._conj(coll__$1, val);
    } else {
      throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds  [0,"), cljs.core.str(self__.cnt), cljs.core.str("]")].join(""));
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IIterable$_iterator$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.ranged_iterator(this$__$1, 0, self__.cnt);
};
cljs.core.PersistentVector.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentVector.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentVector(self__.meta, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_key$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, 0);
};
cljs.core.PersistentVector.prototype.cljs$core$IMapEntry$_val$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, 1);
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, self__.cnt - 1);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    throw new Error("Can't pop empty vector");
  } else {
    if (1 === self__.cnt) {
      return cljs.core._with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
    } else {
      if (1 < self__.cnt - cljs.core.tail_off(coll__$1)) {
        return new cljs.core.PersistentVector(self__.meta, self__.cnt - 1, self__.shift, self__.root, self__.tail.slice(0, -1), null);
      } else {
        var new_tail = cljs.core.unchecked_array_for(coll__$1, self__.cnt - 2);
        var nr = cljs.core.pop_tail(coll__$1, self__.shift, self__.root);
        var new_root = nr == null ? cljs.core.PersistentVector.EMPTY_NODE : nr;
        var cnt_1 = self__.cnt - 1;
        if (5 < self__.shift && cljs.core.pv_aget(new_root, 1) == null) {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift - 5, cljs.core.pv_aget(new_root, 0), new_tail, null);
        } else {
          return new cljs.core.PersistentVector(self__.meta, cnt_1, self__.shift, new_root, new_tail, null);
        }
      }
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return new cljs.core.RSeq(coll__$1, self__.cnt - 1, null);
  } else {
    return null;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4346__auto__ = self__.__hash;
  if (!(h__4346__auto__ == null)) {
    return h__4346__auto__;
  } else {
    var h__4346__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4346__auto____$1;
    return h__4346__auto____$1;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (other instanceof cljs.core.PersistentVector) {
    if (self__.cnt === cljs.core.count(other)) {
      var me_iter = cljs.core._iterator(coll__$1);
      var you_iter = cljs.core._iterator(other);
      while (true) {
        if (cljs.core.truth_(me_iter.hasNext())) {
          var x = me_iter.next();
          var y = you_iter.next();
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(x, y)) {
            continue;
          } else {
            return false;
          }
        } else {
          return true;
        }
        break;
      }
    } else {
      return false;
    }
  } else {
    return cljs.core.equiv_sequential(coll__$1, other);
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientVector(self__.cnt, self__.shift, function() {
    var G__13525 = self__.root;
    return cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_root.cljs$core$IFn$_invoke$arity$1(G__13525) : cljs.core.tv_editable_root.call(null, G__13525);
  }(), function() {
    var G__13526 = self__.tail;
    return cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1 ? cljs.core.tv_editable_tail.cljs$core$IFn$_invoke$arity$1(G__13526) : cljs.core.tv_editable_tail.call(null, G__13526);
  }());
};
cljs.core.PersistentVector.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$2 = function(v, f) {
  var self__ = this;
  var v__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(v__$1, f);
};
cljs.core.PersistentVector.prototype.cljs$core$IReduce$_reduce$arity$3 = function(v, f, init) {
  var self__ = this;
  var v__$1 = this;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < self__.cnt) {
      var arr = cljs.core.unchecked_array_for(v__$1, i);
      var len = arr.length;
      var init__$2 = function() {
        var j = 0;
        var init__$2 = init__$1;
        while (true) {
          if (j < len) {
            var init__$3 = function() {
              var G__13527 = init__$2;
              var G__13528 = arr[j];
              return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13527, G__13528) : f.call(null, G__13527, G__13528);
            }();
            if (cljs.core.reduced_QMARK_(init__$3)) {
              return init__$3;
            } else {
              var G__13538 = j + 1;
              var G__13539 = init__$3;
              j = G__13538;
              init__$2 = G__13539;
              continue;
            }
          } else {
            return init__$2;
          }
          break;
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__13529 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__13529) : cljs.core.deref.call(null, G__13529);
      } else {
        var G__13540 = i + len;
        var G__13541 = init__$2;
        i = G__13540;
        init__$1 = G__13541;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._assoc_n(coll__$1, k, v);
  } else {
    throw new Error("Vector's key for assoc must be a number.");
  }
};
cljs.core.PersistentVector.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt === 0) {
    return null;
  } else {
    if (self__.cnt <= 32) {
      return new cljs.core.IndexedSeq(self__.tail, 0);
    } else {
      var G__13530 = coll__$1;
      var G__13531 = cljs.core.first_array_for_longvec(coll__$1);
      var G__13532 = 0;
      var G__13533 = 0;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__13530, G__13531, G__13532, G__13533) : cljs.core.chunked_seq.call(null, G__13530, G__13531, G__13532, G__13533);
    }
  }
};
cljs.core.PersistentVector.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(meta__$1, self__.cnt, self__.shift, self__.root, self__.tail, self__.__hash);
};
cljs.core.PersistentVector.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt - cljs.core.tail_off(coll__$1) < 32) {
    var len = self__.tail.length;
    var new_tail = new Array(len + 1);
    var n__4812__auto___13542 = len;
    var i_13543 = 0;
    while (true) {
      if (i_13543 < n__4812__auto___13542) {
        new_tail[i_13543] = self__.tail[i_13543];
        var G__13544 = i_13543 + 1;
        i_13543 = G__13544;
        continue;
      } else {
      }
      break;
    }
    new_tail[len] = o;
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, self__.shift, self__.root, new_tail, null);
  } else {
    var root_overflow_QMARK_ = self__.cnt >>> 5 > 1 << self__.shift;
    var new_shift = root_overflow_QMARK_ ? self__.shift + 5 : self__.shift;
    var new_root = root_overflow_QMARK_ ? function() {
      var n_r = cljs.core.pv_fresh_node(null);
      cljs.core.pv_aset(n_r, 0, self__.root);
      cljs.core.pv_aset(n_r, 1, cljs.core.new_path(null, self__.shift, new cljs.core.VectorNode(null, self__.tail)));
      return n_r;
    }() : cljs.core.push_tail(coll__$1, self__.shift, self__.root, new cljs.core.VectorNode(null, self__.tail));
    return new cljs.core.PersistentVector(self__.meta, self__.cnt + 1, new_shift, new_root, [o], null);
  }
};
cljs.core.PersistentVector.prototype.call = function() {
  var G__13545 = null;
  var G__13545__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__13545__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__13545 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__13545__2.call(this, self__, k);
      case 3:
        return G__13545__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__13545.cljs$core$IFn$_invoke$arity$2 = G__13545__2;
  G__13545.cljs$core$IFn$_invoke$arity$3 = G__13545__3;
  return G__13545;
}();
cljs.core.PersistentVector.prototype.apply = function(self__, args13520) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args13520)));
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.PersistentVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.PersistentVector.cljs$lang$type = true;
cljs.core.PersistentVector.cljs$lang$ctorStr = "cljs.core/PersistentVector";
cljs.core.PersistentVector.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/PersistentVector");
};
cljs.core.__GT_PersistentVector = function __GT_PersistentVector(meta, cnt, shift, root, tail, __hash) {
  return new cljs.core.PersistentVector(meta, cnt, shift, root, tail, __hash);
};
cljs.core.PersistentVector.EMPTY_NODE = new cljs.core.VectorNode(null, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
cljs.core.PersistentVector.EMPTY = new cljs.core.PersistentVector(null, 0, 5, cljs.core.PersistentVector.EMPTY_NODE, [], cljs.core.empty_ordered_hash);
cljs.core.PersistentVector.fromArray = function(xs, no_clone) {
  var l = xs.length;
  var xs__$1 = no_clone ? xs : cljs.core.aclone(xs);
  if (l < 32) {
    return new cljs.core.PersistentVector(null, l, 5, cljs.core.PersistentVector.EMPTY_NODE, xs__$1, null);
  } else {
    var node = xs__$1.slice(0, 32);
    var v = new cljs.core.PersistentVector(null, 32, 5, cljs.core.PersistentVector.EMPTY_NODE, node, null);
    var i = 32;
    var out = v.cljs$core$IEditableCollection$_as_transient$arity$1(null);
    while (true) {
      if (i < l) {
        var G__13546 = i + 1;
        var G__13547 = cljs.core.conj_BANG_.cljs$core$IFn$_invoke$arity$2(out, xs__$1[i]);
        i = G__13546;
        out = G__13547;
        continue;
      } else {
        return cljs.core.persistent_BANG_(out);
      }
      break;
    }
  }
};
cljs.core.PersistentVector.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4903__auto__ = this;
  return cljs.core.es6_iterator(this__4903__auto__);
};
cljs.core.vec = function vec(coll) {
  if (coll instanceof Array) {
    return cljs.core.PersistentVector.fromArray(coll, true);
  } else {
    return cljs.core._persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj_BANG_, cljs.core._as_transient(cljs.core.PersistentVector.EMPTY), coll));
  }
};
cljs.core.vector = function() {
  var vector__delegate = function(args) {
    if (args instanceof cljs.core.IndexedSeq && args.i === 0) {
      return cljs.core.PersistentVector.fromArray(args.arr, true);
    } else {
      return cljs.core.vec(args);
    }
  };
  var vector = function(var_args) {
    var args = null;
    if (arguments.length > 0) {
      var G__13548__i = 0, G__13548__a = new Array(arguments.length - 0);
      while (G__13548__i < G__13548__a.length) {
        G__13548__a[G__13548__i] = arguments[G__13548__i + 0];
        ++G__13548__i;
      }
      args = new cljs.core.IndexedSeq(G__13548__a, 0);
    }
    return vector__delegate.call(this, args);
  };
  vector.cljs$lang$maxFixedArity = 0;
  vector.cljs$lang$applyTo = function(arglist__13549) {
    var args = cljs.core.seq(arglist__13549);
    return vector__delegate(args);
  };
  vector.cljs$core$IFn$_invoke$arity$variadic = vector__delegate;
  return vector;
}();
cljs.core.ChunkedSeq = function(vec, node, i, off, meta, __hash) {
  this.vec = vec;
  this.node = node;
  this.i = i;
  this.off = off;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375020;
  this.cljs$lang$protocol_mask$partition1$ = 1536;
};
cljs.core.ChunkedSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ChunkedSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ChunkedSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = function() {
      var G__13550 = self__.vec;
      var G__13551 = self__.node;
      var G__13552 = self__.i;
      var G__13553 = self__.off + 1;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__13550, G__13551, G__13552, G__13553) : cljs.core.chunked_seq.call(null, G__13550, G__13551, G__13552, G__13553);
    }();
    if (s == null) {
      return null;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_next(coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4346__auto__ = self__.__hash;
  if (!(h__4346__auto__ == null)) {
    return h__4346__auto__;
  } else {
    var h__4346__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4346__auto____$1;
    return h__4346__auto____$1;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(function() {
    var G__13554 = self__.vec;
    var G__13555 = self__.i + self__.off;
    var G__13556 = cljs.core.count(self__.vec);
    return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__13554, G__13555, G__13556) : cljs.core.subvec.call(null, G__13554, G__13555, G__13556);
  }(), f);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(function() {
    var G__13557 = self__.vec;
    var G__13558 = self__.i + self__.off;
    var G__13559 = cljs.core.count(self__.vec);
    return cljs.core.subvec.cljs$core$IFn$_invoke$arity$3 ? cljs.core.subvec.cljs$core$IFn$_invoke$arity$3(G__13557, G__13558, G__13559) : cljs.core.subvec.call(null, G__13557, G__13558, G__13559);
  }(), f, start);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.node[self__.off];
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.off + 1 < self__.node.length) {
    var s = function() {
      var G__13560 = self__.vec;
      var G__13561 = self__.node;
      var G__13562 = self__.i;
      var G__13563 = self__.off + 1;
      return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__13560, G__13561, G__13562, G__13563) : cljs.core.chunked_seq.call(null, G__13560, G__13561, G__13562, G__13563);
    }();
    if (s == null) {
      return cljs.core.List.EMPTY;
    } else {
      return s;
    }
  } else {
    return cljs.core._chunked_rest(coll__$1);
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.array_chunk.cljs$core$IFn$_invoke$arity$2(self__.node, self__.off);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedSeq$_chunked_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count(self__.vec)) {
    var G__13564 = self__.vec;
    var G__13565 = cljs.core.unchecked_array_for(self__.vec, end);
    var G__13566 = end;
    var G__13567 = 0;
    return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__13564, G__13565, G__13566, G__13567) : cljs.core.chunked_seq.call(null, G__13564, G__13565, G__13566, G__13567);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ChunkedSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, m) {
  var self__ = this;
  var coll__$1 = this;
  var G__13568 = self__.vec;
  var G__13569 = self__.node;
  var G__13570 = self__.i;
  var G__13571 = self__.off;
  var G__13572 = m;
  return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$5(G__13568, G__13569, G__13570, G__13571, G__13572) : cljs.core.chunked_seq.call(null, G__13568, G__13569, G__13570, G__13571, G__13572);
};
cljs.core.ChunkedSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IChunkedNext$_chunked_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var end = self__.i + self__.node.length;
  if (end < cljs.core._count(self__.vec)) {
    var G__13573 = self__.vec;
    var G__13574 = cljs.core.unchecked_array_for(self__.vec, end);
    var G__13575 = end;
    var G__13576 = 0;
    return cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.chunked_seq.cljs$core$IFn$_invoke$arity$4(G__13573, G__13574, G__13575, G__13576) : cljs.core.chunked_seq.call(null, G__13573, G__13574, G__13575, G__13576);
  } else {
    return null;
  }
};
cljs.core.ChunkedSeq.cljs$lang$type = true;
cljs.core.ChunkedSeq.cljs$lang$ctorStr = "cljs.core/ChunkedSeq";
cljs.core.ChunkedSeq.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/ChunkedSeq");
};
cljs.core.__GT_ChunkedSeq = function __GT_ChunkedSeq(vec, node, i, off, meta, __hash) {
  return new cljs.core.ChunkedSeq(vec, node, i, off, meta, __hash);
};
cljs.core.ChunkedSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4903__auto__ = this;
  return cljs.core.es6_iterator(this__4903__auto__);
};
cljs.core.chunked_seq = function() {
  var chunked_seq = null;
  var chunked_seq__3 = function(vec, i, off) {
    return new cljs.core.ChunkedSeq(vec, cljs.core.array_for(vec, i), i, off, null, null);
  };
  var chunked_seq__4 = function(vec, node, i, off) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, null, null);
  };
  var chunked_seq__5 = function(vec, node, i, off, meta) {
    return new cljs.core.ChunkedSeq(vec, node, i, off, meta, null);
  };
  chunked_seq = function(vec, node, i, off, meta) {
    switch(arguments.length) {
      case 3:
        return chunked_seq__3.call(this, vec, node, i);
      case 4:
        return chunked_seq__4.call(this, vec, node, i, off);
      case 5:
        return chunked_seq__5.call(this, vec, node, i, off, meta);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chunked_seq.cljs$core$IFn$_invoke$arity$3 = chunked_seq__3;
  chunked_seq.cljs$core$IFn$_invoke$arity$4 = chunked_seq__4;
  chunked_seq.cljs$core$IFn$_invoke$arity$5 = chunked_seq__5;
  return chunked_seq;
}();
cljs.core.Subvec = function(meta, v, start, end, __hash) {
  this.meta = meta;
  this.v = v;
  this.start = start;
  this.end = end;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 166617887;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Subvec.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Subvec.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.Subvec.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return cljs.core.vector_index_out_of_bounds(n, self__.end - self__.start);
  } else {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, self__.start + n);
  }
};
cljs.core.Subvec.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (n < 0 || self__.end <= self__.start + n) {
    return not_found;
  } else {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(self__.v, self__.start + n, not_found);
  }
};
cljs.core.Subvec.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(coll, n, val) {
  var self__ = this;
  var coll__$1 = this;
  var v_pos = self__.start + n;
  var G__13578 = self__.meta;
  var G__13579 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.v, v_pos, val);
  var G__13580 = self__.start;
  var G__13581 = function() {
    var x__4242__auto__ = self__.end;
    var y__4243__auto__ = v_pos + 1;
    return x__4242__auto__ > y__4243__auto__ ? x__4242__auto__ : y__4243__auto__;
  }();
  var G__13582 = null;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__13578, G__13579, G__13580, G__13581, G__13582) : cljs.core.build_subvec.call(null, G__13578, G__13579, G__13580, G__13581, G__13582);
};
cljs.core.Subvec.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.Subvec.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Subvec(self__.meta, self__.v, self__.start, self__.end, self__.__hash);
};
cljs.core.Subvec.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.end - self__.start;
};
cljs.core.Subvec.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, self__.end - 1);
};
cljs.core.Subvec.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.start === self__.end) {
    throw new Error("Can't pop empty vector");
  } else {
    var G__13583 = self__.meta;
    var G__13584 = self__.v;
    var G__13585 = self__.start;
    var G__13586 = self__.end - 1;
    var G__13587 = null;
    return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__13583, G__13584, G__13585, G__13586, G__13587) : cljs.core.build_subvec.call(null, G__13583, G__13584, G__13585, G__13586, G__13587);
  }
};
cljs.core.Subvec.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.start === self__.end)) {
    return new cljs.core.RSeq(coll__$1, self__.end - self__.start - 1, null);
  } else {
    return null;
  }
};
cljs.core.Subvec.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4346__auto__ = self__.__hash;
  if (!(h__4346__auto__ == null)) {
    return h__4346__auto__;
  } else {
    var h__4346__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4346__auto____$1;
    return h__4346__auto____$1;
  }
};
cljs.core.Subvec.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.Subvec.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentVector.EMPTY, self__.meta);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(coll__$1, f);
};
cljs.core.Subvec.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start__$1) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(coll__$1, f, start__$1);
};
cljs.core.Subvec.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, key, val) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n(coll__$1, key, val);
  } else {
    throw new Error("Subvec's key for assoc must be a number.");
  }
};
cljs.core.Subvec.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var subvec_seq = function(coll__$1) {
    return function subvec_seq(i) {
      if (i === self__.end) {
        return null;
      } else {
        return cljs.core.cons(cljs.core._nth.cljs$core$IFn$_invoke$arity$2(self__.v, i), new cljs.core.LazySeq(null, function(coll__$1) {
          return function() {
            return subvec_seq(i + 1);
          };
        }(coll__$1), null, null));
      }
    };
  }(coll__$1);
  return subvec_seq(self__.start);
};
cljs.core.Subvec.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  var G__13589 = meta__$1;
  var G__13590 = self__.v;
  var G__13591 = self__.start;
  var G__13592 = self__.end;
  var G__13593 = self__.__hash;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__13589, G__13590, G__13591, G__13592, G__13593) : cljs.core.build_subvec.call(null, G__13589, G__13590, G__13591, G__13592, G__13593);
};
cljs.core.Subvec.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  var G__13594 = self__.meta;
  var G__13595 = cljs.core._assoc_n(self__.v, self__.end, o);
  var G__13596 = self__.start;
  var G__13597 = self__.end + 1;
  var G__13598 = null;
  return cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5 ? cljs.core.build_subvec.cljs$core$IFn$_invoke$arity$5(G__13594, G__13595, G__13596, G__13597, G__13598) : cljs.core.build_subvec.call(null, G__13594, G__13595, G__13596, G__13597, G__13598);
};
cljs.core.Subvec.prototype.call = function() {
  var G__13599 = null;
  var G__13599__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
  };
  var G__13599__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
  };
  G__13599 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__13599__2.call(this, self__, k);
      case 3:
        return G__13599__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__13599.cljs$core$IFn$_invoke$arity$2 = G__13599__2;
  G__13599.cljs$core$IFn$_invoke$arity$3 = G__13599__3;
  return G__13599;
}();
cljs.core.Subvec.prototype.apply = function(self__, args13577) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args13577)));
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$2(null, k);
};
cljs.core.Subvec.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$IIndexed$_nth$arity$3(null, k, not_found);
};
cljs.core.Subvec.cljs$lang$type = true;
cljs.core.Subvec.cljs$lang$ctorStr = "cljs.core/Subvec";
cljs.core.Subvec.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/Subvec");
};
cljs.core.__GT_Subvec = function __GT_Subvec(meta, v, start, end, __hash) {
  return new cljs.core.Subvec(meta, v, start, end, __hash);
};
cljs.core.Subvec.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4903__auto__ = this;
  return cljs.core.es6_iterator(this__4903__auto__);
};
cljs.core.build_subvec = function build_subvec(meta, v, start, end, __hash) {
  while (true) {
    if (v instanceof cljs.core.Subvec) {
      var G__13600 = meta;
      var G__13601 = v.v;
      var G__13602 = v.start + start;
      var G__13603 = v.start + end;
      var G__13604 = __hash;
      meta = G__13600;
      v = G__13601;
      start = G__13602;
      end = G__13603;
      __hash = G__13604;
      continue;
    } else {
      var c = cljs.core.count(v);
      if (start < 0 || end < 0 || start > c || end > c) {
        throw new Error("Index out of bounds");
      } else {
      }
      return new cljs.core.Subvec(meta, v, start, end, __hash);
    }
    break;
  }
};
cljs.core.subvec = function() {
  var subvec = null;
  var subvec__2 = function(v, start) {
    return subvec.cljs$core$IFn$_invoke$arity$3(v, start, cljs.core.count(v));
  };
  var subvec__3 = function(v, start, end) {
    return cljs.core.build_subvec(null, v, start, end, null);
  };
  subvec = function(v, start, end) {
    switch(arguments.length) {
      case 2:
        return subvec__2.call(this, v, start);
      case 3:
        return subvec__3.call(this, v, start, end);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subvec.cljs$core$IFn$_invoke$arity$2 = subvec__2;
  subvec.cljs$core$IFn$_invoke$arity$3 = subvec__3;
  return subvec;
}();
cljs.core.tv_ensure_editable = function tv_ensure_editable(edit, node) {
  if (edit === node.edit) {
    return node;
  } else {
    return new cljs.core.VectorNode(edit, cljs.core.aclone(node.arr));
  }
};
cljs.core.tv_editable_root = function tv_editable_root(node) {
  return new cljs.core.VectorNode(function() {
    var obj13611 = {};
    return obj13611;
  }(), cljs.core.aclone(node.arr));
};
cljs.core.tv_editable_tail = function tv_editable_tail(tl) {
  var ret = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
  cljs.core.array_copy(tl, 0, ret, 0, tl.length);
  return ret;
};
cljs.core.tv_push_tail = function tv_push_tail(tv, level, parent, tail_node) {
  var ret = cljs.core.tv_ensure_editable(tv.root.edit, parent);
  var subidx = tv.cnt - 1 >>> level & 31;
  cljs.core.pv_aset(ret, subidx, level === 5 ? tail_node : function() {
    var child = cljs.core.pv_aget(ret, subidx);
    if (!(child == null)) {
      return tv_push_tail(tv, level - 5, child, tail_node);
    } else {
      return cljs.core.new_path(tv.root.edit, level - 5, tail_node);
    }
  }());
  return ret;
};
cljs.core.tv_pop_tail = function tv_pop_tail(tv, level, node) {
  var node__$1 = cljs.core.tv_ensure_editable(tv.root.edit, node);
  var subidx = tv.cnt - 2 >>> level & 31;
  if (level > 5) {
    var new_child = tv_pop_tail(tv, level - 5, cljs.core.pv_aget(node__$1, subidx));
    if (new_child == null && subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset(node__$1, subidx, new_child);
      return node__$1;
    }
  } else {
    if (subidx === 0) {
      return null;
    } else {
      cljs.core.pv_aset(node__$1, subidx, null);
      return node__$1;
    }
  }
};
cljs.core.unchecked_editable_array_for = function unchecked_editable_array_for(tv, i) {
  if (i >= cljs.core.tail_off(tv)) {
    return tv.tail;
  } else {
    var root = tv.root;
    var node = root;
    var level = tv.shift;
    while (true) {
      if (level > 0) {
        var G__13619 = cljs.core.tv_ensure_editable(root.edit, cljs.core.pv_aget(node, i >>> level & 31));
        var G__13620 = level - 5;
        node = G__13619;
        level = G__13620;
        continue;
      } else {
        return node.arr;
      }
      break;
    }
  }
};
cljs.core.TransientVector = function(cnt, shift, root, tail) {
  this.cnt = cnt;
  this.shift = shift;
  this.root = root;
  this.tail = tail;
  this.cljs$lang$protocol_mask$partition0$ = 275;
  this.cljs$lang$protocol_mask$partition1$ = 88;
};
cljs.core.TransientVector.prototype.call = function() {
  var G__13624 = null;
  var G__13624__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__13624__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__13624 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__13624__2.call(this, self__, k);
      case 3:
        return G__13624__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__13624.cljs$core$IFn$_invoke$arity$2 = G__13624__2;
  G__13624.cljs$core$IFn$_invoke$arity$3 = G__13624__3;
  return G__13624;
}();
cljs.core.TransientVector.prototype.apply = function(self__, args13621) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args13621)));
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.TransientVector.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.TransientVector.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (typeof k === "number") {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(coll__$1, k, not_found);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$2 = function(coll, n) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return cljs.core.array_for(coll__$1, n)[n & 31];
  } else {
    throw new Error("nth after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$IIndexed$_nth$arity$3 = function(coll, n, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (0 <= n && n < self__.cnt) {
    return cljs.core._nth.cljs$core$IFn$_invoke$arity$2(coll__$1, n);
  } else {
    return not_found;
  }
};
cljs.core.TransientVector.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.root.edit) {
    return self__.cnt;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_assoc_n_BANG_$arity$3 = function(tcoll, n, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (0 <= n && n < self__.cnt) {
      if (cljs.core.tail_off(tcoll__$1) <= n) {
        self__.tail[n & 31] = val;
        return tcoll__$1;
      } else {
        var new_root = function(tcoll__$1) {
          return function go(level, node) {
            var node__$1 = cljs.core.tv_ensure_editable(self__.root.edit, node);
            if (level === 0) {
              cljs.core.pv_aset(node__$1, n & 31, val);
              return node__$1;
            } else {
              var subidx = n >>> level & 31;
              cljs.core.pv_aset(node__$1, subidx, go(level - 5, cljs.core.pv_aget(node__$1, subidx)));
              return node__$1;
            }
          };
        }(tcoll__$1).call(null, self__.shift, self__.root);
        self__.root = new_root;
        return tcoll__$1;
      }
    } else {
      if (n === self__.cnt) {
        return cljs.core._conj_BANG_(tcoll__$1, val);
      } else {
        throw new Error([cljs.core.str("Index "), cljs.core.str(n), cljs.core.str(" out of bounds for TransientVector of length"), cljs.core.str(self__.cnt)].join(""));
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientVector$_pop_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt === 0) {
      throw new Error("Can't pop empty vector");
    } else {
      if (1 === self__.cnt) {
        self__.cnt = 0;
        return tcoll__$1;
      } else {
        if ((self__.cnt - 1 & 31) > 0) {
          self__.cnt = self__.cnt - 1;
          return tcoll__$1;
        } else {
          var new_tail = cljs.core.unchecked_editable_array_for(tcoll__$1, self__.cnt - 2);
          var new_root = function() {
            var nr = cljs.core.tv_pop_tail(tcoll__$1, self__.shift, self__.root);
            if (!(nr == null)) {
              return nr;
            } else {
              return new cljs.core.VectorNode(self__.root.edit, [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null]);
            }
          }();
          if (5 < self__.shift && cljs.core.pv_aget(new_root, 1) == null) {
            var new_root__$1 = cljs.core.tv_ensure_editable(self__.root.edit, cljs.core.pv_aget(new_root, 0));
            self__.root = new_root__$1;
            self__.shift = self__.shift - 5;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          } else {
            self__.root = new_root;
            self__.cnt = self__.cnt - 1;
            self__.tail = new_tail;
            return tcoll__$1;
          }
        }
      }
    }
  } else {
    throw new Error("pop! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (typeof key === "number") {
    return cljs.core._assoc_n_BANG_(tcoll__$1, key, val);
  } else {
    throw new Error("TransientVector's key for assoc! must be a number.");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    if (self__.cnt - cljs.core.tail_off(tcoll__$1) < 32) {
      self__.tail[self__.cnt & 31] = o;
      self__.cnt = self__.cnt + 1;
      return tcoll__$1;
    } else {
      var tail_node = new cljs.core.VectorNode(self__.root.edit, self__.tail);
      var new_tail = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      new_tail[0] = o;
      self__.tail = new_tail;
      if (self__.cnt >>> 5 > 1 << self__.shift) {
        var new_root_array = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var new_shift = self__.shift + 5;
        new_root_array[0] = self__.root;
        new_root_array[1] = cljs.core.new_path(self__.root.edit, self__.shift, tail_node);
        self__.root = new cljs.core.VectorNode(self__.root.edit, new_root_array);
        self__.shift = new_shift;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      } else {
        var new_root = cljs.core.tv_push_tail(tcoll__$1, self__.shift, self__.root, tail_node);
        self__.root = new_root;
        self__.cnt = self__.cnt + 1;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientVector.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (self__.root.edit) {
    self__.root.edit = null;
    var len = self__.cnt - cljs.core.tail_off(tcoll__$1);
    var trimmed_tail = new Array(len);
    cljs.core.array_copy(self__.tail, 0, trimmed_tail, 0, len);
    return new cljs.core.PersistentVector(null, self__.cnt, self__.shift, self__.root, trimmed_tail, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientVector.cljs$lang$type = true;
cljs.core.TransientVector.cljs$lang$ctorStr = "cljs.core/TransientVector";
cljs.core.TransientVector.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/TransientVector");
};
cljs.core.__GT_TransientVector = function __GT_TransientVector(cnt, shift, root, tail) {
  return new cljs.core.TransientVector(cnt, shift, root, tail);
};
cljs.core.PersistentQueueSeq = function(meta, front, rear, __hash) {
  this.meta = meta;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 31850572;
};
cljs.core.PersistentQueueSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentQueueSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4346__auto__ = self__.__hash;
  if (!(h__4346__auto__ == null)) {
    return h__4346__auto__;
  } else {
    var h__4346__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4346__auto____$1;
    return h__4346__auto____$1;
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var temp__4124__auto__ = cljs.core.next(self__.front);
  if (temp__4124__auto__) {
    var f1 = temp__4124__auto__;
    return new cljs.core.PersistentQueueSeq(self__.meta, f1, self__.rear, null);
  } else {
    if (self__.rear == null) {
      return cljs.core._empty(coll__$1);
    } else {
      return new cljs.core.PersistentQueueSeq(self__.meta, self__.rear, null, null);
    }
  }
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueueSeq(meta__$1, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentQueueSeq.cljs$lang$type = true;
cljs.core.PersistentQueueSeq.cljs$lang$ctorStr = "cljs.core/PersistentQueueSeq";
cljs.core.PersistentQueueSeq.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/PersistentQueueSeq");
};
cljs.core.__GT_PersistentQueueSeq = function __GT_PersistentQueueSeq(meta, front, rear, __hash) {
  return new cljs.core.PersistentQueueSeq(meta, front, rear, __hash);
};
cljs.core.PersistentQueueSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4903__auto__ = this;
  return cljs.core.es6_iterator(this__4903__auto__);
};
cljs.core.PersistentQueue = function(meta, count, front, rear, __hash) {
  this.meta = meta;
  this.count = count;
  this.front = front;
  this.rear = rear;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 31858766;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentQueue.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentQueue.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentQueue.prototype.cljs$core$ICloneable$_clone$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(self__.meta, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.count;
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_peek$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$IStack$_pop$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    var temp__4124__auto__ = cljs.core.next(self__.front);
    if (temp__4124__auto__) {
      var f1 = temp__4124__auto__;
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, f1, self__.rear, null);
    } else {
      return new cljs.core.PersistentQueue(self__.meta, self__.count - 1, cljs.core.seq(self__.rear), cljs.core.PersistentVector.EMPTY, null);
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4346__auto__ = self__.__hash;
  if (!(h__4346__auto__ == null)) {
    return h__4346__auto__;
  } else {
    var h__4346__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4346__auto____$1;
    return h__4346__auto____$1;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentQueue.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentQueue.EMPTY, self__.meta);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.front);
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.rest(cljs.core.seq(coll__$1));
};
cljs.core.PersistentQueue.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var rear__$1 = cljs.core.seq(self__.rear);
  if (cljs.core.truth_(function() {
    var or__3925__auto__ = self__.front;
    if (cljs.core.truth_(or__3925__auto__)) {
      return or__3925__auto__;
    } else {
      return rear__$1;
    }
  }())) {
    return new cljs.core.PersistentQueueSeq(null, self__.front, cljs.core.seq(rear__$1), null);
  } else {
    return null;
  }
};
cljs.core.PersistentQueue.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentQueue(meta__$1, self__.count, self__.front, self__.rear, self__.__hash);
};
cljs.core.PersistentQueue.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(self__.front)) {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, self__.front, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(function() {
      var or__3925__auto__ = self__.rear;
      if (cljs.core.truth_(or__3925__auto__)) {
        return or__3925__auto__;
      } else {
        return cljs.core.PersistentVector.EMPTY;
      }
    }(), o), null);
  } else {
    return new cljs.core.PersistentQueue(self__.meta, self__.count + 1, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(self__.front, o), cljs.core.PersistentVector.EMPTY, null);
  }
};
cljs.core.PersistentQueue.cljs$lang$type = true;
cljs.core.PersistentQueue.cljs$lang$ctorStr = "cljs.core/PersistentQueue";
cljs.core.PersistentQueue.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/PersistentQueue");
};
cljs.core.__GT_PersistentQueue = function __GT_PersistentQueue(meta, count, front, rear, __hash) {
  return new cljs.core.PersistentQueue(meta, count, front, rear, __hash);
};
cljs.core.PersistentQueue.EMPTY = new cljs.core.PersistentQueue(null, 0, null, cljs.core.PersistentVector.EMPTY, cljs.core.empty_ordered_hash);
cljs.core.PersistentQueue.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4903__auto__ = this;
  return cljs.core.es6_iterator(this__4903__auto__);
};
cljs.core.NeverEquiv = function() {
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2097152;
};
cljs.core.NeverEquiv.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(o, other) {
  var self__ = this;
  var o__$1 = this;
  return false;
};
cljs.core.NeverEquiv.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.NeverEquiv.cljs$lang$type = true;
cljs.core.NeverEquiv.cljs$lang$ctorStr = "cljs.core/NeverEquiv";
cljs.core.NeverEquiv.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/NeverEquiv");
};
cljs.core.__GT_NeverEquiv = function __GT_NeverEquiv() {
  return new cljs.core.NeverEquiv;
};
cljs.core.never_equiv = new cljs.core.NeverEquiv;
cljs.core.equiv_map = function equiv_map(x, y) {
  return cljs.core.boolean$(cljs.core.map_QMARK_(y) ? cljs.core.count(x) === cljs.core.count(y) ? cljs.core.every_QMARK_(cljs.core.identity, cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(xkv) {
    return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(y, cljs.core.first(xkv), cljs.core.never_equiv), cljs.core.second(xkv));
  }, x)) : null : null);
};
cljs.core.scan_array = function scan_array(incr, k, array) {
  var len = array.length;
  var i = 0;
  while (true) {
    if (i < len) {
      if (k === array[i]) {
        return i;
      } else {
        var G__13625 = i + incr;
        i = G__13625;
        continue;
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.obj_map_compare_keys = function obj_map_compare_keys(a, b) {
  var a__$1 = cljs.core.hash(a);
  var b__$1 = cljs.core.hash(b);
  if (a__$1 < b__$1) {
    return-1;
  } else {
    if (a__$1 > b__$1) {
      return 1;
    } else {
      return 0;
    }
  }
};
cljs.core.obj_map__GT_hash_map = function obj_map__GT_hash_map(m, k, v) {
  var ks = m.keys;
  var len = ks.length;
  var so = m.strobj;
  var mm = cljs.core.meta(m);
  var i = 0;
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var k__$1 = ks[i];
      var G__13626 = i + 1;
      var G__13627 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, k__$1, so[k__$1]);
      i = G__13626;
      out = G__13627;
      continue;
    } else {
      return cljs.core.with_meta(cljs.core.persistent_BANG_(cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, k, v)), mm);
    }
    break;
  }
};
cljs.core.obj_clone = function obj_clone(obj, ks) {
  var new_obj = function() {
    var obj13631 = {};
    return obj13631;
  }();
  var l = ks.length;
  var i_13632 = 0;
  while (true) {
    if (i_13632 < l) {
      var k_13633 = ks[i_13632];
      new_obj[k_13633] = obj[k_13633];
      var G__13634 = i_13632 + 1;
      i_13632 = G__13634;
      continue;
    } else {
    }
    break;
  }
  return new_obj;
};
cljs.core.ObjMap = function(meta, keys, strobj, update_count, __hash) {
  this.meta = meta;
  this.keys = keys;
  this.strobj = strobj;
  this.update_count = update_count;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 4;
};
cljs.core.ObjMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ObjMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.ObjMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(function() {
    var and__3913__auto__ = function() {
      var G__13638 = k;
      return goog.isString(G__13638);
    }();
    if (cljs.core.truth_(and__3913__auto__)) {
      return!(cljs.core.scan_array(1, k, self__.keys) == null);
    } else {
      return and__3913__auto__;
    }
  }())) {
    return self__.strobj[k];
  } else {
    return not_found;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.keys.length;
  var keys__$1 = self__.keys.sort(cljs.core.obj_map_compare_keys);
  var init__$1 = init;
  while (true) {
    if (cljs.core.seq(keys__$1)) {
      var k = cljs.core.first(keys__$1);
      var init__$2 = function() {
        var G__13639 = init__$1;
        var G__13640 = k;
        var G__13641 = self__.strobj[k];
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13639, G__13640, G__13641) : f.call(null, G__13639, G__13640, G__13641);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__13642 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__13642) : cljs.core.deref.call(null, G__13642);
      } else {
        var G__13648 = cljs.core.rest(keys__$1);
        var G__13649 = init__$2;
        keys__$1 = G__13648;
        init__$1 = G__13649;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ObjMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.keys.length;
};
cljs.core.ObjMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4346__auto__ = self__.__hash;
  if (!(h__4346__auto__ == null)) {
    return h__4346__auto__;
  } else {
    var h__4346__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4346__auto____$1;
    return h__4346__auto____$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.ObjMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.transient$(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY, coll__$1));
};
cljs.core.ObjMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.ObjMap.EMPTY, self__.meta);
};
cljs.core.ObjMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(function() {
    var and__3913__auto__ = function() {
      var G__13644 = k;
      return goog.isString(G__13644);
    }();
    if (cljs.core.truth_(and__3913__auto__)) {
      return!(cljs.core.scan_array(1, k, self__.keys) == null);
    } else {
      return and__3913__auto__;
    }
  }())) {
    var new_keys = cljs.core.aclone(self__.keys);
    var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
    new_keys.splice(cljs.core.scan_array(1, k, new_keys), 1);
    delete new_strobj[k];
    return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
  } else {
    return coll__$1;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(function() {
    var G__13645 = k;
    return goog.isString(G__13645);
  }())) {
    if (self__.update_count > cljs.core.ObjMap.HASHMAP_THRESHOLD || self__.keys.length >= cljs.core.ObjMap.HASHMAP_THRESHOLD) {
      return cljs.core.obj_map__GT_hash_map(coll__$1, k, v);
    } else {
      if (!(cljs.core.scan_array(1, k, self__.keys) == null)) {
        var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
        new_strobj[k] = v;
        return new cljs.core.ObjMap(self__.meta, self__.keys, new_strobj, self__.update_count + 1, null);
      } else {
        var new_strobj = cljs.core.obj_clone(self__.strobj, self__.keys);
        var new_keys = cljs.core.aclone(self__.keys);
        new_strobj[k] = v;
        new_keys.push(k);
        return new cljs.core.ObjMap(self__.meta, new_keys, new_strobj, self__.update_count + 1, null);
      }
    }
  } else {
    return cljs.core.obj_map__GT_hash_map(coll__$1, k, v);
  }
};
cljs.core.ObjMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.truth_(function() {
    var and__3913__auto__ = function() {
      var G__13647 = k;
      return goog.isString(G__13647);
    }();
    if (cljs.core.truth_(and__3913__auto__)) {
      return!(cljs.core.scan_array(1, k, self__.keys) == null);
    } else {
      return and__3913__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.core.ObjMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.keys.length > 0) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(coll__$1) {
      return function(p1__13635_SHARP_) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__13635_SHARP_, self__.strobj[p1__13635_SHARP_]], null);
      };
    }(coll__$1), self__.keys.sort(cljs.core.obj_map_compare_keys));
  } else {
    return null;
  }
};
cljs.core.ObjMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ObjMap(meta__$1, self__.keys, self__.strobj, self__.update_count, self__.__hash);
};
cljs.core.ObjMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, coll__$1, entry);
  }
};
cljs.core.ObjMap.prototype.call = function() {
  var G__13650 = null;
  var G__13650__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__13650__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__13650 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__13650__2.call(this, self__, k);
      case 3:
        return G__13650__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__13650.cljs$core$IFn$_invoke$arity$2 = G__13650__2;
  G__13650.cljs$core$IFn$_invoke$arity$3 = G__13650__3;
  return G__13650;
}();
cljs.core.ObjMap.prototype.apply = function(self__, args13636) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args13636)));
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.ObjMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.ObjMap.cljs$lang$type = true;
cljs.core.ObjMap.cljs$lang$ctorStr = "cljs.core/ObjMap";
cljs.core.ObjMap.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/ObjMap");
};
cljs.core.__GT_ObjMap = function __GT_ObjMap(meta, keys, strobj, update_count, __hash) {
  return new cljs.core.ObjMap(meta, keys, strobj, update_count, __hash);
};
cljs.core.ObjMap.EMPTY = new cljs.core.ObjMap(null, [], function() {
  var obj13652 = {};
  return obj13652;
}(), 0, cljs.core.empty_unordered_hash);
cljs.core.ObjMap.HASHMAP_THRESHOLD = 8;
cljs.core.ObjMap.fromObject = function(ks, obj) {
  return new cljs.core.ObjMap(null, ks, obj, 0, null);
};
cljs.core.ES6EntriesIterator = function(s) {
  this.s = s;
};
cljs.core.ES6EntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var vec__13653 = cljs.core.first(self__.s);
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13653, 0, null);
    var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13653, 1, null);
    self__.s = cljs.core.next(self__.s);
    return{"done":false, "value":[k, v]};
  } else {
    return{"done":true, "value":null};
  }
};
cljs.core.ES6EntriesIterator.cljs$lang$type = true;
cljs.core.ES6EntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6EntriesIterator";
cljs.core.ES6EntriesIterator.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/ES6EntriesIterator");
};
cljs.core.__GT_ES6EntriesIterator = function __GT_ES6EntriesIterator(s) {
  return new cljs.core.ES6EntriesIterator(s);
};
cljs.core.es6_entries_iterator = function es6_entries_iterator(coll) {
  return new cljs.core.ES6EntriesIterator(cljs.core.seq(coll));
};
cljs.core.ES6SetEntriesIterator = function(s) {
  this.s = s;
};
cljs.core.ES6SetEntriesIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  if (!(self__.s == null)) {
    var x = cljs.core.first(self__.s);
    self__.s = cljs.core.next(self__.s);
    return{"done":false, "value":[x, x]};
  } else {
    return{"done":true, "value":null};
  }
};
cljs.core.ES6SetEntriesIterator.cljs$lang$type = true;
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorStr = "cljs.core/ES6SetEntriesIterator";
cljs.core.ES6SetEntriesIterator.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/ES6SetEntriesIterator");
};
cljs.core.__GT_ES6SetEntriesIterator = function __GT_ES6SetEntriesIterator(s) {
  return new cljs.core.ES6SetEntriesIterator(s);
};
cljs.core.es6_set_entries_iterator = function es6_set_entries_iterator(coll) {
  return new cljs.core.ES6SetEntriesIterator(cljs.core.seq(coll));
};
cljs.core.array_map_index_of_nil_QMARK_ = function array_map_index_of_nil_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (arr[i] == null) {
        return i;
      } else {
        var G__13654 = i + 2;
        i = G__13654;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_keyword_QMARK_ = function array_map_index_of_keyword_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.fqn;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Keyword && kstr === k_SINGLEQUOTE_.fqn;
      }()) {
        return i;
      } else {
        var G__13655 = i + 2;
        i = G__13655;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_symbol_QMARK_ = function array_map_index_of_symbol_QMARK_(arr, m, k) {
  var len = arr.length;
  var kstr = k.str;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (function() {
        var k_SINGLEQUOTE_ = arr[i];
        return k_SINGLEQUOTE_ instanceof cljs.core.Symbol && kstr === k_SINGLEQUOTE_.str;
      }()) {
        return i;
      } else {
        var G__13656 = i + 2;
        i = G__13656;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_identical_QMARK_ = function array_map_index_of_identical_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (k === arr[i]) {
        return i;
      } else {
        var G__13657 = i + 2;
        i = G__13657;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of_equiv_QMARK_ = function array_map_index_of_equiv_QMARK_(arr, m, k) {
  var len = arr.length;
  var i = 0;
  while (true) {
    if (len <= i) {
      return-1;
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, arr[i])) {
        return i;
      } else {
        var G__13658 = i + 2;
        i = G__13658;
        continue;
      }
    }
    break;
  }
};
cljs.core.array_map_index_of = function array_map_index_of(m, k) {
  var arr = m.arr;
  if (k instanceof cljs.core.Keyword) {
    return cljs.core.array_map_index_of_keyword_QMARK_(arr, m, k);
  } else {
    if (cljs.core.truth_(function() {
      var or__3925__auto__ = function() {
        var G__13662 = k;
        return goog.isString(G__13662);
      }();
      if (cljs.core.truth_(or__3925__auto__)) {
        return or__3925__auto__;
      } else {
        return typeof k === "number";
      }
    }())) {
      return cljs.core.array_map_index_of_identical_QMARK_(arr, m, k);
    } else {
      if (k instanceof cljs.core.Symbol) {
        return cljs.core.array_map_index_of_symbol_QMARK_(arr, m, k);
      } else {
        if (k == null) {
          return cljs.core.array_map_index_of_nil_QMARK_(arr, m, k);
        } else {
          return cljs.core.array_map_index_of_equiv_QMARK_(arr, m, k);
        }
      }
    }
  }
};
cljs.core.array_map_extend_kv = function array_map_extend_kv(m, k, v) {
  var arr = m.arr;
  var l = arr.length;
  var narr = new Array(l + 2);
  var i_13663 = 0;
  while (true) {
    if (i_13663 < l) {
      narr[i_13663] = arr[i_13663];
      var G__13664 = i_13663 + 1;
      i_13663 = G__13664;
      continue;
    } else {
    }
    break;
  }
  narr[l] = k;
  narr[l + 1] = v;
  return narr;
};
cljs.core.PersistentArrayMapSeq = function(arr, i, _meta) {
  this.arr = arr;
  this.i = i;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374990;
};
cljs.core.PersistentArrayMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentArrayMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return(self__.arr.length - self__.i) / 2;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.i < self__.arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i + 2, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMapSeq(self__.arr, self__.i, new_meta);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentArrayMapSeq.cljs$lang$type = true;
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapSeq";
cljs.core.PersistentArrayMapSeq.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/PersistentArrayMapSeq");
};
cljs.core.__GT_PersistentArrayMapSeq = function __GT_PersistentArrayMapSeq(arr, i, _meta) {
  return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
};
cljs.core.PersistentArrayMapSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4903__auto__ = this;
  return cljs.core.es6_iterator(this__4903__auto__);
};
cljs.core.persistent_array_map_seq = function persistent_array_map_seq(arr, i, _meta) {
  if (i <= arr.length - 2) {
    return new cljs.core.PersistentArrayMapSeq(arr, i, _meta);
  } else {
    return null;
  }
};
cljs.core.PersistentArrayMapIterator = function(arr, i, cnt) {
  this.arr = arr;
  this.i = i;
  this.cnt = cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  return self__.i < self__.cnt;
};
cljs.core.PersistentArrayMapIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[self__.i], self__.arr[self__.i + 1]], null);
  self__.i = self__.i + 2;
  return ret;
};
cljs.core.PersistentArrayMapIterator.cljs$lang$type = true;
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorStr = "cljs.core/PersistentArrayMapIterator";
cljs.core.PersistentArrayMapIterator.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/PersistentArrayMapIterator");
};
cljs.core.__GT_PersistentArrayMapIterator = function __GT_PersistentArrayMapIterator(arr, i, cnt) {
  return new cljs.core.PersistentArrayMapIterator(arr, i, cnt);
};
cljs.core.PersistentArrayMap = function(meta, cnt, arr, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.arr = arr;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16647951;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentArrayMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentArrayMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentArrayMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__13666 = coll;
    return cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__13666) : cljs.core.keys.call(null, G__13666);
  }());
};
cljs.core.PersistentArrayMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentArrayMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__13667 = coll;
    return cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__13667) : cljs.core.vals.call(null, G__13667);
  }());
};
cljs.core.PersistentArrayMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentArrayMap.prototype.get = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentArrayMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__13668 = cljs.core.seq(coll);
  var chunk__13669 = null;
  var count__13670 = 0;
  var i__13671 = 0;
  while (true) {
    if (i__13671 < count__13670) {
      var vec__13672 = chunk__13669.cljs$core$IIndexed$_nth$arity$2(null, i__13671);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13672, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13672, 1, null);
      var G__13673_13686 = v;
      var G__13674_13687 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13673_13686, G__13674_13687) : f.call(null, G__13673_13686, G__13674_13687);
      var G__13688 = seq__13668;
      var G__13689 = chunk__13669;
      var G__13690 = count__13670;
      var G__13691 = i__13671 + 1;
      seq__13668 = G__13688;
      chunk__13669 = G__13689;
      count__13670 = G__13690;
      i__13671 = G__13691;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__13668);
      if (temp__4126__auto__) {
        var seq__13668__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__13668__$1)) {
          var c__4712__auto__ = cljs.core.chunk_first(seq__13668__$1);
          var G__13692 = cljs.core.chunk_rest(seq__13668__$1);
          var G__13693 = c__4712__auto__;
          var G__13694 = cljs.core.count(c__4712__auto__);
          var G__13695 = 0;
          seq__13668 = G__13692;
          chunk__13669 = G__13693;
          count__13670 = G__13694;
          i__13671 = G__13695;
          continue;
        } else {
          var vec__13675 = cljs.core.first(seq__13668__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13675, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13675, 1, null);
          var G__13676_13696 = v;
          var G__13677_13697 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13676_13696, G__13677_13697) : f.call(null, G__13676_13696, G__13677_13697);
          var G__13698 = cljs.core.next(seq__13668__$1);
          var G__13699 = null;
          var G__13700 = 0;
          var G__13701 = 0;
          seq__13668 = G__13698;
          chunk__13669 = G__13699;
          count__13670 = G__13700;
          i__13671 = G__13701;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx === -1) {
    return not_found;
  } else {
    return self__.arr[idx + 1];
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var G__13678 = init__$1;
        var G__13679 = self__.arr[i];
        var G__13680 = self__.arr[i + 1];
        return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13678, G__13679, G__13680) : f.call(null, G__13678, G__13679, G__13680);
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__13681 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__13681) : cljs.core.deref.call(null, G__13681);
      } else {
        var G__13702 = i + 2;
        var G__13703 = init__$2;
        i = G__13702;
        init__$1 = G__13703;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IIterable$_iterator$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return new cljs.core.PersistentArrayMapIterator(self__.arr, 0, self__.cnt * 2);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4346__auto__ = self__.__hash;
  if (!(h__4346__auto__ == null)) {
    return h__4346__auto__;
  } else {
    var h__4346__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4346__auto____$1;
    return h__4346__auto____$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  if (function() {
    var G__13682 = other;
    if (G__13682) {
      var bit__4599__auto__ = G__13682.cljs$lang$protocol_mask$partition0$ & 1024;
      if (bit__4599__auto__ || G__13682.cljs$core$IMap$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    var alen = self__.arr.length;
    var other__$1 = other;
    if (self__.cnt === other__$1.cljs$core$ICounted$_count$arity$1(null)) {
      var i = 0;
      while (true) {
        if (i < alen) {
          var v = other__$1.cljs$core$ILookup$_lookup$arity$3(null, self__.arr[i], cljs.core.lookup_sentinel);
          if (!(v === cljs.core.lookup_sentinel)) {
            if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.arr[i + 1], v)) {
              var G__13704 = i + 2;
              i = G__13704;
              continue;
            } else {
              return false;
            }
          } else {
            return false;
          }
        } else {
          return true;
        }
        break;
      }
    } else {
      return false;
    }
  } else {
    return cljs.core.equiv_map(coll__$1, other);
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientArrayMap(function() {
    var obj13684 = {};
    return obj13684;
  }(), self__.arr.length, cljs.core.aclone(self__.arr));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentArrayMap.EMPTY, self__.meta);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx >= 0) {
    var len = self__.arr.length;
    var new_len = len - 2;
    if (new_len === 0) {
      return cljs.core._empty(coll__$1);
    } else {
      var new_arr = new Array(new_len);
      var s = 0;
      var d = 0;
      while (true) {
        if (s >= len) {
          return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt - 1, new_arr, null);
        } else {
          if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(k, self__.arr[s])) {
            var G__13705 = s + 2;
            var G__13706 = d;
            s = G__13705;
            d = G__13706;
            continue;
          } else {
            new_arr[d] = self__.arr[s];
            new_arr[d + 1] = self__.arr[s + 1];
            var G__13707 = s + 2;
            var G__13708 = d + 2;
            s = G__13707;
            d = G__13708;
            continue;
          }
        }
        break;
      }
    }
  } else {
    return coll__$1;
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var idx = cljs.core.array_map_index_of(coll__$1, k);
  if (idx === -1) {
    if (self__.cnt < cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
      var arr__$1 = cljs.core.array_map_extend_kv(coll__$1, k, v);
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt + 1, arr__$1, null);
    } else {
      return cljs.core._with_meta(cljs.core._assoc(cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentHashMap.EMPTY, coll__$1), k, v), self__.meta);
    }
  } else {
    if (v === self__.arr[idx + 1]) {
      return coll__$1;
    } else {
      var arr__$1 = function() {
        var G__13685 = cljs.core.aclone(self__.arr);
        G__13685[idx + 1] = v;
        return G__13685;
      }();
      return new cljs.core.PersistentArrayMap(self__.meta, self__.cnt, arr__$1, null);
    }
  }
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return!(cljs.core.array_map_index_of(coll__$1, k) === -1);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.persistent_array_map_seq(self__.arr, 0, null);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentArrayMap(meta__$1, self__.cnt, self__.arr, self__.__hash);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__13709 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__13710 = cljs.core.next(es);
          ret = G__13709;
          es = G__13710;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentArrayMap.prototype.call = function() {
  var G__13711 = null;
  var G__13711__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__13711__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__13711 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__13711__2.call(this, self__, k);
      case 3:
        return G__13711__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__13711.cljs$core$IFn$_invoke$arity$2 = G__13711__2;
  G__13711.cljs$core$IFn$_invoke$arity$3 = G__13711__3;
  return G__13711;
}();
cljs.core.PersistentArrayMap.prototype.apply = function(self__, args13665) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args13665)));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentArrayMap.cljs$lang$type = true;
cljs.core.PersistentArrayMap.cljs$lang$ctorStr = "cljs.core/PersistentArrayMap";
cljs.core.PersistentArrayMap.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/PersistentArrayMap");
};
cljs.core.__GT_PersistentArrayMap = function __GT_PersistentArrayMap(meta, cnt, arr, __hash) {
  return new cljs.core.PersistentArrayMap(meta, cnt, arr, __hash);
};
cljs.core.PersistentArrayMap.EMPTY = new cljs.core.PersistentArrayMap(null, 0, [], cljs.core.empty_unordered_hash);
cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD = 8;
cljs.core.PersistentArrayMap.fromArray = function(arr, no_clone, no_check) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone(arr);
  if (no_check) {
    var cnt = arr__$1.length / 2;
    return new cljs.core.PersistentArrayMap(null, cnt, arr__$1, null);
  } else {
    var len = arr__$1.length;
    var i = 0;
    var ret = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__13712 = i + 2;
        var G__13713 = cljs.core._assoc_BANG_(ret, arr__$1[i], arr__$1[i + 1]);
        i = G__13712;
        ret = G__13713;
        continue;
      } else {
        return cljs.core._persistent_BANG_(ret);
      }
      break;
    }
  }
};
cljs.core.PersistentArrayMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4903__auto__ = this;
  return cljs.core.es6_iterator(this__4903__auto__);
};
cljs.core.TransientArrayMap = function(editable_QMARK_, len, arr) {
  this.editable_QMARK_ = editable_QMARK_;
  this.len = len;
  this.arr = arr;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258;
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, key);
    if (idx >= 0) {
      self__.arr[idx] = self__.arr[self__.len - 2];
      self__.arr[idx + 1] = self__.arr[self__.len - 1];
      var G__13714_13722 = self__.arr;
      G__13714_13722.pop();
      G__13714_13722.pop();
      self__.len = self__.len - 2;
    } else {
    }
    return tcoll__$1;
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, key);
    if (idx === -1) {
      if (self__.len + 2 <= 2 * cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
        self__.len = self__.len + 2;
        self__.arr.push(key);
        self__.arr.push(val);
        return tcoll__$1;
      } else {
        return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(function() {
          var G__13715 = self__.len;
          var G__13716 = self__.arr;
          return cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2 ? cljs.core.array__GT_transient_hash_map.cljs$core$IFn$_invoke$arity$2(G__13715, G__13716) : cljs.core.array__GT_transient_hash_map.call(null, G__13715, G__13716);
        }(), key, val);
      }
    } else {
      if (val === self__.arr[idx + 1]) {
        return tcoll__$1;
      } else {
        self__.arr[idx + 1] = val;
        return tcoll__$1;
      }
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    if (function() {
      var G__13717 = o;
      if (G__13717) {
        var bit__4606__auto__ = G__13717.cljs$lang$protocol_mask$partition0$ & 2048;
        if (bit__4606__auto__ || G__13717.cljs$core$IMapEntry$) {
          return true;
        } else {
          if (!G__13717.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, G__13717);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, G__13717);
      }
    }()) {
      return cljs.core._assoc_BANG_(tcoll__$1, function() {
        var G__13718 = o;
        return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__13718) : cljs.core.key.call(null, G__13718);
      }(), function() {
        var G__13719 = o;
        return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__13719) : cljs.core.val.call(null, G__13719);
      }());
    } else {
      var es = cljs.core.seq(o);
      var tcoll__$2 = tcoll__$1;
      while (true) {
        var temp__4124__auto__ = cljs.core.first(es);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          var G__13723 = cljs.core.next(es);
          var G__13724 = cljs.core._assoc_BANG_(tcoll__$2, function() {
            var G__13720 = e;
            return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__13720) : cljs.core.key.call(null, G__13720);
          }(), function() {
            var G__13721 = e;
            return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__13721) : cljs.core.val.call(null, G__13721);
          }());
          es = G__13723;
          tcoll__$2 = G__13724;
          continue;
        } else {
          return tcoll__$2;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    self__.editable_QMARK_ = false;
    return new cljs.core.PersistentArrayMap(null, cljs.core.quot(self__.len, 2), self__.arr, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1, k, null);
};
cljs.core.TransientArrayMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    var idx = cljs.core.array_map_index_of(tcoll__$1, k);
    if (idx === -1) {
      return not_found;
    } else {
      return self__.arr[idx + 1];
    }
  } else {
    throw new Error("lookup after persistent!");
  }
};
cljs.core.TransientArrayMap.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core.truth_(self__.editable_QMARK_)) {
    return cljs.core.quot(self__.len, 2);
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientArrayMap.cljs$lang$type = true;
cljs.core.TransientArrayMap.cljs$lang$ctorStr = "cljs.core/TransientArrayMap";
cljs.core.TransientArrayMap.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/TransientArrayMap");
};
cljs.core.__GT_TransientArrayMap = function __GT_TransientArrayMap(editable_QMARK_, len, arr) {
  return new cljs.core.TransientArrayMap(editable_QMARK_, len, arr);
};
cljs.core.array__GT_transient_hash_map = function array__GT_transient_hash_map(len, arr) {
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  var i = 0;
  while (true) {
    if (i < len) {
      var G__13725 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, arr[i], arr[i + 1]);
      var G__13726 = i + 2;
      out = G__13725;
      i = G__13726;
      continue;
    } else {
      return out;
    }
    break;
  }
};
cljs.core.Box = function(val) {
  this.val = val;
};
cljs.core.Box.cljs$lang$type = true;
cljs.core.Box.cljs$lang$ctorStr = "cljs.core/Box";
cljs.core.Box.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/Box");
};
cljs.core.__GT_Box = function __GT_Box(val) {
  return new cljs.core.Box(val);
};
cljs.core.key_test = function key_test(key, other) {
  if (key === other) {
    return true;
  } else {
    if (cljs.core.keyword_identical_QMARK_(key, other)) {
      return true;
    } else {
      return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(key, other);
    }
  }
};
cljs.core.mask = function mask(hash, shift) {
  return hash >>> shift & 31;
};
cljs.core.clone_and_set = function() {
  var clone_and_set = null;
  var clone_and_set__3 = function(arr, i, a) {
    var G__13729 = cljs.core.aclone(arr);
    G__13729[i] = a;
    return G__13729;
  };
  var clone_and_set__5 = function(arr, i, a, j, b) {
    var G__13730 = cljs.core.aclone(arr);
    G__13730[i] = a;
    G__13730[j] = b;
    return G__13730;
  };
  clone_and_set = function(arr, i, a, j, b) {
    switch(arguments.length) {
      case 3:
        return clone_and_set__3.call(this, arr, i, a);
      case 5:
        return clone_and_set__5.call(this, arr, i, a, j, b);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  clone_and_set.cljs$core$IFn$_invoke$arity$3 = clone_and_set__3;
  clone_and_set.cljs$core$IFn$_invoke$arity$5 = clone_and_set__5;
  return clone_and_set;
}();
cljs.core.remove_pair = function remove_pair(arr, i) {
  var new_arr = new Array(arr.length - 2);
  cljs.core.array_copy(arr, 0, new_arr, 0, 2 * i);
  cljs.core.array_copy(arr, 2 * (i + 1), new_arr, 2 * i, new_arr.length - 2 * i);
  return new_arr;
};
cljs.core.bitmap_indexed_node_index = function bitmap_indexed_node_index(bitmap, bit) {
  return cljs.core.bit_count(bitmap & bit - 1);
};
cljs.core.bitpos = function bitpos(hash, shift) {
  return 1 << (hash >>> shift & 31);
};
cljs.core.edit_and_set = function() {
  var edit_and_set = null;
  var edit_and_set__4 = function(inode, edit, i, a) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    return editable;
  };
  var edit_and_set__6 = function(inode, edit, i, a, j, b) {
    var editable = inode.ensure_editable(edit);
    editable.arr[i] = a;
    editable.arr[j] = b;
    return editable;
  };
  edit_and_set = function(inode, edit, i, a, j, b) {
    switch(arguments.length) {
      case 4:
        return edit_and_set__4.call(this, inode, edit, i, a);
      case 6:
        return edit_and_set__6.call(this, inode, edit, i, a, j, b);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  edit_and_set.cljs$core$IFn$_invoke$arity$4 = edit_and_set__4;
  edit_and_set.cljs$core$IFn$_invoke$arity$6 = edit_and_set__6;
  return edit_and_set;
}();
cljs.core.inode_kv_reduce = function inode_kv_reduce(arr, f, init) {
  var len = arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var init__$2 = function() {
        var k = arr[i];
        if (!(k == null)) {
          var G__13735 = init__$1;
          var G__13736 = k;
          var G__13737 = arr[i + 1];
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13735, G__13736, G__13737) : f.call(null, G__13735, G__13736, G__13737);
        } else {
          var node = arr[i + 1];
          if (!(node == null)) {
            return node.kv_reduce(f, init__$1);
          } else {
            return init__$1;
          }
        }
      }();
      if (cljs.core.reduced_QMARK_(init__$2)) {
        var G__13738 = init__$2;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__13738) : cljs.core.deref.call(null, G__13738);
      } else {
        var G__13739 = i + 2;
        var G__13740 = init__$2;
        i = G__13739;
        init__$1 = G__13740;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.BitmapIndexedNode = function(edit, bitmap, arr) {
  this.edit = edit;
  this.bitmap = bitmap;
  this.arr = arr;
};
cljs.core.BitmapIndexedNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var n = cljs.core.bit_count(self__.bitmap);
    var new_arr = new Array(n < 0 ? 4 : 2 * (n + 1));
    cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * n);
    return new cljs.core.BitmapIndexedNode(e, self__.bitmap, new_arr);
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, n);
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return inode.edit_and_remove_pair(edit__$1, bit, idx);
          }
        }
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        removed_leaf_QMARK_[0] = true;
        return inode.edit_and_remove_pair(edit__$1, bit, idx);
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.edit_and_remove_pair = function(e, bit, i) {
  var self__ = this;
  var inode = this;
  if (self__.bitmap === bit) {
    return null;
  } else {
    var editable = inode.ensure_editable(e);
    var earr = editable.arr;
    var len = earr.length;
    editable.bitmap = bit ^ editable.bitmap;
    cljs.core.array_copy(earr, 2 * (i + 1), earr, 2 * i, len - 2 * (i + 1));
    earr[len - 2] = null;
    earr[len - 1] = null;
    return editable;
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  var G__13741 = self__.arr;
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__13741) : cljs.core.create_inode_seq.call(null, G__13741);
};
cljs.core.BitmapIndexedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce(self__.arr, f, init);
};
cljs.core.BitmapIndexedNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_lookup(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return val_or_node;
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count(self__.bitmap);
    if (2 * n < self__.arr.length) {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      added_leaf_QMARK_.val = true;
      cljs.core.array_copy_downward(earr, 2 * idx, earr, 2 * (idx + 1), 2 * (n - idx));
      earr[2 * idx] = key;
      earr[2 * idx + 1] = val;
      editable.bitmap = editable.bitmap | bit;
      return editable;
    } else {
      if (n >= 16) {
        var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
        var jdx = hash >>> shift & 31;
        nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
        var i_13755 = 0;
        var j_13756 = 0;
        while (true) {
          if (i_13755 < 32) {
            if ((self__.bitmap >>> i_13755 & 1) === 0) {
              var G__13757 = i_13755 + 1;
              var G__13758 = j_13756;
              i_13755 = G__13757;
              j_13756 = G__13758;
              continue;
            } else {
              nodes[i_13755] = !(self__.arr[j_13756] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, cljs.core.hash(self__.arr[j_13756]), self__.arr[j_13756], self__.arr[j_13756 + 1], added_leaf_QMARK_) : self__.arr[j_13756 + 1];
              var G__13759 = i_13755 + 1;
              var G__13760 = j_13756 + 2;
              i_13755 = G__13759;
              j_13756 = G__13760;
              continue;
            }
          } else {
          }
          break;
        }
        return new cljs.core.ArrayNode(edit__$1, n + 1, nodes);
      } else {
        var new_arr = new Array(2 * (n + 4));
        cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * idx);
        new_arr[2 * idx] = key;
        new_arr[2 * idx + 1] = val;
        cljs.core.array_copy(self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
        added_leaf_QMARK_.val = true;
        var editable = inode.ensure_editable(edit__$1);
        editable.arr = new_arr;
        editable.bitmap = editable.bitmap | bit;
        return editable;
      }
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, n);
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, 2 * idx + 1, val);
        }
      } else {
        added_leaf_QMARK_.val = true;
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode, edit__$1, 2 * idx, null, 2 * idx + 1, function() {
          var G__13742 = edit__$1;
          var G__13743 = shift + 5;
          var G__13744 = key_or_nil;
          var G__13745 = val_or_node;
          var G__13746 = hash;
          var G__13747 = key;
          var G__13748 = val;
          return cljs.core.create_node.cljs$core$IFn$_invoke$arity$7 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$7(G__13742, G__13743, G__13744, G__13745, G__13746, G__13747, G__13748) : cljs.core.create_node.call(null, G__13742, G__13743, G__13744, G__13745, G__13746, G__13747, G__13748);
        }());
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
  if ((self__.bitmap & bit) === 0) {
    var n = cljs.core.bit_count(self__.bitmap);
    if (n >= 16) {
      var nodes = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
      var jdx = hash >>> shift & 31;
      nodes[jdx] = cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      var i_13761 = 0;
      var j_13762 = 0;
      while (true) {
        if (i_13761 < 32) {
          if ((self__.bitmap >>> i_13761 & 1) === 0) {
            var G__13763 = i_13761 + 1;
            var G__13764 = j_13762;
            i_13761 = G__13763;
            j_13762 = G__13764;
            continue;
          } else {
            nodes[i_13761] = !(self__.arr[j_13762] == null) ? cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, cljs.core.hash(self__.arr[j_13762]), self__.arr[j_13762], self__.arr[j_13762 + 1], added_leaf_QMARK_) : self__.arr[j_13762 + 1];
            var G__13765 = i_13761 + 1;
            var G__13766 = j_13762 + 2;
            i_13761 = G__13765;
            j_13762 = G__13766;
            continue;
          }
        } else {
        }
        break;
      }
      return new cljs.core.ArrayNode(null, n + 1, nodes);
    } else {
      var new_arr = new Array(2 * (n + 1));
      cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * idx);
      new_arr[2 * idx] = key;
      new_arr[2 * idx + 1] = val;
      cljs.core.array_copy(self__.arr, 2 * idx, new_arr, 2 * (idx + 1), 2 * (n - idx));
      added_leaf_QMARK_.val = true;
      return new cljs.core.BitmapIndexedNode(null, self__.bitmap | bit, new_arr);
    }
  } else {
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
      if (n === val_or_node) {
        return inode;
      } else {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, n));
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        if (val === val_or_node) {
          return inode;
        } else {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, val));
        }
      } else {
        added_leaf_QMARK_.val = true;
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$5(self__.arr, 2 * idx, null, 2 * idx + 1, function() {
          var G__13749 = shift + 5;
          var G__13750 = key_or_nil;
          var G__13751 = val_or_node;
          var G__13752 = hash;
          var G__13753 = key;
          var G__13754 = val;
          return cljs.core.create_node.cljs$core$IFn$_invoke$arity$6 ? cljs.core.create_node.cljs$core$IFn$_invoke$arity$6(G__13749, G__13750, G__13751, G__13752, G__13753, G__13754) : cljs.core.create_node.call(null, G__13749, G__13750, G__13751, G__13752, G__13753, G__13754);
        }()));
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return not_found;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      return val_or_node.inode_find(shift + 5, hash, key, not_found);
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [key_or_nil, val_or_node], null);
      } else {
        return not_found;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var bit = 1 << (hash >>> shift & 31);
  if ((self__.bitmap & bit) === 0) {
    return inode;
  } else {
    var idx = cljs.core.bitmap_indexed_node_index(self__.bitmap, bit);
    var key_or_nil = self__.arr[2 * idx];
    var val_or_node = self__.arr[2 * idx + 1];
    if (key_or_nil == null) {
      var n = val_or_node.inode_without(shift + 5, hash, key);
      if (n === val_or_node) {
        return inode;
      } else {
        if (!(n == null)) {
          return new cljs.core.BitmapIndexedNode(null, self__.bitmap, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, 2 * idx + 1, n));
        } else {
          if (self__.bitmap === bit) {
            return null;
          } else {
            return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair(self__.arr, idx));
          }
        }
      }
    } else {
      if (cljs.core.key_test(key, key_or_nil)) {
        return new cljs.core.BitmapIndexedNode(null, self__.bitmap ^ bit, cljs.core.remove_pair(self__.arr, idx));
      } else {
        return inode;
      }
    }
  }
};
cljs.core.BitmapIndexedNode.cljs$lang$type = true;
cljs.core.BitmapIndexedNode.cljs$lang$ctorStr = "cljs.core/BitmapIndexedNode";
cljs.core.BitmapIndexedNode.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/BitmapIndexedNode");
};
cljs.core.__GT_BitmapIndexedNode = function __GT_BitmapIndexedNode(edit, bitmap, arr) {
  return new cljs.core.BitmapIndexedNode(edit, bitmap, arr);
};
cljs.core.BitmapIndexedNode.EMPTY = new cljs.core.BitmapIndexedNode(null, 0, []);
cljs.core.pack_array_node = function pack_array_node(array_node, edit, idx) {
  var arr = array_node.arr;
  var len = arr.length;
  var new_arr = new Array(2 * (array_node.cnt - 1));
  var i = 0;
  var j = 1;
  var bitmap = 0;
  while (true) {
    if (i < len) {
      if (!(i === idx) && !(arr[i] == null)) {
        new_arr[j] = arr[i];
        var G__13767 = i + 1;
        var G__13768 = j + 2;
        var G__13769 = bitmap | 1 << i;
        i = G__13767;
        j = G__13768;
        bitmap = G__13769;
        continue;
      } else {
        var G__13770 = i + 1;
        var G__13771 = j;
        var G__13772 = bitmap;
        i = G__13770;
        j = G__13771;
        bitmap = G__13772;
        continue;
      }
    } else {
      return new cljs.core.BitmapIndexedNode(edit, bitmap, new_arr);
    }
    break;
  }
};
cljs.core.ArrayNode = function(edit, cnt, arr) {
  this.edit = edit;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.ArrayNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    return new cljs.core.ArrayNode(e, self__.cnt, cljs.core.aclone(self__.arr));
  }
};
cljs.core.ArrayNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return inode;
  } else {
    var n = node.inode_without_BANG_(edit__$1, shift + 5, hash, key, removed_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node(inode, edit__$1, idx);
        } else {
          var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
          editable.cnt = editable.cnt - 1;
          return editable;
        }
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
      }
    }
  }
};
cljs.core.ArrayNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  var G__13773 = self__.arr;
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$1(G__13773) : cljs.core.create_array_node_seq.call(null, G__13773);
};
cljs.core.ArrayNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  var len = self__.arr.length;
  var i = 0;
  var init__$1 = init;
  while (true) {
    if (i < len) {
      var node = self__.arr[i];
      if (!(node == null)) {
        var init__$2 = node.kv_reduce(f, init__$1);
        if (cljs.core.reduced_QMARK_(init__$2)) {
          var G__13774 = init__$2;
          return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__13774) : cljs.core.deref.call(null, G__13774);
        } else {
          var G__13775 = i + 1;
          var G__13776 = init__$2;
          i = G__13775;
          init__$1 = G__13776;
          continue;
        }
      } else {
        var G__13777 = i + 1;
        var G__13778 = init__$1;
        i = G__13777;
        init__$1 = G__13778;
        continue;
      }
    } else {
      return init__$1;
    }
    break;
  }
};
cljs.core.ArrayNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_lookup(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_));
    editable.cnt = editable.cnt + 1;
    return editable;
  } else {
    var n = node.inode_assoc_BANG_(edit__$1, shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx, n);
    }
  }
};
cljs.core.ArrayNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (node == null) {
    return new cljs.core.ArrayNode(null, self__.cnt + 1, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_)));
  } else {
    var n = node.inode_assoc(shift + 5, hash, key, val, added_leaf_QMARK_);
    if (n === node) {
      return inode;
    } else {
      return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
    }
  }
};
cljs.core.ArrayNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    return node.inode_find(shift + 5, hash, key, not_found);
  } else {
    return not_found;
  }
};
cljs.core.ArrayNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = hash >>> shift & 31;
  var node = self__.arr[idx];
  if (!(node == null)) {
    var n = node.inode_without(shift + 5, hash, key);
    if (n === node) {
      return inode;
    } else {
      if (n == null) {
        if (self__.cnt <= 8) {
          return cljs.core.pack_array_node(inode, null, idx);
        } else {
          return new cljs.core.ArrayNode(null, self__.cnt - 1, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
        }
      } else {
        return new cljs.core.ArrayNode(null, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx, n));
      }
    }
  } else {
    return inode;
  }
};
cljs.core.ArrayNode.cljs$lang$type = true;
cljs.core.ArrayNode.cljs$lang$ctorStr = "cljs.core/ArrayNode";
cljs.core.ArrayNode.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/ArrayNode");
};
cljs.core.__GT_ArrayNode = function __GT_ArrayNode(edit, cnt, arr) {
  return new cljs.core.ArrayNode(edit, cnt, arr);
};
cljs.core.hash_collision_node_find_index = function hash_collision_node_find_index(arr, cnt, key) {
  var lim = 2 * cnt;
  var i = 0;
  while (true) {
    if (i < lim) {
      if (cljs.core.key_test(key, arr[i])) {
        return i;
      } else {
        var G__13779 = i + 2;
        i = G__13779;
        continue;
      }
    } else {
      return-1;
    }
    break;
  }
};
cljs.core.HashCollisionNode = function(edit, collision_hash, cnt, arr) {
  this.edit = edit;
  this.collision_hash = collision_hash;
  this.cnt = cnt;
  this.arr = arr;
};
cljs.core.HashCollisionNode.prototype.ensure_editable = function(e) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    return inode;
  } else {
    var new_arr = new Array(2 * (self__.cnt + 1));
    cljs.core.array_copy(self__.arr, 0, new_arr, 0, 2 * self__.cnt);
    return new cljs.core.HashCollisionNode(e, self__.collision_hash, self__.cnt, new_arr);
  }
};
cljs.core.HashCollisionNode.prototype.inode_without_BANG_ = function(edit__$1, shift, hash, key, removed_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    removed_leaf_QMARK_[0] = true;
    if (self__.cnt === 1) {
      return null;
    } else {
      var editable = inode.ensure_editable(edit__$1);
      var earr = editable.arr;
      earr[idx] = earr[2 * self__.cnt - 2];
      earr[idx + 1] = earr[2 * self__.cnt - 1];
      earr[2 * self__.cnt - 1] = null;
      earr[2 * self__.cnt - 2] = null;
      editable.cnt = editable.cnt - 1;
      return editable;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_seq = function() {
  var self__ = this;
  var inode = this;
  var G__13780 = self__.arr;
  return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$1(G__13780) : cljs.core.create_inode_seq.call(null, G__13780);
};
cljs.core.HashCollisionNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var inode = this;
  return cljs.core.inode_kv_reduce(self__.arr, f, init);
};
cljs.core.HashCollisionNode.prototype.inode_lookup = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test(key, self__.arr[idx])) {
      return self__.arr[idx + 1];
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc_BANG_ = function(edit__$1, shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
    if (idx === -1) {
      if (self__.arr.length > 2 * self__.cnt) {
        var editable = cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$6(inode, edit__$1, 2 * self__.cnt, key, 2 * self__.cnt + 1, val);
        added_leaf_QMARK_.val = true;
        editable.cnt = editable.cnt + 1;
        return editable;
      } else {
        var len = self__.arr.length;
        var new_arr = new Array(len + 2);
        cljs.core.array_copy(self__.arr, 0, new_arr, 0, len);
        new_arr[len] = key;
        new_arr[len + 1] = val;
        added_leaf_QMARK_.val = true;
        return inode.ensure_editable_array(edit__$1, self__.cnt + 1, new_arr);
      }
    } else {
      if (self__.arr[idx + 1] === val) {
        return inode;
      } else {
        return cljs.core.edit_and_set.cljs$core$IFn$_invoke$arity$4(inode, edit__$1, idx + 1, val);
      }
    }
  } else {
    return(new cljs.core.BitmapIndexedNode(edit__$1, 1 << (self__.collision_hash >>> shift & 31), [null, inode, null, null])).inode_assoc_BANG_(edit__$1, shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.inode_assoc = function(shift, hash, key, val, added_leaf_QMARK_) {
  var self__ = this;
  var inode = this;
  if (hash === self__.collision_hash) {
    var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
    if (idx === -1) {
      var len = 2 * self__.cnt;
      var new_arr = new Array(len + 2);
      cljs.core.array_copy(self__.arr, 0, new_arr, 0, len);
      new_arr[len] = key;
      new_arr[len + 1] = val;
      added_leaf_QMARK_.val = true;
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt + 1, new_arr);
    } else {
      if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(self__.arr[idx], val)) {
        return inode;
      } else {
        return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt, cljs.core.clone_and_set.cljs$core$IFn$_invoke$arity$3(self__.arr, idx + 1, val));
      }
    }
  } else {
    return(new cljs.core.BitmapIndexedNode(null, 1 << (self__.collision_hash >>> shift & 31), [null, inode])).inode_assoc(shift, hash, key, val, added_leaf_QMARK_);
  }
};
cljs.core.HashCollisionNode.prototype.ensure_editable_array = function(e, count, array) {
  var self__ = this;
  var inode = this;
  if (e === self__.edit) {
    self__.arr = array;
    self__.cnt = count;
    return inode;
  } else {
    return new cljs.core.HashCollisionNode(self__.edit, self__.collision_hash, count, array);
  }
};
cljs.core.HashCollisionNode.prototype.inode_find = function(shift, hash, key, not_found) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx < 0) {
    return not_found;
  } else {
    if (cljs.core.key_test(key, self__.arr[idx])) {
      return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.arr[idx], self__.arr[idx + 1]], null);
    } else {
      return not_found;
    }
  }
};
cljs.core.HashCollisionNode.prototype.inode_without = function(shift, hash, key) {
  var self__ = this;
  var inode = this;
  var idx = cljs.core.hash_collision_node_find_index(self__.arr, self__.cnt, key);
  if (idx === -1) {
    return inode;
  } else {
    if (self__.cnt === 1) {
      return null;
    } else {
      return new cljs.core.HashCollisionNode(null, self__.collision_hash, self__.cnt - 1, cljs.core.remove_pair(self__.arr, cljs.core.quot(idx, 2)));
    }
  }
};
cljs.core.HashCollisionNode.cljs$lang$type = true;
cljs.core.HashCollisionNode.cljs$lang$ctorStr = "cljs.core/HashCollisionNode";
cljs.core.HashCollisionNode.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/HashCollisionNode");
};
cljs.core.__GT_HashCollisionNode = function __GT_HashCollisionNode(edit, collision_hash, cnt, arr) {
  return new cljs.core.HashCollisionNode(edit, collision_hash, cnt, arr);
};
cljs.core.create_node = function() {
  var create_node = null;
  var create_node__6 = function(shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash(key1);
    if (key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc(shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc(shift, key2hash, key2, val2, added_leaf_QMARK_);
    }
  };
  var create_node__7 = function(edit, shift, key1, val1, key2hash, key2, val2) {
    var key1hash = cljs.core.hash(key1);
    if (key1hash === key2hash) {
      return new cljs.core.HashCollisionNode(null, key1hash, 2, [key1, val1, key2, val2]);
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      return cljs.core.BitmapIndexedNode.EMPTY.inode_assoc_BANG_(edit, shift, key1hash, key1, val1, added_leaf_QMARK_).inode_assoc_BANG_(edit, shift, key2hash, key2, val2, added_leaf_QMARK_);
    }
  };
  create_node = function(edit, shift, key1, val1, key2hash, key2, val2) {
    switch(arguments.length) {
      case 6:
        return create_node__6.call(this, edit, shift, key1, val1, key2hash, key2);
      case 7:
        return create_node__7.call(this, edit, shift, key1, val1, key2hash, key2, val2);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_node.cljs$core$IFn$_invoke$arity$6 = create_node__6;
  create_node.cljs$core$IFn$_invoke$arity$7 = create_node__7;
  return create_node;
}();
cljs.core.NodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
};
cljs.core.NodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.NodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.NodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4346__auto__ = self__.__hash;
  if (!(h__4346__auto__ == null)) {
    return h__4346__auto__;
  } else {
    var h__4346__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4346__auto____$1;
    return h__4346__auto____$1;
  }
};
cljs.core.NodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.NodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.nodes[self__.i], self__.nodes[self__.i + 1]], null);
  } else {
    return cljs.core.first(self__.s);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.s == null) {
    var G__13781 = self__.nodes;
    var G__13782 = self__.i + 2;
    var G__13783 = null;
    return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__13781, G__13782, G__13783) : cljs.core.create_inode_seq.call(null, G__13781, G__13782, G__13783);
  } else {
    var G__13784 = self__.nodes;
    var G__13785 = self__.i;
    var G__13786 = cljs.core.next(self__.s);
    return cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3 ? cljs.core.create_inode_seq.cljs$core$IFn$_invoke$arity$3(G__13784, G__13785, G__13786) : cljs.core.create_inode_seq.call(null, G__13784, G__13785, G__13786);
  }
};
cljs.core.NodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.NodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.NodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.NodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.NodeSeq.cljs$lang$type = true;
cljs.core.NodeSeq.cljs$lang$ctorStr = "cljs.core/NodeSeq";
cljs.core.NodeSeq.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/NodeSeq");
};
cljs.core.__GT_NodeSeq = function __GT_NodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.NodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.NodeSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4903__auto__ = this;
  return cljs.core.es6_iterator(this__4903__auto__);
};
cljs.core.create_inode_seq = function() {
  var create_inode_seq = null;
  var create_inode_seq__1 = function(nodes) {
    return create_inode_seq.cljs$core$IFn$_invoke$arity$3(nodes, 0, null);
  };
  var create_inode_seq__3 = function(nodes, i, s) {
    if (s == null) {
      var len = nodes.length;
      var j = i;
      while (true) {
        if (j < len) {
          if (!(nodes[j] == null)) {
            return new cljs.core.NodeSeq(null, nodes, j, null, null);
          } else {
            var temp__4124__auto__ = nodes[j + 1];
            if (cljs.core.truth_(temp__4124__auto__)) {
              var node = temp__4124__auto__;
              var temp__4124__auto____$1 = node.inode_seq();
              if (cljs.core.truth_(temp__4124__auto____$1)) {
                var node_seq = temp__4124__auto____$1;
                return new cljs.core.NodeSeq(null, nodes, j + 2, node_seq, null);
              } else {
                var G__13790 = j + 2;
                j = G__13790;
                continue;
              }
            } else {
              var G__13791 = j + 2;
              j = G__13791;
              continue;
            }
          }
        } else {
          return null;
        }
        break;
      }
    } else {
      return new cljs.core.NodeSeq(null, nodes, i, s, null);
    }
  };
  create_inode_seq = function(nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_inode_seq__1.call(this, nodes);
      case 3:
        return create_inode_seq__3.call(this, nodes, i, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_inode_seq.cljs$core$IFn$_invoke$arity$1 = create_inode_seq__1;
  create_inode_seq.cljs$core$IFn$_invoke$arity$3 = create_inode_seq__3;
  return create_inode_seq;
}();
cljs.core.ArrayNodeSeq = function(meta, nodes, i, s, __hash) {
  this.meta = meta;
  this.nodes = nodes;
  this.i = i;
  this.s = s;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374860;
};
cljs.core.ArrayNodeSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ArrayNodeSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4346__auto__ = self__.__hash;
  if (!(h__4346__auto__ == null)) {
    return h__4346__auto__;
  } else {
    var h__4346__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4346__auto____$1;
    return h__4346__auto____$1;
  }
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.first(self__.s);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var G__13792 = null;
  var G__13793 = self__.nodes;
  var G__13794 = self__.i;
  var G__13795 = cljs.core.next(self__.s);
  return cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4 ? cljs.core.create_array_node_seq.cljs$core$IFn$_invoke$arity$4(G__13792, G__13793, G__13794, G__13795) : cljs.core.create_array_node_seq.call(null, G__13792, G__13793, G__13794, G__13795);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ArrayNodeSeq(meta__$1, self__.nodes, self__.i, self__.s, self__.__hash);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ArrayNodeSeq.cljs$lang$type = true;
cljs.core.ArrayNodeSeq.cljs$lang$ctorStr = "cljs.core/ArrayNodeSeq";
cljs.core.ArrayNodeSeq.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/ArrayNodeSeq");
};
cljs.core.__GT_ArrayNodeSeq = function __GT_ArrayNodeSeq(meta, nodes, i, s, __hash) {
  return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, __hash);
};
cljs.core.ArrayNodeSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4903__auto__ = this;
  return cljs.core.es6_iterator(this__4903__auto__);
};
cljs.core.create_array_node_seq = function() {
  var create_array_node_seq = null;
  var create_array_node_seq__1 = function(nodes) {
    return create_array_node_seq.cljs$core$IFn$_invoke$arity$4(null, nodes, 0, null);
  };
  var create_array_node_seq__4 = function(meta, nodes, i, s) {
    if (s == null) {
      var len = nodes.length;
      var j = i;
      while (true) {
        if (j < len) {
          var temp__4124__auto__ = nodes[j];
          if (cljs.core.truth_(temp__4124__auto__)) {
            var nj = temp__4124__auto__;
            var temp__4124__auto____$1 = nj.inode_seq();
            if (cljs.core.truth_(temp__4124__auto____$1)) {
              var ns = temp__4124__auto____$1;
              return new cljs.core.ArrayNodeSeq(meta, nodes, j + 1, ns, null);
            } else {
              var G__13800 = j + 1;
              j = G__13800;
              continue;
            }
          } else {
            var G__13801 = j + 1;
            j = G__13801;
            continue;
          }
        } else {
          return null;
        }
        break;
      }
    } else {
      return new cljs.core.ArrayNodeSeq(meta, nodes, i, s, null);
    }
  };
  create_array_node_seq = function(meta, nodes, i, s) {
    switch(arguments.length) {
      case 1:
        return create_array_node_seq__1.call(this, meta);
      case 4:
        return create_array_node_seq__4.call(this, meta, nodes, i, s);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  create_array_node_seq.cljs$core$IFn$_invoke$arity$1 = create_array_node_seq__1;
  create_array_node_seq.cljs$core$IFn$_invoke$arity$4 = create_array_node_seq__4;
  return create_array_node_seq;
}();
cljs.core.PersistentHashMap = function(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  this.meta = meta;
  this.cnt = cnt;
  this.root = root;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 16123663;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentHashMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__13803 = coll;
    return cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__13803) : cljs.core.keys.call(null, G__13803);
  }());
};
cljs.core.PersistentHashMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__13804 = coll;
    return cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__13804) : cljs.core.vals.call(null, G__13804);
  }());
};
cljs.core.PersistentHashMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentHashMap.prototype.get = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__13805 = cljs.core.seq(coll);
  var chunk__13806 = null;
  var count__13807 = 0;
  var i__13808 = 0;
  while (true) {
    if (i__13808 < count__13807) {
      var vec__13809 = chunk__13806.cljs$core$IIndexed$_nth$arity$2(null, i__13808);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13809, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13809, 1, null);
      var G__13810_13821 = v;
      var G__13811_13822 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13810_13821, G__13811_13822) : f.call(null, G__13810_13821, G__13811_13822);
      var G__13823 = seq__13805;
      var G__13824 = chunk__13806;
      var G__13825 = count__13807;
      var G__13826 = i__13808 + 1;
      seq__13805 = G__13823;
      chunk__13806 = G__13824;
      count__13807 = G__13825;
      i__13808 = G__13826;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__13805);
      if (temp__4126__auto__) {
        var seq__13805__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__13805__$1)) {
          var c__4712__auto__ = cljs.core.chunk_first(seq__13805__$1);
          var G__13827 = cljs.core.chunk_rest(seq__13805__$1);
          var G__13828 = c__4712__auto__;
          var G__13829 = cljs.core.count(c__4712__auto__);
          var G__13830 = 0;
          seq__13805 = G__13827;
          chunk__13806 = G__13828;
          count__13807 = G__13829;
          i__13808 = G__13830;
          continue;
        } else {
          var vec__13812 = cljs.core.first(seq__13805__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13812, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13812, 1, null);
          var G__13813_13831 = v;
          var G__13814_13832 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13813_13831, G__13814_13832) : f.call(null, G__13813_13831, G__13814_13832);
          var G__13833 = cljs.core.next(seq__13805__$1);
          var G__13834 = null;
          var G__13835 = 0;
          var G__13836 = 0;
          seq__13805 = G__13833;
          chunk__13806 = G__13834;
          count__13807 = G__13835;
          i__13808 = G__13836;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k, not_found);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  var init__$1 = self__.has_nil_QMARK_ ? function() {
    var G__13815 = init;
    var G__13816 = null;
    var G__13817 = self__.nil_val;
    return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13815, G__13816, G__13817) : f.call(null, G__13815, G__13816, G__13817);
  }() : init;
  if (cljs.core.reduced_QMARK_(init__$1)) {
    var G__13818 = init__$1;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__13818) : cljs.core.deref.call(null, G__13818);
  } else {
    if (!(self__.root == null)) {
      return self__.root.kv_reduce(f, init__$1);
    } else {
      return init__$1;
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashMap(self__.meta, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentHashMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4346__auto__ = self__.__hash;
  if (!(h__4346__auto__ == null)) {
    return h__4346__auto__;
  } else {
    var h__4346__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4346__auto____$1;
    return h__4346__auto____$1;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashMap(function() {
    var obj13820 = {};
    return obj13820;
  }(), self__.root, self__.cnt, self__.has_nil_QMARK_, self__.nil_val);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._with_meta(cljs.core.PersistentHashMap.EMPTY, self__.meta);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, self__.root, false, null, null);
    } else {
      return coll__$1;
    }
  } else {
    if (self__.root == null) {
      return coll__$1;
    } else {
      var new_root = self__.root.inode_without(0, cljs.core.hash(k), k);
      if (new_root === self__.root) {
        return coll__$1;
      } else {
        return new cljs.core.PersistentHashMap(self__.meta, self__.cnt - 1, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
      }
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_ && v === self__.nil_val) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, self__.has_nil_QMARK_ ? self__.cnt : self__.cnt + 1, self__.root, true, v, null);
    }
  } else {
    var added_leaf_QMARK_ = new cljs.core.Box(false);
    var new_root = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc(0, cljs.core.hash(k), k, v, added_leaf_QMARK_);
    if (new_root === self__.root) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentHashMap(self__.meta, added_leaf_QMARK_.val ? self__.cnt + 1 : self__.cnt, new_root, self__.has_nil_QMARK_, self__.nil_val, null);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  if (k == null) {
    return self__.has_nil_QMARK_;
  } else {
    if (self__.root == null) {
      return false;
    } else {
      return!(self__.root.inode_lookup(0, cljs.core.hash(k), k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel);
    }
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var s = !(self__.root == null) ? self__.root.inode_seq() : null;
    if (self__.has_nil_QMARK_) {
      return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [null, self__.nil_val], null), s);
    } else {
      return s;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentHashMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashMap(meta__$1, self__.cnt, self__.root, self__.has_nil_QMARK_, self__.nil_val, self__.__hash);
};
cljs.core.PersistentHashMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__13837 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__13838 = cljs.core.next(es);
          ret = G__13837;
          es = G__13838;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentHashMap.prototype.call = function() {
  var G__13839 = null;
  var G__13839__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__13839__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__13839 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__13839__2.call(this, self__, k);
      case 3:
        return G__13839__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__13839.cljs$core$IFn$_invoke$arity$2 = G__13839__2;
  G__13839.cljs$core$IFn$_invoke$arity$3 = G__13839__3;
  return G__13839;
}();
cljs.core.PersistentHashMap.prototype.apply = function(self__, args13802) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args13802)));
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashMap.cljs$lang$type = true;
cljs.core.PersistentHashMap.cljs$lang$ctorStr = "cljs.core/PersistentHashMap";
cljs.core.PersistentHashMap.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/PersistentHashMap");
};
cljs.core.__GT_PersistentHashMap = function __GT_PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash) {
  return new cljs.core.PersistentHashMap(meta, cnt, root, has_nil_QMARK_, nil_val, __hash);
};
cljs.core.PersistentHashMap.EMPTY = new cljs.core.PersistentHashMap(null, 0, null, false, null, cljs.core.empty_unordered_hash);
cljs.core.PersistentHashMap.fromArray = function(arr, no_clone) {
  var arr__$1 = no_clone ? arr : cljs.core.aclone(arr);
  var len = arr__$1.length;
  var i = 0;
  var ret = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__13840 = i + 2;
      var G__13841 = cljs.core._assoc_BANG_(ret, arr__$1[i], arr__$1[i + 1]);
      i = G__13840;
      ret = G__13841;
      continue;
    } else {
      return cljs.core._persistent_BANG_(ret);
    }
    break;
  }
};
cljs.core.PersistentHashMap.fromArrays = function(ks, vs) {
  var len = ks.length;
  var i = 0;
  var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
  while (true) {
    if (i < len) {
      var G__13842 = i + 1;
      var G__13843 = out.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3(null, ks[i], vs[i]);
      i = G__13842;
      out = G__13843;
      continue;
    } else {
      return cljs.core.persistent_BANG_(out);
    }
    break;
  }
};
cljs.core.PersistentHashMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4903__auto__ = this;
  return cljs.core.es6_iterator(this__4903__auto__);
};
cljs.core.TransientHashMap = function(edit, root, count, has_nil_QMARK_, nil_val) {
  this.edit = edit;
  this.root = root;
  this.count = count;
  this.has_nil_QMARK_ = has_nil_QMARK_;
  this.nil_val = nil_val;
  this.cljs$lang$protocol_mask$partition1$ = 56;
  this.cljs$lang$protocol_mask$partition0$ = 258;
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientMap$_dissoc_BANG_$arity$2 = function(tcoll, key) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.without_BANG_(key);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientAssociative$_assoc_BANG_$arity$3 = function(tcoll, key, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.assoc_BANG_(key, val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, val) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.conj_BANG_(val);
};
cljs.core.TransientHashMap.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return tcoll__$1.persistent_BANG_();
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, k) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return null;
    }
  } else {
    if (self__.root == null) {
      return null;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, k, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (k == null) {
    if (self__.has_nil_QMARK_) {
      return self__.nil_val;
    } else {
      return not_found;
    }
  } else {
    if (self__.root == null) {
      return not_found;
    } else {
      return self__.root.inode_lookup(0, cljs.core.hash(k), k, not_found);
    }
  }
};
cljs.core.TransientHashMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.edit) {
    return self__.count;
  } else {
    throw new Error("count after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.conj_BANG_ = function(o) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (function() {
      var G__13844 = o;
      if (G__13844) {
        var bit__4606__auto__ = G__13844.cljs$lang$protocol_mask$partition0$ & 2048;
        if (bit__4606__auto__ || G__13844.cljs$core$IMapEntry$) {
          return true;
        } else {
          if (!G__13844.cljs$lang$protocol_mask$partition0$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, G__13844);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IMapEntry, G__13844);
      }
    }()) {
      return tcoll.assoc_BANG_(function() {
        var G__13845 = o;
        return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__13845) : cljs.core.key.call(null, G__13845);
      }(), function() {
        var G__13846 = o;
        return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__13846) : cljs.core.val.call(null, G__13846);
      }());
    } else {
      var es = cljs.core.seq(o);
      var tcoll__$1 = tcoll;
      while (true) {
        var temp__4124__auto__ = cljs.core.first(es);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          var G__13849 = cljs.core.next(es);
          var G__13850 = tcoll__$1.assoc_BANG_(function() {
            var G__13847 = e;
            return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__13847) : cljs.core.key.call(null, G__13847);
          }(), function() {
            var G__13848 = e;
            return cljs.core.val.cljs$core$IFn$_invoke$arity$1 ? cljs.core.val.cljs$core$IFn$_invoke$arity$1(G__13848) : cljs.core.val.call(null, G__13848);
          }());
          es = G__13849;
          tcoll__$1 = G__13850;
          continue;
        } else {
          return tcoll__$1;
        }
        break;
      }
    }
  } else {
    throw new Error("conj! after persistent");
  }
};
cljs.core.TransientHashMap.prototype.assoc_BANG_ = function(k, v) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.nil_val === v) {
      } else {
        self__.nil_val = v;
      }
      if (self__.has_nil_QMARK_) {
      } else {
        self__.count = self__.count + 1;
        self__.has_nil_QMARK_ = true;
      }
      return tcoll;
    } else {
      var added_leaf_QMARK_ = new cljs.core.Box(false);
      var node = (self__.root == null ? cljs.core.BitmapIndexedNode.EMPTY : self__.root).inode_assoc_BANG_(self__.edit, 0, cljs.core.hash(k), k, v, added_leaf_QMARK_);
      if (node === self__.root) {
      } else {
        self__.root = node;
      }
      if (added_leaf_QMARK_.val) {
        self__.count = self__.count + 1;
      } else {
      }
      return tcoll;
    }
  } else {
    throw new Error("assoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.without_BANG_ = function(k) {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    if (k == null) {
      if (self__.has_nil_QMARK_) {
        self__.has_nil_QMARK_ = false;
        self__.nil_val = null;
        self__.count = self__.count - 1;
        return tcoll;
      } else {
        return tcoll;
      }
    } else {
      if (self__.root == null) {
        return tcoll;
      } else {
        var removed_leaf_QMARK_ = new cljs.core.Box(false);
        var node = self__.root.inode_without_BANG_(self__.edit, 0, cljs.core.hash(k), k, removed_leaf_QMARK_);
        if (node === self__.root) {
        } else {
          self__.root = node;
        }
        if (cljs.core.truth_(removed_leaf_QMARK_[0])) {
          self__.count = self__.count - 1;
        } else {
        }
        return tcoll;
      }
    }
  } else {
    throw new Error("dissoc! after persistent!");
  }
};
cljs.core.TransientHashMap.prototype.persistent_BANG_ = function() {
  var self__ = this;
  var tcoll = this;
  if (self__.edit) {
    self__.edit = null;
    return new cljs.core.PersistentHashMap(null, self__.count, self__.root, self__.has_nil_QMARK_, self__.nil_val, null);
  } else {
    throw new Error("persistent! called twice");
  }
};
cljs.core.TransientHashMap.cljs$lang$type = true;
cljs.core.TransientHashMap.cljs$lang$ctorStr = "cljs.core/TransientHashMap";
cljs.core.TransientHashMap.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/TransientHashMap");
};
cljs.core.__GT_TransientHashMap = function __GT_TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val) {
  return new cljs.core.TransientHashMap(edit, root, count, has_nil_QMARK_, nil_val);
};
cljs.core.tree_map_seq_push = function tree_map_seq_push(node, stack, ascending_QMARK_) {
  var t = node;
  var stack__$1 = stack;
  while (true) {
    if (!(t == null)) {
      var G__13851 = ascending_QMARK_ ? t.left : t.right;
      var G__13852 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack__$1, t);
      t = G__13851;
      stack__$1 = G__13852;
      continue;
    } else {
      return stack__$1;
    }
    break;
  }
};
cljs.core.PersistentTreeMapSeq = function(meta, stack, ascending_QMARK_, cnt, __hash) {
  this.meta = meta;
  this.stack = stack;
  this.ascending_QMARK_ = ascending_QMARK_;
  this.cnt = cnt;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374862;
};
cljs.core.PersistentTreeMapSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeMapSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt < 0) {
    return cljs.core.count(cljs.core.next(coll__$1)) + 1;
  } else {
    return self__.cnt;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4346__auto__ = self__.__hash;
  if (!(h__4346__auto__ == null)) {
    return h__4346__auto__;
  } else {
    var h__4346__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4346__auto____$1;
    return h__4346__auto____$1;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core.peek(self__.stack);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var t = cljs.core.first(self__.stack);
  var next_stack = cljs.core.tree_map_seq_push(self__.ascending_QMARK_ ? t.right : t.left, cljs.core.next(self__.stack), self__.ascending_QMARK_);
  if (!(next_stack == null)) {
    return new cljs.core.PersistentTreeMapSeq(null, next_stack, self__.ascending_QMARK_, self__.cnt - 1, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return this$__$1;
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMapSeq(meta__$1, self__.stack, self__.ascending_QMARK_, self__.cnt, self__.__hash);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.PersistentTreeMapSeq.cljs$lang$type = true;
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorStr = "cljs.core/PersistentTreeMapSeq";
cljs.core.PersistentTreeMapSeq.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/PersistentTreeMapSeq");
};
cljs.core.__GT_PersistentTreeMapSeq = function __GT_PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash) {
  return new cljs.core.PersistentTreeMapSeq(meta, stack, ascending_QMARK_, cnt, __hash);
};
cljs.core.PersistentTreeMapSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4903__auto__ = this;
  return cljs.core.es6_iterator(this__4903__auto__);
};
cljs.core.create_tree_map_seq = function create_tree_map_seq(tree, ascending_QMARK_, cnt) {
  return new cljs.core.PersistentTreeMapSeq(null, cljs.core.tree_map_seq_push(tree, null, ascending_QMARK_), ascending_QMARK_, cnt, null);
};
cljs.core.balance_left = function balance_left(key, val, ins, right) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, ins.left.blacken(), new cljs.core.BlackNode(key, val, ins.right, right, null), null);
    } else {
      if (ins.right instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.right.key, ins.right.val, new cljs.core.BlackNode(ins.key, ins.val, ins.left, ins.right.left, null), new cljs.core.BlackNode(key, val, ins.right.right, right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, ins, right, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, ins, right, null);
  }
};
cljs.core.balance_right = function balance_right(key, val, left, ins) {
  if (ins instanceof cljs.core.RedNode) {
    if (ins.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(ins.key, ins.val, new cljs.core.BlackNode(key, val, left, ins.left, null), ins.right.blacken(), null);
    } else {
      if (ins.left instanceof cljs.core.RedNode) {
        return new cljs.core.RedNode(ins.left.key, ins.left.val, new cljs.core.BlackNode(key, val, left, ins.left.left, null), new cljs.core.BlackNode(ins.key, ins.val, ins.left.right, ins.right, null), null);
      } else {
        return new cljs.core.BlackNode(key, val, left, ins, null);
      }
    }
  } else {
    return new cljs.core.BlackNode(key, val, left, ins, null);
  }
};
cljs.core.balance_left_del = function balance_left_del(key, val, del, right) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, del.blacken(), right, null);
  } else {
    if (right instanceof cljs.core.BlackNode) {
      return cljs.core.balance_right(key, val, del, right.redden());
    } else {
      if (right instanceof cljs.core.RedNode && right.left instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(right.left.key, right.left.val, new cljs.core.BlackNode(key, val, del, right.left.left, null), cljs.core.balance_right(right.key, right.val, right.left.right, right.right.redden()), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.balance_right_del = function balance_right_del(key, val, left, del) {
  if (del instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(key, val, left, del.blacken(), null);
  } else {
    if (left instanceof cljs.core.BlackNode) {
      return cljs.core.balance_left(key, val, left.redden(), del);
    } else {
      if (left instanceof cljs.core.RedNode && left.right instanceof cljs.core.BlackNode) {
        return new cljs.core.RedNode(left.right.key, left.right.val, cljs.core.balance_left(left.key, left.val, left.left.redden(), left.right.left), new cljs.core.BlackNode(key, val, left.right.right, del, null), null);
      } else {
        throw new Error("red-black tree invariant violation");
      }
    }
  }
};
cljs.core.tree_map_kv_reduce = function tree_map_kv_reduce(node, f, init) {
  var init__$1 = !(node.left == null) ? tree_map_kv_reduce(node.left, f, init) : init;
  if (cljs.core.reduced_QMARK_(init__$1)) {
    var G__13865 = init__$1;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__13865) : cljs.core.deref.call(null, G__13865);
  } else {
    var init__$2 = function() {
      var G__13866 = init__$1;
      var G__13867 = node.key;
      var G__13868 = node.val;
      return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__13866, G__13867, G__13868) : f.call(null, G__13866, G__13867, G__13868);
    }();
    if (cljs.core.reduced_QMARK_(init__$2)) {
      var G__13869 = init__$2;
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__13869) : cljs.core.deref.call(null, G__13869);
    } else {
      var init__$3 = !(node.right == null) ? tree_map_kv_reduce(node.right, f, init__$2) : init__$2;
      if (cljs.core.reduced_QMARK_(init__$3)) {
        var G__13870 = init__$3;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__13870) : cljs.core.deref.call(null, G__13870);
      } else {
        return init__$3;
      }
    }
  }
};
cljs.core.BlackNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
};
cljs.core.BlackNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_right(node);
};
cljs.core.BlackNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.BlackNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return node;
};
cljs.core.BlackNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return ins.balance_left(node);
};
cljs.core.BlackNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.BlackNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
};
cljs.core.BlackNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
};
cljs.core.BlackNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_left_del(self__.key, self__.val, del, self__.right);
};
cljs.core.BlackNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce(node, f, init);
};
cljs.core.BlackNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return cljs.core.balance_right_del(self__.key, self__.val, self__.left, del);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, null);
};
cljs.core.BlackNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, not_found);
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.BlackNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.BlackNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.BlackNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.BlackNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.BlackNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.BlackNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4346__auto__ = self__.__hash;
  if (!(h__4346__auto__ == null)) {
    return h__4346__auto__;
  } else {
    var h__4346__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4346__auto____$1;
    return h__4346__auto____$1;
  }
};
cljs.core.BlackNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.BlackNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1, f);
};
cljs.core.BlackNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1, f, start);
};
cljs.core.BlackNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.BlackNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.BlackNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.BlackNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.BlackNode.prototype.call = function() {
  var G__13872 = null;
  var G__13872__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__13872__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__13872 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__13872__2.call(this, self__, k);
      case 3:
        return G__13872__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__13872.cljs$core$IFn$_invoke$arity$2 = G__13872__2;
  G__13872.cljs$core$IFn$_invoke$arity$3 = G__13872__3;
  return G__13872;
}();
cljs.core.BlackNode.prototype.apply = function(self__, args13871) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args13871)));
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.BlackNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.BlackNode.cljs$lang$type = true;
cljs.core.BlackNode.cljs$lang$ctorStr = "cljs.core/BlackNode";
cljs.core.BlackNode.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/BlackNode");
};
cljs.core.__GT_BlackNode = function __GT_BlackNode(key, val, left, right, __hash) {
  return new cljs.core.BlackNode(key, val, left, right, __hash);
};
cljs.core.BlackNode.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4903__auto__ = this;
  return cljs.core.es6_iterator(this__4903__auto__);
};
cljs.core.RedNode = function(key, val, left, right, __hash) {
  this.key = key;
  this.val = val;
  this.left = left;
  this.right = right;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32402207;
};
cljs.core.RedNode.prototype.add_right = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, ins, null);
};
cljs.core.RedNode.prototype.redden = function() {
  var self__ = this;
  var node = this;
  throw new Error("red-black tree invariant violation");
};
cljs.core.RedNode.prototype.blacken = function() {
  var self__ = this;
  var node = this;
  return new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right, null);
};
cljs.core.RedNode.prototype.add_left = function(ins) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, ins, self__.right, null);
};
cljs.core.RedNode.prototype.replace = function(key__$1, val__$1, left__$1, right__$1) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(key__$1, val__$1, left__$1, right__$1, null);
};
cljs.core.RedNode.prototype.balance_left = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.left instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, self__.left.blacken(), new cljs.core.BlackNode(parent.key, parent.val, self__.right, parent.right, null), null);
  } else {
    if (self__.right instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.right.key, self__.right.val, new cljs.core.BlackNode(self__.key, self__.val, self__.left, self__.right.left, null), new cljs.core.BlackNode(parent.key, parent.val, self__.right.right, parent.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, node, parent.right, null);
    }
  }
};
cljs.core.RedNode.prototype.balance_right = function(parent) {
  var self__ = this;
  var node = this;
  if (self__.right instanceof cljs.core.RedNode) {
    return new cljs.core.RedNode(self__.key, self__.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left, null), self__.right.blacken(), null);
  } else {
    if (self__.left instanceof cljs.core.RedNode) {
      return new cljs.core.RedNode(self__.left.key, self__.left.val, new cljs.core.BlackNode(parent.key, parent.val, parent.left, self__.left.left, null), new cljs.core.BlackNode(self__.key, self__.val, self__.left.right, self__.right, null), null);
    } else {
      return new cljs.core.BlackNode(parent.key, parent.val, parent.left, node, null);
    }
  }
};
cljs.core.RedNode.prototype.remove_left = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, del, self__.right, null);
};
cljs.core.RedNode.prototype.kv_reduce = function(f, init) {
  var self__ = this;
  var node = this;
  return cljs.core.tree_map_kv_reduce(node, f, init);
};
cljs.core.RedNode.prototype.remove_right = function(del) {
  var self__ = this;
  var node = this;
  return new cljs.core.RedNode(self__.key, self__.val, self__.left, del, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$2 = function(node, k) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, null);
};
cljs.core.RedNode.prototype.cljs$core$ILookup$_lookup$arity$3 = function(node, k, not_found) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._nth.cljs$core$IFn$_invoke$arity$3(node__$1, k, not_found);
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$2 = function(node, n) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return null;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IIndexed$_nth$arity$3 = function(node, n, not_found) {
  var self__ = this;
  var node__$1 = this;
  if (n === 0) {
    return self__.key;
  } else {
    if (n === 1) {
      return self__.val;
    } else {
      return not_found;
    }
  }
};
cljs.core.RedNode.prototype.cljs$core$IVector$_assoc_n$arity$3 = function(node, n, v) {
  var self__ = this;
  var node__$1 = this;
  return(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null)).cljs$core$IVector$_assoc_n$arity$3(null, n, v);
};
cljs.core.RedNode.prototype.cljs$core$IMeta$_meta$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return null;
};
cljs.core.RedNode.prototype.cljs$core$ICounted$_count$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return 2;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_key$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.key;
};
cljs.core.RedNode.prototype.cljs$core$IMapEntry$_val$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_peek$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return self__.val;
};
cljs.core.RedNode.prototype.cljs$core$IStack$_pop$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key], null);
};
cljs.core.RedNode.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4346__auto__ = self__.__hash;
  if (!(h__4346__auto__ == null)) {
    return h__4346__auto__;
  } else {
    var h__4346__auto____$1 = cljs.core.hash_ordered_coll(coll__$1);
    self__.__hash = h__4346__auto____$1;
    return h__4346__auto____$1;
  }
};
cljs.core.RedNode.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.RedNode.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.PersistentVector.EMPTY;
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$2 = function(node, f) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(node__$1, f);
};
cljs.core.RedNode.prototype.cljs$core$IReduce$_reduce$arity$3 = function(node, f, start) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$3(node__$1, f, start);
};
cljs.core.RedNode.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(node, k, v) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), k, v);
};
cljs.core.RedNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(node) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core._conj(cljs.core._conj(cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.RedNode.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(node, meta) {
  var self__ = this;
  var node__$1 = this;
  return cljs.core.with_meta(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val], null), meta);
};
cljs.core.RedNode.prototype.cljs$core$ICollection$_conj$arity$2 = function(node, o) {
  var self__ = this;
  var node__$1 = this;
  return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [self__.key, self__.val, o], null);
};
cljs.core.RedNode.prototype.call = function() {
  var G__13874 = null;
  var G__13874__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__13874__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var node = self____$1;
    return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__13874 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__13874__2.call(this, self__, k);
      case 3:
        return G__13874__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__13874.cljs$core$IFn$_invoke$arity$2 = G__13874__2;
  G__13874.cljs$core$IFn$_invoke$arity$3 = G__13874__3;
  return G__13874;
}();
cljs.core.RedNode.prototype.apply = function(self__, args13873) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args13873)));
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.RedNode.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var node = this;
  return node.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.RedNode.cljs$lang$type = true;
cljs.core.RedNode.cljs$lang$ctorStr = "cljs.core/RedNode";
cljs.core.RedNode.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/RedNode");
};
cljs.core.__GT_RedNode = function __GT_RedNode(key, val, left, right, __hash) {
  return new cljs.core.RedNode(key, val, left, right, __hash);
};
cljs.core.RedNode.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4903__auto__ = this;
  return cljs.core.es6_iterator(this__4903__auto__);
};
cljs.core.tree_map_add = function tree_map_add(comp, tree, k, v, found) {
  if (tree == null) {
    return new cljs.core.RedNode(k, v, null, null, null);
  } else {
    var c = function() {
      var G__13887 = k;
      var G__13888 = tree.key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__13887, G__13888) : comp.call(null, G__13887, G__13888);
    }();
    if (c === 0) {
      found[0] = tree;
      return null;
    } else {
      if (c < 0) {
        var ins = tree_map_add(comp, tree.left, k, v, found);
        if (!(ins == null)) {
          return tree.add_left(ins);
        } else {
          return null;
        }
      } else {
        var ins = tree_map_add(comp, tree.right, k, v, found);
        if (!(ins == null)) {
          return tree.add_right(ins);
        } else {
          return null;
        }
      }
    }
  }
};
cljs.core.tree_map_append = function tree_map_append(left, right) {
  if (left == null) {
    return right;
  } else {
    if (right == null) {
      return left;
    } else {
      if (left instanceof cljs.core.RedNode) {
        if (right instanceof cljs.core.RedNode) {
          var app = tree_map_append(left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.RedNode(left.key, left.val, left.left, app.left, null), new cljs.core.RedNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return new cljs.core.RedNode(left.key, left.val, left.left, new cljs.core.RedNode(right.key, right.val, app, right.right, null), null);
          }
        } else {
          return new cljs.core.RedNode(left.key, left.val, left.left, tree_map_append(left.right, right), null);
        }
      } else {
        if (right instanceof cljs.core.RedNode) {
          return new cljs.core.RedNode(right.key, right.val, tree_map_append(left, right.left), right.right, null);
        } else {
          var app = tree_map_append(left.right, right.left);
          if (app instanceof cljs.core.RedNode) {
            return new cljs.core.RedNode(app.key, app.val, new cljs.core.BlackNode(left.key, left.val, left.left, app.left, null), new cljs.core.BlackNode(right.key, right.val, app.right, right.right, null), null);
          } else {
            return cljs.core.balance_left_del(left.key, left.val, left.left, new cljs.core.BlackNode(right.key, right.val, app, right.right, null));
          }
        }
      }
    }
  }
};
cljs.core.tree_map_remove = function tree_map_remove(comp, tree, k, found) {
  if (!(tree == null)) {
    var c = function() {
      var G__13907 = k;
      var G__13908 = tree.key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__13907, G__13908) : comp.call(null, G__13907, G__13908);
    }();
    if (c === 0) {
      found[0] = tree;
      return cljs.core.tree_map_append(tree.left, tree.right);
    } else {
      if (c < 0) {
        var del = tree_map_remove(comp, tree.left, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.left instanceof cljs.core.BlackNode) {
            return cljs.core.balance_left_del(tree.key, tree.val, del, tree.right);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, del, tree.right, null);
          }
        } else {
          return null;
        }
      } else {
        var del = tree_map_remove(comp, tree.right, k, found);
        if (!(del == null) || !(found[0] == null)) {
          if (tree.right instanceof cljs.core.BlackNode) {
            return cljs.core.balance_right_del(tree.key, tree.val, tree.left, del);
          } else {
            return new cljs.core.RedNode(tree.key, tree.val, tree.left, del, null);
          }
        } else {
          return null;
        }
      }
    }
  } else {
    return null;
  }
};
cljs.core.tree_map_replace = function tree_map_replace(comp, tree, k, v) {
  var tk = tree.key;
  var c = function() {
    var G__13919 = k;
    var G__13920 = tk;
    return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__13919, G__13920) : comp.call(null, G__13919, G__13920);
  }();
  if (c === 0) {
    return tree.replace(tk, v, tree.left, tree.right);
  } else {
    if (c < 0) {
      return tree.replace(tk, tree.val, tree_map_replace(comp, tree.left, k, v), tree.right);
    } else {
      return tree.replace(tk, tree.val, tree.left, tree_map_replace(comp, tree.right, k, v));
    }
  }
};
cljs.core.PersistentTreeMap = function(comp, tree, cnt, meta, __hash) {
  this.comp = comp;
  this.tree = tree;
  this.cnt = cnt;
  this.meta = meta;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 418776847;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeMap.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__13922 = cljs.core.seq(coll);
  var chunk__13923 = null;
  var count__13924 = 0;
  var i__13925 = 0;
  while (true) {
    if (i__13925 < count__13924) {
      var vec__13926 = chunk__13923.cljs$core$IIndexed$_nth$arity$2(null, i__13925);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13926, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13926, 1, null);
      var G__13927_13939 = v;
      var G__13928_13940 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13927_13939, G__13928_13940) : f.call(null, G__13927_13939, G__13928_13940);
      var G__13941 = seq__13922;
      var G__13942 = chunk__13923;
      var G__13943 = count__13924;
      var G__13944 = i__13925 + 1;
      seq__13922 = G__13941;
      chunk__13923 = G__13942;
      count__13924 = G__13943;
      i__13925 = G__13944;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__13922);
      if (temp__4126__auto__) {
        var seq__13922__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__13922__$1)) {
          var c__4712__auto__ = cljs.core.chunk_first(seq__13922__$1);
          var G__13945 = cljs.core.chunk_rest(seq__13922__$1);
          var G__13946 = c__4712__auto__;
          var G__13947 = cljs.core.count(c__4712__auto__);
          var G__13948 = 0;
          seq__13922 = G__13945;
          chunk__13923 = G__13946;
          count__13924 = G__13947;
          i__13925 = G__13948;
          continue;
        } else {
          var vec__13929 = cljs.core.first(seq__13922__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13929, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__13929, 1, null);
          var G__13930_13949 = v;
          var G__13931_13950 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13930_13949, G__13931_13950) : f.call(null, G__13930_13949, G__13931_13950);
          var G__13951 = cljs.core.next(seq__13922__$1);
          var G__13952 = null;
          var G__13953 = 0;
          var G__13954 = 0;
          seq__13922 = G__13951;
          chunk__13923 = G__13952;
          count__13924 = G__13953;
          i__13925 = G__13954;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.get = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeMap.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeMap.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeMap.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__13932 = coll;
    return cljs.core.keys.cljs$core$IFn$_invoke$arity$1 ? cljs.core.keys.cljs$core$IFn$_invoke$arity$1(G__13932) : cljs.core.keys.call(null, G__13932);
  }());
};
cljs.core.PersistentTreeMap.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(function() {
    var G__13933 = coll;
    return cljs.core.vals.cljs$core$IFn$_invoke$arity$1 ? cljs.core.vals.cljs$core$IFn$_invoke$arity$1(G__13933) : cljs.core.vals.call(null, G__13933);
  }());
};
cljs.core.PersistentTreeMap.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeMap.prototype.entry_at = function(k) {
  var self__ = this;
  var coll = this;
  var t = self__.tree;
  while (true) {
    if (!(t == null)) {
      var c = function() {
        var G__13934 = k;
        var G__13935 = t.key;
        return self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__13934, G__13935) : self__.comp.call(null, G__13934, G__13935);
      }();
      if (c === 0) {
        return t;
      } else {
        if (c < 0) {
          var G__13955 = t.left;
          t = G__13955;
          continue;
        } else {
          var G__13956 = t.right;
          t = G__13956;
          continue;
        }
      }
    } else {
      return null;
    }
    break;
  }
};
cljs.core.PersistentTreeMap.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, k, null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, k, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = coll__$1.entry_at(k);
  if (!(n == null)) {
    return n.val;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IKVReduce$_kv_reduce$arity$3 = function(coll, f, init) {
  var self__ = this;
  var coll__$1 = this;
  if (!(self__.tree == null)) {
    return cljs.core.tree_map_kv_reduce(self__.tree, f, init);
  } else {
    return init;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, self__.meta, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.cnt;
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, false, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4346__auto__ = self__.__hash;
  if (!(h__4346__auto__ == null)) {
    return h__4346__auto__;
  } else {
    var h__4346__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4346__auto____$1;
    return h__4346__auto____$1;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_map(coll__$1, other);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, 0);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IMap$_dissoc$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_remove(self__.comp, self__.tree, k, found);
  if (t == null) {
    if (cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found, 0) == null) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, null, 0, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt - 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(coll, k, v) {
  var self__ = this;
  var coll__$1 = this;
  var found = [null];
  var t = cljs.core.tree_map_add(self__.comp, self__.tree, k, v, found);
  if (t == null) {
    var found_node = cljs.core.nth.cljs$core$IFn$_invoke$arity$2(found, 0);
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(v, found_node.val)) {
      return coll__$1;
    } else {
      return new cljs.core.PersistentTreeMap(self__.comp, cljs.core.tree_map_replace(self__.comp, self__.tree, k, v), self__.cnt, self__.meta, null);
    }
  } else {
    return new cljs.core.PersistentTreeMap(self__.comp, t.blacken(), self__.cnt + 1, self__.meta, null);
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IAssociative$_contains_key_QMARK_$arity$2 = function(coll, k) {
  var self__ = this;
  var coll__$1 = this;
  return!(coll__$1.entry_at(k) == null);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, true, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeMap(self__.comp, self__.tree, self__.cnt, meta__$1, self__.__hash);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.vector_QMARK_(entry)) {
    return cljs.core._assoc(coll__$1, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(entry, 1));
  } else {
    var ret = coll__$1;
    var es = cljs.core.seq(entry);
    while (true) {
      if (es == null) {
        return ret;
      } else {
        var e = cljs.core.first(es);
        if (cljs.core.vector_QMARK_(e)) {
          var G__13957 = cljs.core._assoc(ret, cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 0), cljs.core._nth.cljs$core$IFn$_invoke$arity$2(e, 1));
          var G__13958 = cljs.core.next(es);
          ret = G__13957;
          es = G__13958;
          continue;
        } else {
          throw new Error("conj on a map takes map entries or seqables of map entries");
        }
      }
      break;
    }
  }
};
cljs.core.PersistentTreeMap.prototype.call = function() {
  var G__13959 = null;
  var G__13959__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__13959__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__13959 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__13959__2.call(this, self__, k);
      case 3:
        return G__13959__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__13959.cljs$core$IFn$_invoke$arity$2 = G__13959__2;
  G__13959.cljs$core$IFn$_invoke$arity$3 = G__13959__3;
  return G__13959;
}();
cljs.core.PersistentTreeMap.prototype.apply = function(self__, args13921) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args13921)));
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    return cljs.core.create_tree_map_seq(self__.tree, ascending_QMARK_, self__.cnt);
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  if (self__.cnt > 0) {
    var stack = null;
    var t = self__.tree;
    while (true) {
      if (!(t == null)) {
        var c = function() {
          var G__13936 = k;
          var G__13937 = t.key;
          return self__.comp.cljs$core$IFn$_invoke$arity$2 ? self__.comp.cljs$core$IFn$_invoke$arity$2(G__13936, G__13937) : self__.comp.call(null, G__13936, G__13937);
        }();
        if (c === 0) {
          return new cljs.core.PersistentTreeMapSeq(null, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t), ascending_QMARK_, -1, null);
        } else {
          if (cljs.core.truth_(ascending_QMARK_)) {
            if (c < 0) {
              var G__13960 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t);
              var G__13961 = t.left;
              stack = G__13960;
              t = G__13961;
              continue;
            } else {
              var G__13962 = stack;
              var G__13963 = t.right;
              stack = G__13962;
              t = G__13963;
              continue;
            }
          } else {
            if (c > 0) {
              var G__13964 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(stack, t);
              var G__13965 = t.right;
              stack = G__13964;
              t = G__13965;
              continue;
            } else {
              var G__13966 = stack;
              var G__13967 = t.left;
              stack = G__13966;
              t = G__13967;
              continue;
            }
          }
        }
      } else {
        if (stack == null) {
          return null;
        } else {
          return new cljs.core.PersistentTreeMapSeq(null, stack, ascending_QMARK_, -1, null);
        }
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  var G__13938 = entry;
  return cljs.core.key.cljs$core$IFn$_invoke$arity$1 ? cljs.core.key.cljs$core$IFn$_invoke$arity$1(G__13938) : cljs.core.key.call(null, G__13938);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.comp;
};
cljs.core.PersistentTreeMap.cljs$lang$type = true;
cljs.core.PersistentTreeMap.cljs$lang$ctorStr = "cljs.core/PersistentTreeMap";
cljs.core.PersistentTreeMap.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/PersistentTreeMap");
};
cljs.core.__GT_PersistentTreeMap = function __GT_PersistentTreeMap(comp, tree, cnt, meta, __hash) {
  return new cljs.core.PersistentTreeMap(comp, tree, cnt, meta, __hash);
};
cljs.core.PersistentTreeMap.EMPTY = new cljs.core.PersistentTreeMap(cljs.core.compare, null, 0, null, cljs.core.empty_unordered_hash);
cljs.core.PersistentTreeMap.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4903__auto__ = this;
  return cljs.core.es6_iterator(this__4903__auto__);
};
cljs.core.hash_map = function() {
  var hash_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq(keyvals);
    var out = cljs.core.transient$(cljs.core.PersistentHashMap.EMPTY);
    while (true) {
      if (in$) {
        var G__13968 = cljs.core.nnext(in$);
        var G__13969 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
        in$ = G__13968;
        out = G__13969;
        continue;
      } else {
        return cljs.core.persistent_BANG_(out);
      }
      break;
    }
  };
  var hash_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      var G__13970__i = 0, G__13970__a = new Array(arguments.length - 0);
      while (G__13970__i < G__13970__a.length) {
        G__13970__a[G__13970__i] = arguments[G__13970__i + 0];
        ++G__13970__i;
      }
      keyvals = new cljs.core.IndexedSeq(G__13970__a, 0);
    }
    return hash_map__delegate.call(this, keyvals);
  };
  hash_map.cljs$lang$maxFixedArity = 0;
  hash_map.cljs$lang$applyTo = function(arglist__13971) {
    var keyvals = cljs.core.seq(arglist__13971);
    return hash_map__delegate(keyvals);
  };
  hash_map.cljs$core$IFn$_invoke$arity$variadic = hash_map__delegate;
  return hash_map;
}();
cljs.core.array_map = function() {
  var array_map__delegate = function(keyvals) {
    return cljs.core.PersistentArrayMap.fromArray(cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array, keyvals), true, false);
  };
  var array_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      var G__13972__i = 0, G__13972__a = new Array(arguments.length - 0);
      while (G__13972__i < G__13972__a.length) {
        G__13972__a[G__13972__i] = arguments[G__13972__i + 0];
        ++G__13972__i;
      }
      keyvals = new cljs.core.IndexedSeq(G__13972__a, 0);
    }
    return array_map__delegate.call(this, keyvals);
  };
  array_map.cljs$lang$maxFixedArity = 0;
  array_map.cljs$lang$applyTo = function(arglist__13973) {
    var keyvals = cljs.core.seq(arglist__13973);
    return array_map__delegate(keyvals);
  };
  array_map.cljs$core$IFn$_invoke$arity$variadic = array_map__delegate;
  return array_map;
}();
cljs.core.obj_map = function() {
  var obj_map__delegate = function(keyvals) {
    var ks = [];
    var obj = function() {
      var obj13977 = {};
      return obj13977;
    }();
    var kvs = cljs.core.seq(keyvals);
    while (true) {
      if (kvs) {
        ks.push(cljs.core.first(kvs));
        obj[cljs.core.first(kvs)] = cljs.core.second(kvs);
        var G__13978 = cljs.core.nnext(kvs);
        kvs = G__13978;
        continue;
      } else {
        return cljs.core.ObjMap.fromObject(ks, obj);
      }
      break;
    }
  };
  var obj_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      var G__13979__i = 0, G__13979__a = new Array(arguments.length - 0);
      while (G__13979__i < G__13979__a.length) {
        G__13979__a[G__13979__i] = arguments[G__13979__i + 0];
        ++G__13979__i;
      }
      keyvals = new cljs.core.IndexedSeq(G__13979__a, 0);
    }
    return obj_map__delegate.call(this, keyvals);
  };
  obj_map.cljs$lang$maxFixedArity = 0;
  obj_map.cljs$lang$applyTo = function(arglist__13980) {
    var keyvals = cljs.core.seq(arglist__13980);
    return obj_map__delegate(keyvals);
  };
  obj_map.cljs$core$IFn$_invoke$arity$variadic = obj_map__delegate;
  return obj_map;
}();
cljs.core.sorted_map = function() {
  var sorted_map__delegate = function(keyvals) {
    var in$ = cljs.core.seq(keyvals);
    var out = cljs.core.PersistentTreeMap.EMPTY;
    while (true) {
      if (in$) {
        var G__13981 = cljs.core.nnext(in$);
        var G__13982 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
        in$ = G__13981;
        out = G__13982;
        continue;
      } else {
        return out;
      }
      break;
    }
  };
  var sorted_map = function(var_args) {
    var keyvals = null;
    if (arguments.length > 0) {
      var G__13983__i = 0, G__13983__a = new Array(arguments.length - 0);
      while (G__13983__i < G__13983__a.length) {
        G__13983__a[G__13983__i] = arguments[G__13983__i + 0];
        ++G__13983__i;
      }
      keyvals = new cljs.core.IndexedSeq(G__13983__a, 0);
    }
    return sorted_map__delegate.call(this, keyvals);
  };
  sorted_map.cljs$lang$maxFixedArity = 0;
  sorted_map.cljs$lang$applyTo = function(arglist__13984) {
    var keyvals = cljs.core.seq(arglist__13984);
    return sorted_map__delegate(keyvals);
  };
  sorted_map.cljs$core$IFn$_invoke$arity$variadic = sorted_map__delegate;
  return sorted_map;
}();
cljs.core.sorted_map_by = function() {
  var sorted_map_by__delegate = function(comparator, keyvals) {
    var in$ = cljs.core.seq(keyvals);
    var out = new cljs.core.PersistentTreeMap(cljs.core.fn__GT_comparator(comparator), null, 0, null, 0);
    while (true) {
      if (in$) {
        var G__13985 = cljs.core.nnext(in$);
        var G__13986 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(out, cljs.core.first(in$), cljs.core.second(in$));
        in$ = G__13985;
        out = G__13986;
        continue;
      } else {
        return out;
      }
      break;
    }
  };
  var sorted_map_by = function(comparator, var_args) {
    var keyvals = null;
    if (arguments.length > 1) {
      var G__13987__i = 0, G__13987__a = new Array(arguments.length - 1);
      while (G__13987__i < G__13987__a.length) {
        G__13987__a[G__13987__i] = arguments[G__13987__i + 1];
        ++G__13987__i;
      }
      keyvals = new cljs.core.IndexedSeq(G__13987__a, 0);
    }
    return sorted_map_by__delegate.call(this, comparator, keyvals);
  };
  sorted_map_by.cljs$lang$maxFixedArity = 1;
  sorted_map_by.cljs$lang$applyTo = function(arglist__13988) {
    var comparator = cljs.core.first(arglist__13988);
    var keyvals = cljs.core.rest(arglist__13988);
    return sorted_map_by__delegate(comparator, keyvals);
  };
  sorted_map_by.cljs$core$IFn$_invoke$arity$variadic = sorted_map_by__delegate;
  return sorted_map_by;
}();
cljs.core.KeySeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.KeySeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.KeySeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.KeySeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.KeySeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__13989 = self__.mseq;
    if (G__13989) {
      var bit__4606__auto__ = G__13989.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4606__auto__ || G__13989.cljs$core$INext$) {
        return true;
      } else {
        if (!G__13989.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__13989);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__13989);
    }
  }() ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.KeySeq(nseq, self__._meta);
  }
};
cljs.core.KeySeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.KeySeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
  return me.cljs$core$IMapEntry$_key$arity$1(null);
};
cljs.core.KeySeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__13990 = self__.mseq;
    if (G__13990) {
      var bit__4606__auto__ = G__13990.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4606__auto__ || G__13990.cljs$core$INext$) {
        return true;
      } else {
        if (!G__13990.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__13990);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__13990);
    }
  }() ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.KeySeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.KeySeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.KeySeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.KeySeq(self__.mseq, new_meta);
};
cljs.core.KeySeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.KeySeq.cljs$lang$type = true;
cljs.core.KeySeq.cljs$lang$ctorStr = "cljs.core/KeySeq";
cljs.core.KeySeq.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/KeySeq");
};
cljs.core.__GT_KeySeq = function __GT_KeySeq(mseq, _meta) {
  return new cljs.core.KeySeq(mseq, _meta);
};
cljs.core.KeySeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4903__auto__ = this;
  return cljs.core.es6_iterator(this__4903__auto__);
};
cljs.core.keys = function keys(hash_map) {
  var temp__4126__auto__ = cljs.core.seq(hash_map);
  if (temp__4126__auto__) {
    var mseq = temp__4126__auto__;
    return new cljs.core.KeySeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.key = function key(map_entry) {
  return cljs.core._key(map_entry);
};
cljs.core.ValSeq = function(mseq, _meta) {
  this.mseq = mseq;
  this._meta = _meta;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 32374988;
};
cljs.core.ValSeq.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.ValSeq.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.ValSeq.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__._meta;
};
cljs.core.ValSeq.prototype.cljs$core$INext$_next$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__13991 = self__.mseq;
    if (G__13991) {
      var bit__4606__auto__ = G__13991.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4606__auto__ || G__13991.cljs$core$INext$) {
        return true;
      } else {
        if (!G__13991.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__13991);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__13991);
    }
  }() ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (nseq == null) {
    return null;
  } else {
    return new cljs.core.ValSeq(nseq, self__._meta);
  }
};
cljs.core.ValSeq.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.hash_ordered_coll(coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.equiv_sequential(coll__$1, other);
};
cljs.core.ValSeq.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__._meta);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$2 = function(coll, f) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$2(f, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$IReduce$_reduce$arity$3 = function(coll, f, start) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.seq_reduce.cljs$core$IFn$_invoke$arity$3(f, start, coll__$1);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_first$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var me = self__.mseq.cljs$core$ISeq$_first$arity$1(null);
  return me.cljs$core$IMapEntry$_val$arity$1(null);
};
cljs.core.ValSeq.prototype.cljs$core$ISeq$_rest$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var nseq = function() {
    var G__13992 = self__.mseq;
    if (G__13992) {
      var bit__4606__auto__ = G__13992.cljs$lang$protocol_mask$partition0$ & 128;
      if (bit__4606__auto__ || G__13992.cljs$core$INext$) {
        return true;
      } else {
        if (!G__13992.cljs$lang$protocol_mask$partition0$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__13992);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.INext, G__13992);
    }
  }() ? self__.mseq.cljs$core$INext$_next$arity$1(null) : cljs.core.next(self__.mseq);
  if (!(nseq == null)) {
    return new cljs.core.ValSeq(nseq, self__._meta);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.ValSeq.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return coll__$1;
};
cljs.core.ValSeq.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, new_meta) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.ValSeq(self__.mseq, new_meta);
};
cljs.core.ValSeq.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.cons(o, coll__$1);
};
cljs.core.ValSeq.cljs$lang$type = true;
cljs.core.ValSeq.cljs$lang$ctorStr = "cljs.core/ValSeq";
cljs.core.ValSeq.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/ValSeq");
};
cljs.core.__GT_ValSeq = function __GT_ValSeq(mseq, _meta) {
  return new cljs.core.ValSeq(mseq, _meta);
};
cljs.core.ValSeq.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4903__auto__ = this;
  return cljs.core.es6_iterator(this__4903__auto__);
};
cljs.core.vals = function vals(hash_map) {
  var temp__4126__auto__ = cljs.core.seq(hash_map);
  if (temp__4126__auto__) {
    var mseq = temp__4126__auto__;
    return new cljs.core.ValSeq(mseq, null);
  } else {
    return null;
  }
};
cljs.core.val = function val(map_entry) {
  return cljs.core._val(map_entry);
};
cljs.core.merge = function() {
  var merge__delegate = function(maps) {
    if (cljs.core.truth_(cljs.core.some(cljs.core.identity, maps))) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(function(p1__13993_SHARP_, p2__13994_SHARP_) {
        return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(function() {
          var or__3925__auto__ = p1__13993_SHARP_;
          if (cljs.core.truth_(or__3925__auto__)) {
            return or__3925__auto__;
          } else {
            return cljs.core.PersistentArrayMap.EMPTY;
          }
        }(), p2__13994_SHARP_);
      }, maps);
    } else {
      return null;
    }
  };
  var merge = function(var_args) {
    var maps = null;
    if (arguments.length > 0) {
      var G__13995__i = 0, G__13995__a = new Array(arguments.length - 0);
      while (G__13995__i < G__13995__a.length) {
        G__13995__a[G__13995__i] = arguments[G__13995__i + 0];
        ++G__13995__i;
      }
      maps = new cljs.core.IndexedSeq(G__13995__a, 0);
    }
    return merge__delegate.call(this, maps);
  };
  merge.cljs$lang$maxFixedArity = 0;
  merge.cljs$lang$applyTo = function(arglist__13996) {
    var maps = cljs.core.seq(arglist__13996);
    return merge__delegate(maps);
  };
  merge.cljs$core$IFn$_invoke$arity$variadic = merge__delegate;
  return merge;
}();
cljs.core.merge_with = function() {
  var merge_with__delegate = function(f, maps) {
    if (cljs.core.truth_(cljs.core.some(cljs.core.identity, maps))) {
      var merge_entry = function(m, e) {
        var k = cljs.core.first(e);
        var v = cljs.core.second(e);
        if (cljs.core.contains_QMARK_(m, k)) {
          return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, function() {
            var G__13999 = cljs.core.get.cljs$core$IFn$_invoke$arity$2(m, k);
            var G__14000 = v;
            return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__13999, G__14000) : f.call(null, G__13999, G__14000);
          }());
        } else {
          return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(m, k, v);
        }
      };
      var merge2 = function(merge_entry) {
        return function(m1, m2) {
          return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(merge_entry, function() {
            var or__3925__auto__ = m1;
            if (cljs.core.truth_(or__3925__auto__)) {
              return or__3925__auto__;
            } else {
              return cljs.core.PersistentArrayMap.EMPTY;
            }
          }(), cljs.core.seq(m2));
        };
      }(merge_entry);
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$2(merge2, maps);
    } else {
      return null;
    }
  };
  var merge_with = function(f, var_args) {
    var maps = null;
    if (arguments.length > 1) {
      var G__14001__i = 0, G__14001__a = new Array(arguments.length - 1);
      while (G__14001__i < G__14001__a.length) {
        G__14001__a[G__14001__i] = arguments[G__14001__i + 1];
        ++G__14001__i;
      }
      maps = new cljs.core.IndexedSeq(G__14001__a, 0);
    }
    return merge_with__delegate.call(this, f, maps);
  };
  merge_with.cljs$lang$maxFixedArity = 1;
  merge_with.cljs$lang$applyTo = function(arglist__14002) {
    var f = cljs.core.first(arglist__14002);
    var maps = cljs.core.rest(arglist__14002);
    return merge_with__delegate(f, maps);
  };
  merge_with.cljs$core$IFn$_invoke$arity$variadic = merge_with__delegate;
  return merge_with;
}();
cljs.core.select_keys = function select_keys(map, keyseq) {
  var ret = cljs.core.PersistentArrayMap.EMPTY;
  var keys = cljs.core.seq(keyseq);
  while (true) {
    if (keys) {
      var key = cljs.core.first(keys);
      var entry = cljs.core.get.cljs$core$IFn$_invoke$arity$3(map, key, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185));
      var G__14003 = cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(entry, new cljs.core.Keyword("cljs.core", "not-found", "cljs.core/not-found", -1572889185)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, key, entry) : ret;
      var G__14004 = cljs.core.next(keys);
      ret = G__14003;
      keys = G__14004;
      continue;
    } else {
      return cljs.core.with_meta(ret, cljs.core.meta(map));
    }
    break;
  }
};
cljs.core.PersistentHashSet = function(meta, hash_map, __hash) {
  this.meta = meta;
  this.hash_map = hash_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 15077647;
  this.cljs$lang$protocol_mask$partition1$ = 8196;
};
cljs.core.PersistentHashSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentHashSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentHashSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentHashSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentHashSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__14007 = cljs.core.seq(coll);
  var chunk__14008 = null;
  var count__14009 = 0;
  var i__14010 = 0;
  while (true) {
    if (i__14010 < count__14009) {
      var vec__14011 = chunk__14008.cljs$core$IIndexed$_nth$arity$2(null, i__14010);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14011, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14011, 1, null);
      var G__14012_14017 = v;
      var G__14013_14018 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14012_14017, G__14013_14018) : f.call(null, G__14012_14017, G__14013_14018);
      var G__14019 = seq__14007;
      var G__14020 = chunk__14008;
      var G__14021 = count__14009;
      var G__14022 = i__14010 + 1;
      seq__14007 = G__14019;
      chunk__14008 = G__14020;
      count__14009 = G__14021;
      i__14010 = G__14022;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__14007);
      if (temp__4126__auto__) {
        var seq__14007__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__14007__$1)) {
          var c__4712__auto__ = cljs.core.chunk_first(seq__14007__$1);
          var G__14023 = cljs.core.chunk_rest(seq__14007__$1);
          var G__14024 = c__4712__auto__;
          var G__14025 = cljs.core.count(c__4712__auto__);
          var G__14026 = 0;
          seq__14007 = G__14023;
          chunk__14008 = G__14024;
          count__14009 = G__14025;
          i__14010 = G__14026;
          continue;
        } else {
          var vec__14014 = cljs.core.first(seq__14007__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14014, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14014, 1, null);
          var G__14015_14027 = v;
          var G__14016_14028 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14015_14027, G__14016_14028) : f.call(null, G__14015_14027, G__14016_14028);
          var G__14029 = cljs.core.next(seq__14007__$1);
          var G__14030 = null;
          var G__14031 = 0;
          var G__14032 = 0;
          seq__14007 = G__14029;
          chunk__14008 = G__14030;
          count__14009 = G__14031;
          i__14010 = G__14032;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, v, null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core._contains_key_QMARK_(self__.hash_map, v)) {
    return v;
  } else {
    return not_found;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._count(self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4346__auto__ = self__.__hash;
  if (!(h__4346__auto__ == null)) {
    return h__4346__auto__;
  } else {
    var h__4346__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4346__auto____$1;
    return h__4346__auto____$1;
  }
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_(other) && cljs.core.count(coll__$1) === cljs.core.count(other) && cljs.core.every_QMARK_(function(coll__$1) {
    return function(p1__14005_SHARP_) {
      return cljs.core.contains_QMARK_(coll__$1, p1__14005_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEditableCollection$_as_transient$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.TransientHashSet(cljs.core._as_transient(self__.hash_map));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.with_meta(cljs.core.PersistentHashSet.EMPTY, self__.meta);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core._dissoc(self__.hash_map, v), null);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys(self__.hash_map);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(meta__$1, self__.hash_map, self__.__hash);
};
cljs.core.PersistentHashSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentHashSet(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.hash_map, o, null), null);
};
cljs.core.PersistentHashSet.prototype.call = function() {
  var G__14033 = null;
  var G__14033__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__14033__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__14033 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__14033__2.call(this, self__, k);
      case 3:
        return G__14033__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__14033.cljs$core$IFn$_invoke$arity$2 = G__14033__2;
  G__14033.cljs$core$IFn$_invoke$arity$3 = G__14033__3;
  return G__14033;
}();
cljs.core.PersistentHashSet.prototype.apply = function(self__, args14006) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args14006)));
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentHashSet.cljs$lang$type = true;
cljs.core.PersistentHashSet.cljs$lang$ctorStr = "cljs.core/PersistentHashSet";
cljs.core.PersistentHashSet.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/PersistentHashSet");
};
cljs.core.__GT_PersistentHashSet = function __GT_PersistentHashSet(meta, hash_map, __hash) {
  return new cljs.core.PersistentHashSet(meta, hash_map, __hash);
};
cljs.core.PersistentHashSet.EMPTY = new cljs.core.PersistentHashSet(null, cljs.core.PersistentArrayMap.EMPTY, cljs.core.empty_unordered_hash);
cljs.core.PersistentHashSet.fromArray = function(items, no_clone) {
  var len = items.length;
  if (len <= cljs.core.PersistentArrayMap.HASHMAP_THRESHOLD) {
    var arr = no_clone ? items : cljs.core.aclone(items);
    var i = 0;
    var out = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
    while (true) {
      if (i < len) {
        var G__14034 = i + 1;
        var G__14035 = cljs.core._assoc_BANG_(out, items[i], null);
        i = G__14034;
        out = G__14035;
        continue;
      } else {
        return new cljs.core.PersistentHashSet(null, cljs.core._persistent_BANG_(out), null);
      }
      break;
    }
  } else {
    var i = 0;
    var out = cljs.core.transient$(cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < len) {
        var G__14036 = i + 1;
        var G__14037 = cljs.core._conj_BANG_(out, items[i]);
        i = G__14036;
        out = G__14037;
        continue;
      } else {
        return cljs.core._persistent_BANG_(out);
      }
      break;
    }
  }
};
cljs.core.PersistentHashSet.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4903__auto__ = this;
  return cljs.core.es6_iterator(this__4903__auto__);
};
cljs.core.TransientHashSet = function(transient_map) {
  this.transient_map = transient_map;
  this.cljs$lang$protocol_mask$partition0$ = 259;
  this.cljs$lang$protocol_mask$partition1$ = 136;
};
cljs.core.TransientHashSet.prototype.call = function() {
  var G__14039 = null;
  var G__14039__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return null;
    } else {
      return k;
    }
  };
  var G__14039__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var tcoll = self____$1;
    if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
      return not_found;
    } else {
      return k;
    }
  };
  G__14039 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__14039__2.call(this, self__, k);
      case 3:
        return G__14039__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__14039.cljs$core$IFn$_invoke$arity$2 = G__14039__2;
  G__14039.cljs$core$IFn$_invoke$arity$3 = G__14039__3;
  return G__14039;
}();
cljs.core.TransientHashSet.prototype.apply = function(self__, args14038) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args14038)));
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return null;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var tcoll = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, k, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return k;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(tcoll__$1, v, null);
};
cljs.core.TransientHashSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(tcoll, v, not_found) {
  var self__ = this;
  var tcoll__$1 = this;
  if (cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(self__.transient_map, v, cljs.core.lookup_sentinel) === cljs.core.lookup_sentinel) {
    return not_found;
  } else {
    return v;
  }
};
cljs.core.TransientHashSet.prototype.cljs$core$ICounted$_count$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return cljs.core.count(self__.transient_map);
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientSet$_disjoin_BANG_$arity$2 = function(tcoll, v) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.dissoc_BANG_.cljs$core$IFn$_invoke$arity$2(self__.transient_map, v);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_conj_BANG_$arity$2 = function(tcoll, o) {
  var self__ = this;
  var tcoll__$1 = this;
  self__.transient_map = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(self__.transient_map, o, null);
  return tcoll__$1;
};
cljs.core.TransientHashSet.prototype.cljs$core$ITransientCollection$_persistent_BANG_$arity$1 = function(tcoll) {
  var self__ = this;
  var tcoll__$1 = this;
  return new cljs.core.PersistentHashSet(null, cljs.core.persistent_BANG_(self__.transient_map), null);
};
cljs.core.TransientHashSet.cljs$lang$type = true;
cljs.core.TransientHashSet.cljs$lang$ctorStr = "cljs.core/TransientHashSet";
cljs.core.TransientHashSet.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/TransientHashSet");
};
cljs.core.__GT_TransientHashSet = function __GT_TransientHashSet(transient_map) {
  return new cljs.core.TransientHashSet(transient_map);
};
cljs.core.PersistentTreeSet = function(meta, tree_map, __hash) {
  this.meta = meta;
  this.tree_map = tree_map;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 417730831;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.PersistentTreeSet.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.PersistentTreeSet.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.PersistentTreeSet.prototype.keys = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.entries = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_set_entries_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.values = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.es6_iterator(cljs.core.seq(coll));
};
cljs.core.PersistentTreeSet.prototype.has = function(k) {
  var self__ = this;
  var coll = this;
  return cljs.core.contains_QMARK_(coll, k);
};
cljs.core.PersistentTreeSet.prototype.forEach = function(f) {
  var self__ = this;
  var coll = this;
  var seq__14042 = cljs.core.seq(coll);
  var chunk__14043 = null;
  var count__14044 = 0;
  var i__14045 = 0;
  while (true) {
    if (i__14045 < count__14044) {
      var vec__14046 = chunk__14043.cljs$core$IIndexed$_nth$arity$2(null, i__14045);
      var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14046, 0, null);
      var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14046, 1, null);
      var G__14047_14052 = v;
      var G__14048_14053 = k;
      f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14047_14052, G__14048_14053) : f.call(null, G__14047_14052, G__14048_14053);
      var G__14054 = seq__14042;
      var G__14055 = chunk__14043;
      var G__14056 = count__14044;
      var G__14057 = i__14045 + 1;
      seq__14042 = G__14054;
      chunk__14043 = G__14055;
      count__14044 = G__14056;
      i__14045 = G__14057;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__14042);
      if (temp__4126__auto__) {
        var seq__14042__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__14042__$1)) {
          var c__4712__auto__ = cljs.core.chunk_first(seq__14042__$1);
          var G__14058 = cljs.core.chunk_rest(seq__14042__$1);
          var G__14059 = c__4712__auto__;
          var G__14060 = cljs.core.count(c__4712__auto__);
          var G__14061 = 0;
          seq__14042 = G__14058;
          chunk__14043 = G__14059;
          count__14044 = G__14060;
          i__14045 = G__14061;
          continue;
        } else {
          var vec__14049 = cljs.core.first(seq__14042__$1);
          var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14049, 0, null);
          var v = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14049, 1, null);
          var G__14050_14062 = v;
          var G__14051_14063 = k;
          f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14050_14062, G__14051_14063) : f.call(null, G__14050_14062, G__14051_14063);
          var G__14064 = cljs.core.next(seq__14042__$1);
          var G__14065 = null;
          var G__14066 = 0;
          var G__14067 = 0;
          seq__14042 = G__14064;
          chunk__14043 = G__14065;
          count__14044 = G__14066;
          i__14045 = G__14067;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._lookup.cljs$core$IFn$_invoke$arity$3(coll__$1, v, null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ILookup$_lookup$arity$3 = function(coll, v, not_found) {
  var self__ = this;
  var coll__$1 = this;
  var n = self__.tree_map.entry_at(v);
  if (!(n == null)) {
    return n.key;
  } else {
    return not_found;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IMeta$_meta$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return self__.meta;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICounted$_count$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.count(self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IReversible$_rseq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  if (cljs.core.count(self__.tree_map) > 0) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core.rseq(self__.tree_map));
  } else {
    return null;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IHash$_hash$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var h__4346__auto__ = self__.__hash;
  if (!(h__4346__auto__ == null)) {
    return h__4346__auto__;
  } else {
    var h__4346__auto____$1 = cljs.core.hash_unordered_coll(coll__$1);
    self__.__hash = h__4346__auto____$1;
    return h__4346__auto____$1;
  }
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(coll, other) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.set_QMARK_(other) && cljs.core.count(coll__$1) === cljs.core.count(other) && cljs.core.every_QMARK_(function(coll__$1) {
    return function(p1__14040_SHARP_) {
      return cljs.core.contains_QMARK_(coll__$1, p1__14040_SHARP_);
    };
  }(coll__$1), other);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core._empty(self__.tree_map), 0);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISet$_disjoin$arity$2 = function(coll, v) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(self__.tree_map, v), null);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.keys(self__.tree_map);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(coll, meta__$1) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(meta__$1, self__.tree_map, self__.__hash);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ICollection$_conj$arity$2 = function(coll, o) {
  var self__ = this;
  var coll__$1 = this;
  return new cljs.core.PersistentTreeSet(self__.meta, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(self__.tree_map, o, null), null);
};
cljs.core.PersistentTreeSet.prototype.call = function() {
  var G__14068 = null;
  var G__14068__2 = function(self__, k) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
  };
  var G__14068__3 = function(self__, k, not_found) {
    var self__ = this;
    var self____$1 = this;
    var coll = self____$1;
    return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
  };
  G__14068 = function(self__, k, not_found) {
    switch(arguments.length) {
      case 2:
        return G__14068__2.call(this, self__, k);
      case 3:
        return G__14068__3.call(this, self__, k, not_found);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__14068.cljs$core$IFn$_invoke$arity$2 = G__14068__2;
  G__14068.cljs$core$IFn$_invoke$arity$3 = G__14068__3;
  return G__14068;
}();
cljs.core.PersistentTreeSet.prototype.apply = function(self__, args14041) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args14041)));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$1 = function(k) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$2(null, k);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IFn$_invoke$arity$2 = function(k, not_found) {
  var self__ = this;
  var coll = this;
  return coll.cljs$core$ILookup$_lookup$arity$3(null, k, not_found);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq$arity$2 = function(coll, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core._sorted_seq(self__.tree_map, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_sorted_seq_from$arity$3 = function(coll, k, ascending_QMARK_) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.map.cljs$core$IFn$_invoke$arity$2(cljs.core.key, cljs.core._sorted_seq_from(self__.tree_map, k, ascending_QMARK_));
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_entry_key$arity$2 = function(coll, entry) {
  var self__ = this;
  var coll__$1 = this;
  return entry;
};
cljs.core.PersistentTreeSet.prototype.cljs$core$ISorted$_comparator$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._comparator(self__.tree_map);
};
cljs.core.PersistentTreeSet.cljs$lang$type = true;
cljs.core.PersistentTreeSet.cljs$lang$ctorStr = "cljs.core/PersistentTreeSet";
cljs.core.PersistentTreeSet.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/PersistentTreeSet");
};
cljs.core.__GT_PersistentTreeSet = function __GT_PersistentTreeSet(meta, tree_map, __hash) {
  return new cljs.core.PersistentTreeSet(meta, tree_map, __hash);
};
cljs.core.PersistentTreeSet.EMPTY = new cljs.core.PersistentTreeSet(null, cljs.core.PersistentTreeMap.EMPTY, cljs.core.empty_unordered_hash);
cljs.core.PersistentTreeSet.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4903__auto__ = this;
  return cljs.core.es6_iterator(this__4903__auto__);
};
cljs.core.set_from_indexed_seq = function set_from_indexed_seq(iseq) {
  var arr = iseq.arr;
  var ret = function() {
    var a__4806__auto__ = arr;
    var i = 0;
    var res = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
    while (true) {
      if (i < a__4806__auto__.length) {
        var G__14069 = i + 1;
        var G__14070 = res.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null, arr[i]);
        i = G__14069;
        res = G__14070;
        continue;
      } else {
        return res;
      }
      break;
    }
  }();
  return ret.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
};
cljs.core.set = function set(coll) {
  var in$ = cljs.core.seq(coll);
  if (in$ == null) {
    return cljs.core.PersistentHashSet.EMPTY;
  } else {
    if (in$ instanceof cljs.core.IndexedSeq && in$.i === 0) {
      return cljs.core.set_from_indexed_seq(in$);
    } else {
      var in$__$1 = in$;
      var out = cljs.core._as_transient(cljs.core.PersistentHashSet.EMPTY);
      while (true) {
        if (!(in$__$1 == null)) {
          var G__14071 = in$__$1.cljs$core$INext$_next$arity$1(null);
          var G__14072 = out.cljs$core$ITransientCollection$_conj_BANG_$arity$2(null, in$__$1.cljs$core$ISeq$_first$arity$1(null));
          in$__$1 = G__14071;
          out = G__14072;
          continue;
        } else {
          return out.cljs$core$ITransientCollection$_persistent_BANG_$arity$1(null);
        }
        break;
      }
    }
  }
};
cljs.core.hash_set = function() {
  var hash_set = null;
  var hash_set__0 = function() {
    return cljs.core.PersistentHashSet.EMPTY;
  };
  var hash_set__1 = function() {
    var G__14073__delegate = function(keys) {
      return cljs.core.set(keys);
    };
    var G__14073 = function(var_args) {
      var keys = null;
      if (arguments.length > 0) {
        var G__14074__i = 0, G__14074__a = new Array(arguments.length - 0);
        while (G__14074__i < G__14074__a.length) {
          G__14074__a[G__14074__i] = arguments[G__14074__i + 0];
          ++G__14074__i;
        }
        keys = new cljs.core.IndexedSeq(G__14074__a, 0);
      }
      return G__14073__delegate.call(this, keys);
    };
    G__14073.cljs$lang$maxFixedArity = 0;
    G__14073.cljs$lang$applyTo = function(arglist__14075) {
      var keys = cljs.core.seq(arglist__14075);
      return G__14073__delegate(keys);
    };
    G__14073.cljs$core$IFn$_invoke$arity$variadic = G__14073__delegate;
    return G__14073;
  }();
  hash_set = function(var_args) {
    var keys = var_args;
    switch(arguments.length) {
      case 0:
        return hash_set__0.call(this);
      default:
        var G__14076 = null;
        if (arguments.length > 0) {
          var G__14077__i = 0, G__14077__a = new Array(arguments.length - 0);
          while (G__14077__i < G__14077__a.length) {
            G__14077__a[G__14077__i] = arguments[G__14077__i + 0];
            ++G__14077__i;
          }
          G__14076 = new cljs.core.IndexedSeq(G__14077__a, 0);
        }
        return hash_set__1.cljs$core$IFn$_invoke$arity$variadic(G__14076);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  hash_set.cljs$lang$maxFixedArity = 0;
  hash_set.cljs$lang$applyTo = hash_set__1.cljs$lang$applyTo;
  hash_set.cljs$core$IFn$_invoke$arity$0 = hash_set__0;
  hash_set.cljs$core$IFn$_invoke$arity$variadic = hash_set__1.cljs$core$IFn$_invoke$arity$variadic;
  return hash_set;
}();
cljs.core.sorted_set = function() {
  var sorted_set__delegate = function(keys) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, cljs.core.PersistentTreeSet.EMPTY, keys);
  };
  var sorted_set = function(var_args) {
    var keys = null;
    if (arguments.length > 0) {
      var G__14078__i = 0, G__14078__a = new Array(arguments.length - 0);
      while (G__14078__i < G__14078__a.length) {
        G__14078__a[G__14078__i] = arguments[G__14078__i + 0];
        ++G__14078__i;
      }
      keys = new cljs.core.IndexedSeq(G__14078__a, 0);
    }
    return sorted_set__delegate.call(this, keys);
  };
  sorted_set.cljs$lang$maxFixedArity = 0;
  sorted_set.cljs$lang$applyTo = function(arglist__14079) {
    var keys = cljs.core.seq(arglist__14079);
    return sorted_set__delegate(keys);
  };
  sorted_set.cljs$core$IFn$_invoke$arity$variadic = sorted_set__delegate;
  return sorted_set;
}();
cljs.core.sorted_set_by = function() {
  var sorted_set_by__delegate = function(comparator, keys) {
    return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core._conj, new cljs.core.PersistentTreeSet(null, cljs.core.sorted_map_by(comparator), 0), keys);
  };
  var sorted_set_by = function(comparator, var_args) {
    var keys = null;
    if (arguments.length > 1) {
      var G__14080__i = 0, G__14080__a = new Array(arguments.length - 1);
      while (G__14080__i < G__14080__a.length) {
        G__14080__a[G__14080__i] = arguments[G__14080__i + 1];
        ++G__14080__i;
      }
      keys = new cljs.core.IndexedSeq(G__14080__a, 0);
    }
    return sorted_set_by__delegate.call(this, comparator, keys);
  };
  sorted_set_by.cljs$lang$maxFixedArity = 1;
  sorted_set_by.cljs$lang$applyTo = function(arglist__14081) {
    var comparator = cljs.core.first(arglist__14081);
    var keys = cljs.core.rest(arglist__14081);
    return sorted_set_by__delegate(comparator, keys);
  };
  sorted_set_by.cljs$core$IFn$_invoke$arity$variadic = sorted_set_by__delegate;
  return sorted_set_by;
}();
cljs.core.replace = function() {
  var replace = null;
  var replace__1 = function(smap) {
    return cljs.core.map.cljs$core$IFn$_invoke$arity$1(function(p1__14082_SHARP_) {
      var temp__4124__auto__ = cljs.core.find(smap, p1__14082_SHARP_);
      if (cljs.core.truth_(temp__4124__auto__)) {
        var e = temp__4124__auto__;
        return cljs.core.val(e);
      } else {
        return p1__14082_SHARP_;
      }
    });
  };
  var replace__2 = function(smap, coll) {
    if (cljs.core.vector_QMARK_(coll)) {
      var n = cljs.core.count(coll);
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(n) {
        return function(v, i) {
          var temp__4124__auto__ = cljs.core.find(smap, cljs.core.nth.cljs$core$IFn$_invoke$arity$2(v, i));
          if (cljs.core.truth_(temp__4124__auto__)) {
            var e = temp__4124__auto__;
            return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(v, i, cljs.core.second(e));
          } else {
            return v;
          }
        };
      }(n), coll, cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, cljs.core.iterate(cljs.core.inc, 0)));
    } else {
      return cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(p1__14083_SHARP_) {
        var temp__4124__auto__ = cljs.core.find(smap, p1__14083_SHARP_);
        if (cljs.core.truth_(temp__4124__auto__)) {
          var e = temp__4124__auto__;
          return cljs.core.second(e);
        } else {
          return p1__14083_SHARP_;
        }
      }, coll);
    }
  };
  replace = function(smap, coll) {
    switch(arguments.length) {
      case 1:
        return replace__1.call(this, smap);
      case 2:
        return replace__2.call(this, smap, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  replace.cljs$core$IFn$_invoke$arity$1 = replace__1;
  replace.cljs$core$IFn$_invoke$arity$2 = replace__2;
  return replace;
}();
cljs.core.distinct = function() {
  var distinct = null;
  var distinct__0 = function() {
    return function(rf) {
      var seen = cljs.core.volatile_BANG_(cljs.core.PersistentHashSet.EMPTY);
      return function(seen) {
        return function() {
          var G__14104 = null;
          var G__14104__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__14104__1 = function(result) {
            var G__14094 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14094) : rf.call(null, G__14094);
          };
          var G__14104__2 = function(result, input) {
            if (cljs.core.contains_QMARK_(function() {
              var G__14095 = seen;
              return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14095) : cljs.core.deref.call(null, G__14095);
            }(), input)) {
              return result;
            } else {
              seen.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen.cljs$core$IDeref$_deref$arity$1(null), input));
              var G__14096 = result;
              var G__14097 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14096, G__14097) : rf.call(null, G__14096, G__14097);
            }
          };
          G__14104 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__14104__0.call(this);
              case 1:
                return G__14104__1.call(this, result);
              case 2:
                return G__14104__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__14104.cljs$core$IFn$_invoke$arity$0 = G__14104__0;
          G__14104.cljs$core$IFn$_invoke$arity$1 = G__14104__1;
          G__14104.cljs$core$IFn$_invoke$arity$2 = G__14104__2;
          return G__14104;
        }();
      }(seen);
    };
  };
  var distinct__1 = function(coll) {
    var step = function step(xs, seen) {
      return new cljs.core.LazySeq(null, function() {
        return function(p__14102, seen__$1) {
          while (true) {
            var vec__14103 = p__14102;
            var f = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14103, 0, null);
            var xs__$1 = vec__14103;
            var temp__4126__auto__ = cljs.core.seq(xs__$1);
            if (temp__4126__auto__) {
              var s = temp__4126__auto__;
              if (cljs.core.contains_QMARK_(seen__$1, f)) {
                var G__14105 = cljs.core.rest(s);
                var G__14106 = seen__$1;
                p__14102 = G__14105;
                seen__$1 = G__14106;
                continue;
              } else {
                return cljs.core.cons(f, step(cljs.core.rest(s), cljs.core.conj.cljs$core$IFn$_invoke$arity$2(seen__$1, f)));
              }
            } else {
              return null;
            }
            break;
          }
        }.call(null, xs, seen);
      }, null, null);
    };
    return step(coll, cljs.core.PersistentHashSet.EMPTY);
  };
  distinct = function(coll) {
    switch(arguments.length) {
      case 0:
        return distinct__0.call(this);
      case 1:
        return distinct__1.call(this, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  distinct.cljs$core$IFn$_invoke$arity$0 = distinct__0;
  distinct.cljs$core$IFn$_invoke$arity$1 = distinct__1;
  return distinct;
}();
cljs.core.butlast = function butlast(s) {
  var ret = cljs.core.PersistentVector.EMPTY;
  var s__$1 = s;
  while (true) {
    if (cljs.core.next(s__$1)) {
      var G__14107 = cljs.core.conj.cljs$core$IFn$_invoke$arity$2(ret, cljs.core.first(s__$1));
      var G__14108 = cljs.core.next(s__$1);
      ret = G__14107;
      s__$1 = G__14108;
      continue;
    } else {
      return cljs.core.seq(ret);
    }
    break;
  }
};
cljs.core.name = function name(x) {
  if (function() {
    var G__14110 = x;
    if (G__14110) {
      var bit__4599__auto__ = G__14110.cljs$lang$protocol_mask$partition1$ & 4096;
      if (bit__4599__auto__ || G__14110.cljs$core$INamed$) {
        return true;
      } else {
        return false;
      }
    } else {
      return false;
    }
  }()) {
    return x.cljs$core$INamed$_name$arity$1(null);
  } else {
    if (typeof x === "string") {
      return x;
    } else {
      throw new Error([cljs.core.str("Doesn't support name: "), cljs.core.str(x)].join(""));
    }
  }
};
cljs.core.zipmap = function zipmap(keys, vals) {
  var map = cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY);
  var ks = cljs.core.seq(keys);
  var vs = cljs.core.seq(vals);
  while (true) {
    if (ks && vs) {
      var G__14111 = cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(map, cljs.core.first(ks), cljs.core.first(vs));
      var G__14112 = cljs.core.next(ks);
      var G__14113 = cljs.core.next(vs);
      map = G__14111;
      ks = G__14112;
      vs = G__14113;
      continue;
    } else {
      return cljs.core.persistent_BANG_(map);
    }
    break;
  }
};
cljs.core.max_key = function() {
  var max_key = null;
  var max_key__2 = function(k, x) {
    return x;
  };
  var max_key__3 = function(k, x, y) {
    if (function() {
      var G__14124 = x;
      return k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__14124) : k.call(null, G__14124);
    }() > function() {
      var G__14125 = y;
      return k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__14125) : k.call(null, G__14125);
    }()) {
      return x;
    } else {
      return y;
    }
  };
  var max_key__4 = function() {
    var G__14126__delegate = function(k, x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__14114_SHARP_, p2__14115_SHARP_) {
        return max_key.cljs$core$IFn$_invoke$arity$3(k, p1__14114_SHARP_, p2__14115_SHARP_);
      }, max_key.cljs$core$IFn$_invoke$arity$3(k, x, y), more);
    };
    var G__14126 = function(k, x, y, var_args) {
      var more = null;
      if (arguments.length > 3) {
        var G__14127__i = 0, G__14127__a = new Array(arguments.length - 3);
        while (G__14127__i < G__14127__a.length) {
          G__14127__a[G__14127__i] = arguments[G__14127__i + 3];
          ++G__14127__i;
        }
        more = new cljs.core.IndexedSeq(G__14127__a, 0);
      }
      return G__14126__delegate.call(this, k, x, y, more);
    };
    G__14126.cljs$lang$maxFixedArity = 3;
    G__14126.cljs$lang$applyTo = function(arglist__14128) {
      var k = cljs.core.first(arglist__14128);
      arglist__14128 = cljs.core.next(arglist__14128);
      var x = cljs.core.first(arglist__14128);
      arglist__14128 = cljs.core.next(arglist__14128);
      var y = cljs.core.first(arglist__14128);
      var more = cljs.core.rest(arglist__14128);
      return G__14126__delegate(k, x, y, more);
    };
    G__14126.cljs$core$IFn$_invoke$arity$variadic = G__14126__delegate;
    return G__14126;
  }();
  max_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return max_key__2.call(this, k, x);
      case 3:
        return max_key__3.call(this, k, x, y);
      default:
        var G__14129 = null;
        if (arguments.length > 3) {
          var G__14130__i = 0, G__14130__a = new Array(arguments.length - 3);
          while (G__14130__i < G__14130__a.length) {
            G__14130__a[G__14130__i] = arguments[G__14130__i + 3];
            ++G__14130__i;
          }
          G__14129 = new cljs.core.IndexedSeq(G__14130__a, 0);
        }
        return max_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, G__14129);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  max_key.cljs$lang$maxFixedArity = 3;
  max_key.cljs$lang$applyTo = max_key__4.cljs$lang$applyTo;
  max_key.cljs$core$IFn$_invoke$arity$2 = max_key__2;
  max_key.cljs$core$IFn$_invoke$arity$3 = max_key__3;
  max_key.cljs$core$IFn$_invoke$arity$variadic = max_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return max_key;
}();
cljs.core.min_key = function() {
  var min_key = null;
  var min_key__2 = function(k, x) {
    return x;
  };
  var min_key__3 = function(k, x, y) {
    if (function() {
      var G__14141 = x;
      return k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__14141) : k.call(null, G__14141);
    }() < function() {
      var G__14142 = y;
      return k.cljs$core$IFn$_invoke$arity$1 ? k.cljs$core$IFn$_invoke$arity$1(G__14142) : k.call(null, G__14142);
    }()) {
      return x;
    } else {
      return y;
    }
  };
  var min_key__4 = function() {
    var G__14143__delegate = function(k, x, y, more) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__14131_SHARP_, p2__14132_SHARP_) {
        return min_key.cljs$core$IFn$_invoke$arity$3(k, p1__14131_SHARP_, p2__14132_SHARP_);
      }, min_key.cljs$core$IFn$_invoke$arity$3(k, x, y), more);
    };
    var G__14143 = function(k, x, y, var_args) {
      var more = null;
      if (arguments.length > 3) {
        var G__14144__i = 0, G__14144__a = new Array(arguments.length - 3);
        while (G__14144__i < G__14144__a.length) {
          G__14144__a[G__14144__i] = arguments[G__14144__i + 3];
          ++G__14144__i;
        }
        more = new cljs.core.IndexedSeq(G__14144__a, 0);
      }
      return G__14143__delegate.call(this, k, x, y, more);
    };
    G__14143.cljs$lang$maxFixedArity = 3;
    G__14143.cljs$lang$applyTo = function(arglist__14145) {
      var k = cljs.core.first(arglist__14145);
      arglist__14145 = cljs.core.next(arglist__14145);
      var x = cljs.core.first(arglist__14145);
      arglist__14145 = cljs.core.next(arglist__14145);
      var y = cljs.core.first(arglist__14145);
      var more = cljs.core.rest(arglist__14145);
      return G__14143__delegate(k, x, y, more);
    };
    G__14143.cljs$core$IFn$_invoke$arity$variadic = G__14143__delegate;
    return G__14143;
  }();
  min_key = function(k, x, y, var_args) {
    var more = var_args;
    switch(arguments.length) {
      case 2:
        return min_key__2.call(this, k, x);
      case 3:
        return min_key__3.call(this, k, x, y);
      default:
        var G__14146 = null;
        if (arguments.length > 3) {
          var G__14147__i = 0, G__14147__a = new Array(arguments.length - 3);
          while (G__14147__i < G__14147__a.length) {
            G__14147__a[G__14147__i] = arguments[G__14147__i + 3];
            ++G__14147__i;
          }
          G__14146 = new cljs.core.IndexedSeq(G__14147__a, 0);
        }
        return min_key__4.cljs$core$IFn$_invoke$arity$variadic(k, x, y, G__14146);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  min_key.cljs$lang$maxFixedArity = 3;
  min_key.cljs$lang$applyTo = min_key__4.cljs$lang$applyTo;
  min_key.cljs$core$IFn$_invoke$arity$2 = min_key__2;
  min_key.cljs$core$IFn$_invoke$arity$3 = min_key__3;
  min_key.cljs$core$IFn$_invoke$arity$variadic = min_key__4.cljs$core$IFn$_invoke$arity$variadic;
  return min_key;
}();
cljs.core.ArrayList = function(arr) {
  this.arr = arr;
};
cljs.core.ArrayList.prototype.add = function(x) {
  var self__ = this;
  var _ = this;
  return self__.arr.push(x);
};
cljs.core.ArrayList.prototype.size = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length;
};
cljs.core.ArrayList.prototype.clear = function() {
  var self__ = this;
  var _ = this;
  return self__.arr = [];
};
cljs.core.ArrayList.prototype.isEmpty = function() {
  var self__ = this;
  var _ = this;
  return self__.arr.length === 0;
};
cljs.core.ArrayList.prototype.toArray = function() {
  var self__ = this;
  var _ = this;
  return self__.arr;
};
cljs.core.ArrayList.cljs$lang$type = true;
cljs.core.ArrayList.cljs$lang$ctorStr = "cljs.core/ArrayList";
cljs.core.ArrayList.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/ArrayList");
};
cljs.core.__GT_ArrayList = function __GT_ArrayList(arr) {
  return new cljs.core.ArrayList(arr);
};
cljs.core.array_list = function array_list() {
  return new cljs.core.ArrayList([]);
};
cljs.core.partition_all = function() {
  var partition_all = null;
  var partition_all__1 = function(n) {
    return function(rf) {
      var a = cljs.core.array_list();
      return function(a) {
        return function() {
          var G__14164 = null;
          var G__14164__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__14164__1 = function(result) {
            var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
              var v = cljs.core.vec(a.toArray());
              a.clear();
              return cljs.core.unreduced(function() {
                var G__14159 = result;
                var G__14160 = v;
                return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14159, G__14160) : rf.call(null, G__14159, G__14160);
              }());
            }();
            var G__14161 = result__$1;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14161) : rf.call(null, G__14161);
          };
          var G__14164__2 = function(result, input) {
            a.add(input);
            if (n === a.size()) {
              var v = cljs.core.vec(a.toArray());
              a.clear();
              var G__14162 = result;
              var G__14163 = v;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14162, G__14163) : rf.call(null, G__14162, G__14163);
            } else {
              return result;
            }
          };
          G__14164 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__14164__0.call(this);
              case 1:
                return G__14164__1.call(this, result);
              case 2:
                return G__14164__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__14164.cljs$core$IFn$_invoke$arity$0 = G__14164__0;
          G__14164.cljs$core$IFn$_invoke$arity$1 = G__14164__1;
          G__14164.cljs$core$IFn$_invoke$arity$2 = G__14164__2;
          return G__14164;
        }();
      }(a);
    };
  };
  var partition_all__2 = function(n, coll) {
    return partition_all.cljs$core$IFn$_invoke$arity$3(n, n, coll);
  };
  var partition_all__3 = function(n, step, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        return cljs.core.cons(cljs.core.take.cljs$core$IFn$_invoke$arity$2(n, s), partition_all.cljs$core$IFn$_invoke$arity$3(n, step, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(step, s)));
      } else {
        return null;
      }
    }, null, null);
  };
  partition_all = function(n, step, coll) {
    switch(arguments.length) {
      case 1:
        return partition_all__1.call(this, n);
      case 2:
        return partition_all__2.call(this, n, step);
      case 3:
        return partition_all__3.call(this, n, step, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_all.cljs$core$IFn$_invoke$arity$1 = partition_all__1;
  partition_all.cljs$core$IFn$_invoke$arity$2 = partition_all__2;
  partition_all.cljs$core$IFn$_invoke$arity$3 = partition_all__3;
  return partition_all;
}();
cljs.core.take_while = function() {
  var take_while = null;
  var take_while__1 = function(pred) {
    return function(rf) {
      return function() {
        var G__14177 = null;
        var G__14177__0 = function() {
          return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
        };
        var G__14177__1 = function(result) {
          var G__14172 = result;
          return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14172) : rf.call(null, G__14172);
        };
        var G__14177__2 = function(result, input) {
          if (cljs.core.truth_(function() {
            var G__14173 = input;
            return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__14173) : pred.call(null, G__14173);
          }())) {
            var G__14174 = result;
            var G__14175 = input;
            return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14174, G__14175) : rf.call(null, G__14174, G__14175);
          } else {
            return cljs.core.reduced(result);
          }
        };
        G__14177 = function(result, input) {
          switch(arguments.length) {
            case 0:
              return G__14177__0.call(this);
            case 1:
              return G__14177__1.call(this, result);
            case 2:
              return G__14177__2.call(this, result, input);
          }
          throw new Error("Invalid arity: " + arguments.length);
        };
        G__14177.cljs$core$IFn$_invoke$arity$0 = G__14177__0;
        G__14177.cljs$core$IFn$_invoke$arity$1 = G__14177__1;
        G__14177.cljs$core$IFn$_invoke$arity$2 = G__14177__2;
        return G__14177;
      }();
    };
  };
  var take_while__2 = function(pred, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        if (cljs.core.truth_(function() {
          var G__14176 = cljs.core.first(s);
          return pred.cljs$core$IFn$_invoke$arity$1 ? pred.cljs$core$IFn$_invoke$arity$1(G__14176) : pred.call(null, G__14176);
        }())) {
          return cljs.core.cons(cljs.core.first(s), take_while.cljs$core$IFn$_invoke$arity$2(pred, cljs.core.rest(s)));
        } else {
          return null;
        }
      } else {
        return null;
      }
    }, null, null);
  };
  take_while = function(pred, coll) {
    switch(arguments.length) {
      case 1:
        return take_while__1.call(this, pred);
      case 2:
        return take_while__2.call(this, pred, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take_while.cljs$core$IFn$_invoke$arity$1 = take_while__1;
  take_while.cljs$core$IFn$_invoke$arity$2 = take_while__2;
  return take_while;
}();
cljs.core.mk_bound_fn = function mk_bound_fn(sc, test, key) {
  return function(e) {
    var comp = cljs.core._comparator(sc);
    var G__14182 = function() {
      var G__14184 = cljs.core._entry_key(sc, e);
      var G__14185 = key;
      return comp.cljs$core$IFn$_invoke$arity$2 ? comp.cljs$core$IFn$_invoke$arity$2(G__14184, G__14185) : comp.call(null, G__14184, G__14185);
    }();
    var G__14183 = 0;
    return test.cljs$core$IFn$_invoke$arity$2 ? test.cljs$core$IFn$_invoke$arity$2(G__14182, G__14183) : test.call(null, G__14182, G__14183);
  };
};
cljs.core.subseq = function() {
  var subseq = null;
  var subseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn(sc, test, key);
    if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._GT_, cljs.core._GT__EQ_], true).call(null, test))) {
      var temp__4126__auto__ = cljs.core._sorted_seq_from(sc, key, true);
      if (cljs.core.truth_(temp__4126__auto__)) {
        var vec__14189 = temp__4126__auto__;
        var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14189, 0, null);
        var s = vec__14189;
        if (cljs.core.truth_(function() {
          var G__14190 = e;
          return include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__14190) : include.call(null, G__14190);
        }())) {
          return s;
        } else {
          return cljs.core.next(s);
        }
      } else {
        return null;
      }
    } else {
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include, cljs.core._sorted_seq(sc, true));
    }
  };
  var subseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4126__auto__ = cljs.core._sorted_seq_from(sc, start_key, true);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var vec__14191 = temp__4126__auto__;
      var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14191, 0, null);
      var s = vec__14191;
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc, end_test, end_key), cljs.core.truth_(cljs.core.mk_bound_fn(sc, start_test, start_key).call(null, e)) ? s : cljs.core.next(s));
    } else {
      return null;
    }
  };
  subseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return subseq__3.call(this, sc, start_test, start_key);
      case 5:
        return subseq__5.call(this, sc, start_test, start_key, end_test, end_key);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  subseq.cljs$core$IFn$_invoke$arity$3 = subseq__3;
  subseq.cljs$core$IFn$_invoke$arity$5 = subseq__5;
  return subseq;
}();
cljs.core.rsubseq = function() {
  var rsubseq = null;
  var rsubseq__3 = function(sc, test, key) {
    var include = cljs.core.mk_bound_fn(sc, test, key);
    if (cljs.core.truth_(cljs.core.PersistentHashSet.fromArray([cljs.core._LT_, cljs.core._LT__EQ_], true).call(null, test))) {
      var temp__4126__auto__ = cljs.core._sorted_seq_from(sc, key, false);
      if (cljs.core.truth_(temp__4126__auto__)) {
        var vec__14195 = temp__4126__auto__;
        var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14195, 0, null);
        var s = vec__14195;
        if (cljs.core.truth_(function() {
          var G__14196 = e;
          return include.cljs$core$IFn$_invoke$arity$1 ? include.cljs$core$IFn$_invoke$arity$1(G__14196) : include.call(null, G__14196);
        }())) {
          return s;
        } else {
          return cljs.core.next(s);
        }
      } else {
        return null;
      }
    } else {
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(include, cljs.core._sorted_seq(sc, false));
    }
  };
  var rsubseq__5 = function(sc, start_test, start_key, end_test, end_key) {
    var temp__4126__auto__ = cljs.core._sorted_seq_from(sc, end_key, false);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var vec__14197 = temp__4126__auto__;
      var e = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14197, 0, null);
      var s = vec__14197;
      return cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(cljs.core.mk_bound_fn(sc, start_test, start_key), cljs.core.truth_(cljs.core.mk_bound_fn(sc, end_test, end_key).call(null, e)) ? s : cljs.core.next(s));
    } else {
      return null;
    }
  };
  rsubseq = function(sc, start_test, start_key, end_test, end_key) {
    switch(arguments.length) {
      case 3:
        return rsubseq__3.call(this, sc, start_test, start_key);
      case 5:
        return rsubseq__5.call(this, sc, start_test, start_key, end_test, end_key);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rsubseq.cljs$core$IFn$_invoke$arity$3 = rsubseq__3;
  rsubseq.cljs$core$IFn$_invoke$arity$5 = rsubseq__5;
  return rsubseq;
}();
cljs.core.RangeIterator = function(i, end, step) {
  this.i = i;
  this.end = end;
  this.step = step;
};
cljs.core.RangeIterator.prototype.hasNext = function() {
  var self__ = this;
  var _ = this;
  if (self__.step > 0) {
    return self__.i < self__.end;
  } else {
    return self__.i > self__.end;
  }
};
cljs.core.RangeIterator.prototype.next = function() {
  var self__ = this;
  var _ = this;
  var ret = self__.i;
  self__.i = self__.i + self__.step;
  return ret;
};
cljs.core.RangeIterator.cljs$lang$type = true;
cljs.core.RangeIterator.cljs$lang$ctorStr = "cljs.core/RangeIterator";
cljs.core.RangeIterator.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/RangeIterator");
};
cljs.core.__GT_RangeIterator = function __GT_RangeIterator(i, end, step) {
  return new cljs.core.RangeIterator(i, end, step);
};
cljs.core.Range = function(meta, start, end, step, __hash) {
  this.meta = meta;
  this.start = start;
  this.end = end;
  this.step = step;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 32375006;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.Range.prototype.toString = function() {
  var self__ = this;
  var coll = this;
  return cljs.core.pr_str_STAR_(coll);
};
cljs.core.Range.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$2 = function(rng, n) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count(rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      throw new Error("Index out of bounds");
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIndexed$_nth$arity$3 = function(rng, n, not_found) {
  var self__ = this;
  var rng__$1 = this;
  if (n < cljs.core._count(rng__$1)) {
    return self__.start + n * self__.step;
  } else {
    if (self__.start > self__.end && self__.step === 0) {
      return self__.start;
    } else {
      return not_found;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IIterable$ = true;
cljs.core.Range.prototype.cljs$core$IIterable$_iterator$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.RangeIterator(self__.start, self__.end, self__.step);
};
cljs.core.Range.prototype.cljs$core$IMeta$_meta$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return self__.meta;
};
cljs.core.Range.prototype.cljs$core$ICloneable$_clone$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return new cljs.core.Range(self__.meta, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$INext$_next$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start + self__.step < self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  } else {
    if (self__.start + self__.step > self__.end) {
      return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$ICounted$_count$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core.not(cljs.core._seq(rng__$1))) {
    return 0;
  } else {
    var G__14198 = (self__.end - self__.start) / self__.step;
    return Math.ceil.cljs$core$IFn$_invoke$arity$1 ? Math.ceil.cljs$core$IFn$_invoke$arity$1(G__14198) : Math.ceil.call(null, G__14198);
  }
};
cljs.core.Range.prototype.cljs$core$IHash$_hash$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  var h__4346__auto__ = self__.__hash;
  if (!(h__4346__auto__ == null)) {
    return h__4346__auto__;
  } else {
    var h__4346__auto____$1 = cljs.core.hash_ordered_coll(rng__$1);
    self__.__hash = h__4346__auto____$1;
    return h__4346__auto____$1;
  }
};
cljs.core.Range.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(rng, other) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.equiv_sequential(rng__$1, other);
};
cljs.core.Range.prototype.cljs$core$IEmptyableCollection$_empty$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.with_meta(cljs.core.List.EMPTY, self__.meta);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$2 = function(rng, f) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.ci_reduce.cljs$core$IFn$_invoke$arity$2(rng__$1, f);
};
cljs.core.Range.prototype.cljs$core$IReduce$_reduce$arity$3 = function(rng, f, init) {
  var self__ = this;
  var rng__$1 = this;
  var i = self__.start;
  var ret = init;
  while (true) {
    if (self__.step > 0 ? i < self__.end : i > self__.end) {
      var ret__$1 = function() {
        var G__14199 = ret;
        var G__14200 = i;
        return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14199, G__14200) : f.call(null, G__14199, G__14200);
      }();
      if (cljs.core.reduced_QMARK_(ret__$1)) {
        var G__14201 = ret__$1;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14201) : cljs.core.deref.call(null, G__14201);
      } else {
        var G__14202 = i + self__.step;
        var G__14203 = ret__$1;
        i = G__14202;
        ret = G__14203;
        continue;
      }
    } else {
      return ret;
    }
    break;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_first$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (cljs.core._seq(rng__$1) == null) {
    return null;
  } else {
    return self__.start;
  }
};
cljs.core.Range.prototype.cljs$core$ISeq$_rest$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (!(cljs.core._seq(rng__$1) == null)) {
    return new cljs.core.Range(self__.meta, self__.start + self__.step, self__.end, self__.step, null);
  } else {
    return cljs.core.List.EMPTY;
  }
};
cljs.core.Range.prototype.cljs$core$ISeqable$_seq$arity$1 = function(rng) {
  var self__ = this;
  var rng__$1 = this;
  if (self__.step > 0) {
    if (self__.start < self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  } else {
    if (self__.start > self__.end) {
      return rng__$1;
    } else {
      return null;
    }
  }
};
cljs.core.Range.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(rng, meta__$1) {
  var self__ = this;
  var rng__$1 = this;
  return new cljs.core.Range(meta__$1, self__.start, self__.end, self__.step, self__.__hash);
};
cljs.core.Range.prototype.cljs$core$ICollection$_conj$arity$2 = function(rng, o) {
  var self__ = this;
  var rng__$1 = this;
  return cljs.core.cons(o, rng__$1);
};
cljs.core.Range.cljs$lang$type = true;
cljs.core.Range.cljs$lang$ctorStr = "cljs.core/Range";
cljs.core.Range.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/Range");
};
cljs.core.__GT_Range = function __GT_Range(meta, start, end, step, __hash) {
  return new cljs.core.Range(meta, start, end, step, __hash);
};
cljs.core.Range.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4903__auto__ = this;
  return cljs.core.es6_iterator(this__4903__auto__);
};
cljs.core.range = function() {
  var range = null;
  var range__0 = function() {
    return range.cljs$core$IFn$_invoke$arity$3(0, Number.MAX_VALUE, 1);
  };
  var range__1 = function(end) {
    return range.cljs$core$IFn$_invoke$arity$3(0, end, 1);
  };
  var range__2 = function(start, end) {
    return range.cljs$core$IFn$_invoke$arity$3(start, end, 1);
  };
  var range__3 = function(start, end, step) {
    return new cljs.core.Range(null, start, end, step, null);
  };
  range = function(start, end, step) {
    switch(arguments.length) {
      case 0:
        return range__0.call(this);
      case 1:
        return range__1.call(this, start);
      case 2:
        return range__2.call(this, start, end);
      case 3:
        return range__3.call(this, start, end, step);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  range.cljs$core$IFn$_invoke$arity$0 = range__0;
  range.cljs$core$IFn$_invoke$arity$1 = range__1;
  range.cljs$core$IFn$_invoke$arity$2 = range__2;
  range.cljs$core$IFn$_invoke$arity$3 = range__3;
  return range;
}();
cljs.core.take_nth = function() {
  var take_nth = null;
  var take_nth__1 = function(n) {
    return function(rf) {
      var ia = cljs.core.volatile_BANG_(-1);
      return function(ia) {
        return function() {
          var G__14221 = null;
          var G__14221__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__14221__1 = function(result) {
            var G__14218 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14218) : rf.call(null, G__14218);
          };
          var G__14221__2 = function(result, input) {
            var i = ia.cljs$core$IVolatile$_vreset_BANG_$arity$2(null, ia.cljs$core$IDeref$_deref$arity$1(null) + 1);
            if (cljs.core.rem(i, n) === 0) {
              var G__14219 = result;
              var G__14220 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14219, G__14220) : rf.call(null, G__14219, G__14220);
            } else {
              return result;
            }
          };
          G__14221 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__14221__0.call(this);
              case 1:
                return G__14221__1.call(this, result);
              case 2:
                return G__14221__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__14221.cljs$core$IFn$_invoke$arity$0 = G__14221__0;
          G__14221.cljs$core$IFn$_invoke$arity$1 = G__14221__1;
          G__14221.cljs$core$IFn$_invoke$arity$2 = G__14221__2;
          return G__14221;
        }();
      }(ia);
    };
  };
  var take_nth__2 = function(n, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        return cljs.core.cons(cljs.core.first(s), take_nth.cljs$core$IFn$_invoke$arity$2(n, cljs.core.drop.cljs$core$IFn$_invoke$arity$2(n, s)));
      } else {
        return null;
      }
    }, null, null);
  };
  take_nth = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return take_nth__1.call(this, n);
      case 2:
        return take_nth__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take_nth.cljs$core$IFn$_invoke$arity$1 = take_nth__1;
  take_nth.cljs$core$IFn$_invoke$arity$2 = take_nth__2;
  return take_nth;
}();
cljs.core.split_with = function split_with(pred, coll) {
  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(pred, coll), cljs.core.drop_while.cljs$core$IFn$_invoke$arity$2(pred, coll)], null);
};
cljs.core.partition_by = function() {
  var partition_by = null;
  var partition_by__1 = function(f) {
    return function(rf) {
      var a = cljs.core.array_list();
      var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
      return function(a, pa) {
        return function() {
          var G__14243 = null;
          var G__14243__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__14243__1 = function(result) {
            var result__$1 = cljs.core.truth_(a.isEmpty()) ? result : function() {
              var v = cljs.core.vec(a.toArray());
              a.clear();
              return cljs.core.unreduced(function() {
                var G__14234 = result;
                var G__14235 = v;
                return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14234, G__14235) : rf.call(null, G__14234, G__14235);
              }());
            }();
            var G__14236 = result__$1;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14236) : rf.call(null, G__14236);
          };
          var G__14243__2 = function(result, input) {
            var pval = function() {
              var G__14237 = pa;
              return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14237) : cljs.core.deref.call(null, G__14237);
            }();
            var val = function() {
              var G__14238 = input;
              return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14238) : f.call(null, G__14238);
            }();
            cljs.core.vreset_BANG_(pa, val);
            if (cljs.core.keyword_identical_QMARK_(pval, new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439)) || cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(val, pval)) {
              a.add(input);
              return result;
            } else {
              var v = cljs.core.vec(a.toArray());
              a.clear();
              var ret = function() {
                var G__14239 = result;
                var G__14240 = v;
                return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14239, G__14240) : rf.call(null, G__14239, G__14240);
              }();
              if (cljs.core.reduced_QMARK_(ret)) {
              } else {
                a.add(input);
              }
              return ret;
            }
          };
          G__14243 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__14243__0.call(this);
              case 1:
                return G__14243__1.call(this, result);
              case 2:
                return G__14243__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__14243.cljs$core$IFn$_invoke$arity$0 = G__14243__0;
          G__14243.cljs$core$IFn$_invoke$arity$1 = G__14243__1;
          G__14243.cljs$core$IFn$_invoke$arity$2 = G__14243__2;
          return G__14243;
        }();
      }(a, pa);
    };
  };
  var partition_by__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        var fst = cljs.core.first(s);
        var fv = function() {
          var G__14241 = fst;
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14241) : f.call(null, G__14241);
        }();
        var run = cljs.core.cons(fst, cljs.core.take_while.cljs$core$IFn$_invoke$arity$2(function(fst, fv, s, temp__4126__auto__) {
          return function(p1__14222_SHARP_) {
            return cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(fv, function() {
              var G__14242 = p1__14222_SHARP_;
              return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14242) : f.call(null, G__14242);
            }());
          };
        }(fst, fv, s, temp__4126__auto__), cljs.core.next(s)));
        return cljs.core.cons(run, partition_by.cljs$core$IFn$_invoke$arity$2(f, cljs.core.seq(cljs.core.drop.cljs$core$IFn$_invoke$arity$2(cljs.core.count(run), s))));
      } else {
        return null;
      }
    }, null, null);
  };
  partition_by = function(f, coll) {
    switch(arguments.length) {
      case 1:
        return partition_by__1.call(this, f);
      case 2:
        return partition_by__2.call(this, f, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_by.cljs$core$IFn$_invoke$arity$1 = partition_by__1;
  partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
  return partition_by;
}();
cljs.core.frequencies = function frequencies(coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(counts, x) {
    return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(counts, x, cljs.core.get.cljs$core$IFn$_invoke$arity$3(counts, x, 0) + 1);
  }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.reductions = function() {
  var reductions = null;
  var reductions__2 = function(f, coll) {
    return new cljs.core.LazySeq(null, function() {
      var temp__4124__auto__ = cljs.core.seq(coll);
      if (temp__4124__auto__) {
        var s = temp__4124__auto__;
        return reductions.cljs$core$IFn$_invoke$arity$3(f, cljs.core.first(s), cljs.core.rest(s));
      } else {
        return cljs.core._conj(cljs.core.List.EMPTY, function() {
          return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
        }());
      }
    }, null, null);
  };
  var reductions__3 = function(f, init, coll) {
    return cljs.core.cons(init, new cljs.core.LazySeq(null, function() {
      var temp__4126__auto__ = cljs.core.seq(coll);
      if (temp__4126__auto__) {
        var s = temp__4126__auto__;
        return reductions.cljs$core$IFn$_invoke$arity$3(f, function() {
          var G__14252 = init;
          var G__14253 = cljs.core.first(s);
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14252, G__14253) : f.call(null, G__14252, G__14253);
        }(), cljs.core.rest(s));
      } else {
        return null;
      }
    }, null, null));
  };
  reductions = function(f, init, coll) {
    switch(arguments.length) {
      case 2:
        return reductions__2.call(this, f, init);
      case 3:
        return reductions__3.call(this, f, init, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  reductions.cljs$core$IFn$_invoke$arity$2 = reductions__2;
  reductions.cljs$core$IFn$_invoke$arity$3 = reductions__3;
  return reductions;
}();
cljs.core.juxt = function() {
  var juxt = null;
  var juxt__1 = function(f) {
    return function() {
      var G__14348 = null;
      var G__14348__0 = function() {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
        }()], null);
      };
      var G__14348__1 = function(x) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__14306 = x;
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14306) : f.call(null, G__14306);
        }()], null);
      };
      var G__14348__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__14307 = x;
          var G__14308 = y;
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14307, G__14308) : f.call(null, G__14307, G__14308);
        }()], null);
      };
      var G__14348__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__14309 = x;
          var G__14310 = y;
          var G__14311 = z;
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14309, G__14310, G__14311) : f.call(null, G__14309, G__14310, G__14311);
        }()], null);
      };
      var G__14348__4 = function() {
        var G__14349__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args)], null);
        };
        var G__14349 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__14350__i = 0, G__14350__a = new Array(arguments.length - 3);
            while (G__14350__i < G__14350__a.length) {
              G__14350__a[G__14350__i] = arguments[G__14350__i + 3];
              ++G__14350__i;
            }
            args = new cljs.core.IndexedSeq(G__14350__a, 0);
          }
          return G__14349__delegate.call(this, x, y, z, args);
        };
        G__14349.cljs$lang$maxFixedArity = 3;
        G__14349.cljs$lang$applyTo = function(arglist__14351) {
          var x = cljs.core.first(arglist__14351);
          arglist__14351 = cljs.core.next(arglist__14351);
          var y = cljs.core.first(arglist__14351);
          arglist__14351 = cljs.core.next(arglist__14351);
          var z = cljs.core.first(arglist__14351);
          var args = cljs.core.rest(arglist__14351);
          return G__14349__delegate(x, y, z, args);
        };
        G__14349.cljs$core$IFn$_invoke$arity$variadic = G__14349__delegate;
        return G__14349;
      }();
      G__14348 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__14348__0.call(this);
          case 1:
            return G__14348__1.call(this, x);
          case 2:
            return G__14348__2.call(this, x, y);
          case 3:
            return G__14348__3.call(this, x, y, z);
          default:
            var G__14352 = null;
            if (arguments.length > 3) {
              var G__14353__i = 0, G__14353__a = new Array(arguments.length - 3);
              while (G__14353__i < G__14353__a.length) {
                G__14353__a[G__14353__i] = arguments[G__14353__i + 3];
                ++G__14353__i;
              }
              G__14352 = new cljs.core.IndexedSeq(G__14353__a, 0);
            }
            return G__14348__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__14352);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__14348.cljs$lang$maxFixedArity = 3;
      G__14348.cljs$lang$applyTo = G__14348__4.cljs$lang$applyTo;
      G__14348.cljs$core$IFn$_invoke$arity$0 = G__14348__0;
      G__14348.cljs$core$IFn$_invoke$arity$1 = G__14348__1;
      G__14348.cljs$core$IFn$_invoke$arity$2 = G__14348__2;
      G__14348.cljs$core$IFn$_invoke$arity$3 = G__14348__3;
      G__14348.cljs$core$IFn$_invoke$arity$variadic = G__14348__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__14348;
    }();
  };
  var juxt__2 = function(f, g) {
    return function() {
      var G__14354 = null;
      var G__14354__0 = function() {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
        }(), function() {
          return g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null);
        }()], null);
      };
      var G__14354__1 = function(x) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__14312 = x;
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14312) : f.call(null, G__14312);
        }(), function() {
          var G__14313 = x;
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__14313) : g.call(null, G__14313);
        }()], null);
      };
      var G__14354__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__14314 = x;
          var G__14315 = y;
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14314, G__14315) : f.call(null, G__14314, G__14315);
        }(), function() {
          var G__14316 = x;
          var G__14317 = y;
          return g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__14316, G__14317) : g.call(null, G__14316, G__14317);
        }()], null);
      };
      var G__14354__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__14318 = x;
          var G__14319 = y;
          var G__14320 = z;
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14318, G__14319, G__14320) : f.call(null, G__14318, G__14319, G__14320);
        }(), function() {
          var G__14321 = x;
          var G__14322 = y;
          var G__14323 = z;
          return g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__14321, G__14322, G__14323) : g.call(null, G__14321, G__14322, G__14323);
        }()], null);
      };
      var G__14354__4 = function() {
        var G__14355__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args)], null);
        };
        var G__14355 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__14356__i = 0, G__14356__a = new Array(arguments.length - 3);
            while (G__14356__i < G__14356__a.length) {
              G__14356__a[G__14356__i] = arguments[G__14356__i + 3];
              ++G__14356__i;
            }
            args = new cljs.core.IndexedSeq(G__14356__a, 0);
          }
          return G__14355__delegate.call(this, x, y, z, args);
        };
        G__14355.cljs$lang$maxFixedArity = 3;
        G__14355.cljs$lang$applyTo = function(arglist__14357) {
          var x = cljs.core.first(arglist__14357);
          arglist__14357 = cljs.core.next(arglist__14357);
          var y = cljs.core.first(arglist__14357);
          arglist__14357 = cljs.core.next(arglist__14357);
          var z = cljs.core.first(arglist__14357);
          var args = cljs.core.rest(arglist__14357);
          return G__14355__delegate(x, y, z, args);
        };
        G__14355.cljs$core$IFn$_invoke$arity$variadic = G__14355__delegate;
        return G__14355;
      }();
      G__14354 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__14354__0.call(this);
          case 1:
            return G__14354__1.call(this, x);
          case 2:
            return G__14354__2.call(this, x, y);
          case 3:
            return G__14354__3.call(this, x, y, z);
          default:
            var G__14358 = null;
            if (arguments.length > 3) {
              var G__14359__i = 0, G__14359__a = new Array(arguments.length - 3);
              while (G__14359__i < G__14359__a.length) {
                G__14359__a[G__14359__i] = arguments[G__14359__i + 3];
                ++G__14359__i;
              }
              G__14358 = new cljs.core.IndexedSeq(G__14359__a, 0);
            }
            return G__14354__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__14358);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__14354.cljs$lang$maxFixedArity = 3;
      G__14354.cljs$lang$applyTo = G__14354__4.cljs$lang$applyTo;
      G__14354.cljs$core$IFn$_invoke$arity$0 = G__14354__0;
      G__14354.cljs$core$IFn$_invoke$arity$1 = G__14354__1;
      G__14354.cljs$core$IFn$_invoke$arity$2 = G__14354__2;
      G__14354.cljs$core$IFn$_invoke$arity$3 = G__14354__3;
      G__14354.cljs$core$IFn$_invoke$arity$variadic = G__14354__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__14354;
    }();
  };
  var juxt__3 = function(f, g, h) {
    return function() {
      var G__14360 = null;
      var G__14360__0 = function() {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
        }(), function() {
          return g.cljs$core$IFn$_invoke$arity$0 ? g.cljs$core$IFn$_invoke$arity$0() : g.call(null);
        }(), function() {
          return h.cljs$core$IFn$_invoke$arity$0 ? h.cljs$core$IFn$_invoke$arity$0() : h.call(null);
        }()], null);
      };
      var G__14360__1 = function(x) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__14324 = x;
          return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14324) : f.call(null, G__14324);
        }(), function() {
          var G__14325 = x;
          return g.cljs$core$IFn$_invoke$arity$1 ? g.cljs$core$IFn$_invoke$arity$1(G__14325) : g.call(null, G__14325);
        }(), function() {
          var G__14326 = x;
          return h.cljs$core$IFn$_invoke$arity$1 ? h.cljs$core$IFn$_invoke$arity$1(G__14326) : h.call(null, G__14326);
        }()], null);
      };
      var G__14360__2 = function(x, y) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__14327 = x;
          var G__14328 = y;
          return f.cljs$core$IFn$_invoke$arity$2 ? f.cljs$core$IFn$_invoke$arity$2(G__14327, G__14328) : f.call(null, G__14327, G__14328);
        }(), function() {
          var G__14329 = x;
          var G__14330 = y;
          return g.cljs$core$IFn$_invoke$arity$2 ? g.cljs$core$IFn$_invoke$arity$2(G__14329, G__14330) : g.call(null, G__14329, G__14330);
        }(), function() {
          var G__14331 = x;
          var G__14332 = y;
          return h.cljs$core$IFn$_invoke$arity$2 ? h.cljs$core$IFn$_invoke$arity$2(G__14331, G__14332) : h.call(null, G__14331, G__14332);
        }()], null);
      };
      var G__14360__3 = function(x, y, z) {
        return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
          var G__14333 = x;
          var G__14334 = y;
          var G__14335 = z;
          return f.cljs$core$IFn$_invoke$arity$3 ? f.cljs$core$IFn$_invoke$arity$3(G__14333, G__14334, G__14335) : f.call(null, G__14333, G__14334, G__14335);
        }(), function() {
          var G__14336 = x;
          var G__14337 = y;
          var G__14338 = z;
          return g.cljs$core$IFn$_invoke$arity$3 ? g.cljs$core$IFn$_invoke$arity$3(G__14336, G__14337, G__14338) : g.call(null, G__14336, G__14337, G__14338);
        }(), function() {
          var G__14339 = x;
          var G__14340 = y;
          var G__14341 = z;
          return h.cljs$core$IFn$_invoke$arity$3 ? h.cljs$core$IFn$_invoke$arity$3(G__14339, G__14340, G__14341) : h.call(null, G__14339, G__14340, G__14341);
        }()], null);
      };
      var G__14360__4 = function() {
        var G__14361__delegate = function(x, y, z, args) {
          return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.apply.cljs$core$IFn$_invoke$arity$5(f, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(g, x, y, z, args), cljs.core.apply.cljs$core$IFn$_invoke$arity$5(h, x, y, z, args)], null);
        };
        var G__14361 = function(x, y, z, var_args) {
          var args = null;
          if (arguments.length > 3) {
            var G__14362__i = 0, G__14362__a = new Array(arguments.length - 3);
            while (G__14362__i < G__14362__a.length) {
              G__14362__a[G__14362__i] = arguments[G__14362__i + 3];
              ++G__14362__i;
            }
            args = new cljs.core.IndexedSeq(G__14362__a, 0);
          }
          return G__14361__delegate.call(this, x, y, z, args);
        };
        G__14361.cljs$lang$maxFixedArity = 3;
        G__14361.cljs$lang$applyTo = function(arglist__14363) {
          var x = cljs.core.first(arglist__14363);
          arglist__14363 = cljs.core.next(arglist__14363);
          var y = cljs.core.first(arglist__14363);
          arglist__14363 = cljs.core.next(arglist__14363);
          var z = cljs.core.first(arglist__14363);
          var args = cljs.core.rest(arglist__14363);
          return G__14361__delegate(x, y, z, args);
        };
        G__14361.cljs$core$IFn$_invoke$arity$variadic = G__14361__delegate;
        return G__14361;
      }();
      G__14360 = function(x, y, z, var_args) {
        var args = var_args;
        switch(arguments.length) {
          case 0:
            return G__14360__0.call(this);
          case 1:
            return G__14360__1.call(this, x);
          case 2:
            return G__14360__2.call(this, x, y);
          case 3:
            return G__14360__3.call(this, x, y, z);
          default:
            var G__14364 = null;
            if (arguments.length > 3) {
              var G__14365__i = 0, G__14365__a = new Array(arguments.length - 3);
              while (G__14365__i < G__14365__a.length) {
                G__14365__a[G__14365__i] = arguments[G__14365__i + 3];
                ++G__14365__i;
              }
              G__14364 = new cljs.core.IndexedSeq(G__14365__a, 0);
            }
            return G__14360__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__14364);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__14360.cljs$lang$maxFixedArity = 3;
      G__14360.cljs$lang$applyTo = G__14360__4.cljs$lang$applyTo;
      G__14360.cljs$core$IFn$_invoke$arity$0 = G__14360__0;
      G__14360.cljs$core$IFn$_invoke$arity$1 = G__14360__1;
      G__14360.cljs$core$IFn$_invoke$arity$2 = G__14360__2;
      G__14360.cljs$core$IFn$_invoke$arity$3 = G__14360__3;
      G__14360.cljs$core$IFn$_invoke$arity$variadic = G__14360__4.cljs$core$IFn$_invoke$arity$variadic;
      return G__14360;
    }();
  };
  var juxt__4 = function() {
    var G__14366__delegate = function(f, g, h, fs) {
      var fs__$1 = cljs.core.list_STAR_.cljs$core$IFn$_invoke$arity$4(f, g, h, fs);
      return function(fs__$1) {
        return function() {
          var G__14367 = null;
          var G__14367__0 = function() {
            return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
              return function(p1__14254_SHARP_, p2__14255_SHARP_) {
                return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__14254_SHARP_, function() {
                  return p2__14255_SHARP_.cljs$core$IFn$_invoke$arity$0 ? p2__14255_SHARP_.cljs$core$IFn$_invoke$arity$0() : p2__14255_SHARP_.call(null);
                }());
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__14367__1 = function(x) {
            return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
              return function(p1__14256_SHARP_, p2__14257_SHARP_) {
                return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__14256_SHARP_, function() {
                  var G__14342 = x;
                  return p2__14257_SHARP_.cljs$core$IFn$_invoke$arity$1 ? p2__14257_SHARP_.cljs$core$IFn$_invoke$arity$1(G__14342) : p2__14257_SHARP_.call(null, G__14342);
                }());
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__14367__2 = function(x, y) {
            return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
              return function(p1__14258_SHARP_, p2__14259_SHARP_) {
                return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__14258_SHARP_, function() {
                  var G__14343 = x;
                  var G__14344 = y;
                  return p2__14259_SHARP_.cljs$core$IFn$_invoke$arity$2 ? p2__14259_SHARP_.cljs$core$IFn$_invoke$arity$2(G__14343, G__14344) : p2__14259_SHARP_.call(null, G__14343, G__14344);
                }());
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__14367__3 = function(x, y, z) {
            return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
              return function(p1__14260_SHARP_, p2__14261_SHARP_) {
                return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__14260_SHARP_, function() {
                  var G__14345 = x;
                  var G__14346 = y;
                  var G__14347 = z;
                  return p2__14261_SHARP_.cljs$core$IFn$_invoke$arity$3 ? p2__14261_SHARP_.cljs$core$IFn$_invoke$arity$3(G__14345, G__14346, G__14347) : p2__14261_SHARP_.call(null, G__14345, G__14346, G__14347);
                }());
              };
            }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
          };
          var G__14367__4 = function() {
            var G__14368__delegate = function(x, y, z, args) {
              return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(fs__$1) {
                return function(p1__14262_SHARP_, p2__14263_SHARP_) {
                  return cljs.core.conj.cljs$core$IFn$_invoke$arity$2(p1__14262_SHARP_, cljs.core.apply.cljs$core$IFn$_invoke$arity$5(p2__14263_SHARP_, x, y, z, args));
                };
              }(fs__$1), cljs.core.PersistentVector.EMPTY, fs__$1);
            };
            var G__14368 = function(x, y, z, var_args) {
              var args = null;
              if (arguments.length > 3) {
                var G__14369__i = 0, G__14369__a = new Array(arguments.length - 3);
                while (G__14369__i < G__14369__a.length) {
                  G__14369__a[G__14369__i] = arguments[G__14369__i + 3];
                  ++G__14369__i;
                }
                args = new cljs.core.IndexedSeq(G__14369__a, 0);
              }
              return G__14368__delegate.call(this, x, y, z, args);
            };
            G__14368.cljs$lang$maxFixedArity = 3;
            G__14368.cljs$lang$applyTo = function(arglist__14370) {
              var x = cljs.core.first(arglist__14370);
              arglist__14370 = cljs.core.next(arglist__14370);
              var y = cljs.core.first(arglist__14370);
              arglist__14370 = cljs.core.next(arglist__14370);
              var z = cljs.core.first(arglist__14370);
              var args = cljs.core.rest(arglist__14370);
              return G__14368__delegate(x, y, z, args);
            };
            G__14368.cljs$core$IFn$_invoke$arity$variadic = G__14368__delegate;
            return G__14368;
          }();
          G__14367 = function(x, y, z, var_args) {
            var args = var_args;
            switch(arguments.length) {
              case 0:
                return G__14367__0.call(this);
              case 1:
                return G__14367__1.call(this, x);
              case 2:
                return G__14367__2.call(this, x, y);
              case 3:
                return G__14367__3.call(this, x, y, z);
              default:
                var G__14371 = null;
                if (arguments.length > 3) {
                  var G__14372__i = 0, G__14372__a = new Array(arguments.length - 3);
                  while (G__14372__i < G__14372__a.length) {
                    G__14372__a[G__14372__i] = arguments[G__14372__i + 3];
                    ++G__14372__i;
                  }
                  G__14371 = new cljs.core.IndexedSeq(G__14372__a, 0);
                }
                return G__14367__4.cljs$core$IFn$_invoke$arity$variadic(x, y, z, G__14371);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__14367.cljs$lang$maxFixedArity = 3;
          G__14367.cljs$lang$applyTo = G__14367__4.cljs$lang$applyTo;
          G__14367.cljs$core$IFn$_invoke$arity$0 = G__14367__0;
          G__14367.cljs$core$IFn$_invoke$arity$1 = G__14367__1;
          G__14367.cljs$core$IFn$_invoke$arity$2 = G__14367__2;
          G__14367.cljs$core$IFn$_invoke$arity$3 = G__14367__3;
          G__14367.cljs$core$IFn$_invoke$arity$variadic = G__14367__4.cljs$core$IFn$_invoke$arity$variadic;
          return G__14367;
        }();
      }(fs__$1);
    };
    var G__14366 = function(f, g, h, var_args) {
      var fs = null;
      if (arguments.length > 3) {
        var G__14373__i = 0, G__14373__a = new Array(arguments.length - 3);
        while (G__14373__i < G__14373__a.length) {
          G__14373__a[G__14373__i] = arguments[G__14373__i + 3];
          ++G__14373__i;
        }
        fs = new cljs.core.IndexedSeq(G__14373__a, 0);
      }
      return G__14366__delegate.call(this, f, g, h, fs);
    };
    G__14366.cljs$lang$maxFixedArity = 3;
    G__14366.cljs$lang$applyTo = function(arglist__14374) {
      var f = cljs.core.first(arglist__14374);
      arglist__14374 = cljs.core.next(arglist__14374);
      var g = cljs.core.first(arglist__14374);
      arglist__14374 = cljs.core.next(arglist__14374);
      var h = cljs.core.first(arglist__14374);
      var fs = cljs.core.rest(arglist__14374);
      return G__14366__delegate(f, g, h, fs);
    };
    G__14366.cljs$core$IFn$_invoke$arity$variadic = G__14366__delegate;
    return G__14366;
  }();
  juxt = function(f, g, h, var_args) {
    var fs = var_args;
    switch(arguments.length) {
      case 1:
        return juxt__1.call(this, f);
      case 2:
        return juxt__2.call(this, f, g);
      case 3:
        return juxt__3.call(this, f, g, h);
      default:
        var G__14375 = null;
        if (arguments.length > 3) {
          var G__14376__i = 0, G__14376__a = new Array(arguments.length - 3);
          while (G__14376__i < G__14376__a.length) {
            G__14376__a[G__14376__i] = arguments[G__14376__i + 3];
            ++G__14376__i;
          }
          G__14375 = new cljs.core.IndexedSeq(G__14376__a, 0);
        }
        return juxt__4.cljs$core$IFn$_invoke$arity$variadic(f, g, h, G__14375);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  juxt.cljs$lang$maxFixedArity = 3;
  juxt.cljs$lang$applyTo = juxt__4.cljs$lang$applyTo;
  juxt.cljs$core$IFn$_invoke$arity$1 = juxt__1;
  juxt.cljs$core$IFn$_invoke$arity$2 = juxt__2;
  juxt.cljs$core$IFn$_invoke$arity$3 = juxt__3;
  juxt.cljs$core$IFn$_invoke$arity$variadic = juxt__4.cljs$core$IFn$_invoke$arity$variadic;
  return juxt;
}();
cljs.core.dorun = function() {
  var dorun = null;
  var dorun__1 = function(coll) {
    while (true) {
      if (cljs.core.seq(coll)) {
        var G__14377 = cljs.core.next(coll);
        coll = G__14377;
        continue;
      } else {
        return null;
      }
      break;
    }
  };
  var dorun__2 = function(n, coll) {
    while (true) {
      if (cljs.core.seq(coll) && n > 0) {
        var G__14378 = n - 1;
        var G__14379 = cljs.core.next(coll);
        n = G__14378;
        coll = G__14379;
        continue;
      } else {
        return null;
      }
      break;
    }
  };
  dorun = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return dorun__1.call(this, n);
      case 2:
        return dorun__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dorun.cljs$core$IFn$_invoke$arity$1 = dorun__1;
  dorun.cljs$core$IFn$_invoke$arity$2 = dorun__2;
  return dorun;
}();
cljs.core.doall = function() {
  var doall = null;
  var doall__1 = function(coll) {
    cljs.core.dorun.cljs$core$IFn$_invoke$arity$1(coll);
    return coll;
  };
  var doall__2 = function(n, coll) {
    cljs.core.dorun.cljs$core$IFn$_invoke$arity$2(n, coll);
    return coll;
  };
  doall = function(n, coll) {
    switch(arguments.length) {
      case 1:
        return doall__1.call(this, n);
      case 2:
        return doall__2.call(this, n, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  doall.cljs$core$IFn$_invoke$arity$1 = doall__1;
  doall.cljs$core$IFn$_invoke$arity$2 = doall__2;
  return doall;
}();
cljs.core.regexp_QMARK_ = function regexp_QMARK_(o) {
  return o instanceof RegExp;
};
cljs.core.re_matches = function re_matches(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(cljs.core.first(matches), s)) {
      if (cljs.core.count(matches) === 1) {
        return cljs.core.first(matches);
      } else {
        return cljs.core.vec(matches);
      }
    } else {
      return null;
    }
  } else {
    throw new TypeError("re-matches must match against a string.");
  }
};
cljs.core.re_find = function re_find(re, s) {
  if (typeof s === "string") {
    var matches = re.exec(s);
    if (matches == null) {
      return null;
    } else {
      if (cljs.core.count(matches) === 1) {
        return cljs.core.first(matches);
      } else {
        return cljs.core.vec(matches);
      }
    }
  } else {
    throw new TypeError("re-find must match against a string.");
  }
};
cljs.core.re_seq = function re_seq(re, s) {
  var match_data = cljs.core.re_find(re, s);
  var match_idx = s.search(re);
  var match_str = cljs.core.coll_QMARK_(match_data) ? cljs.core.first(match_data) : match_data;
  var post_match = cljs.core.subs.cljs$core$IFn$_invoke$arity$2(s, match_idx + cljs.core.count(match_str));
  if (cljs.core.truth_(match_data)) {
    return new cljs.core.LazySeq(null, function(match_data, match_idx, match_str, post_match) {
      return function() {
        return cljs.core.cons(match_data, cljs.core.seq(post_match) ? re_seq(re, post_match) : null);
      };
    }(match_data, match_idx, match_str, post_match), null, null);
  } else {
    return null;
  }
};
cljs.core.re_pattern = function re_pattern(s) {
  if (s instanceof RegExp) {
    return s;
  } else {
    var vec__14383 = cljs.core.re_find(/^(?:\(\?([idmsux]*)\))?(.*)/, s);
    var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14383, 0, null);
    var flags = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14383, 1, null);
    var pattern = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14383, 2, null);
    return new RegExp(pattern, flags);
  }
};
cljs.core.pr_sequential_writer = function pr_sequential_writer(writer, print_one, begin, sep, end, opts, coll) {
  var _STAR_print_level_STAR_14391 = cljs.core._STAR_print_level_STAR_;
  cljs.core._STAR_print_level_STAR_ = cljs.core._STAR_print_level_STAR_ == null ? null : cljs.core._STAR_print_level_STAR_ - 1;
  try {
    if (!(cljs.core._STAR_print_level_STAR_ == null) && cljs.core._STAR_print_level_STAR_ < 0) {
      return cljs.core._write(writer, "#");
    } else {
      cljs.core._write(writer, begin);
      if ((new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(opts) === 0) {
        if (cljs.core.seq(coll)) {
          cljs.core._write(writer, function() {
            var or__3925__auto__ = (new cljs.core.Keyword(null, "more-marker", "more-marker", -14717935)).cljs$core$IFn$_invoke$arity$1(opts);
            if (cljs.core.truth_(or__3925__auto__)) {
              return or__3925__auto__;
            } else {
              return "...";
            }
          }());
        } else {
        }
      } else {
        if (cljs.core.seq(coll)) {
          var G__14392_14398 = cljs.core.first(coll);
          var G__14393_14399 = writer;
          var G__14394_14400 = opts;
          print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__14392_14398, G__14393_14399, G__14394_14400) : print_one.call(null, G__14392_14398, G__14393_14399, G__14394_14400);
        } else {
        }
        var coll_14401__$1 = cljs.core.next(coll);
        var n_14402 = (new cljs.core.Keyword(null, "print-length", "print-length", 1931866356)).cljs$core$IFn$_invoke$arity$1(opts) - 1;
        while (true) {
          if (coll_14401__$1 && (n_14402 == null || !(n_14402 === 0))) {
            cljs.core._write(writer, sep);
            var G__14395_14403 = cljs.core.first(coll_14401__$1);
            var G__14396_14404 = writer;
            var G__14397_14405 = opts;
            print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__14395_14403, G__14396_14404, G__14397_14405) : print_one.call(null, G__14395_14403, G__14396_14404, G__14397_14405);
            var G__14406 = cljs.core.next(coll_14401__$1);
            var G__14407 = n_14402 - 1;
            coll_14401__$1 = G__14406;
            n_14402 = G__14407;
            continue;
          } else {
            if (cljs.core.seq(coll_14401__$1) && n_14402 === 0) {
              cljs.core._write(writer, sep);
              cljs.core._write(writer, function() {
                var or__3925__auto__ = (new cljs.core.Keyword(null, "more-marker", "more-marker", -14717935)).cljs$core$IFn$_invoke$arity$1(opts);
                if (cljs.core.truth_(or__3925__auto__)) {
                  return or__3925__auto__;
                } else {
                  return "...";
                }
              }());
            } else {
            }
          }
          break;
        }
      }
      return cljs.core._write(writer, end);
    }
  } finally {
    cljs.core._STAR_print_level_STAR_ = _STAR_print_level_STAR_14391;
  }
};
cljs.core.write_all = function() {
  var write_all__delegate = function(writer, ss) {
    var seq__14412 = cljs.core.seq(ss);
    var chunk__14413 = null;
    var count__14414 = 0;
    var i__14415 = 0;
    while (true) {
      if (i__14415 < count__14414) {
        var s = chunk__14413.cljs$core$IIndexed$_nth$arity$2(null, i__14415);
        cljs.core._write(writer, s);
        var G__14416 = seq__14412;
        var G__14417 = chunk__14413;
        var G__14418 = count__14414;
        var G__14419 = i__14415 + 1;
        seq__14412 = G__14416;
        chunk__14413 = G__14417;
        count__14414 = G__14418;
        i__14415 = G__14419;
        continue;
      } else {
        var temp__4126__auto__ = cljs.core.seq(seq__14412);
        if (temp__4126__auto__) {
          var seq__14412__$1 = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_(seq__14412__$1)) {
            var c__4712__auto__ = cljs.core.chunk_first(seq__14412__$1);
            var G__14420 = cljs.core.chunk_rest(seq__14412__$1);
            var G__14421 = c__4712__auto__;
            var G__14422 = cljs.core.count(c__4712__auto__);
            var G__14423 = 0;
            seq__14412 = G__14420;
            chunk__14413 = G__14421;
            count__14414 = G__14422;
            i__14415 = G__14423;
            continue;
          } else {
            var s = cljs.core.first(seq__14412__$1);
            cljs.core._write(writer, s);
            var G__14424 = cljs.core.next(seq__14412__$1);
            var G__14425 = null;
            var G__14426 = 0;
            var G__14427 = 0;
            seq__14412 = G__14424;
            chunk__14413 = G__14425;
            count__14414 = G__14426;
            i__14415 = G__14427;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  };
  var write_all = function(writer, var_args) {
    var ss = null;
    if (arguments.length > 1) {
      var G__14428__i = 0, G__14428__a = new Array(arguments.length - 1);
      while (G__14428__i < G__14428__a.length) {
        G__14428__a[G__14428__i] = arguments[G__14428__i + 1];
        ++G__14428__i;
      }
      ss = new cljs.core.IndexedSeq(G__14428__a, 0);
    }
    return write_all__delegate.call(this, writer, ss);
  };
  write_all.cljs$lang$maxFixedArity = 1;
  write_all.cljs$lang$applyTo = function(arglist__14429) {
    var writer = cljs.core.first(arglist__14429);
    var ss = cljs.core.rest(arglist__14429);
    return write_all__delegate(writer, ss);
  };
  write_all.cljs$core$IFn$_invoke$arity$variadic = write_all__delegate;
  return write_all;
}();
cljs.core.string_print = function string_print(x) {
  cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1 ? cljs.core._STAR_print_fn_STAR_.cljs$core$IFn$_invoke$arity$1(x) : cljs.core._STAR_print_fn_STAR_.call(null, x);
  return null;
};
cljs.core.flush = function flush() {
  return null;
};
cljs.core.char_escapes = function() {
  var obj14431 = {'"':'\\"', "\\":"\\\\", "\b":"\\b", "\f":"\\f", "\n":"\\n", "\r":"\\r", "\t":"\\t"};
  return obj14431;
}();
cljs.core.quote_string = function quote_string(s) {
  return[cljs.core.str('"'), cljs.core.str(s.replace(function() {
    var G__14434 = '[\\\\"\b\f\n\r\t]';
    var G__14435 = "g";
    return RegExp(G__14434, G__14435);
  }(), function(match) {
    return cljs.core.char_escapes[match];
  })), cljs.core.str('"')].join("");
};
cljs.core.pr_writer_impl = function pr_writer_impl(obj, writer, opts) {
  if (obj == null) {
    return cljs.core._write(writer, "nil");
  } else {
    if (void 0 === obj) {
      return cljs.core._write(writer, "#\x3cundefined\x3e");
    } else {
      if (cljs.core.truth_(function() {
        var and__3913__auto__ = cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts, new cljs.core.Keyword(null, "meta", "meta", 1499536964));
        if (cljs.core.truth_(and__3913__auto__)) {
          var and__3913__auto____$1 = function() {
            var G__14449 = obj;
            if (G__14449) {
              var bit__4606__auto__ = G__14449.cljs$lang$protocol_mask$partition0$ & 131072;
              if (bit__4606__auto__ || G__14449.cljs$core$IMeta$) {
                return true;
              } else {
                if (!G__14449.cljs$lang$protocol_mask$partition0$) {
                  return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, G__14449);
                } else {
                  return false;
                }
              }
            } else {
              return cljs.core.native_satisfies_QMARK_(cljs.core.IMeta, G__14449);
            }
          }();
          if (and__3913__auto____$1) {
            return cljs.core.meta(obj);
          } else {
            return and__3913__auto____$1;
          }
        } else {
          return and__3913__auto__;
        }
      }())) {
        cljs.core._write(writer, "^");
        var G__14450_14460 = cljs.core.meta(obj);
        var G__14451_14461 = writer;
        var G__14452_14462 = opts;
        cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3 ? cljs.core.pr_writer.cljs$core$IFn$_invoke$arity$3(G__14450_14460, G__14451_14461, G__14452_14462) : cljs.core.pr_writer.call(null, G__14450_14460, G__14451_14461, G__14452_14462);
        cljs.core._write(writer, " ");
      } else {
      }
      if (obj == null) {
        return cljs.core._write(writer, "nil");
      } else {
        if (obj.cljs$lang$type) {
          return obj.cljs$lang$ctorPrWriter(obj, writer, opts);
        } else {
          if (function() {
            var G__14453 = obj;
            if (G__14453) {
              var bit__4599__auto__ = G__14453.cljs$lang$protocol_mask$partition0$ & 2147483648;
              if (bit__4599__auto__ || G__14453.cljs$core$IPrintWithWriter$) {
                return true;
              } else {
                return false;
              }
            } else {
              return false;
            }
          }()) {
            return obj.cljs$core$IPrintWithWriter$_pr_writer$arity$3(null, writer, opts);
          } else {
            if (cljs.core.type(obj) === Boolean || typeof obj === "number") {
              return cljs.core._write(writer, [cljs.core.str(obj)].join(""));
            } else {
              if (cljs.core.object_QMARK_(obj)) {
                cljs.core._write(writer, "#js ");
                var G__14454 = cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(k) {
                  return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.keyword.cljs$core$IFn$_invoke$arity$1(k), obj[k]], null);
                }, cljs.core.js_keys(obj));
                var G__14455 = cljs.core.pr_writer;
                var G__14456 = writer;
                var G__14457 = opts;
                return cljs.core.print_map.cljs$core$IFn$_invoke$arity$4 ? cljs.core.print_map.cljs$core$IFn$_invoke$arity$4(G__14454, G__14455, G__14456, G__14457) : cljs.core.print_map.call(null, G__14454, G__14455, G__14456, G__14457);
              } else {
                if (obj instanceof Array) {
                  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#js [", " ", "]", opts, obj);
                } else {
                  if (cljs.core.truth_(function() {
                    var G__14458 = obj;
                    return goog.isString(G__14458);
                  }())) {
                    if (cljs.core.truth_((new cljs.core.Keyword(null, "readably", "readably", 1129599760)).cljs$core$IFn$_invoke$arity$1(opts))) {
                      return cljs.core._write(writer, cljs.core.quote_string(obj));
                    } else {
                      return cljs.core._write(writer, obj);
                    }
                  } else {
                    if (cljs.core.fn_QMARK_(obj)) {
                      return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(["#\x3c", [cljs.core.str(obj)].join(""), "\x3e"], 0));
                    } else {
                      if (obj instanceof Date) {
                        var normalize = function(n, len) {
                          var ns = [cljs.core.str(n)].join("");
                          while (true) {
                            if (cljs.core.count(ns) < len) {
                              var G__14463 = [cljs.core.str("0"), cljs.core.str(ns)].join("");
                              ns = G__14463;
                              continue;
                            } else {
                              return ns;
                            }
                            break;
                          }
                        };
                        return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(['#inst "', [cljs.core.str(obj.getUTCFullYear())].join(""), "-", normalize(obj.getUTCMonth() + 1, 2), "-", normalize(obj.getUTCDate(), 2), "T", normalize(obj.getUTCHours(), 2), ":", normalize(obj.getUTCMinutes(), 2), ":", normalize(obj.getUTCSeconds(), 2), ".", normalize(obj.getUTCMilliseconds(), 3), "-", '00:00"'], 0));
                      } else {
                        if (cljs.core.regexp_QMARK_(obj)) {
                          return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(['#"', obj.source, '"'], 0));
                        } else {
                          if (function() {
                            var G__14459 = obj;
                            if (G__14459) {
                              var bit__4606__auto__ = G__14459.cljs$lang$protocol_mask$partition0$ & 2147483648;
                              if (bit__4606__auto__ || G__14459.cljs$core$IPrintWithWriter$) {
                                return true;
                              } else {
                                if (!G__14459.cljs$lang$protocol_mask$partition0$) {
                                  return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter, G__14459);
                                } else {
                                  return false;
                                }
                              }
                            } else {
                              return cljs.core.native_satisfies_QMARK_(cljs.core.IPrintWithWriter, G__14459);
                            }
                          }()) {
                            return cljs.core._pr_writer(obj, writer, opts);
                          } else {
                            return cljs.core.write_all.cljs$core$IFn$_invoke$arity$variadic(writer, cljs.core.array_seq(["#\x3c", [cljs.core.str(obj)].join(""), "\x3e"], 0));
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  }
};
cljs.core.pr_writer = function pr_writer(obj, writer, opts) {
  var temp__4124__auto__ = (new cljs.core.Keyword(null, "alt-impl", "alt-impl", 670969595)).cljs$core$IFn$_invoke$arity$1(opts);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var alt_impl = temp__4124__auto__;
    var G__14467 = obj;
    var G__14468 = writer;
    var G__14469 = cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(opts, new cljs.core.Keyword(null, "fallback-impl", "fallback-impl", -1501286995), cljs.core.pr_writer_impl);
    return alt_impl.cljs$core$IFn$_invoke$arity$3 ? alt_impl.cljs$core$IFn$_invoke$arity$3(G__14467, G__14468, G__14469) : alt_impl.call(null, G__14467, G__14468, G__14469);
  } else {
    return cljs.core.pr_writer_impl(obj, writer, opts);
  }
};
cljs.core.pr_seq_writer = function pr_seq_writer(objs, writer, opts) {
  cljs.core.pr_writer(cljs.core.first(objs), writer, opts);
  var seq__14474 = cljs.core.seq(cljs.core.next(objs));
  var chunk__14475 = null;
  var count__14476 = 0;
  var i__14477 = 0;
  while (true) {
    if (i__14477 < count__14476) {
      var obj = chunk__14475.cljs$core$IIndexed$_nth$arity$2(null, i__14477);
      cljs.core._write(writer, " ");
      cljs.core.pr_writer(obj, writer, opts);
      var G__14478 = seq__14474;
      var G__14479 = chunk__14475;
      var G__14480 = count__14476;
      var G__14481 = i__14477 + 1;
      seq__14474 = G__14478;
      chunk__14475 = G__14479;
      count__14476 = G__14480;
      i__14477 = G__14481;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq(seq__14474);
      if (temp__4126__auto__) {
        var seq__14474__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_(seq__14474__$1)) {
          var c__4712__auto__ = cljs.core.chunk_first(seq__14474__$1);
          var G__14482 = cljs.core.chunk_rest(seq__14474__$1);
          var G__14483 = c__4712__auto__;
          var G__14484 = cljs.core.count(c__4712__auto__);
          var G__14485 = 0;
          seq__14474 = G__14482;
          chunk__14475 = G__14483;
          count__14476 = G__14484;
          i__14477 = G__14485;
          continue;
        } else {
          var obj = cljs.core.first(seq__14474__$1);
          cljs.core._write(writer, " ");
          cljs.core.pr_writer(obj, writer, opts);
          var G__14486 = cljs.core.next(seq__14474__$1);
          var G__14487 = null;
          var G__14488 = 0;
          var G__14489 = 0;
          seq__14474 = G__14486;
          chunk__14475 = G__14487;
          count__14476 = G__14488;
          i__14477 = G__14489;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs.core.pr_sb_with_opts = function pr_sb_with_opts(objs, opts) {
  var sb = new goog.string.StringBuffer;
  var writer = new cljs.core.StringBufferWriter(sb);
  cljs.core.pr_seq_writer(objs, writer, opts);
  writer.cljs$core$IWriter$_flush$arity$1(null);
  return sb;
};
cljs.core.pr_str_with_opts = function pr_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_(objs)) {
    return "";
  } else {
    return[cljs.core.str(cljs.core.pr_sb_with_opts(objs, opts))].join("");
  }
};
cljs.core.prn_str_with_opts = function prn_str_with_opts(objs, opts) {
  if (cljs.core.empty_QMARK_(objs)) {
    return "\n";
  } else {
    var sb = cljs.core.pr_sb_with_opts(objs, opts);
    sb.append("\n");
    return[cljs.core.str(sb)].join("");
  }
};
cljs.core.pr_with_opts = function pr_with_opts(objs, opts) {
  return cljs.core.string_print(cljs.core.pr_str_with_opts(objs, opts));
};
cljs.core.newline = function newline(opts) {
  cljs.core.string_print("\n");
  if (cljs.core.truth_(cljs.core.get.cljs$core$IFn$_invoke$arity$2(opts, new cljs.core.Keyword(null, "flush-on-newline", "flush-on-newline", -151457939)))) {
    return cljs.core.flush();
  } else {
    return null;
  }
};
cljs.core.pr_str = function() {
  var pr_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts(objs, cljs.core.pr_opts());
  };
  var pr_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__14490__i = 0, G__14490__a = new Array(arguments.length - 0);
      while (G__14490__i < G__14490__a.length) {
        G__14490__a[G__14490__i] = arguments[G__14490__i + 0];
        ++G__14490__i;
      }
      objs = new cljs.core.IndexedSeq(G__14490__a, 0);
    }
    return pr_str__delegate.call(this, objs);
  };
  pr_str.cljs$lang$maxFixedArity = 0;
  pr_str.cljs$lang$applyTo = function(arglist__14491) {
    var objs = cljs.core.seq(arglist__14491);
    return pr_str__delegate(objs);
  };
  pr_str.cljs$core$IFn$_invoke$arity$variadic = pr_str__delegate;
  return pr_str;
}();
cljs.core.prn_str = function() {
  var prn_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts(objs, cljs.core.pr_opts());
  };
  var prn_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__14492__i = 0, G__14492__a = new Array(arguments.length - 0);
      while (G__14492__i < G__14492__a.length) {
        G__14492__a[G__14492__i] = arguments[G__14492__i + 0];
        ++G__14492__i;
      }
      objs = new cljs.core.IndexedSeq(G__14492__a, 0);
    }
    return prn_str__delegate.call(this, objs);
  };
  prn_str.cljs$lang$maxFixedArity = 0;
  prn_str.cljs$lang$applyTo = function(arglist__14493) {
    var objs = cljs.core.seq(arglist__14493);
    return prn_str__delegate(objs);
  };
  prn_str.cljs$core$IFn$_invoke$arity$variadic = prn_str__delegate;
  return prn_str;
}();
cljs.core.pr = function() {
  var pr__delegate = function(objs) {
    return cljs.core.pr_with_opts(objs, cljs.core.pr_opts());
  };
  var pr = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__14494__i = 0, G__14494__a = new Array(arguments.length - 0);
      while (G__14494__i < G__14494__a.length) {
        G__14494__a[G__14494__i] = arguments[G__14494__i + 0];
        ++G__14494__i;
      }
      objs = new cljs.core.IndexedSeq(G__14494__a, 0);
    }
    return pr__delegate.call(this, objs);
  };
  pr.cljs$lang$maxFixedArity = 0;
  pr.cljs$lang$applyTo = function(arglist__14495) {
    var objs = cljs.core.seq(arglist__14495);
    return pr__delegate(objs);
  };
  pr.cljs$core$IFn$_invoke$arity$variadic = pr__delegate;
  return pr;
}();
cljs.core.print = function() {
  var cljs_core_print__delegate = function(objs) {
    return cljs.core.pr_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var cljs_core_print = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__14496__i = 0, G__14496__a = new Array(arguments.length - 0);
      while (G__14496__i < G__14496__a.length) {
        G__14496__a[G__14496__i] = arguments[G__14496__i + 0];
        ++G__14496__i;
      }
      objs = new cljs.core.IndexedSeq(G__14496__a, 0);
    }
    return cljs_core_print__delegate.call(this, objs);
  };
  cljs_core_print.cljs$lang$maxFixedArity = 0;
  cljs_core_print.cljs$lang$applyTo = function(arglist__14497) {
    var objs = cljs.core.seq(arglist__14497);
    return cljs_core_print__delegate(objs);
  };
  cljs_core_print.cljs$core$IFn$_invoke$arity$variadic = cljs_core_print__delegate;
  return cljs_core_print;
}();
cljs.core.print_str = function() {
  var print_str__delegate = function(objs) {
    return cljs.core.pr_str_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var print_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__14498__i = 0, G__14498__a = new Array(arguments.length - 0);
      while (G__14498__i < G__14498__a.length) {
        G__14498__a[G__14498__i] = arguments[G__14498__i + 0];
        ++G__14498__i;
      }
      objs = new cljs.core.IndexedSeq(G__14498__a, 0);
    }
    return print_str__delegate.call(this, objs);
  };
  print_str.cljs$lang$maxFixedArity = 0;
  print_str.cljs$lang$applyTo = function(arglist__14499) {
    var objs = cljs.core.seq(arglist__14499);
    return print_str__delegate(objs);
  };
  print_str.cljs$core$IFn$_invoke$arity$variadic = print_str__delegate;
  return print_str;
}();
cljs.core.println = function() {
  var println__delegate = function(objs) {
    cljs.core.pr_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
    if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
      return cljs.core.newline(cljs.core.pr_opts());
    } else {
      return null;
    }
  };
  var println = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__14500__i = 0, G__14500__a = new Array(arguments.length - 0);
      while (G__14500__i < G__14500__a.length) {
        G__14500__a[G__14500__i] = arguments[G__14500__i + 0];
        ++G__14500__i;
      }
      objs = new cljs.core.IndexedSeq(G__14500__a, 0);
    }
    return println__delegate.call(this, objs);
  };
  println.cljs$lang$maxFixedArity = 0;
  println.cljs$lang$applyTo = function(arglist__14501) {
    var objs = cljs.core.seq(arglist__14501);
    return println__delegate(objs);
  };
  println.cljs$core$IFn$_invoke$arity$variadic = println__delegate;
  return println;
}();
cljs.core.println_str = function() {
  var println_str__delegate = function(objs) {
    return cljs.core.prn_str_with_opts(objs, cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(cljs.core.pr_opts(), new cljs.core.Keyword(null, "readably", "readably", 1129599760), false));
  };
  var println_str = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__14502__i = 0, G__14502__a = new Array(arguments.length - 0);
      while (G__14502__i < G__14502__a.length) {
        G__14502__a[G__14502__i] = arguments[G__14502__i + 0];
        ++G__14502__i;
      }
      objs = new cljs.core.IndexedSeq(G__14502__a, 0);
    }
    return println_str__delegate.call(this, objs);
  };
  println_str.cljs$lang$maxFixedArity = 0;
  println_str.cljs$lang$applyTo = function(arglist__14503) {
    var objs = cljs.core.seq(arglist__14503);
    return println_str__delegate(objs);
  };
  println_str.cljs$core$IFn$_invoke$arity$variadic = println_str__delegate;
  return println_str;
}();
cljs.core.prn = function() {
  var prn__delegate = function(objs) {
    cljs.core.pr_with_opts(objs, cljs.core.pr_opts());
    if (cljs.core.truth_(cljs.core._STAR_print_newline_STAR_)) {
      return cljs.core.newline(cljs.core.pr_opts());
    } else {
      return null;
    }
  };
  var prn = function(var_args) {
    var objs = null;
    if (arguments.length > 0) {
      var G__14504__i = 0, G__14504__a = new Array(arguments.length - 0);
      while (G__14504__i < G__14504__a.length) {
        G__14504__a[G__14504__i] = arguments[G__14504__i + 0];
        ++G__14504__i;
      }
      objs = new cljs.core.IndexedSeq(G__14504__a, 0);
    }
    return prn__delegate.call(this, objs);
  };
  prn.cljs$lang$maxFixedArity = 0;
  prn.cljs$lang$applyTo = function(arglist__14505) {
    var objs = cljs.core.seq(arglist__14505);
    return prn__delegate(objs);
  };
  prn.cljs$core$IFn$_invoke$arity$variadic = prn__delegate;
  return prn;
}();
cljs.core.print_map = function print_map(m, print_one, writer, opts) {
  return cljs.core.pr_sequential_writer(writer, function(e, w, opts__$1) {
    var G__14512_14518 = cljs.core.key(e);
    var G__14513_14519 = w;
    var G__14514_14520 = opts__$1;
    print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__14512_14518, G__14513_14519, G__14514_14520) : print_one.call(null, G__14512_14518, G__14513_14519, G__14514_14520);
    cljs.core._write(w, " ");
    var G__14515 = cljs.core.val(e);
    var G__14516 = w;
    var G__14517 = opts__$1;
    return print_one.cljs$core$IFn$_invoke$arity$3 ? print_one.cljs$core$IFn$_invoke$arity$3(G__14515, G__14516, G__14517) : print_one.call(null, G__14515, G__14516, G__14517);
  }, "{", ", ", "}", opts, cljs.core.seq(m));
};
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Volatile.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#\x3cVolatile: ");
  cljs.core.pr_writer(a__$1.state, writer, opts);
  return cljs.core._write(writer, "\x3e");
};
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Var.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#'");
  return cljs.core.pr_writer(a__$1.sym, writer, opts);
};
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.IndexedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.NodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.BlackNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMapSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ES6IteratorSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ObjMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Cons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ArrayNodeSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Subvec.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentTreeMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentHashSet.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#{", " ", "}", opts, coll__$1);
};
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ChunkedCons.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Atom.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(a, writer, opts) {
  var a__$1 = this;
  cljs.core._write(writer, "#\x3cAtom: ");
  cljs.core.pr_writer(a__$1.state, writer, opts);
  return cljs.core._write(writer, "\x3e");
};
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.ValSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.RedNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueueSeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.EmptyList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core._write(writer, "()");
};
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.LazyTransformer.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentQueue.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "#queue [", " ", "]", opts, cljs.core.seq(coll__$1));
};
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.PersistentArrayMap.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.print_map(coll__$1, cljs.core.pr_writer, writer, opts);
};
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.Range.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.KeySeq.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.List.prototype.cljs$core$IPrintWithWriter$ = true;
cljs.core.List.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$1);
};
cljs.core.PersistentVector.prototype.cljs$core$IComparable$ = true;
cljs.core.PersistentVector.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
};
cljs.core.Subvec.prototype.cljs$core$IComparable$ = true;
cljs.core.Subvec.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_indexed.cljs$core$IFn$_invoke$arity$2(x__$1, y);
};
cljs.core.Keyword.prototype.cljs$core$IComparable$ = true;
cljs.core.Keyword.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_keywords(x__$1, y);
};
cljs.core.Symbol.prototype.cljs$core$IComparable$ = true;
cljs.core.Symbol.prototype.cljs$core$IComparable$_compare$arity$2 = function(x, y) {
  var x__$1 = this;
  return cljs.core.compare_symbols(x__$1, y);
};
cljs.core.alter_meta_BANG_ = function() {
  var alter_meta_BANG___delegate = function(iref, f, args) {
    return iref.meta = cljs.core.apply.cljs$core$IFn$_invoke$arity$3(f, iref.meta, args);
  };
  var alter_meta_BANG_ = function(iref, f, var_args) {
    var args = null;
    if (arguments.length > 2) {
      var G__14521__i = 0, G__14521__a = new Array(arguments.length - 2);
      while (G__14521__i < G__14521__a.length) {
        G__14521__a[G__14521__i] = arguments[G__14521__i + 2];
        ++G__14521__i;
      }
      args = new cljs.core.IndexedSeq(G__14521__a, 0);
    }
    return alter_meta_BANG___delegate.call(this, iref, f, args);
  };
  alter_meta_BANG_.cljs$lang$maxFixedArity = 2;
  alter_meta_BANG_.cljs$lang$applyTo = function(arglist__14522) {
    var iref = cljs.core.first(arglist__14522);
    arglist__14522 = cljs.core.next(arglist__14522);
    var f = cljs.core.first(arglist__14522);
    var args = cljs.core.rest(arglist__14522);
    return alter_meta_BANG___delegate(iref, f, args);
  };
  alter_meta_BANG_.cljs$core$IFn$_invoke$arity$variadic = alter_meta_BANG___delegate;
  return alter_meta_BANG_;
}();
cljs.core.reset_meta_BANG_ = function reset_meta_BANG_(iref, m) {
  return iref.meta = m;
};
cljs.core.add_watch = function add_watch(iref, key, f) {
  cljs.core._add_watch(iref, key, f);
  return iref;
};
cljs.core.remove_watch = function remove_watch(iref, key) {
  cljs.core._remove_watch(iref, key);
  return iref;
};
cljs.core.gensym_counter = null;
cljs.core.gensym = function() {
  var gensym = null;
  var gensym__0 = function() {
    return gensym.cljs$core$IFn$_invoke$arity$1("G__");
  };
  var gensym__1 = function(prefix_string) {
    if (cljs.core.gensym_counter == null) {
      cljs.core.gensym_counter = function() {
        var G__14525 = 0;
        return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__14525) : cljs.core.atom.call(null, G__14525);
      }();
    } else {
    }
    return cljs.core.symbol.cljs$core$IFn$_invoke$arity$1([cljs.core.str(prefix_string), cljs.core.str(cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cljs.core.gensym_counter, cljs.core.inc))].join(""));
  };
  gensym = function(prefix_string) {
    switch(arguments.length) {
      case 0:
        return gensym__0.call(this);
      case 1:
        return gensym__1.call(this, prefix_string);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  gensym.cljs$core$IFn$_invoke$arity$0 = gensym__0;
  gensym.cljs$core$IFn$_invoke$arity$1 = gensym__1;
  return gensym;
}();
cljs.core.fixture1 = 1;
cljs.core.fixture2 = 2;
cljs.core.Delay = function(f, value) {
  this.f = f;
  this.value = value;
  this.cljs$lang$protocol_mask$partition1$ = 1;
  this.cljs$lang$protocol_mask$partition0$ = 32768;
};
cljs.core.Delay.prototype.cljs$core$IPending$_realized_QMARK_$arity$1 = function(d) {
  var self__ = this;
  var d__$1 = this;
  return cljs.core.not(self__.f);
};
cljs.core.Delay.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  if (cljs.core.truth_(self__.f)) {
    self__.value = function() {
      return self__.f.cljs$core$IFn$_invoke$arity$0 ? self__.f.cljs$core$IFn$_invoke$arity$0() : self__.f.call(null);
    }();
    self__.f = null;
  } else {
  }
  return self__.value;
};
cljs.core.Delay.cljs$lang$type = true;
cljs.core.Delay.cljs$lang$ctorStr = "cljs.core/Delay";
cljs.core.Delay.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/Delay");
};
cljs.core.__GT_Delay = function __GT_Delay(f, value) {
  return new cljs.core.Delay(f, value);
};
cljs.core.delay_QMARK_ = function delay_QMARK_(x) {
  return x instanceof cljs.core.Delay;
};
cljs.core.force = function force(x) {
  if (cljs.core.delay_QMARK_(x)) {
    var G__14527 = x;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14527) : cljs.core.deref.call(null, G__14527);
  } else {
    return x;
  }
};
cljs.core.realized_QMARK_ = function realized_QMARK_(d) {
  return cljs.core._realized_QMARK_(d);
};
cljs.core.preserving_reduced = function preserving_reduced(rf) {
  return function(p1__14528_SHARP_, p2__14529_SHARP_) {
    var ret = function() {
      var G__14532 = p1__14528_SHARP_;
      var G__14533 = p2__14529_SHARP_;
      return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14532, G__14533) : rf.call(null, G__14532, G__14533);
    }();
    if (cljs.core.reduced_QMARK_(ret)) {
      return cljs.core.reduced(ret);
    } else {
      return ret;
    }
  };
};
cljs.core.cat = function cat(rf) {
  var rf1 = cljs.core.preserving_reduced(rf);
  return function(rf1) {
    return function() {
      var G__14536 = null;
      var G__14536__0 = function() {
        return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
      };
      var G__14536__1 = function(result) {
        var G__14535 = result;
        return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14535) : rf.call(null, G__14535);
      };
      var G__14536__2 = function(result, input) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(rf1, result, input);
      };
      G__14536 = function(result, input) {
        switch(arguments.length) {
          case 0:
            return G__14536__0.call(this);
          case 1:
            return G__14536__1.call(this, result);
          case 2:
            return G__14536__2.call(this, result, input);
        }
        throw new Error("Invalid arity: " + arguments.length);
      };
      G__14536.cljs$core$IFn$_invoke$arity$0 = G__14536__0;
      G__14536.cljs$core$IFn$_invoke$arity$1 = G__14536__1;
      G__14536.cljs$core$IFn$_invoke$arity$2 = G__14536__2;
      return G__14536;
    }();
  }(rf1);
};
cljs.core.dedupe = function() {
  var dedupe = null;
  var dedupe__0 = function() {
    return function(rf) {
      var pa = cljs.core.volatile_BANG_(new cljs.core.Keyword("cljs.core", "none", "cljs.core/none", 926646439));
      return function(pa) {
        return function() {
          var G__14545 = null;
          var G__14545__0 = function() {
            return rf.cljs$core$IFn$_invoke$arity$0 ? rf.cljs$core$IFn$_invoke$arity$0() : rf.call(null);
          };
          var G__14545__1 = function(result) {
            var G__14541 = result;
            return rf.cljs$core$IFn$_invoke$arity$1 ? rf.cljs$core$IFn$_invoke$arity$1(G__14541) : rf.call(null, G__14541);
          };
          var G__14545__2 = function(result, input) {
            var prior = function() {
              var G__14542 = pa;
              return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14542) : cljs.core.deref.call(null, G__14542);
            }();
            cljs.core.vreset_BANG_(pa, input);
            if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(prior, input)) {
              return result;
            } else {
              var G__14543 = result;
              var G__14544 = input;
              return rf.cljs$core$IFn$_invoke$arity$2 ? rf.cljs$core$IFn$_invoke$arity$2(G__14543, G__14544) : rf.call(null, G__14543, G__14544);
            }
          };
          G__14545 = function(result, input) {
            switch(arguments.length) {
              case 0:
                return G__14545__0.call(this);
              case 1:
                return G__14545__1.call(this, result);
              case 2:
                return G__14545__2.call(this, result, input);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__14545.cljs$core$IFn$_invoke$arity$0 = G__14545__0;
          G__14545.cljs$core$IFn$_invoke$arity$1 = G__14545__1;
          G__14545.cljs$core$IFn$_invoke$arity$2 = G__14545__2;
          return G__14545;
        }();
      }(pa);
    };
  };
  var dedupe__1 = function(coll) {
    return cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(dedupe.cljs$core$IFn$_invoke$arity$0(), coll);
  };
  dedupe = function(coll) {
    switch(arguments.length) {
      case 0:
        return dedupe__0.call(this);
      case 1:
        return dedupe__1.call(this, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  dedupe.cljs$core$IFn$_invoke$arity$0 = dedupe__0;
  dedupe.cljs$core$IFn$_invoke$arity$1 = dedupe__1;
  return dedupe;
}();
cljs.core.random_sample = function() {
  var random_sample = null;
  var random_sample__1 = function(prob) {
    return cljs.core.filter.cljs$core$IFn$_invoke$arity$1(function(_) {
      return function() {
        return cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null);
      }() < prob;
    });
  };
  var random_sample__2 = function(prob, coll) {
    return cljs.core.filter.cljs$core$IFn$_invoke$arity$2(function(_) {
      return function() {
        return cljs.core.rand.cljs$core$IFn$_invoke$arity$0 ? cljs.core.rand.cljs$core$IFn$_invoke$arity$0() : cljs.core.rand.call(null);
      }() < prob;
    }, coll);
  };
  random_sample = function(prob, coll) {
    switch(arguments.length) {
      case 1:
        return random_sample__1.call(this, prob);
      case 2:
        return random_sample__2.call(this, prob, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  random_sample.cljs$core$IFn$_invoke$arity$1 = random_sample__1;
  random_sample.cljs$core$IFn$_invoke$arity$2 = random_sample__2;
  return random_sample;
}();
cljs.core.Eduction = function(xform, coll) {
  this.xform = xform;
  this.coll = coll;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2173173760;
};
cljs.core.Eduction.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll__$1, writer, opts) {
  var self__ = this;
  var coll__$2 = this;
  return cljs.core.pr_sequential_writer(writer, cljs.core.pr_writer, "(", " ", ")", opts, coll__$2);
};
cljs.core.Eduction.prototype.cljs$core$IReduce$_reduce$arity$3 = function(_, f, init) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.transduce.cljs$core$IFn$_invoke$arity$4(self__.xform, f, init, self__.coll);
};
cljs.core.Eduction.prototype.cljs$core$ISeqable$_seq$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return cljs.core.seq(cljs.core.sequence.cljs$core$IFn$_invoke$arity$2(self__.xform, self__.coll));
};
cljs.core.Eduction.cljs$lang$type = true;
cljs.core.Eduction.cljs$lang$ctorStr = "cljs.core/Eduction";
cljs.core.Eduction.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/Eduction");
};
cljs.core.__GT_Eduction = function __GT_Eduction(xform, coll) {
  return new cljs.core.Eduction(xform, coll);
};
cljs.core.Eduction.prototype[cljs.core.ITER_SYMBOL] = function() {
  var this__4903__auto__ = this;
  return cljs.core.es6_iterator(this__4903__auto__);
};
cljs.core.eduction = function eduction(xform, coll) {
  return new cljs.core.Eduction(xform, coll);
};
cljs.core.run_BANG_ = function run_BANG_(proc, coll) {
  return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(p1__14547_SHARP_, p2__14546_SHARP_) {
    var G__14549 = p2__14546_SHARP_;
    return proc.cljs$core$IFn$_invoke$arity$1 ? proc.cljs$core$IFn$_invoke$arity$1(G__14549) : proc.call(null, G__14549);
  }, null, coll);
};
cljs.core.IEncodeJS = function() {
  var obj14551 = {};
  return obj14551;
}();
cljs.core._clj__GT_js = function _clj__GT_js(x) {
  if (function() {
    var and__3913__auto__ = x;
    if (and__3913__auto__) {
      return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeJS$_clj__GT_js$arity$1(x);
  } else {
    var x__4569__auto__ = x == null ? null : x;
    return function() {
      var or__3925__auto__ = cljs.core._clj__GT_js[function() {
        var G__14555 = x__4569__auto__;
        return goog.typeOf(G__14555);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._clj__GT_js["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEncodeJS.-clj-\x3ejs", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core._key__GT_js = function _key__GT_js(x) {
  if (function() {
    var and__3913__auto__ = x;
    if (and__3913__auto__) {
      return x.cljs$core$IEncodeJS$_key__GT_js$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeJS$_key__GT_js$arity$1(x);
  } else {
    var x__4569__auto__ = x == null ? null : x;
    return function() {
      var or__3925__auto__ = cljs.core._key__GT_js[function() {
        var G__14559 = x__4569__auto__;
        return goog.typeOf(G__14559);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._key__GT_js["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEncodeJS.-key-\x3ejs", x);
        }
      }
    }().call(null, x);
  }
};
cljs.core.key__GT_js = function key__GT_js(k) {
  if (function() {
    var G__14562 = k;
    if (G__14562) {
      var bit__4606__auto__ = null;
      if (cljs.core.truth_(function() {
        var or__3925__auto__ = bit__4606__auto__;
        if (cljs.core.truth_(or__3925__auto__)) {
          return or__3925__auto__;
        } else {
          return G__14562.cljs$core$IEncodeJS$;
        }
      }())) {
        return true;
      } else {
        if (!G__14562.cljs$lang$protocol_mask$partition$) {
          return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, G__14562);
        } else {
          return false;
        }
      }
    } else {
      return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, G__14562);
    }
  }()) {
    return cljs.core._clj__GT_js(k);
  } else {
    if (typeof k === "string" || typeof k === "number" || k instanceof cljs.core.Keyword || k instanceof cljs.core.Symbol) {
      var G__14563 = k;
      return cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1 ? cljs.core.clj__GT_js.cljs$core$IFn$_invoke$arity$1(G__14563) : cljs.core.clj__GT_js.call(null, G__14563);
    } else {
      return cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([k], 0));
    }
  }
};
cljs.core.clj__GT_js = function clj__GT_js(x) {
  if (x == null) {
    return null;
  } else {
    if (function() {
      var G__14579 = x;
      if (G__14579) {
        var bit__4606__auto__ = null;
        if (cljs.core.truth_(function() {
          var or__3925__auto__ = bit__4606__auto__;
          if (cljs.core.truth_(or__3925__auto__)) {
            return or__3925__auto__;
          } else {
            return G__14579.cljs$core$IEncodeJS$;
          }
        }())) {
          return true;
        } else {
          if (!G__14579.cljs$lang$protocol_mask$partition$) {
            return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, G__14579);
          } else {
            return false;
          }
        }
      } else {
        return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeJS, G__14579);
      }
    }()) {
      return cljs.core._clj__GT_js(x);
    } else {
      if (x instanceof cljs.core.Keyword) {
        return cljs.core.name(x);
      } else {
        if (x instanceof cljs.core.Symbol) {
          return[cljs.core.str(x)].join("");
        } else {
          if (cljs.core.map_QMARK_(x)) {
            var m = function() {
              var obj14581 = {};
              return obj14581;
            }();
            var seq__14582_14592 = cljs.core.seq(x);
            var chunk__14583_14593 = null;
            var count__14584_14594 = 0;
            var i__14585_14595 = 0;
            while (true) {
              if (i__14585_14595 < count__14584_14594) {
                var vec__14586_14596 = chunk__14583_14593.cljs$core$IIndexed$_nth$arity$2(null, i__14585_14595);
                var k_14597 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14586_14596, 0, null);
                var v_14598 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14586_14596, 1, null);
                m[cljs.core.key__GT_js(k_14597)] = clj__GT_js(v_14598);
                var G__14599 = seq__14582_14592;
                var G__14600 = chunk__14583_14593;
                var G__14601 = count__14584_14594;
                var G__14602 = i__14585_14595 + 1;
                seq__14582_14592 = G__14599;
                chunk__14583_14593 = G__14600;
                count__14584_14594 = G__14601;
                i__14585_14595 = G__14602;
                continue;
              } else {
                var temp__4126__auto___14603 = cljs.core.seq(seq__14582_14592);
                if (temp__4126__auto___14603) {
                  var seq__14582_14604__$1 = temp__4126__auto___14603;
                  if (cljs.core.chunked_seq_QMARK_(seq__14582_14604__$1)) {
                    var c__4712__auto___14605 = cljs.core.chunk_first(seq__14582_14604__$1);
                    var G__14606 = cljs.core.chunk_rest(seq__14582_14604__$1);
                    var G__14607 = c__4712__auto___14605;
                    var G__14608 = cljs.core.count(c__4712__auto___14605);
                    var G__14609 = 0;
                    seq__14582_14592 = G__14606;
                    chunk__14583_14593 = G__14607;
                    count__14584_14594 = G__14608;
                    i__14585_14595 = G__14609;
                    continue;
                  } else {
                    var vec__14587_14610 = cljs.core.first(seq__14582_14604__$1);
                    var k_14611 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14587_14610, 0, null);
                    var v_14612 = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14587_14610, 1, null);
                    m[cljs.core.key__GT_js(k_14611)] = clj__GT_js(v_14612);
                    var G__14613 = cljs.core.next(seq__14582_14604__$1);
                    var G__14614 = null;
                    var G__14615 = 0;
                    var G__14616 = 0;
                    seq__14582_14592 = G__14613;
                    chunk__14583_14593 = G__14614;
                    count__14584_14594 = G__14615;
                    i__14585_14595 = G__14616;
                    continue;
                  }
                } else {
                }
              }
              break;
            }
            return m;
          } else {
            if (cljs.core.coll_QMARK_(x)) {
              var arr = [];
              var seq__14588_14617 = cljs.core.seq(cljs.core.map.cljs$core$IFn$_invoke$arity$2(clj__GT_js, x));
              var chunk__14589_14618 = null;
              var count__14590_14619 = 0;
              var i__14591_14620 = 0;
              while (true) {
                if (i__14591_14620 < count__14590_14619) {
                  var x_14621__$1 = chunk__14589_14618.cljs$core$IIndexed$_nth$arity$2(null, i__14591_14620);
                  arr.push(x_14621__$1);
                  var G__14622 = seq__14588_14617;
                  var G__14623 = chunk__14589_14618;
                  var G__14624 = count__14590_14619;
                  var G__14625 = i__14591_14620 + 1;
                  seq__14588_14617 = G__14622;
                  chunk__14589_14618 = G__14623;
                  count__14590_14619 = G__14624;
                  i__14591_14620 = G__14625;
                  continue;
                } else {
                  var temp__4126__auto___14626 = cljs.core.seq(seq__14588_14617);
                  if (temp__4126__auto___14626) {
                    var seq__14588_14627__$1 = temp__4126__auto___14626;
                    if (cljs.core.chunked_seq_QMARK_(seq__14588_14627__$1)) {
                      var c__4712__auto___14628 = cljs.core.chunk_first(seq__14588_14627__$1);
                      var G__14629 = cljs.core.chunk_rest(seq__14588_14627__$1);
                      var G__14630 = c__4712__auto___14628;
                      var G__14631 = cljs.core.count(c__4712__auto___14628);
                      var G__14632 = 0;
                      seq__14588_14617 = G__14629;
                      chunk__14589_14618 = G__14630;
                      count__14590_14619 = G__14631;
                      i__14591_14620 = G__14632;
                      continue;
                    } else {
                      var x_14633__$1 = cljs.core.first(seq__14588_14627__$1);
                      arr.push(x_14633__$1);
                      var G__14634 = cljs.core.next(seq__14588_14627__$1);
                      var G__14635 = null;
                      var G__14636 = 0;
                      var G__14637 = 0;
                      seq__14588_14617 = G__14634;
                      chunk__14589_14618 = G__14635;
                      count__14590_14619 = G__14636;
                      i__14591_14620 = G__14637;
                      continue;
                    }
                  } else {
                  }
                }
                break;
              }
              return arr;
            } else {
              return x;
            }
          }
        }
      }
    }
  }
};
cljs.core.IEncodeClojure = function() {
  var obj14639 = {};
  return obj14639;
}();
cljs.core._js__GT_clj = function _js__GT_clj(x, options) {
  if (function() {
    var and__3913__auto__ = x;
    if (and__3913__auto__) {
      return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return x.cljs$core$IEncodeClojure$_js__GT_clj$arity$2(x, options);
  } else {
    var x__4569__auto__ = x == null ? null : x;
    return function() {
      var or__3925__auto__ = cljs.core._js__GT_clj[function() {
        var G__14643 = x__4569__auto__;
        return goog.typeOf(G__14643);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._js__GT_clj["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IEncodeClojure.-js-\x3eclj", x);
        }
      }
    }().call(null, x, options);
  }
};
cljs.core.js__GT_clj = function() {
  var js__GT_clj = null;
  var js__GT_clj__1 = function(x) {
    return js__GT_clj.cljs$core$IFn$_invoke$arity$variadic(x, cljs.core.array_seq([new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252), false], null)], 0));
  };
  var js__GT_clj__2 = function() {
    var G__14700__delegate = function(x, opts) {
      var map__14673 = opts;
      var map__14673__$1 = cljs.core.seq_QMARK_(map__14673) ? cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.hash_map, map__14673) : map__14673;
      var keywordize_keys = cljs.core.get.cljs$core$IFn$_invoke$arity$2(map__14673__$1, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252));
      var keyfn = cljs.core.truth_(keywordize_keys) ? cljs.core.keyword : cljs.core.str;
      var f = function(map__14673, map__14673__$1, keywordize_keys, keyfn) {
        return function thisfn(x__$1) {
          if (function() {
            var G__14689 = x__$1;
            if (G__14689) {
              var bit__4606__auto__ = null;
              if (cljs.core.truth_(function() {
                var or__3925__auto__ = bit__4606__auto__;
                if (cljs.core.truth_(or__3925__auto__)) {
                  return or__3925__auto__;
                } else {
                  return G__14689.cljs$core$IEncodeClojure$;
                }
              }())) {
                return true;
              } else {
                if (!G__14689.cljs$lang$protocol_mask$partition$) {
                  return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure, G__14689);
                } else {
                  return false;
                }
              }
            } else {
              return cljs.core.native_satisfies_QMARK_(cljs.core.IEncodeClojure, G__14689);
            }
          }()) {
            return cljs.core._js__GT_clj(x__$1, cljs.core.apply.cljs$core$IFn$_invoke$arity$2(cljs.core.array_map, opts));
          } else {
            if (cljs.core.seq_QMARK_(x__$1)) {
              return cljs.core.doall.cljs$core$IFn$_invoke$arity$1(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn, x__$1));
            } else {
              if (cljs.core.coll_QMARK_(x__$1)) {
                return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.empty(x__$1), cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn, x__$1));
              } else {
                if (x__$1 instanceof Array) {
                  return cljs.core.vec(cljs.core.map.cljs$core$IFn$_invoke$arity$2(thisfn, x__$1));
                } else {
                  if (cljs.core.type(x__$1) === Object) {
                    return cljs.core.into.cljs$core$IFn$_invoke$arity$2(cljs.core.PersistentArrayMap.EMPTY, function() {
                      var iter__4681__auto__ = function(map__14673, map__14673__$1, keywordize_keys, keyfn) {
                        return function iter__14690(s__14691) {
                          return new cljs.core.LazySeq(null, function(map__14673, map__14673__$1, keywordize_keys, keyfn) {
                            return function() {
                              var s__14691__$1 = s__14691;
                              while (true) {
                                var temp__4126__auto__ = cljs.core.seq(s__14691__$1);
                                if (temp__4126__auto__) {
                                  var s__14691__$2 = temp__4126__auto__;
                                  if (cljs.core.chunked_seq_QMARK_(s__14691__$2)) {
                                    var c__4679__auto__ = cljs.core.chunk_first(s__14691__$2);
                                    var size__4680__auto__ = cljs.core.count(c__4679__auto__);
                                    var b__14693 = cljs.core.chunk_buffer(size__4680__auto__);
                                    if (function() {
                                      var i__14692 = 0;
                                      while (true) {
                                        if (i__14692 < size__4680__auto__) {
                                          var k = cljs.core._nth.cljs$core$IFn$_invoke$arity$2(c__4679__auto__, i__14692);
                                          cljs.core.chunk_append(b__14693, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
                                            var G__14698 = k;
                                            return keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__14698) : keyfn.call(null, G__14698);
                                          }(), thisfn(x__$1[k])], null));
                                          var G__14701 = i__14692 + 1;
                                          i__14692 = G__14701;
                                          continue;
                                        } else {
                                          return true;
                                        }
                                        break;
                                      }
                                    }()) {
                                      return cljs.core.chunk_cons(cljs.core.chunk(b__14693), iter__14690(cljs.core.chunk_rest(s__14691__$2)));
                                    } else {
                                      return cljs.core.chunk_cons(cljs.core.chunk(b__14693), null);
                                    }
                                  } else {
                                    var k = cljs.core.first(s__14691__$2);
                                    return cljs.core.cons(new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [function() {
                                      var G__14699 = k;
                                      return keyfn.cljs$core$IFn$_invoke$arity$1 ? keyfn.cljs$core$IFn$_invoke$arity$1(G__14699) : keyfn.call(null, G__14699);
                                    }(), thisfn(x__$1[k])], null), iter__14690(cljs.core.rest(s__14691__$2)));
                                  }
                                } else {
                                  return null;
                                }
                                break;
                              }
                            };
                          }(map__14673, map__14673__$1, keywordize_keys, keyfn), null, null);
                        };
                      }(map__14673, map__14673__$1, keywordize_keys, keyfn);
                      return iter__4681__auto__(cljs.core.js_keys(x__$1));
                    }());
                  } else {
                    return x__$1;
                  }
                }
              }
            }
          }
        };
      }(map__14673, map__14673__$1, keywordize_keys, keyfn);
      return f(x);
    };
    var G__14700 = function(x, var_args) {
      var opts = null;
      if (arguments.length > 1) {
        var G__14702__i = 0, G__14702__a = new Array(arguments.length - 1);
        while (G__14702__i < G__14702__a.length) {
          G__14702__a[G__14702__i] = arguments[G__14702__i + 1];
          ++G__14702__i;
        }
        opts = new cljs.core.IndexedSeq(G__14702__a, 0);
      }
      return G__14700__delegate.call(this, x, opts);
    };
    G__14700.cljs$lang$maxFixedArity = 1;
    G__14700.cljs$lang$applyTo = function(arglist__14703) {
      var x = cljs.core.first(arglist__14703);
      var opts = cljs.core.rest(arglist__14703);
      return G__14700__delegate(x, opts);
    };
    G__14700.cljs$core$IFn$_invoke$arity$variadic = G__14700__delegate;
    return G__14700;
  }();
  js__GT_clj = function(x, var_args) {
    var opts = var_args;
    switch(arguments.length) {
      case 1:
        return js__GT_clj__1.call(this, x);
      default:
        var G__14704 = null;
        if (arguments.length > 1) {
          var G__14705__i = 0, G__14705__a = new Array(arguments.length - 1);
          while (G__14705__i < G__14705__a.length) {
            G__14705__a[G__14705__i] = arguments[G__14705__i + 1];
            ++G__14705__i;
          }
          G__14704 = new cljs.core.IndexedSeq(G__14705__a, 0);
        }
        return js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic(x, G__14704);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  js__GT_clj.cljs$lang$maxFixedArity = 1;
  js__GT_clj.cljs$lang$applyTo = js__GT_clj__2.cljs$lang$applyTo;
  js__GT_clj.cljs$core$IFn$_invoke$arity$1 = js__GT_clj__1;
  js__GT_clj.cljs$core$IFn$_invoke$arity$variadic = js__GT_clj__2.cljs$core$IFn$_invoke$arity$variadic;
  return js__GT_clj;
}();
cljs.core.memoize = function memoize(f) {
  var mem = function() {
    var G__14708 = cljs.core.PersistentArrayMap.EMPTY;
    return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__14708) : cljs.core.atom.call(null, G__14708);
  }();
  return function(mem) {
    return function() {
      var G__14710__delegate = function(args) {
        var v = cljs.core.get.cljs$core$IFn$_invoke$arity$3(function() {
          var G__14709 = mem;
          return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14709) : cljs.core.deref.call(null, G__14709);
        }(), args, cljs.core.lookup_sentinel);
        if (v === cljs.core.lookup_sentinel) {
          var ret = cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, args);
          cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(mem, cljs.core.assoc, args, ret);
          return ret;
        } else {
          return v;
        }
      };
      var G__14710 = function(var_args) {
        var args = null;
        if (arguments.length > 0) {
          var G__14711__i = 0, G__14711__a = new Array(arguments.length - 0);
          while (G__14711__i < G__14711__a.length) {
            G__14711__a[G__14711__i] = arguments[G__14711__i + 0];
            ++G__14711__i;
          }
          args = new cljs.core.IndexedSeq(G__14711__a, 0);
        }
        return G__14710__delegate.call(this, args);
      };
      G__14710.cljs$lang$maxFixedArity = 0;
      G__14710.cljs$lang$applyTo = function(arglist__14712) {
        var args = cljs.core.seq(arglist__14712);
        return G__14710__delegate(args);
      };
      G__14710.cljs$core$IFn$_invoke$arity$variadic = G__14710__delegate;
      return G__14710;
    }();
  }(mem);
};
cljs.core.trampoline = function() {
  var trampoline = null;
  var trampoline__1 = function(f) {
    while (true) {
      var ret = function() {
        return f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
      }();
      if (cljs.core.fn_QMARK_(ret)) {
        var G__14714 = ret;
        f = G__14714;
        continue;
      } else {
        return ret;
      }
      break;
    }
  };
  var trampoline__2 = function() {
    var G__14715__delegate = function(f, args) {
      return trampoline.cljs$core$IFn$_invoke$arity$1(function() {
        return cljs.core.apply.cljs$core$IFn$_invoke$arity$2(f, args);
      });
    };
    var G__14715 = function(f, var_args) {
      var args = null;
      if (arguments.length > 1) {
        var G__14716__i = 0, G__14716__a = new Array(arguments.length - 1);
        while (G__14716__i < G__14716__a.length) {
          G__14716__a[G__14716__i] = arguments[G__14716__i + 1];
          ++G__14716__i;
        }
        args = new cljs.core.IndexedSeq(G__14716__a, 0);
      }
      return G__14715__delegate.call(this, f, args);
    };
    G__14715.cljs$lang$maxFixedArity = 1;
    G__14715.cljs$lang$applyTo = function(arglist__14717) {
      var f = cljs.core.first(arglist__14717);
      var args = cljs.core.rest(arglist__14717);
      return G__14715__delegate(f, args);
    };
    G__14715.cljs$core$IFn$_invoke$arity$variadic = G__14715__delegate;
    return G__14715;
  }();
  trampoline = function(f, var_args) {
    var args = var_args;
    switch(arguments.length) {
      case 1:
        return trampoline__1.call(this, f);
      default:
        var G__14718 = null;
        if (arguments.length > 1) {
          var G__14719__i = 0, G__14719__a = new Array(arguments.length - 1);
          while (G__14719__i < G__14719__a.length) {
            G__14719__a[G__14719__i] = arguments[G__14719__i + 1];
            ++G__14719__i;
          }
          G__14718 = new cljs.core.IndexedSeq(G__14719__a, 0);
        }
        return trampoline__2.cljs$core$IFn$_invoke$arity$variadic(f, G__14718);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  trampoline.cljs$lang$maxFixedArity = 1;
  trampoline.cljs$lang$applyTo = trampoline__2.cljs$lang$applyTo;
  trampoline.cljs$core$IFn$_invoke$arity$1 = trampoline__1;
  trampoline.cljs$core$IFn$_invoke$arity$variadic = trampoline__2.cljs$core$IFn$_invoke$arity$variadic;
  return trampoline;
}();
cljs.core.rand = function() {
  var rand = null;
  var rand__0 = function() {
    return rand.cljs$core$IFn$_invoke$arity$1(1);
  };
  var rand__1 = function(n) {
    return function() {
      return Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null);
    }() * n;
  };
  rand = function(n) {
    switch(arguments.length) {
      case 0:
        return rand__0.call(this);
      case 1:
        return rand__1.call(this, n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  rand.cljs$core$IFn$_invoke$arity$0 = rand__0;
  rand.cljs$core$IFn$_invoke$arity$1 = rand__1;
  return rand;
}();
cljs.core.rand_int = function rand_int(n) {
  var G__14722 = function() {
    return Math.random.cljs$core$IFn$_invoke$arity$0 ? Math.random.cljs$core$IFn$_invoke$arity$0() : Math.random.call(null);
  }() * n;
  return Math.floor.cljs$core$IFn$_invoke$arity$1 ? Math.floor.cljs$core$IFn$_invoke$arity$1(G__14722) : Math.floor.call(null, G__14722);
};
cljs.core.rand_nth = function rand_nth(coll) {
  return cljs.core.nth.cljs$core$IFn$_invoke$arity$2(coll, cljs.core.rand_int(cljs.core.count(coll)));
};
cljs.core.group_by = function group_by(f, coll) {
  return cljs.core.persistent_BANG_(cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(ret, x) {
    var k = function() {
      var G__14724 = x;
      return f.cljs$core$IFn$_invoke$arity$1 ? f.cljs$core$IFn$_invoke$arity$1(G__14724) : f.call(null, G__14724);
    }();
    return cljs.core.assoc_BANG_.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.PersistentVector.EMPTY), x));
  }, cljs.core.transient$(cljs.core.PersistentArrayMap.EMPTY), coll));
};
cljs.core.make_hierarchy = function make_hierarchy() {
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), cljs.core.PersistentArrayMap.EMPTY, new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), cljs.core.PersistentArrayMap.EMPTY], null);
};
cljs.core._global_hierarchy = null;
cljs.core.get_global_hierarchy = function get_global_hierarchy() {
  if (cljs.core._global_hierarchy == null) {
    cljs.core._global_hierarchy = function() {
      var G__14726 = cljs.core.make_hierarchy();
      return cljs.core.atom.cljs$core$IFn$_invoke$arity$1 ? cljs.core.atom.cljs$core$IFn$_invoke$arity$1(G__14726) : cljs.core.atom.call(null, G__14726);
    }();
  } else {
  }
  return cljs.core._global_hierarchy;
};
cljs.core.swap_global_hierarchy_BANG_ = function() {
  var swap_global_hierarchy_BANG___delegate = function(f, args) {
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$4(cljs.core.swap_BANG_, cljs.core.get_global_hierarchy(), f, args);
  };
  var swap_global_hierarchy_BANG_ = function(f, var_args) {
    var args = null;
    if (arguments.length > 1) {
      var G__14727__i = 0, G__14727__a = new Array(arguments.length - 1);
      while (G__14727__i < G__14727__a.length) {
        G__14727__a[G__14727__i] = arguments[G__14727__i + 1];
        ++G__14727__i;
      }
      args = new cljs.core.IndexedSeq(G__14727__a, 0);
    }
    return swap_global_hierarchy_BANG___delegate.call(this, f, args);
  };
  swap_global_hierarchy_BANG_.cljs$lang$maxFixedArity = 1;
  swap_global_hierarchy_BANG_.cljs$lang$applyTo = function(arglist__14728) {
    var f = cljs.core.first(arglist__14728);
    var args = cljs.core.rest(arglist__14728);
    return swap_global_hierarchy_BANG___delegate(f, args);
  };
  swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic = swap_global_hierarchy_BANG___delegate;
  return swap_global_hierarchy_BANG_;
}();
cljs.core.isa_QMARK_ = function() {
  var isa_QMARK_ = null;
  var isa_QMARK___2 = function(child, parent) {
    return isa_QMARK_.cljs$core$IFn$_invoke$arity$3(function() {
      var G__14793 = cljs.core.get_global_hierarchy();
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14793) : cljs.core.deref.call(null, G__14793);
    }(), child, parent);
  };
  var isa_QMARK___3 = function(h, child, parent) {
    var or__3925__auto__ = cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(child, parent);
    if (or__3925__auto__) {
      return or__3925__auto__;
    } else {
      var or__3925__auto____$1 = cljs.core.contains_QMARK_((new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h).call(null, child), parent);
      if (or__3925__auto____$1) {
        return or__3925__auto____$1;
      } else {
        var and__3913__auto__ = cljs.core.vector_QMARK_(parent);
        if (and__3913__auto__) {
          var and__3913__auto____$1 = cljs.core.vector_QMARK_(child);
          if (and__3913__auto____$1) {
            var and__3913__auto____$2 = cljs.core.count(parent) === cljs.core.count(child);
            if (and__3913__auto____$2) {
              var ret = true;
              var i = 0;
              while (true) {
                if (!ret || i === cljs.core.count(parent)) {
                  return ret;
                } else {
                  var G__14818 = isa_QMARK_.cljs$core$IFn$_invoke$arity$3(h, function() {
                    var G__14816 = i;
                    return child.cljs$core$IFn$_invoke$arity$1 ? child.cljs$core$IFn$_invoke$arity$1(G__14816) : child.call(null, G__14816);
                  }(), function() {
                    var G__14817 = i;
                    return parent.cljs$core$IFn$_invoke$arity$1 ? parent.cljs$core$IFn$_invoke$arity$1(G__14817) : parent.call(null, G__14817);
                  }());
                  var G__14819 = i + 1;
                  ret = G__14818;
                  i = G__14819;
                  continue;
                }
                break;
              }
            } else {
              return and__3913__auto____$2;
            }
          } else {
            return and__3913__auto____$1;
          }
        } else {
          return and__3913__auto__;
        }
      }
    }
  };
  isa_QMARK_ = function(h, child, parent) {
    switch(arguments.length) {
      case 2:
        return isa_QMARK___2.call(this, h, child);
      case 3:
        return isa_QMARK___3.call(this, h, child, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  isa_QMARK_.cljs$core$IFn$_invoke$arity$2 = isa_QMARK___2;
  isa_QMARK_.cljs$core$IFn$_invoke$arity$3 = isa_QMARK___3;
  return isa_QMARK_;
}();
cljs.core.parents = function() {
  var parents = null;
  var parents__1 = function(tag) {
    return parents.cljs$core$IFn$_invoke$arity$2(function() {
      var G__14823 = cljs.core.get_global_hierarchy();
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14823) : cljs.core.deref.call(null, G__14823);
    }(), tag);
  };
  var parents__2 = function(h, tag) {
    return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  parents = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return parents__1.call(this, h);
      case 2:
        return parents__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  parents.cljs$core$IFn$_invoke$arity$1 = parents__1;
  parents.cljs$core$IFn$_invoke$arity$2 = parents__2;
  return parents;
}();
cljs.core.ancestors = function() {
  var ancestors = null;
  var ancestors__1 = function(tag) {
    return ancestors.cljs$core$IFn$_invoke$arity$2(function() {
      var G__14827 = cljs.core.get_global_hierarchy();
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14827) : cljs.core.deref.call(null, G__14827);
    }(), tag);
  };
  var ancestors__2 = function(h, tag) {
    return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  ancestors = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return ancestors__1.call(this, h);
      case 2:
        return ancestors__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ancestors.cljs$core$IFn$_invoke$arity$1 = ancestors__1;
  ancestors.cljs$core$IFn$_invoke$arity$2 = ancestors__2;
  return ancestors;
}();
cljs.core.descendants = function() {
  var descendants = null;
  var descendants__1 = function(tag) {
    return descendants.cljs$core$IFn$_invoke$arity$2(function() {
      var G__14831 = cljs.core.get_global_hierarchy();
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14831) : cljs.core.deref.call(null, G__14831);
    }(), tag);
  };
  var descendants__2 = function(h, tag) {
    return cljs.core.not_empty(cljs.core.get.cljs$core$IFn$_invoke$arity$2((new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), tag));
  };
  descendants = function(h, tag) {
    switch(arguments.length) {
      case 1:
        return descendants__1.call(this, h);
      case 2:
        return descendants__2.call(this, h, tag);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  descendants.cljs$core$IFn$_invoke$arity$1 = descendants__1;
  descendants.cljs$core$IFn$_invoke$arity$2 = descendants__2;
  return descendants;
}();
cljs.core.derive = function() {
  var derive = null;
  var derive__2 = function(tag, parent) {
    if (cljs.core.truth_(cljs.core.namespace(parent))) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null, "namespace", "namespace", 1263021155, null), new cljs.core.Symbol(null, "parent", "parent", 761652748, null))], 0)))].join(""));
    }
    cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(derive, cljs.core.array_seq([tag, parent], 0));
    return null;
  };
  var derive__3 = function(h, tag, parent) {
    if (cljs.core.not_EQ_.cljs$core$IFn$_invoke$arity$2(tag, parent)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([cljs.core.list(new cljs.core.Symbol(null, "not\x3d", "not\x3d", 1466536204, null), new cljs.core.Symbol(null, "tag", "tag", 350170304, null), new cljs.core.Symbol(null, "parent", "parent", 761652748, null))], 0)))].join(""));
    }
    var tp = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
    var td = (new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h);
    var ta = (new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h);
    var tf = function(tp, td, ta) {
      return function(m, source, sources, target, targets) {
        return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(tp, td, ta) {
          return function(ret, k) {
            return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(ret, k, cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(cljs.core.conj, cljs.core.get.cljs$core$IFn$_invoke$arity$3(targets, k, cljs.core.PersistentHashSet.EMPTY), cljs.core.cons(target, function() {
              var G__14840 = target;
              return targets.cljs$core$IFn$_invoke$arity$1 ? targets.cljs$core$IFn$_invoke$arity$1(G__14840) : targets.call(null, G__14840);
            }())));
          };
        }(tp, td, ta), m, cljs.core.cons(source, function() {
          var G__14841 = source;
          return sources.cljs$core$IFn$_invoke$arity$1 ? sources.cljs$core$IFn$_invoke$arity$1(G__14841) : sources.call(null, G__14841);
        }()));
      };
    }(tp, td, ta);
    var or__3925__auto__ = cljs.core.contains_QMARK_(function() {
      var G__14845 = tag;
      return tp.cljs$core$IFn$_invoke$arity$1 ? tp.cljs$core$IFn$_invoke$arity$1(G__14845) : tp.call(null, G__14845);
    }(), parent) ? null : function() {
      if (cljs.core.contains_QMARK_(function() {
        var G__14846 = tag;
        return ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__14846) : ta.call(null, G__14846);
      }(), parent)) {
        throw new Error([cljs.core.str(tag), cljs.core.str("already has"), cljs.core.str(parent), cljs.core.str("as ancestor")].join(""));
      } else {
      }
      if (cljs.core.contains_QMARK_(function() {
        var G__14847 = parent;
        return ta.cljs$core$IFn$_invoke$arity$1 ? ta.cljs$core$IFn$_invoke$arity$1(G__14847) : ta.call(null, G__14847);
      }(), tag)) {
        throw new Error([cljs.core.str("Cyclic derivation:"), cljs.core.str(parent), cljs.core.str("has"), cljs.core.str(tag), cljs.core.str("as ancestor")].join(""));
      } else {
      }
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "parents", "parents", -2027538891), cljs.core.assoc.cljs$core$IFn$_invoke$arity$3((new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h), tag, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(tp, tag, cljs.core.PersistentHashSet.EMPTY), parent)), new cljs.core.Keyword(null, "ancestors", "ancestors", -776045424), tf((new cljs.core.Keyword(null, 
      "ancestors", "ancestors", -776045424)).cljs$core$IFn$_invoke$arity$1(h), tag, td, parent, ta), new cljs.core.Keyword(null, "descendants", "descendants", 1824886031), tf((new cljs.core.Keyword(null, "descendants", "descendants", 1824886031)).cljs$core$IFn$_invoke$arity$1(h), parent, ta, tag, td)], null);
    }();
    if (cljs.core.truth_(or__3925__auto__)) {
      return or__3925__auto__;
    } else {
      return h;
    }
  };
  derive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return derive__2.call(this, h, tag);
      case 3:
        return derive__3.call(this, h, tag, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  derive.cljs$core$IFn$_invoke$arity$2 = derive__2;
  derive.cljs$core$IFn$_invoke$arity$3 = derive__3;
  return derive;
}();
cljs.core.underive = function() {
  var underive = null;
  var underive__2 = function(tag, parent) {
    cljs.core.swap_global_hierarchy_BANG_.cljs$core$IFn$_invoke$arity$variadic(underive, cljs.core.array_seq([tag, parent], 0));
    return null;
  };
  var underive__3 = function(h, tag, parent) {
    var parentMap = (new cljs.core.Keyword(null, "parents", "parents", -2027538891)).cljs$core$IFn$_invoke$arity$1(h);
    var childsParents = cljs.core.truth_(function() {
      var G__14854 = tag;
      return parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__14854) : parentMap.call(null, G__14854);
    }()) ? cljs.core.disj.cljs$core$IFn$_invoke$arity$2(function() {
      var G__14855 = tag;
      return parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__14855) : parentMap.call(null, G__14855);
    }(), parent) : cljs.core.PersistentHashSet.EMPTY;
    var newParents = cljs.core.truth_(cljs.core.not_empty(childsParents)) ? cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(parentMap, tag, childsParents) : cljs.core.dissoc.cljs$core$IFn$_invoke$arity$2(parentMap, tag);
    var deriv_seq = cljs.core.flatten(cljs.core.map.cljs$core$IFn$_invoke$arity$2(function(parentMap, childsParents, newParents) {
      return function(p1__14848_SHARP_) {
        return cljs.core.cons(cljs.core.first(p1__14848_SHARP_), cljs.core.interpose.cljs$core$IFn$_invoke$arity$2(cljs.core.first(p1__14848_SHARP_), cljs.core.second(p1__14848_SHARP_)));
      };
    }(parentMap, childsParents, newParents), cljs.core.seq(newParents)));
    if (cljs.core.contains_QMARK_(function() {
      var G__14856 = tag;
      return parentMap.cljs$core$IFn$_invoke$arity$1 ? parentMap.cljs$core$IFn$_invoke$arity$1(G__14856) : parentMap.call(null, G__14856);
    }(), parent)) {
      return cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(parentMap, childsParents, newParents, deriv_seq) {
        return function(p1__14849_SHARP_, p2__14850_SHARP_) {
          return cljs.core.apply.cljs$core$IFn$_invoke$arity$3(cljs.core.derive, p1__14849_SHARP_, p2__14850_SHARP_);
        };
      }(parentMap, childsParents, newParents, deriv_seq), cljs.core.make_hierarchy(), cljs.core.partition.cljs$core$IFn$_invoke$arity$2(2, deriv_seq));
    } else {
      return h;
    }
  };
  underive = function(h, tag, parent) {
    switch(arguments.length) {
      case 2:
        return underive__2.call(this, h, tag);
      case 3:
        return underive__3.call(this, h, tag, parent);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  underive.cljs$core$IFn$_invoke$arity$2 = underive__2;
  underive.cljs$core$IFn$_invoke$arity$3 = underive__3;
  return underive;
}();
cljs.core.reset_cache = function reset_cache(method_cache, method_table, cached_hierarchy, hierarchy) {
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(method_cache, function(_) {
    var G__14859 = method_table;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14859) : cljs.core.deref.call(null, G__14859);
  });
  return cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(cached_hierarchy, function(_) {
    var G__14860 = hierarchy;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14860) : cljs.core.deref.call(null, G__14860);
  });
};
cljs.core.prefers_STAR_ = function prefers_STAR_(x, y, prefer_table) {
  var xprefs = function() {
    var G__14876 = prefer_table;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14876) : cljs.core.deref.call(null, G__14876);
  }().call(null, x);
  var or__3925__auto__ = cljs.core.truth_(function() {
    var and__3913__auto__ = xprefs;
    if (cljs.core.truth_(and__3913__auto__)) {
      var G__14878 = y;
      return xprefs.cljs$core$IFn$_invoke$arity$1 ? xprefs.cljs$core$IFn$_invoke$arity$1(G__14878) : xprefs.call(null, G__14878);
    } else {
      return and__3913__auto__;
    }
  }()) ? true : null;
  if (cljs.core.truth_(or__3925__auto__)) {
    return or__3925__auto__;
  } else {
    var or__3925__auto____$1 = function() {
      var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(y);
      while (true) {
        if (cljs.core.count(ps) > 0) {
          if (cljs.core.truth_(prefers_STAR_(x, cljs.core.first(ps), prefer_table))) {
          } else {
          }
          var G__14879 = cljs.core.rest(ps);
          ps = G__14879;
          continue;
        } else {
          return null;
        }
        break;
      }
    }();
    if (cljs.core.truth_(or__3925__auto____$1)) {
      return or__3925__auto____$1;
    } else {
      var or__3925__auto____$2 = function() {
        var ps = cljs.core.parents.cljs$core$IFn$_invoke$arity$1(x);
        while (true) {
          if (cljs.core.count(ps) > 0) {
            if (cljs.core.truth_(prefers_STAR_(cljs.core.first(ps), y, prefer_table))) {
            } else {
            }
            var G__14880 = cljs.core.rest(ps);
            ps = G__14880;
            continue;
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(or__3925__auto____$2)) {
        return or__3925__auto____$2;
      } else {
        return false;
      }
    }
  }
};
cljs.core.dominates = function dominates(x, y, prefer_table) {
  var or__3925__auto__ = cljs.core.prefers_STAR_(x, y, prefer_table);
  if (cljs.core.truth_(or__3925__auto__)) {
    return or__3925__auto__;
  } else {
    return cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$2(x, y);
  }
};
cljs.core.find_and_cache_best_method = function find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  var best_entry = cljs.core.reduce.cljs$core$IFn$_invoke$arity$3(function(be, p__14894) {
    var vec__14895 = p__14894;
    var k = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14895, 0, null);
    var _ = cljs.core.nth.cljs$core$IFn$_invoke$arity$3(vec__14895, 1, null);
    var e = vec__14895;
    if (cljs.core.isa_QMARK_.cljs$core$IFn$_invoke$arity$3(function() {
      var G__14896 = hierarchy;
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14896) : cljs.core.deref.call(null, G__14896);
    }(), dispatch_val, k)) {
      var be2 = cljs.core.truth_(function() {
        var or__3925__auto__ = be == null;
        if (or__3925__auto__) {
          return or__3925__auto__;
        } else {
          return cljs.core.dominates(k, cljs.core.first(be), prefer_table);
        }
      }()) ? e : be;
      if (cljs.core.truth_(cljs.core.dominates(cljs.core.first(be2), k, prefer_table))) {
      } else {
        throw new Error([cljs.core.str("Multiple methods in multimethod '"), cljs.core.str(name), cljs.core.str("' match dispatch value: "), cljs.core.str(dispatch_val), cljs.core.str(" -\x3e "), cljs.core.str(k), cljs.core.str(" and "), cljs.core.str(cljs.core.first(be2)), cljs.core.str(", and neither is preferred")].join(""));
      }
      return be2;
    } else {
      return be;
    }
  }, null, function() {
    var G__14897 = method_table;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14897) : cljs.core.deref.call(null, G__14897);
  }());
  if (cljs.core.truth_(best_entry)) {
    if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(function() {
      var G__14898 = cached_hierarchy;
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14898) : cljs.core.deref.call(null, G__14898);
    }(), function() {
      var G__14899 = hierarchy;
      return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14899) : cljs.core.deref.call(null, G__14899);
    }())) {
      cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(method_cache, cljs.core.assoc, dispatch_val, cljs.core.second(best_entry));
      return cljs.core.second(best_entry);
    } else {
      cljs.core.reset_cache(method_cache, method_table, cached_hierarchy, hierarchy);
      return find_and_cache_best_method(name, dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
    }
  } else {
    return null;
  }
};
cljs.core.IMultiFn = function() {
  var obj14901 = {};
  return obj14901;
}();
cljs.core._reset = function _reset(mf) {
  if (function() {
    var and__3913__auto__ = mf;
    if (and__3913__auto__) {
      return mf.cljs$core$IMultiFn$_reset$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_reset$arity$1(mf);
  } else {
    var x__4569__auto__ = mf == null ? null : mf;
    return function() {
      var or__3925__auto__ = cljs.core._reset[function() {
        var G__14905 = x__4569__auto__;
        return goog.typeOf(G__14905);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._reset["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-reset", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._add_method = function _add_method(mf, dispatch_val, method) {
  if (function() {
    var and__3913__auto__ = mf;
    if (and__3913__auto__) {
      return mf.cljs$core$IMultiFn$_add_method$arity$3;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_add_method$arity$3(mf, dispatch_val, method);
  } else {
    var x__4569__auto__ = mf == null ? null : mf;
    return function() {
      var or__3925__auto__ = cljs.core._add_method[function() {
        var G__14909 = x__4569__auto__;
        return goog.typeOf(G__14909);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._add_method["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-add-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, method);
  }
};
cljs.core._remove_method = function _remove_method(mf, dispatch_val) {
  if (function() {
    var and__3913__auto__ = mf;
    if (and__3913__auto__) {
      return mf.cljs$core$IMultiFn$_remove_method$arity$2;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_remove_method$arity$2(mf, dispatch_val);
  } else {
    var x__4569__auto__ = mf == null ? null : mf;
    return function() {
      var or__3925__auto__ = cljs.core._remove_method[function() {
        var G__14913 = x__4569__auto__;
        return goog.typeOf(G__14913);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._remove_method["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-remove-method", mf);
        }
      }
    }().call(null, mf, dispatch_val);
  }
};
cljs.core._prefer_method = function _prefer_method(mf, dispatch_val, dispatch_val_y) {
  if (function() {
    var and__3913__auto__ = mf;
    if (and__3913__auto__) {
      return mf.cljs$core$IMultiFn$_prefer_method$arity$3;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefer_method$arity$3(mf, dispatch_val, dispatch_val_y);
  } else {
    var x__4569__auto__ = mf == null ? null : mf;
    return function() {
      var or__3925__auto__ = cljs.core._prefer_method[function() {
        var G__14917 = x__4569__auto__;
        return goog.typeOf(G__14917);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._prefer_method["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-prefer-method", mf);
        }
      }
    }().call(null, mf, dispatch_val, dispatch_val_y);
  }
};
cljs.core._get_method = function _get_method(mf, dispatch_val) {
  if (function() {
    var and__3913__auto__ = mf;
    if (and__3913__auto__) {
      return mf.cljs$core$IMultiFn$_get_method$arity$2;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_get_method$arity$2(mf, dispatch_val);
  } else {
    var x__4569__auto__ = mf == null ? null : mf;
    return function() {
      var or__3925__auto__ = cljs.core._get_method[function() {
        var G__14921 = x__4569__auto__;
        return goog.typeOf(G__14921);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._get_method["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-get-method", mf);
        }
      }
    }().call(null, mf, dispatch_val);
  }
};
cljs.core._methods = function _methods(mf) {
  if (function() {
    var and__3913__auto__ = mf;
    if (and__3913__auto__) {
      return mf.cljs$core$IMultiFn$_methods$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_methods$arity$1(mf);
  } else {
    var x__4569__auto__ = mf == null ? null : mf;
    return function() {
      var or__3925__auto__ = cljs.core._methods[function() {
        var G__14925 = x__4569__auto__;
        return goog.typeOf(G__14925);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._methods["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-methods", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core._prefers = function _prefers(mf) {
  if (function() {
    var and__3913__auto__ = mf;
    if (and__3913__auto__) {
      return mf.cljs$core$IMultiFn$_prefers$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return mf.cljs$core$IMultiFn$_prefers$arity$1(mf);
  } else {
    var x__4569__auto__ = mf == null ? null : mf;
    return function() {
      var or__3925__auto__ = cljs.core._prefers[function() {
        var G__14929 = x__4569__auto__;
        return goog.typeOf(G__14929);
      }()];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core._prefers["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol("IMultiFn.-prefers", mf);
        }
      }
    }().call(null, mf);
  }
};
cljs.core.throw_no_method_error = function throw_no_method_error(name, dispatch_val) {
  throw new Error([cljs.core.str("No method in multimethod '"), cljs.core.str(name), cljs.core.str("' for dispatch value: "), cljs.core.str(dispatch_val)].join(""));
};
cljs.core.MultiFn = function(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  this.name = name;
  this.dispatch_fn = dispatch_fn;
  this.default_dispatch_val = default_dispatch_val;
  this.hierarchy = hierarchy;
  this.method_table = method_table;
  this.prefer_table = prefer_table;
  this.method_cache = method_cache;
  this.cached_hierarchy = cached_hierarchy;
  this.cljs$lang$protocol_mask$partition0$ = 4194305;
  this.cljs$lang$protocol_mask$partition1$ = 4352;
};
cljs.core.MultiFn.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var G__14931 = this$__$1;
  return goog.getUid(G__14931);
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_name$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._name(self__.name);
};
cljs.core.MultiFn.prototype.cljs$core$INamed$_namespace$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return cljs.core._namespace(self__.name);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_reset$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.method_cache, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table, function(mf__$1) {
    return function(mf__$2) {
      return cljs.core.PersistentArrayMap.EMPTY;
    };
  }(mf__$1));
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.cached_hierarchy, function(mf__$1) {
    return function(mf__$2) {
      return null;
    };
  }(mf__$1));
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_add_method$arity$3 = function(mf, dispatch_val, method) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$4(self__.method_table, cljs.core.assoc, dispatch_val, method);
  cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_remove_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$3(self__.method_table, cljs.core.dissoc, dispatch_val);
  cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  return mf__$1;
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_get_method$arity$2 = function(mf, dispatch_val) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core._EQ_.cljs$core$IFn$_invoke$arity$2(function() {
    var G__14932 = self__.cached_hierarchy;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14932) : cljs.core.deref.call(null, G__14932);
  }(), function() {
    var G__14933 = self__.hierarchy;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14933) : cljs.core.deref.call(null, G__14933);
  }())) {
  } else {
    cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
  }
  var temp__4124__auto__ = function() {
    var G__14934 = self__.method_cache;
    return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14934) : cljs.core.deref.call(null, G__14934);
  }().call(null, dispatch_val);
  if (cljs.core.truth_(temp__4124__auto__)) {
    var target_fn = temp__4124__auto__;
    return target_fn;
  } else {
    var temp__4124__auto____$1 = cljs.core.find_and_cache_best_method(self__.name, dispatch_val, self__.hierarchy, self__.method_table, self__.prefer_table, self__.method_cache, self__.cached_hierarchy);
    if (cljs.core.truth_(temp__4124__auto____$1)) {
      var target_fn = temp__4124__auto____$1;
      return target_fn;
    } else {
      return function() {
        var G__14935 = self__.method_table;
        return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14935) : cljs.core.deref.call(null, G__14935);
      }().call(null, self__.default_dispatch_val);
    }
  }
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefer_method$arity$3 = function(mf, dispatch_val_x, dispatch_val_y) {
  var self__ = this;
  var mf__$1 = this;
  if (cljs.core.truth_(cljs.core.prefers_STAR_(dispatch_val_x, dispatch_val_y, self__.prefer_table))) {
    throw new Error([cljs.core.str("Preference conflict in multimethod '"), cljs.core.str(self__.name), cljs.core.str("': "), cljs.core.str(dispatch_val_y), cljs.core.str(" is already preferred to "), cljs.core.str(dispatch_val_x)].join(""));
  } else {
  }
  cljs.core.swap_BANG_.cljs$core$IFn$_invoke$arity$2(self__.prefer_table, function(mf__$1) {
    return function(old) {
      return cljs.core.assoc.cljs$core$IFn$_invoke$arity$3(old, dispatch_val_x, cljs.core.conj.cljs$core$IFn$_invoke$arity$2(cljs.core.get.cljs$core$IFn$_invoke$arity$3(old, dispatch_val_x, cljs.core.PersistentHashSet.EMPTY), dispatch_val_y));
    };
  }(mf__$1));
  return cljs.core.reset_cache(self__.method_cache, self__.method_table, self__.cached_hierarchy, self__.hierarchy);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_methods$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  var G__14936 = self__.method_table;
  return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14936) : cljs.core.deref.call(null, G__14936);
};
cljs.core.MultiFn.prototype.cljs$core$IMultiFn$_prefers$arity$1 = function(mf) {
  var self__ = this;
  var mf__$1 = this;
  var G__14937 = self__.prefer_table;
  return cljs.core.deref.cljs$core$IFn$_invoke$arity$1 ? cljs.core.deref.cljs$core$IFn$_invoke$arity$1(G__14937) : cljs.core.deref.call(null, G__14937);
};
cljs.core.MultiFn.prototype.call = function() {
  var G__15778 = null;
  var G__15778__1 = function(self__) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null);
  };
  var G__15778__2 = function(self__, a) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__14938 = a;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__14938) : self__.dispatch_fn.call(null, G__14938);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__14939 = a;
    return target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__14939) : target_fn.call(null, G__14939);
  };
  var G__15778__3 = function(self__, a, b) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__14940 = a;
      var G__14941 = b;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__14940, G__14941) : self__.dispatch_fn.call(null, G__14940, G__14941);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__14942 = a;
    var G__14943 = b;
    return target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__14942, G__14943) : target_fn.call(null, G__14942, G__14943);
  };
  var G__15778__4 = function(self__, a, b, c) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__14944 = a;
      var G__14945 = b;
      var G__14946 = c;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__14944, G__14945, G__14946) : self__.dispatch_fn.call(null, G__14944, G__14945, G__14946);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__14947 = a;
    var G__14948 = b;
    var G__14949 = c;
    return target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__14947, G__14948, G__14949) : target_fn.call(null, G__14947, G__14948, G__14949);
  };
  var G__15778__5 = function(self__, a, b, c, d) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__14950 = a;
      var G__14951 = b;
      var G__14952 = c;
      var G__14953 = d;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__14950, G__14951, G__14952, G__14953) : self__.dispatch_fn.call(null, G__14950, G__14951, G__14952, G__14953);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__14954 = a;
    var G__14955 = b;
    var G__14956 = c;
    var G__14957 = d;
    return target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__14954, G__14955, G__14956, G__14957) : target_fn.call(null, G__14954, G__14955, G__14956, G__14957);
  };
  var G__15778__6 = function(self__, a, b, c, d, e) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__14958 = a;
      var G__14959 = b;
      var G__14960 = c;
      var G__14961 = d;
      var G__14962 = e;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__14958, G__14959, G__14960, G__14961, G__14962) : self__.dispatch_fn.call(null, G__14958, G__14959, G__14960, G__14961, G__14962);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__14963 = a;
    var G__14964 = b;
    var G__14965 = c;
    var G__14966 = d;
    var G__14967 = e;
    return target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__14963, G__14964, G__14965, G__14966, G__14967) : target_fn.call(null, G__14963, G__14964, G__14965, G__14966, G__14967);
  };
  var G__15778__7 = function(self__, a, b, c, d, e, f) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__14968 = a;
      var G__14969 = b;
      var G__14970 = c;
      var G__14971 = d;
      var G__14972 = e;
      var G__14973 = f;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__14968, G__14969, G__14970, G__14971, G__14972, G__14973) : self__.dispatch_fn.call(null, G__14968, G__14969, G__14970, G__14971, G__14972, G__14973);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__14974 = a;
    var G__14975 = b;
    var G__14976 = c;
    var G__14977 = d;
    var G__14978 = e;
    var G__14979 = f;
    return target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__14974, G__14975, G__14976, G__14977, G__14978, G__14979) : target_fn.call(null, G__14974, G__14975, G__14976, G__14977, G__14978, G__14979);
  };
  var G__15778__8 = function(self__, a, b, c, d, e, f, g) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__14980 = a;
      var G__14981 = b;
      var G__14982 = c;
      var G__14983 = d;
      var G__14984 = e;
      var G__14985 = f;
      var G__14986 = g;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__14980, G__14981, G__14982, G__14983, G__14984, G__14985, G__14986) : self__.dispatch_fn.call(null, G__14980, G__14981, G__14982, G__14983, G__14984, G__14985, G__14986);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__14987 = a;
    var G__14988 = b;
    var G__14989 = c;
    var G__14990 = d;
    var G__14991 = e;
    var G__14992 = f;
    var G__14993 = g;
    return target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__14987, G__14988, G__14989, G__14990, G__14991, G__14992, G__14993) : target_fn.call(null, G__14987, G__14988, G__14989, G__14990, G__14991, G__14992, G__14993);
  };
  var G__15778__9 = function(self__, a, b, c, d, e, f, g, h) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__14994 = a;
      var G__14995 = b;
      var G__14996 = c;
      var G__14997 = d;
      var G__14998 = e;
      var G__14999 = f;
      var G__15000 = g;
      var G__15001 = h;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__14994, G__14995, G__14996, G__14997, G__14998, G__14999, G__15000, G__15001) : self__.dispatch_fn.call(null, G__14994, G__14995, G__14996, G__14997, G__14998, G__14999, G__15000, G__15001);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__15002 = a;
    var G__15003 = b;
    var G__15004 = c;
    var G__15005 = d;
    var G__15006 = e;
    var G__15007 = f;
    var G__15008 = g;
    var G__15009 = h;
    return target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__15002, G__15003, G__15004, G__15005, G__15006, G__15007, G__15008, G__15009) : target_fn.call(null, G__15002, G__15003, G__15004, G__15005, G__15006, G__15007, G__15008, G__15009);
  };
  var G__15778__10 = function(self__, a, b, c, d, e, f, g, h, i) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__15010 = a;
      var G__15011 = b;
      var G__15012 = c;
      var G__15013 = d;
      var G__15014 = e;
      var G__15015 = f;
      var G__15016 = g;
      var G__15017 = h;
      var G__15018 = i;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__15010, G__15011, G__15012, G__15013, G__15014, G__15015, G__15016, G__15017, G__15018) : self__.dispatch_fn.call(null, G__15010, G__15011, G__15012, G__15013, G__15014, G__15015, G__15016, G__15017, G__15018);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__15019 = a;
    var G__15020 = b;
    var G__15021 = c;
    var G__15022 = d;
    var G__15023 = e;
    var G__15024 = f;
    var G__15025 = g;
    var G__15026 = h;
    var G__15027 = i;
    return target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__15019, G__15020, G__15021, G__15022, G__15023, G__15024, G__15025, G__15026, G__15027) : target_fn.call(null, G__15019, G__15020, G__15021, G__15022, G__15023, G__15024, G__15025, G__15026, G__15027);
  };
  var G__15778__11 = function(self__, a, b, c, d, e, f, g, h, i, j) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__15028 = a;
      var G__15029 = b;
      var G__15030 = c;
      var G__15031 = d;
      var G__15032 = e;
      var G__15033 = f;
      var G__15034 = g;
      var G__15035 = h;
      var G__15036 = i;
      var G__15037 = j;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__15028, G__15029, G__15030, G__15031, G__15032, G__15033, G__15034, G__15035, G__15036, G__15037) : self__.dispatch_fn.call(null, G__15028, G__15029, G__15030, G__15031, G__15032, G__15033, G__15034, G__15035, G__15036, G__15037);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__15038 = a;
    var G__15039 = b;
    var G__15040 = c;
    var G__15041 = d;
    var G__15042 = e;
    var G__15043 = f;
    var G__15044 = g;
    var G__15045 = h;
    var G__15046 = i;
    var G__15047 = j;
    return target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__15038, G__15039, G__15040, G__15041, G__15042, G__15043, G__15044, G__15045, G__15046, G__15047) : target_fn.call(null, G__15038, G__15039, G__15040, G__15041, G__15042, G__15043, G__15044, G__15045, G__15046, G__15047);
  };
  var G__15778__12 = function(self__, a, b, c, d, e, f, g, h, i, j, k) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__15048 = a;
      var G__15049 = b;
      var G__15050 = c;
      var G__15051 = d;
      var G__15052 = e;
      var G__15053 = f;
      var G__15054 = g;
      var G__15055 = h;
      var G__15056 = i;
      var G__15057 = j;
      var G__15058 = k;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__15048, G__15049, G__15050, G__15051, G__15052, G__15053, G__15054, G__15055, G__15056, G__15057, G__15058) : self__.dispatch_fn.call(null, G__15048, G__15049, G__15050, G__15051, G__15052, G__15053, G__15054, G__15055, G__15056, G__15057, G__15058);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__15059 = a;
    var G__15060 = b;
    var G__15061 = c;
    var G__15062 = d;
    var G__15063 = e;
    var G__15064 = f;
    var G__15065 = g;
    var G__15066 = h;
    var G__15067 = i;
    var G__15068 = j;
    var G__15069 = k;
    return target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__15059, G__15060, G__15061, G__15062, G__15063, G__15064, G__15065, G__15066, G__15067, G__15068, G__15069) : target_fn.call(null, G__15059, G__15060, G__15061, G__15062, G__15063, G__15064, G__15065, G__15066, G__15067, G__15068, G__15069);
  };
  var G__15778__13 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__15070 = a;
      var G__15071 = b;
      var G__15072 = c;
      var G__15073 = d;
      var G__15074 = e;
      var G__15075 = f;
      var G__15076 = g;
      var G__15077 = h;
      var G__15078 = i;
      var G__15079 = j;
      var G__15080 = k;
      var G__15081 = l;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__15070, G__15071, G__15072, G__15073, G__15074, G__15075, G__15076, G__15077, G__15078, G__15079, G__15080, G__15081) : self__.dispatch_fn.call(null, G__15070, G__15071, G__15072, G__15073, G__15074, G__15075, G__15076, G__15077, G__15078, G__15079, G__15080, G__15081);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__15082 = a;
    var G__15083 = b;
    var G__15084 = c;
    var G__15085 = d;
    var G__15086 = e;
    var G__15087 = f;
    var G__15088 = g;
    var G__15089 = h;
    var G__15090 = i;
    var G__15091 = j;
    var G__15092 = k;
    var G__15093 = l;
    return target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__15082, G__15083, G__15084, G__15085, G__15086, G__15087, G__15088, G__15089, G__15090, G__15091, G__15092, G__15093) : target_fn.call(null, G__15082, G__15083, G__15084, G__15085, G__15086, G__15087, G__15088, G__15089, G__15090, G__15091, G__15092, G__15093);
  };
  var G__15778__14 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__15094 = a;
      var G__15095 = b;
      var G__15096 = c;
      var G__15097 = d;
      var G__15098 = e;
      var G__15099 = f;
      var G__15100 = g;
      var G__15101 = h;
      var G__15102 = i;
      var G__15103 = j;
      var G__15104 = k;
      var G__15105 = l;
      var G__15106 = m;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__15094, G__15095, G__15096, G__15097, G__15098, G__15099, G__15100, G__15101, G__15102, G__15103, G__15104, G__15105, G__15106) : self__.dispatch_fn.call(null, G__15094, G__15095, G__15096, G__15097, G__15098, G__15099, G__15100, G__15101, G__15102, G__15103, G__15104, G__15105, G__15106);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__15107 = a;
    var G__15108 = b;
    var G__15109 = c;
    var G__15110 = d;
    var G__15111 = e;
    var G__15112 = f;
    var G__15113 = g;
    var G__15114 = h;
    var G__15115 = i;
    var G__15116 = j;
    var G__15117 = k;
    var G__15118 = l;
    var G__15119 = m;
    return target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__15107, G__15108, G__15109, G__15110, G__15111, G__15112, G__15113, G__15114, G__15115, G__15116, G__15117, G__15118, G__15119) : target_fn.call(null, G__15107, G__15108, G__15109, G__15110, G__15111, G__15112, G__15113, G__15114, G__15115, G__15116, G__15117, G__15118, G__15119);
  };
  var G__15778__15 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__15120 = a;
      var G__15121 = b;
      var G__15122 = c;
      var G__15123 = d;
      var G__15124 = e;
      var G__15125 = f;
      var G__15126 = g;
      var G__15127 = h;
      var G__15128 = i;
      var G__15129 = j;
      var G__15130 = k;
      var G__15131 = l;
      var G__15132 = m;
      var G__15133 = n;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__15120, G__15121, G__15122, G__15123, G__15124, G__15125, G__15126, G__15127, G__15128, G__15129, G__15130, G__15131, G__15132, G__15133) : self__.dispatch_fn.call(null, G__15120, G__15121, G__15122, G__15123, G__15124, G__15125, G__15126, G__15127, G__15128, G__15129, G__15130, G__15131, G__15132, G__15133);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__15134 = a;
    var G__15135 = b;
    var G__15136 = c;
    var G__15137 = d;
    var G__15138 = e;
    var G__15139 = f;
    var G__15140 = g;
    var G__15141 = h;
    var G__15142 = i;
    var G__15143 = j;
    var G__15144 = k;
    var G__15145 = l;
    var G__15146 = m;
    var G__15147 = n;
    return target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__15134, G__15135, G__15136, G__15137, G__15138, G__15139, G__15140, G__15141, G__15142, G__15143, G__15144, G__15145, G__15146, G__15147) : target_fn.call(null, G__15134, G__15135, G__15136, G__15137, G__15138, G__15139, G__15140, G__15141, G__15142, G__15143, G__15144, G__15145, G__15146, G__15147);
  };
  var G__15778__16 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__15148 = a;
      var G__15149 = b;
      var G__15150 = c;
      var G__15151 = d;
      var G__15152 = e;
      var G__15153 = f;
      var G__15154 = g;
      var G__15155 = h;
      var G__15156 = i;
      var G__15157 = j;
      var G__15158 = k;
      var G__15159 = l;
      var G__15160 = m;
      var G__15161 = n;
      var G__15162 = o;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__15148, G__15149, G__15150, G__15151, G__15152, G__15153, G__15154, G__15155, G__15156, G__15157, G__15158, G__15159, G__15160, G__15161, G__15162) : self__.dispatch_fn.call(null, G__15148, G__15149, G__15150, G__15151, G__15152, G__15153, G__15154, G__15155, G__15156, G__15157, G__15158, G__15159, G__15160, G__15161, G__15162);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__15163 = a;
    var G__15164 = b;
    var G__15165 = c;
    var G__15166 = d;
    var G__15167 = e;
    var G__15168 = f;
    var G__15169 = g;
    var G__15170 = h;
    var G__15171 = i;
    var G__15172 = j;
    var G__15173 = k;
    var G__15174 = l;
    var G__15175 = m;
    var G__15176 = n;
    var G__15177 = o;
    return target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__15163, G__15164, G__15165, G__15166, G__15167, G__15168, G__15169, G__15170, G__15171, G__15172, G__15173, G__15174, G__15175, G__15176, G__15177) : target_fn.call(null, G__15163, G__15164, G__15165, G__15166, G__15167, G__15168, G__15169, G__15170, G__15171, G__15172, G__15173, G__15174, G__15175, G__15176, G__15177);
  };
  var G__15778__17 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__15178 = a;
      var G__15179 = b;
      var G__15180 = c;
      var G__15181 = d;
      var G__15182 = e;
      var G__15183 = f;
      var G__15184 = g;
      var G__15185 = h;
      var G__15186 = i;
      var G__15187 = j;
      var G__15188 = k;
      var G__15189 = l;
      var G__15190 = m;
      var G__15191 = n;
      var G__15192 = o;
      var G__15193 = p;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__15178, G__15179, G__15180, G__15181, G__15182, G__15183, G__15184, G__15185, G__15186, G__15187, G__15188, G__15189, G__15190, G__15191, G__15192, G__15193) : self__.dispatch_fn.call(null, G__15178, G__15179, G__15180, G__15181, G__15182, G__15183, G__15184, G__15185, G__15186, G__15187, G__15188, G__15189, G__15190, G__15191, G__15192, G__15193);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__15194 = a;
    var G__15195 = b;
    var G__15196 = c;
    var G__15197 = d;
    var G__15198 = e;
    var G__15199 = f;
    var G__15200 = g;
    var G__15201 = h;
    var G__15202 = i;
    var G__15203 = j;
    var G__15204 = k;
    var G__15205 = l;
    var G__15206 = m;
    var G__15207 = n;
    var G__15208 = o;
    var G__15209 = p;
    return target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__15194, G__15195, G__15196, G__15197, G__15198, G__15199, G__15200, G__15201, G__15202, G__15203, G__15204, G__15205, G__15206, G__15207, G__15208, G__15209) : target_fn.call(null, G__15194, G__15195, G__15196, G__15197, G__15198, G__15199, G__15200, G__15201, G__15202, G__15203, G__15204, G__15205, G__15206, G__15207, G__15208, G__15209);
  };
  var G__15778__18 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__15210 = a;
      var G__15211 = b;
      var G__15212 = c;
      var G__15213 = d;
      var G__15214 = e;
      var G__15215 = f;
      var G__15216 = g;
      var G__15217 = h;
      var G__15218 = i;
      var G__15219 = j;
      var G__15220 = k;
      var G__15221 = l;
      var G__15222 = m;
      var G__15223 = n;
      var G__15224 = o;
      var G__15225 = p;
      var G__15226 = q;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__15210, G__15211, G__15212, G__15213, G__15214, G__15215, G__15216, G__15217, G__15218, G__15219, G__15220, G__15221, G__15222, G__15223, G__15224, G__15225, G__15226) : self__.dispatch_fn.call(null, G__15210, G__15211, G__15212, G__15213, G__15214, G__15215, G__15216, G__15217, G__15218, G__15219, G__15220, G__15221, G__15222, G__15223, G__15224, G__15225, G__15226);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__15227 = a;
    var G__15228 = b;
    var G__15229 = c;
    var G__15230 = d;
    var G__15231 = e;
    var G__15232 = f;
    var G__15233 = g;
    var G__15234 = h;
    var G__15235 = i;
    var G__15236 = j;
    var G__15237 = k;
    var G__15238 = l;
    var G__15239 = m;
    var G__15240 = n;
    var G__15241 = o;
    var G__15242 = p;
    var G__15243 = q;
    return target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__15227, G__15228, G__15229, G__15230, G__15231, G__15232, G__15233, G__15234, G__15235, G__15236, G__15237, G__15238, G__15239, G__15240, G__15241, G__15242, G__15243) : target_fn.call(null, G__15227, G__15228, G__15229, G__15230, G__15231, G__15232, G__15233, G__15234, G__15235, G__15236, G__15237, G__15238, G__15239, G__15240, G__15241, G__15242, G__15243);
  };
  var G__15778__19 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__15244 = a;
      var G__15245 = b;
      var G__15246 = c;
      var G__15247 = d;
      var G__15248 = e;
      var G__15249 = f;
      var G__15250 = g;
      var G__15251 = h;
      var G__15252 = i;
      var G__15253 = j;
      var G__15254 = k;
      var G__15255 = l;
      var G__15256 = m;
      var G__15257 = n;
      var G__15258 = o;
      var G__15259 = p;
      var G__15260 = q;
      var G__15261 = r;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__15244, G__15245, G__15246, G__15247, G__15248, G__15249, G__15250, G__15251, G__15252, G__15253, G__15254, G__15255, G__15256, G__15257, G__15258, G__15259, G__15260, G__15261) : self__.dispatch_fn.call(null, G__15244, G__15245, G__15246, G__15247, G__15248, G__15249, G__15250, G__15251, G__15252, G__15253, G__15254, G__15255, G__15256, G__15257, G__15258, G__15259, G__15260, G__15261);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__15262 = a;
    var G__15263 = b;
    var G__15264 = c;
    var G__15265 = d;
    var G__15266 = e;
    var G__15267 = f;
    var G__15268 = g;
    var G__15269 = h;
    var G__15270 = i;
    var G__15271 = j;
    var G__15272 = k;
    var G__15273 = l;
    var G__15274 = m;
    var G__15275 = n;
    var G__15276 = o;
    var G__15277 = p;
    var G__15278 = q;
    var G__15279 = r;
    return target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__15262, G__15263, G__15264, G__15265, G__15266, G__15267, G__15268, G__15269, G__15270, G__15271, G__15272, G__15273, G__15274, G__15275, G__15276, G__15277, G__15278, G__15279) : target_fn.call(null, G__15262, G__15263, G__15264, G__15265, G__15266, G__15267, G__15268, G__15269, G__15270, G__15271, G__15272, G__15273, G__15274, G__15275, G__15276, G__15277, G__15278, G__15279);
  };
  var G__15778__20 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__15280 = a;
      var G__15281 = b;
      var G__15282 = c;
      var G__15283 = d;
      var G__15284 = e;
      var G__15285 = f;
      var G__15286 = g;
      var G__15287 = h;
      var G__15288 = i;
      var G__15289 = j;
      var G__15290 = k;
      var G__15291 = l;
      var G__15292 = m;
      var G__15293 = n;
      var G__15294 = o;
      var G__15295 = p;
      var G__15296 = q;
      var G__15297 = r;
      var G__15298 = s;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__15280, G__15281, G__15282, G__15283, G__15284, G__15285, G__15286, G__15287, G__15288, G__15289, G__15290, G__15291, G__15292, G__15293, G__15294, G__15295, G__15296, G__15297, G__15298) : self__.dispatch_fn.call(null, G__15280, G__15281, G__15282, G__15283, G__15284, G__15285, G__15286, G__15287, G__15288, G__15289, G__15290, G__15291, G__15292, G__15293, G__15294, G__15295, G__15296, 
      G__15297, G__15298);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__15299 = a;
    var G__15300 = b;
    var G__15301 = c;
    var G__15302 = d;
    var G__15303 = e;
    var G__15304 = f;
    var G__15305 = g;
    var G__15306 = h;
    var G__15307 = i;
    var G__15308 = j;
    var G__15309 = k;
    var G__15310 = l;
    var G__15311 = m;
    var G__15312 = n;
    var G__15313 = o;
    var G__15314 = p;
    var G__15315 = q;
    var G__15316 = r;
    var G__15317 = s;
    return target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__15299, G__15300, G__15301, G__15302, G__15303, G__15304, G__15305, G__15306, G__15307, G__15308, G__15309, G__15310, G__15311, G__15312, G__15313, G__15314, G__15315, G__15316, G__15317) : target_fn.call(null, G__15299, G__15300, G__15301, G__15302, G__15303, G__15304, G__15305, G__15306, G__15307, G__15308, G__15309, G__15310, G__15311, G__15312, G__15313, G__15314, G__15315, G__15316, G__15317);
  };
  var G__15778__21 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = function() {
      var G__15318 = a;
      var G__15319 = b;
      var G__15320 = c;
      var G__15321 = d;
      var G__15322 = e;
      var G__15323 = f;
      var G__15324 = g;
      var G__15325 = h;
      var G__15326 = i;
      var G__15327 = j;
      var G__15328 = k;
      var G__15329 = l;
      var G__15330 = m;
      var G__15331 = n;
      var G__15332 = o;
      var G__15333 = p;
      var G__15334 = q;
      var G__15335 = r;
      var G__15336 = s;
      var G__15337 = t;
      return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__15318, G__15319, G__15320, G__15321, G__15322, G__15323, G__15324, G__15325, G__15326, G__15327, G__15328, G__15329, G__15330, G__15331, G__15332, G__15333, G__15334, G__15335, G__15336, G__15337) : self__.dispatch_fn.call(null, G__15318, G__15319, G__15320, G__15321, G__15322, G__15323, G__15324, G__15325, G__15326, G__15327, G__15328, G__15329, G__15330, G__15331, G__15332, G__15333, 
      G__15334, G__15335, G__15336, G__15337);
    }();
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    var G__15338 = a;
    var G__15339 = b;
    var G__15340 = c;
    var G__15341 = d;
    var G__15342 = e;
    var G__15343 = f;
    var G__15344 = g;
    var G__15345 = h;
    var G__15346 = i;
    var G__15347 = j;
    var G__15348 = k;
    var G__15349 = l;
    var G__15350 = m;
    var G__15351 = n;
    var G__15352 = o;
    var G__15353 = p;
    var G__15354 = q;
    var G__15355 = r;
    var G__15356 = s;
    var G__15357 = t;
    return target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__15338, G__15339, G__15340, G__15341, G__15342, G__15343, G__15344, G__15345, G__15346, G__15347, G__15348, G__15349, G__15350, G__15351, G__15352, G__15353, G__15354, G__15355, G__15356, G__15357) : target_fn.call(null, G__15338, G__15339, G__15340, G__15341, G__15342, G__15343, G__15344, G__15345, G__15346, G__15347, G__15348, G__15349, G__15350, G__15351, G__15352, G__15353, G__15354, G__15355, G__15356, 
    G__15357);
  };
  var G__15778__22 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    var self__ = this;
    var self____$1 = this;
    var mf = self____$1;
    var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
    var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
    if (cljs.core.truth_(target_fn)) {
    } else {
      cljs.core.throw_no_method_error(self__.name, dispatch_val);
    }
    return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  };
  G__15778 = function(self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
    switch(arguments.length) {
      case 1:
        return G__15778__1.call(this, self__);
      case 2:
        return G__15778__2.call(this, self__, a);
      case 3:
        return G__15778__3.call(this, self__, a, b);
      case 4:
        return G__15778__4.call(this, self__, a, b, c);
      case 5:
        return G__15778__5.call(this, self__, a, b, c, d);
      case 6:
        return G__15778__6.call(this, self__, a, b, c, d, e);
      case 7:
        return G__15778__7.call(this, self__, a, b, c, d, e, f);
      case 8:
        return G__15778__8.call(this, self__, a, b, c, d, e, f, g);
      case 9:
        return G__15778__9.call(this, self__, a, b, c, d, e, f, g, h);
      case 10:
        return G__15778__10.call(this, self__, a, b, c, d, e, f, g, h, i);
      case 11:
        return G__15778__11.call(this, self__, a, b, c, d, e, f, g, h, i, j);
      case 12:
        return G__15778__12.call(this, self__, a, b, c, d, e, f, g, h, i, j, k);
      case 13:
        return G__15778__13.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l);
      case 14:
        return G__15778__14.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m);
      case 15:
        return G__15778__15.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n);
      case 16:
        return G__15778__16.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o);
      case 17:
        return G__15778__17.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p);
      case 18:
        return G__15778__18.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q);
      case 19:
        return G__15778__19.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r);
      case 20:
        return G__15778__20.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s);
      case 21:
        return G__15778__21.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t);
      case 22:
        return G__15778__22.call(this, self__, a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  G__15778.cljs$core$IFn$_invoke$arity$1 = G__15778__1;
  G__15778.cljs$core$IFn$_invoke$arity$2 = G__15778__2;
  G__15778.cljs$core$IFn$_invoke$arity$3 = G__15778__3;
  G__15778.cljs$core$IFn$_invoke$arity$4 = G__15778__4;
  G__15778.cljs$core$IFn$_invoke$arity$5 = G__15778__5;
  G__15778.cljs$core$IFn$_invoke$arity$6 = G__15778__6;
  G__15778.cljs$core$IFn$_invoke$arity$7 = G__15778__7;
  G__15778.cljs$core$IFn$_invoke$arity$8 = G__15778__8;
  G__15778.cljs$core$IFn$_invoke$arity$9 = G__15778__9;
  G__15778.cljs$core$IFn$_invoke$arity$10 = G__15778__10;
  G__15778.cljs$core$IFn$_invoke$arity$11 = G__15778__11;
  G__15778.cljs$core$IFn$_invoke$arity$12 = G__15778__12;
  G__15778.cljs$core$IFn$_invoke$arity$13 = G__15778__13;
  G__15778.cljs$core$IFn$_invoke$arity$14 = G__15778__14;
  G__15778.cljs$core$IFn$_invoke$arity$15 = G__15778__15;
  G__15778.cljs$core$IFn$_invoke$arity$16 = G__15778__16;
  G__15778.cljs$core$IFn$_invoke$arity$17 = G__15778__17;
  G__15778.cljs$core$IFn$_invoke$arity$18 = G__15778__18;
  G__15778.cljs$core$IFn$_invoke$arity$19 = G__15778__19;
  G__15778.cljs$core$IFn$_invoke$arity$20 = G__15778__20;
  G__15778.cljs$core$IFn$_invoke$arity$21 = G__15778__21;
  G__15778.cljs$core$IFn$_invoke$arity$22 = G__15778__22;
  return G__15778;
}();
cljs.core.MultiFn.prototype.apply = function(self__, args14930) {
  var self__ = this;
  var self____$1 = this;
  return self____$1.call.apply(self____$1, [self____$1].concat(cljs.core.aclone(args14930)));
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$0 = function() {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$0() : self__.dispatch_fn.call(null);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return target_fn.cljs$core$IFn$_invoke$arity$0 ? target_fn.cljs$core$IFn$_invoke$arity$0() : target_fn.call(null);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$1 = function(a) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__15358 = a;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$1(G__15358) : self__.dispatch_fn.call(null, G__15358);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__15359 = a;
  return target_fn.cljs$core$IFn$_invoke$arity$1 ? target_fn.cljs$core$IFn$_invoke$arity$1(G__15359) : target_fn.call(null, G__15359);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$2 = function(a, b) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__15360 = a;
    var G__15361 = b;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$2(G__15360, G__15361) : self__.dispatch_fn.call(null, G__15360, G__15361);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__15362 = a;
  var G__15363 = b;
  return target_fn.cljs$core$IFn$_invoke$arity$2 ? target_fn.cljs$core$IFn$_invoke$arity$2(G__15362, G__15363) : target_fn.call(null, G__15362, G__15363);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$3 = function(a, b, c) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__15364 = a;
    var G__15365 = b;
    var G__15366 = c;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$3(G__15364, G__15365, G__15366) : self__.dispatch_fn.call(null, G__15364, G__15365, G__15366);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__15367 = a;
  var G__15368 = b;
  var G__15369 = c;
  return target_fn.cljs$core$IFn$_invoke$arity$3 ? target_fn.cljs$core$IFn$_invoke$arity$3(G__15367, G__15368, G__15369) : target_fn.call(null, G__15367, G__15368, G__15369);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$4 = function(a, b, c, d) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__15370 = a;
    var G__15371 = b;
    var G__15372 = c;
    var G__15373 = d;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$4(G__15370, G__15371, G__15372, G__15373) : self__.dispatch_fn.call(null, G__15370, G__15371, G__15372, G__15373);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__15374 = a;
  var G__15375 = b;
  var G__15376 = c;
  var G__15377 = d;
  return target_fn.cljs$core$IFn$_invoke$arity$4 ? target_fn.cljs$core$IFn$_invoke$arity$4(G__15374, G__15375, G__15376, G__15377) : target_fn.call(null, G__15374, G__15375, G__15376, G__15377);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$5 = function(a, b, c, d, e) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__15378 = a;
    var G__15379 = b;
    var G__15380 = c;
    var G__15381 = d;
    var G__15382 = e;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$5(G__15378, G__15379, G__15380, G__15381, G__15382) : self__.dispatch_fn.call(null, G__15378, G__15379, G__15380, G__15381, G__15382);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__15383 = a;
  var G__15384 = b;
  var G__15385 = c;
  var G__15386 = d;
  var G__15387 = e;
  return target_fn.cljs$core$IFn$_invoke$arity$5 ? target_fn.cljs$core$IFn$_invoke$arity$5(G__15383, G__15384, G__15385, G__15386, G__15387) : target_fn.call(null, G__15383, G__15384, G__15385, G__15386, G__15387);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$6 = function(a, b, c, d, e, f) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__15388 = a;
    var G__15389 = b;
    var G__15390 = c;
    var G__15391 = d;
    var G__15392 = e;
    var G__15393 = f;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$6(G__15388, G__15389, G__15390, G__15391, G__15392, G__15393) : self__.dispatch_fn.call(null, G__15388, G__15389, G__15390, G__15391, G__15392, G__15393);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__15394 = a;
  var G__15395 = b;
  var G__15396 = c;
  var G__15397 = d;
  var G__15398 = e;
  var G__15399 = f;
  return target_fn.cljs$core$IFn$_invoke$arity$6 ? target_fn.cljs$core$IFn$_invoke$arity$6(G__15394, G__15395, G__15396, G__15397, G__15398, G__15399) : target_fn.call(null, G__15394, G__15395, G__15396, G__15397, G__15398, G__15399);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$7 = function(a, b, c, d, e, f, g) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__15400 = a;
    var G__15401 = b;
    var G__15402 = c;
    var G__15403 = d;
    var G__15404 = e;
    var G__15405 = f;
    var G__15406 = g;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$7(G__15400, G__15401, G__15402, G__15403, G__15404, G__15405, G__15406) : self__.dispatch_fn.call(null, G__15400, G__15401, G__15402, G__15403, G__15404, G__15405, G__15406);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__15407 = a;
  var G__15408 = b;
  var G__15409 = c;
  var G__15410 = d;
  var G__15411 = e;
  var G__15412 = f;
  var G__15413 = g;
  return target_fn.cljs$core$IFn$_invoke$arity$7 ? target_fn.cljs$core$IFn$_invoke$arity$7(G__15407, G__15408, G__15409, G__15410, G__15411, G__15412, G__15413) : target_fn.call(null, G__15407, G__15408, G__15409, G__15410, G__15411, G__15412, G__15413);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$8 = function(a, b, c, d, e, f, g, h) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__15414 = a;
    var G__15415 = b;
    var G__15416 = c;
    var G__15417 = d;
    var G__15418 = e;
    var G__15419 = f;
    var G__15420 = g;
    var G__15421 = h;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$8(G__15414, G__15415, G__15416, G__15417, G__15418, G__15419, G__15420, G__15421) : self__.dispatch_fn.call(null, G__15414, G__15415, G__15416, G__15417, G__15418, G__15419, G__15420, G__15421);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__15422 = a;
  var G__15423 = b;
  var G__15424 = c;
  var G__15425 = d;
  var G__15426 = e;
  var G__15427 = f;
  var G__15428 = g;
  var G__15429 = h;
  return target_fn.cljs$core$IFn$_invoke$arity$8 ? target_fn.cljs$core$IFn$_invoke$arity$8(G__15422, G__15423, G__15424, G__15425, G__15426, G__15427, G__15428, G__15429) : target_fn.call(null, G__15422, G__15423, G__15424, G__15425, G__15426, G__15427, G__15428, G__15429);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$9 = function(a, b, c, d, e, f, g, h, i) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__15430 = a;
    var G__15431 = b;
    var G__15432 = c;
    var G__15433 = d;
    var G__15434 = e;
    var G__15435 = f;
    var G__15436 = g;
    var G__15437 = h;
    var G__15438 = i;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$9(G__15430, G__15431, G__15432, G__15433, G__15434, G__15435, G__15436, G__15437, G__15438) : self__.dispatch_fn.call(null, G__15430, G__15431, G__15432, G__15433, G__15434, G__15435, G__15436, G__15437, G__15438);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__15439 = a;
  var G__15440 = b;
  var G__15441 = c;
  var G__15442 = d;
  var G__15443 = e;
  var G__15444 = f;
  var G__15445 = g;
  var G__15446 = h;
  var G__15447 = i;
  return target_fn.cljs$core$IFn$_invoke$arity$9 ? target_fn.cljs$core$IFn$_invoke$arity$9(G__15439, G__15440, G__15441, G__15442, G__15443, G__15444, G__15445, G__15446, G__15447) : target_fn.call(null, G__15439, G__15440, G__15441, G__15442, G__15443, G__15444, G__15445, G__15446, G__15447);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$10 = function(a, b, c, d, e, f, g, h, i, j) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__15448 = a;
    var G__15449 = b;
    var G__15450 = c;
    var G__15451 = d;
    var G__15452 = e;
    var G__15453 = f;
    var G__15454 = g;
    var G__15455 = h;
    var G__15456 = i;
    var G__15457 = j;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$10(G__15448, G__15449, G__15450, G__15451, G__15452, G__15453, G__15454, G__15455, G__15456, G__15457) : self__.dispatch_fn.call(null, G__15448, G__15449, G__15450, G__15451, G__15452, G__15453, G__15454, G__15455, G__15456, G__15457);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__15458 = a;
  var G__15459 = b;
  var G__15460 = c;
  var G__15461 = d;
  var G__15462 = e;
  var G__15463 = f;
  var G__15464 = g;
  var G__15465 = h;
  var G__15466 = i;
  var G__15467 = j;
  return target_fn.cljs$core$IFn$_invoke$arity$10 ? target_fn.cljs$core$IFn$_invoke$arity$10(G__15458, G__15459, G__15460, G__15461, G__15462, G__15463, G__15464, G__15465, G__15466, G__15467) : target_fn.call(null, G__15458, G__15459, G__15460, G__15461, G__15462, G__15463, G__15464, G__15465, G__15466, G__15467);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$11 = function(a, b, c, d, e, f, g, h, i, j, k) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__15468 = a;
    var G__15469 = b;
    var G__15470 = c;
    var G__15471 = d;
    var G__15472 = e;
    var G__15473 = f;
    var G__15474 = g;
    var G__15475 = h;
    var G__15476 = i;
    var G__15477 = j;
    var G__15478 = k;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$11(G__15468, G__15469, G__15470, G__15471, G__15472, G__15473, G__15474, G__15475, G__15476, G__15477, G__15478) : self__.dispatch_fn.call(null, G__15468, G__15469, G__15470, G__15471, G__15472, G__15473, G__15474, G__15475, G__15476, G__15477, G__15478);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__15479 = a;
  var G__15480 = b;
  var G__15481 = c;
  var G__15482 = d;
  var G__15483 = e;
  var G__15484 = f;
  var G__15485 = g;
  var G__15486 = h;
  var G__15487 = i;
  var G__15488 = j;
  var G__15489 = k;
  return target_fn.cljs$core$IFn$_invoke$arity$11 ? target_fn.cljs$core$IFn$_invoke$arity$11(G__15479, G__15480, G__15481, G__15482, G__15483, G__15484, G__15485, G__15486, G__15487, G__15488, G__15489) : target_fn.call(null, G__15479, G__15480, G__15481, G__15482, G__15483, G__15484, G__15485, G__15486, G__15487, G__15488, G__15489);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$12 = function(a, b, c, d, e, f, g, h, i, j, k, l) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__15490 = a;
    var G__15491 = b;
    var G__15492 = c;
    var G__15493 = d;
    var G__15494 = e;
    var G__15495 = f;
    var G__15496 = g;
    var G__15497 = h;
    var G__15498 = i;
    var G__15499 = j;
    var G__15500 = k;
    var G__15501 = l;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$12(G__15490, G__15491, G__15492, G__15493, G__15494, G__15495, G__15496, G__15497, G__15498, G__15499, G__15500, G__15501) : self__.dispatch_fn.call(null, G__15490, G__15491, G__15492, G__15493, G__15494, G__15495, G__15496, G__15497, G__15498, G__15499, G__15500, G__15501);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__15502 = a;
  var G__15503 = b;
  var G__15504 = c;
  var G__15505 = d;
  var G__15506 = e;
  var G__15507 = f;
  var G__15508 = g;
  var G__15509 = h;
  var G__15510 = i;
  var G__15511 = j;
  var G__15512 = k;
  var G__15513 = l;
  return target_fn.cljs$core$IFn$_invoke$arity$12 ? target_fn.cljs$core$IFn$_invoke$arity$12(G__15502, G__15503, G__15504, G__15505, G__15506, G__15507, G__15508, G__15509, G__15510, G__15511, G__15512, G__15513) : target_fn.call(null, G__15502, G__15503, G__15504, G__15505, G__15506, G__15507, G__15508, G__15509, G__15510, G__15511, G__15512, G__15513);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$13 = function(a, b, c, d, e, f, g, h, i, j, k, l, m) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__15514 = a;
    var G__15515 = b;
    var G__15516 = c;
    var G__15517 = d;
    var G__15518 = e;
    var G__15519 = f;
    var G__15520 = g;
    var G__15521 = h;
    var G__15522 = i;
    var G__15523 = j;
    var G__15524 = k;
    var G__15525 = l;
    var G__15526 = m;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$13(G__15514, G__15515, G__15516, G__15517, G__15518, G__15519, G__15520, G__15521, G__15522, G__15523, G__15524, G__15525, G__15526) : self__.dispatch_fn.call(null, G__15514, G__15515, G__15516, G__15517, G__15518, G__15519, G__15520, G__15521, G__15522, G__15523, G__15524, G__15525, G__15526);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__15527 = a;
  var G__15528 = b;
  var G__15529 = c;
  var G__15530 = d;
  var G__15531 = e;
  var G__15532 = f;
  var G__15533 = g;
  var G__15534 = h;
  var G__15535 = i;
  var G__15536 = j;
  var G__15537 = k;
  var G__15538 = l;
  var G__15539 = m;
  return target_fn.cljs$core$IFn$_invoke$arity$13 ? target_fn.cljs$core$IFn$_invoke$arity$13(G__15527, G__15528, G__15529, G__15530, G__15531, G__15532, G__15533, G__15534, G__15535, G__15536, G__15537, G__15538, G__15539) : target_fn.call(null, G__15527, G__15528, G__15529, G__15530, G__15531, G__15532, G__15533, G__15534, G__15535, G__15536, G__15537, G__15538, G__15539);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$14 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__15540 = a;
    var G__15541 = b;
    var G__15542 = c;
    var G__15543 = d;
    var G__15544 = e;
    var G__15545 = f;
    var G__15546 = g;
    var G__15547 = h;
    var G__15548 = i;
    var G__15549 = j;
    var G__15550 = k;
    var G__15551 = l;
    var G__15552 = m;
    var G__15553 = n;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$14(G__15540, G__15541, G__15542, G__15543, G__15544, G__15545, G__15546, G__15547, G__15548, G__15549, G__15550, G__15551, G__15552, G__15553) : self__.dispatch_fn.call(null, G__15540, G__15541, G__15542, G__15543, G__15544, G__15545, G__15546, G__15547, G__15548, G__15549, G__15550, G__15551, G__15552, G__15553);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__15554 = a;
  var G__15555 = b;
  var G__15556 = c;
  var G__15557 = d;
  var G__15558 = e;
  var G__15559 = f;
  var G__15560 = g;
  var G__15561 = h;
  var G__15562 = i;
  var G__15563 = j;
  var G__15564 = k;
  var G__15565 = l;
  var G__15566 = m;
  var G__15567 = n;
  return target_fn.cljs$core$IFn$_invoke$arity$14 ? target_fn.cljs$core$IFn$_invoke$arity$14(G__15554, G__15555, G__15556, G__15557, G__15558, G__15559, G__15560, G__15561, G__15562, G__15563, G__15564, G__15565, G__15566, G__15567) : target_fn.call(null, G__15554, G__15555, G__15556, G__15557, G__15558, G__15559, G__15560, G__15561, G__15562, G__15563, G__15564, G__15565, G__15566, G__15567);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$15 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__15568 = a;
    var G__15569 = b;
    var G__15570 = c;
    var G__15571 = d;
    var G__15572 = e;
    var G__15573 = f;
    var G__15574 = g;
    var G__15575 = h;
    var G__15576 = i;
    var G__15577 = j;
    var G__15578 = k;
    var G__15579 = l;
    var G__15580 = m;
    var G__15581 = n;
    var G__15582 = o;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$15(G__15568, G__15569, G__15570, G__15571, G__15572, G__15573, G__15574, G__15575, G__15576, G__15577, G__15578, G__15579, G__15580, G__15581, G__15582) : self__.dispatch_fn.call(null, G__15568, G__15569, G__15570, G__15571, G__15572, G__15573, G__15574, G__15575, G__15576, G__15577, G__15578, G__15579, G__15580, G__15581, G__15582);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__15583 = a;
  var G__15584 = b;
  var G__15585 = c;
  var G__15586 = d;
  var G__15587 = e;
  var G__15588 = f;
  var G__15589 = g;
  var G__15590 = h;
  var G__15591 = i;
  var G__15592 = j;
  var G__15593 = k;
  var G__15594 = l;
  var G__15595 = m;
  var G__15596 = n;
  var G__15597 = o;
  return target_fn.cljs$core$IFn$_invoke$arity$15 ? target_fn.cljs$core$IFn$_invoke$arity$15(G__15583, G__15584, G__15585, G__15586, G__15587, G__15588, G__15589, G__15590, G__15591, G__15592, G__15593, G__15594, G__15595, G__15596, G__15597) : target_fn.call(null, G__15583, G__15584, G__15585, G__15586, G__15587, G__15588, G__15589, G__15590, G__15591, G__15592, G__15593, G__15594, G__15595, G__15596, G__15597);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$16 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__15598 = a;
    var G__15599 = b;
    var G__15600 = c;
    var G__15601 = d;
    var G__15602 = e;
    var G__15603 = f;
    var G__15604 = g;
    var G__15605 = h;
    var G__15606 = i;
    var G__15607 = j;
    var G__15608 = k;
    var G__15609 = l;
    var G__15610 = m;
    var G__15611 = n;
    var G__15612 = o;
    var G__15613 = p;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$16(G__15598, G__15599, G__15600, G__15601, G__15602, G__15603, G__15604, G__15605, G__15606, G__15607, G__15608, G__15609, G__15610, G__15611, G__15612, G__15613) : self__.dispatch_fn.call(null, G__15598, G__15599, G__15600, G__15601, G__15602, G__15603, G__15604, G__15605, G__15606, G__15607, G__15608, G__15609, G__15610, G__15611, G__15612, G__15613);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__15614 = a;
  var G__15615 = b;
  var G__15616 = c;
  var G__15617 = d;
  var G__15618 = e;
  var G__15619 = f;
  var G__15620 = g;
  var G__15621 = h;
  var G__15622 = i;
  var G__15623 = j;
  var G__15624 = k;
  var G__15625 = l;
  var G__15626 = m;
  var G__15627 = n;
  var G__15628 = o;
  var G__15629 = p;
  return target_fn.cljs$core$IFn$_invoke$arity$16 ? target_fn.cljs$core$IFn$_invoke$arity$16(G__15614, G__15615, G__15616, G__15617, G__15618, G__15619, G__15620, G__15621, G__15622, G__15623, G__15624, G__15625, G__15626, G__15627, G__15628, G__15629) : target_fn.call(null, G__15614, G__15615, G__15616, G__15617, G__15618, G__15619, G__15620, G__15621, G__15622, G__15623, G__15624, G__15625, G__15626, G__15627, G__15628, G__15629);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$17 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__15630 = a;
    var G__15631 = b;
    var G__15632 = c;
    var G__15633 = d;
    var G__15634 = e;
    var G__15635 = f;
    var G__15636 = g;
    var G__15637 = h;
    var G__15638 = i;
    var G__15639 = j;
    var G__15640 = k;
    var G__15641 = l;
    var G__15642 = m;
    var G__15643 = n;
    var G__15644 = o;
    var G__15645 = p;
    var G__15646 = q;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$17(G__15630, G__15631, G__15632, G__15633, G__15634, G__15635, G__15636, G__15637, G__15638, G__15639, G__15640, G__15641, G__15642, G__15643, G__15644, G__15645, G__15646) : self__.dispatch_fn.call(null, G__15630, G__15631, G__15632, G__15633, G__15634, G__15635, G__15636, G__15637, G__15638, G__15639, G__15640, G__15641, G__15642, G__15643, G__15644, G__15645, G__15646);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__15647 = a;
  var G__15648 = b;
  var G__15649 = c;
  var G__15650 = d;
  var G__15651 = e;
  var G__15652 = f;
  var G__15653 = g;
  var G__15654 = h;
  var G__15655 = i;
  var G__15656 = j;
  var G__15657 = k;
  var G__15658 = l;
  var G__15659 = m;
  var G__15660 = n;
  var G__15661 = o;
  var G__15662 = p;
  var G__15663 = q;
  return target_fn.cljs$core$IFn$_invoke$arity$17 ? target_fn.cljs$core$IFn$_invoke$arity$17(G__15647, G__15648, G__15649, G__15650, G__15651, G__15652, G__15653, G__15654, G__15655, G__15656, G__15657, G__15658, G__15659, G__15660, G__15661, G__15662, G__15663) : target_fn.call(null, G__15647, G__15648, G__15649, G__15650, G__15651, G__15652, G__15653, G__15654, G__15655, G__15656, G__15657, G__15658, G__15659, G__15660, G__15661, G__15662, G__15663);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$18 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__15664 = a;
    var G__15665 = b;
    var G__15666 = c;
    var G__15667 = d;
    var G__15668 = e;
    var G__15669 = f;
    var G__15670 = g;
    var G__15671 = h;
    var G__15672 = i;
    var G__15673 = j;
    var G__15674 = k;
    var G__15675 = l;
    var G__15676 = m;
    var G__15677 = n;
    var G__15678 = o;
    var G__15679 = p;
    var G__15680 = q;
    var G__15681 = r;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$18(G__15664, G__15665, G__15666, G__15667, G__15668, G__15669, G__15670, G__15671, G__15672, G__15673, G__15674, G__15675, G__15676, G__15677, G__15678, G__15679, G__15680, G__15681) : self__.dispatch_fn.call(null, G__15664, G__15665, G__15666, G__15667, G__15668, G__15669, G__15670, G__15671, G__15672, G__15673, G__15674, G__15675, G__15676, G__15677, G__15678, G__15679, G__15680, G__15681);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__15682 = a;
  var G__15683 = b;
  var G__15684 = c;
  var G__15685 = d;
  var G__15686 = e;
  var G__15687 = f;
  var G__15688 = g;
  var G__15689 = h;
  var G__15690 = i;
  var G__15691 = j;
  var G__15692 = k;
  var G__15693 = l;
  var G__15694 = m;
  var G__15695 = n;
  var G__15696 = o;
  var G__15697 = p;
  var G__15698 = q;
  var G__15699 = r;
  return target_fn.cljs$core$IFn$_invoke$arity$18 ? target_fn.cljs$core$IFn$_invoke$arity$18(G__15682, G__15683, G__15684, G__15685, G__15686, G__15687, G__15688, G__15689, G__15690, G__15691, G__15692, G__15693, G__15694, G__15695, G__15696, G__15697, G__15698, G__15699) : target_fn.call(null, G__15682, G__15683, G__15684, G__15685, G__15686, G__15687, G__15688, G__15689, G__15690, G__15691, G__15692, G__15693, G__15694, G__15695, G__15696, G__15697, G__15698, G__15699);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$19 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__15700 = a;
    var G__15701 = b;
    var G__15702 = c;
    var G__15703 = d;
    var G__15704 = e;
    var G__15705 = f;
    var G__15706 = g;
    var G__15707 = h;
    var G__15708 = i;
    var G__15709 = j;
    var G__15710 = k;
    var G__15711 = l;
    var G__15712 = m;
    var G__15713 = n;
    var G__15714 = o;
    var G__15715 = p;
    var G__15716 = q;
    var G__15717 = r;
    var G__15718 = s;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$19(G__15700, G__15701, G__15702, G__15703, G__15704, G__15705, G__15706, G__15707, G__15708, G__15709, G__15710, G__15711, G__15712, G__15713, G__15714, G__15715, G__15716, G__15717, G__15718) : self__.dispatch_fn.call(null, G__15700, G__15701, G__15702, G__15703, G__15704, G__15705, G__15706, G__15707, G__15708, G__15709, G__15710, G__15711, G__15712, G__15713, G__15714, G__15715, G__15716, 
    G__15717, G__15718);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__15719 = a;
  var G__15720 = b;
  var G__15721 = c;
  var G__15722 = d;
  var G__15723 = e;
  var G__15724 = f;
  var G__15725 = g;
  var G__15726 = h;
  var G__15727 = i;
  var G__15728 = j;
  var G__15729 = k;
  var G__15730 = l;
  var G__15731 = m;
  var G__15732 = n;
  var G__15733 = o;
  var G__15734 = p;
  var G__15735 = q;
  var G__15736 = r;
  var G__15737 = s;
  return target_fn.cljs$core$IFn$_invoke$arity$19 ? target_fn.cljs$core$IFn$_invoke$arity$19(G__15719, G__15720, G__15721, G__15722, G__15723, G__15724, G__15725, G__15726, G__15727, G__15728, G__15729, G__15730, G__15731, G__15732, G__15733, G__15734, G__15735, G__15736, G__15737) : target_fn.call(null, G__15719, G__15720, G__15721, G__15722, G__15723, G__15724, G__15725, G__15726, G__15727, G__15728, G__15729, G__15730, G__15731, G__15732, G__15733, G__15734, G__15735, G__15736, G__15737);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$20 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t) {
  var self__ = this;
  var mf = this;
  var dispatch_val = function() {
    var G__15738 = a;
    var G__15739 = b;
    var G__15740 = c;
    var G__15741 = d;
    var G__15742 = e;
    var G__15743 = f;
    var G__15744 = g;
    var G__15745 = h;
    var G__15746 = i;
    var G__15747 = j;
    var G__15748 = k;
    var G__15749 = l;
    var G__15750 = m;
    var G__15751 = n;
    var G__15752 = o;
    var G__15753 = p;
    var G__15754 = q;
    var G__15755 = r;
    var G__15756 = s;
    var G__15757 = t;
    return self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20 ? self__.dispatch_fn.cljs$core$IFn$_invoke$arity$20(G__15738, G__15739, G__15740, G__15741, G__15742, G__15743, G__15744, G__15745, G__15746, G__15747, G__15748, G__15749, G__15750, G__15751, G__15752, G__15753, G__15754, G__15755, G__15756, G__15757) : self__.dispatch_fn.call(null, G__15738, G__15739, G__15740, G__15741, G__15742, G__15743, G__15744, G__15745, G__15746, G__15747, G__15748, G__15749, G__15750, G__15751, G__15752, G__15753, 
    G__15754, G__15755, G__15756, G__15757);
  }();
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  var G__15758 = a;
  var G__15759 = b;
  var G__15760 = c;
  var G__15761 = d;
  var G__15762 = e;
  var G__15763 = f;
  var G__15764 = g;
  var G__15765 = h;
  var G__15766 = i;
  var G__15767 = j;
  var G__15768 = k;
  var G__15769 = l;
  var G__15770 = m;
  var G__15771 = n;
  var G__15772 = o;
  var G__15773 = p;
  var G__15774 = q;
  var G__15775 = r;
  var G__15776 = s;
  var G__15777 = t;
  return target_fn.cljs$core$IFn$_invoke$arity$20 ? target_fn.cljs$core$IFn$_invoke$arity$20(G__15758, G__15759, G__15760, G__15761, G__15762, G__15763, G__15764, G__15765, G__15766, G__15767, G__15768, G__15769, G__15770, G__15771, G__15772, G__15773, G__15774, G__15775, G__15776, G__15777) : target_fn.call(null, G__15758, G__15759, G__15760, G__15761, G__15762, G__15763, G__15764, G__15765, G__15766, G__15767, G__15768, G__15769, G__15770, G__15771, G__15772, G__15773, G__15774, G__15775, G__15776, 
  G__15777);
};
cljs.core.MultiFn.prototype.cljs$core$IFn$_invoke$arity$21 = function(a, b, c, d, e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest) {
  var self__ = this;
  var mf = this;
  var dispatch_val = cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(self__.dispatch_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
  var target_fn = mf.cljs$core$IMultiFn$_get_method$arity$2(null, dispatch_val);
  if (cljs.core.truth_(target_fn)) {
  } else {
    cljs.core.throw_no_method_error(self__.name, dispatch_val);
  }
  return cljs.core.apply.cljs$core$IFn$_invoke$arity$variadic(target_fn, a, b, c, d, cljs.core.array_seq([e, f, g, h, i, j, k, l, m, n, o, p, q, r, s, t, rest], 0));
};
cljs.core.MultiFn.cljs$lang$type = true;
cljs.core.MultiFn.cljs$lang$ctorStr = "cljs.core/MultiFn";
cljs.core.MultiFn.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/MultiFn");
};
cljs.core.__GT_MultiFn = function __GT_MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy) {
  return new cljs.core.MultiFn(name, dispatch_fn, default_dispatch_val, hierarchy, method_table, prefer_table, method_cache, cached_hierarchy);
};
cljs.core.remove_all_methods = function remove_all_methods(multifn) {
  return cljs.core._reset(multifn);
};
cljs.core.remove_method = function remove_method(multifn, dispatch_val) {
  return cljs.core._remove_method(multifn, dispatch_val);
};
cljs.core.prefer_method = function prefer_method(multifn, dispatch_val_x, dispatch_val_y) {
  return cljs.core._prefer_method(multifn, dispatch_val_x, dispatch_val_y);
};
cljs.core.methods$ = function methods$(multifn) {
  return cljs.core._methods(multifn);
};
cljs.core.get_method = function get_method(multifn, dispatch_val) {
  return cljs.core._get_method(multifn, dispatch_val);
};
cljs.core.prefers = function prefers(multifn) {
  return cljs.core._prefers(multifn);
};
cljs.core.UUID = function(uuid) {
  this.uuid = uuid;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2153775104;
};
cljs.core.UUID.prototype.cljs$core$IHash$_hash$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  var G__15779 = cljs.core.pr_str.cljs$core$IFn$_invoke$arity$variadic(cljs.core.array_seq([this$__$1], 0));
  return goog.string.hashCode(G__15779);
};
cljs.core.UUID.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(_, writer, ___$1) {
  var self__ = this;
  var ___$2 = this;
  return cljs.core._write(writer, [cljs.core.str('#uuid "'), cljs.core.str(self__.uuid), cljs.core.str('"')].join(""));
};
cljs.core.UUID.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(_, other) {
  var self__ = this;
  var ___$1 = this;
  return other instanceof cljs.core.UUID && self__.uuid === other.uuid;
};
cljs.core.UUID.prototype.toString = function() {
  var self__ = this;
  var _ = this;
  return self__.uuid;
};
cljs.core.UUID.prototype.equiv = function(other) {
  var self__ = this;
  var this$ = this;
  return this$.cljs$core$IEquiv$_equiv$arity$2(null, other);
};
cljs.core.UUID.cljs$lang$type = true;
cljs.core.UUID.cljs$lang$ctorStr = "cljs.core/UUID";
cljs.core.UUID.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/UUID");
};
cljs.core.__GT_UUID = function __GT_UUID(uuid) {
  return new cljs.core.UUID(uuid);
};
cljs.core.ExceptionInfo = function(message, data, cause) {
  this.message = message;
  this.data = data;
  this.cause = cause;
};
cljs.core.ExceptionInfo.cljs$lang$type = true;
cljs.core.ExceptionInfo.cljs$lang$ctorStr = "cljs.core/ExceptionInfo";
cljs.core.ExceptionInfo.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write(writer__4513__auto__, "cljs.core/ExceptionInfo");
};
cljs.core.__GT_ExceptionInfo = function __GT_ExceptionInfo(message, data, cause) {
  return new cljs.core.ExceptionInfo(message, data, cause);
};
cljs.core.pr_writer_ex_info = function pr_writer_ex_info(obj, writer, opts) {
  cljs.core._write(writer, "#ExceptionInfo{:message ");
  cljs.core.pr_writer(obj.message, writer, opts);
  if (cljs.core.truth_(obj.data)) {
    cljs.core._write(writer, ", :data ");
    cljs.core.pr_writer(obj.data, writer, opts);
  } else {
  }
  if (cljs.core.truth_(obj.cause)) {
    cljs.core._write(writer, ", :cause ");
    cljs.core.pr_writer(obj.cause, writer, opts);
  } else {
  }
  return cljs.core._write(writer, "}");
};
cljs.core.ex_info = function() {
  var ex_info = null;
  var ex_info__2 = function(msg, data) {
    return ex_info.cljs$core$IFn$_invoke$arity$3(msg, data, null);
  };
  var ex_info__3 = function(msg, data, cause) {
    cljs.core.ExceptionInfo.prototype = function() {
      var G__15784 = msg;
      return Error(G__15784);
    }();
    cljs.core.ExceptionInfo.prototype.name = "ExceptionInfo";
    cljs.core.ExceptionInfo.prototype.constructor = cljs.core.ExceptionInfo;
    cljs.core.ExceptionInfo.prototype.toString = cljs.core.pr_str_STAR_;
    cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$ = true;
    cljs.core.ExceptionInfo.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(obj, writer, opts) {
      var obj__$1 = this;
      return cljs.core.pr_writer_ex_info(obj__$1, writer, opts);
    };
    return new cljs.core.ExceptionInfo(msg, data, cause);
  };
  ex_info = function(msg, data, cause) {
    switch(arguments.length) {
      case 2:
        return ex_info__2.call(this, msg, data);
      case 3:
        return ex_info__3.call(this, msg, data, cause);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  ex_info.cljs$core$IFn$_invoke$arity$2 = ex_info__2;
  ex_info.cljs$core$IFn$_invoke$arity$3 = ex_info__3;
  return ex_info;
}();
cljs.core.ex_data = function ex_data(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.data;
  } else {
    return null;
  }
};
cljs.core.ex_message = function ex_message(ex) {
  if (ex instanceof Error) {
    return ex.message;
  } else {
    return null;
  }
};
cljs.core.ex_cause = function ex_cause(ex) {
  if (ex instanceof cljs.core.ExceptionInfo) {
    return ex.cause;
  } else {
    return null;
  }
};
cljs.core.comparator = function comparator(pred) {
  return function(x, y) {
    if (cljs.core.truth_(function() {
      var G__15789 = x;
      var G__15790 = y;
      return pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__15789, G__15790) : pred.call(null, G__15789, G__15790);
    }())) {
      return-1;
    } else {
      if (cljs.core.truth_(function() {
        var G__15791 = y;
        var G__15792 = x;
        return pred.cljs$core$IFn$_invoke$arity$2 ? pred.cljs$core$IFn$_invoke$arity$2(G__15791, G__15792) : pred.call(null, G__15791, G__15792);
      }())) {
        return 1;
      } else {
        return 0;
      }
    }
  };
};
cljs.core.special_symbol_QMARK_ = function special_symbol_QMARK_(x) {
  return cljs.core.contains_QMARK_(new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 19, [new cljs.core.Symbol(null, "\x26", "\x26", -2144855648, null), null, new cljs.core.Symbol(null, "defrecord*", "defrecord*", -1936366207, null), null, new cljs.core.Symbol(null, "try", "try", -1273693247, null), null, new cljs.core.Symbol(null, "loop*", "loop*", 615029416, null), null, new cljs.core.Symbol(null, "do", "do", 1686842252, null), null, new cljs.core.Symbol(null, "letfn*", 
  "letfn*", -110097810, null), null, new cljs.core.Symbol(null, "if", "if", 1181717262, null), null, new cljs.core.Symbol(null, "new", "new", -444906321, null), null, new cljs.core.Symbol(null, "ns", "ns", 2082130287, null), null, new cljs.core.Symbol(null, "deftype*", "deftype*", 962659890, null), null, new cljs.core.Symbol(null, "let*", "let*", 1920721458, null), null, new cljs.core.Symbol(null, "js*", "js*", -1134233646, null), null, new cljs.core.Symbol(null, "fn*", "fn*", -752876845, null), 
  null, new cljs.core.Symbol(null, "recur", "recur", 1202958259, null), null, new cljs.core.Symbol(null, "set!", "set!", 250714521, null), null, new cljs.core.Symbol(null, ".", ".", 1975675962, null), null, new cljs.core.Symbol(null, "quote", "quote", 1377916282, null), null, new cljs.core.Symbol(null, "throw", "throw", 595905694, null), null, new cljs.core.Symbol(null, "def", "def", 597100991, null), null], null), null), x);
};
cljs.core.test = function test(v) {
  var f = v.cljs$lang$test;
  if (cljs.core.truth_(f)) {
    f.cljs$core$IFn$_invoke$arity$0 ? f.cljs$core$IFn$_invoke$arity$0() : f.call(null);
    return new cljs.core.Keyword(null, "ok", "ok", 967785236);
  } else {
    return new cljs.core.Keyword(null, "no-test", "no-test", -1679482642);
  }
};
goog.provide("cljs.core.async.impl.protocols");
goog.require("cljs.core");
cljs.core.async.impl.protocols.MAX_QUEUE_SIZE = 1024;
cljs.core.async.impl.protocols.ReadPort = function() {
  var obj18958 = {};
  return obj18958;
}();
cljs.core.async.impl.protocols.take_BANG_ = function take_BANG_(port, fn1_handler) {
  if (function() {
    var and__3913__auto__ = port;
    if (and__3913__auto__) {
      return port.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return port.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2(port, fn1_handler);
  } else {
    var x__4569__auto__ = port == null ? null : port;
    return function() {
      var or__3925__auto__ = cljs.core.async.impl.protocols.take_BANG_[goog.typeOf(x__4569__auto__)];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core.async.impl.protocols.take_BANG_["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "ReadPort.take!", port);
        }
      }
    }().call(null, port, fn1_handler);
  }
};
cljs.core.async.impl.protocols.WritePort = function() {
  var obj18960 = {};
  return obj18960;
}();
cljs.core.async.impl.protocols.put_BANG_ = function put_BANG_(port, val, fn1_handler) {
  if (function() {
    var and__3913__auto__ = port;
    if (and__3913__auto__) {
      return port.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return port.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3(port, val, fn1_handler);
  } else {
    var x__4569__auto__ = port == null ? null : port;
    return function() {
      var or__3925__auto__ = cljs.core.async.impl.protocols.put_BANG_[goog.typeOf(x__4569__auto__)];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core.async.impl.protocols.put_BANG_["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "WritePort.put!", port);
        }
      }
    }().call(null, port, val, fn1_handler);
  }
};
cljs.core.async.impl.protocols.Channel = function() {
  var obj18962 = {};
  return obj18962;
}();
cljs.core.async.impl.protocols.close_BANG_ = function close_BANG_(chan) {
  if (function() {
    var and__3913__auto__ = chan;
    if (and__3913__auto__) {
      return chan.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return chan.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1(chan);
  } else {
    var x__4569__auto__ = chan == null ? null : chan;
    return function() {
      var or__3925__auto__ = cljs.core.async.impl.protocols.close_BANG_[goog.typeOf(x__4569__auto__)];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core.async.impl.protocols.close_BANG_["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Channel.close!", chan);
        }
      }
    }().call(null, chan);
  }
};
cljs.core.async.impl.protocols.closed_QMARK_ = function closed_QMARK_(chan) {
  if (function() {
    var and__3913__auto__ = chan;
    if (and__3913__auto__) {
      return chan.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return chan.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1(chan);
  } else {
    var x__4569__auto__ = chan == null ? null : chan;
    return function() {
      var or__3925__auto__ = cljs.core.async.impl.protocols.closed_QMARK_[goog.typeOf(x__4569__auto__)];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core.async.impl.protocols.closed_QMARK_["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Channel.closed?", chan);
        }
      }
    }().call(null, chan);
  }
};
cljs.core.async.impl.protocols.Handler = function() {
  var obj18964 = {};
  return obj18964;
}();
cljs.core.async.impl.protocols.active_QMARK_ = function active_QMARK_(h) {
  if (function() {
    var and__3913__auto__ = h;
    if (and__3913__auto__) {
      return h.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return h.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1(h);
  } else {
    var x__4569__auto__ = h == null ? null : h;
    return function() {
      var or__3925__auto__ = cljs.core.async.impl.protocols.active_QMARK_[goog.typeOf(x__4569__auto__)];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core.async.impl.protocols.active_QMARK_["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Handler.active?", h);
        }
      }
    }().call(null, h);
  }
};
cljs.core.async.impl.protocols.commit = function commit(h) {
  if (function() {
    var and__3913__auto__ = h;
    if (and__3913__auto__) {
      return h.cljs$core$async$impl$protocols$Handler$commit$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return h.cljs$core$async$impl$protocols$Handler$commit$arity$1(h);
  } else {
    var x__4569__auto__ = h == null ? null : h;
    return function() {
      var or__3925__auto__ = cljs.core.async.impl.protocols.commit[goog.typeOf(x__4569__auto__)];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core.async.impl.protocols.commit["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Handler.commit", h);
        }
      }
    }().call(null, h);
  }
};
cljs.core.async.impl.protocols.Buffer = function() {
  var obj18966 = {};
  return obj18966;
}();
cljs.core.async.impl.protocols.full_QMARK_ = function full_QMARK_(b) {
  if (function() {
    var and__3913__auto__ = b;
    if (and__3913__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1(b);
  } else {
    var x__4569__auto__ = b == null ? null : b;
    return function() {
      var or__3925__auto__ = cljs.core.async.impl.protocols.full_QMARK_[goog.typeOf(x__4569__auto__)];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core.async.impl.protocols.full_QMARK_["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Buffer.full?", b);
        }
      }
    }().call(null, b);
  }
};
cljs.core.async.impl.protocols.remove_BANG_ = function remove_BANG_(b) {
  if (function() {
    var and__3913__auto__ = b;
    if (and__3913__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1(b);
  } else {
    var x__4569__auto__ = b == null ? null : b;
    return function() {
      var or__3925__auto__ = cljs.core.async.impl.protocols.remove_BANG_[goog.typeOf(x__4569__auto__)];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core.async.impl.protocols.remove_BANG_["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Buffer.remove!", b);
        }
      }
    }().call(null, b);
  }
};
cljs.core.async.impl.protocols.add_BANG__STAR_ = function add_BANG__STAR_(b, itm) {
  if (function() {
    var and__3913__auto__ = b;
    if (and__3913__auto__) {
      return b.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return b.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2(b, itm);
  } else {
    var x__4569__auto__ = b == null ? null : b;
    return function() {
      var or__3925__auto__ = cljs.core.async.impl.protocols.add_BANG__STAR_[goog.typeOf(x__4569__auto__)];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core.async.impl.protocols.add_BANG__STAR_["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Buffer.add!*", b);
        }
      }
    }().call(null, b, itm);
  }
};
cljs.core.async.impl.protocols.add_BANG_ = function() {
  var add_BANG_ = null;
  var add_BANG___1 = function(b) {
    return b;
  };
  var add_BANG___2 = function(b, itm) {
    if (!(itm == null)) {
    } else {
      throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "itm", "itm", -713282527, null)))))].join(""));
    }
    return cljs.core.async.impl.protocols.add_BANG__STAR_.call(null, b, itm);
  };
  add_BANG_ = function(b, itm) {
    switch(arguments.length) {
      case 1:
        return add_BANG___1.call(this, b);
      case 2:
        return add_BANG___2.call(this, b, itm);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  add_BANG_.cljs$core$IFn$_invoke$arity$1 = add_BANG___1;
  add_BANG_.cljs$core$IFn$_invoke$arity$2 = add_BANG___2;
  return add_BANG_;
}();
cljs.core.async.impl.protocols.UnblockingBuffer = function() {
  var obj18968 = {};
  return obj18968;
}();
goog.provide("cljs.core.async.impl.buffers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.buffers.acopy = function acopy(src, src_start, dest, dest_start, len) {
  var cnt = 0;
  while (true) {
    if (cnt < len) {
      dest[dest_start + cnt] = src[src_start + cnt];
      var G__18971 = cnt + 1;
      cnt = G__18971;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.async.impl.buffers.RingBuffer = function(head, tail, length, arr) {
  this.head = head;
  this.tail = tail;
  this.length = length;
  this.arr = arr;
};
cljs.core.async.impl.buffers.RingBuffer.prototype.pop = function() {
  var self__ = this;
  var _ = this;
  if (self__.length === 0) {
    return null;
  } else {
    var x = self__.arr[self__.tail];
    self__.arr[self__.tail] = null;
    self__.tail = (self__.tail + 1) % self__.arr.length;
    self__.length = self__.length - 1;
    return x;
  }
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unshift = function(x) {
  var self__ = this;
  var _ = this;
  self__.arr[self__.head] = x;
  self__.head = (self__.head + 1) % self__.arr.length;
  self__.length = self__.length + 1;
  return null;
};
cljs.core.async.impl.buffers.RingBuffer.prototype.unbounded_unshift = function(x) {
  var self__ = this;
  var this$ = this;
  if (self__.length + 1 === self__.arr.length) {
    this$.resize();
  } else {
  }
  return this$.unshift(x);
};
cljs.core.async.impl.buffers.RingBuffer.prototype.resize = function() {
  var self__ = this;
  var _ = this;
  var new_arr_size = self__.arr.length * 2;
  var new_arr = new Array(new_arr_size);
  if (self__.tail < self__.head) {
    cljs.core.async.impl.buffers.acopy.call(null, self__.arr, self__.tail, new_arr, 0, self__.length);
    self__.tail = 0;
    self__.head = self__.length;
    return self__.arr = new_arr;
  } else {
    if (self__.tail > self__.head) {
      cljs.core.async.impl.buffers.acopy.call(null, self__.arr, self__.tail, new_arr, 0, self__.arr.length - self__.tail);
      cljs.core.async.impl.buffers.acopy.call(null, self__.arr, 0, new_arr, self__.arr.length - self__.tail, self__.head);
      self__.tail = 0;
      self__.head = self__.length;
      return self__.arr = new_arr;
    } else {
      if (self__.tail === self__.head) {
        self__.tail = 0;
        self__.head = 0;
        return self__.arr = new_arr;
      } else {
        return null;
      }
    }
  }
};
cljs.core.async.impl.buffers.RingBuffer.prototype.cleanup = function(keep_QMARK_) {
  var self__ = this;
  var this$ = this;
  var n__4812__auto__ = self__.length;
  var x = 0;
  while (true) {
    if (x < n__4812__auto__) {
      var v_18972 = this$.pop();
      if (keep_QMARK_.call(null, v_18972)) {
        this$.unshift(v_18972);
      } else {
      }
      var G__18973 = x + 1;
      x = G__18973;
      continue;
    } else {
      return null;
    }
    break;
  }
};
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/RingBuffer";
cljs.core.async.impl.buffers.RingBuffer.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write.call(null, writer__4513__auto__, "cljs.core.async.impl.buffers/RingBuffer");
};
cljs.core.async.impl.buffers.__GT_RingBuffer = function __GT_RingBuffer(head, tail, length, arr) {
  return new cljs.core.async.impl.buffers.RingBuffer(head, tail, length, arr);
};
cljs.core.async.impl.buffers.ring_buffer = function ring_buffer(n) {
  if (n > 0) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Can't create a ring buffer of size 0"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3e", "\x3e", 1085014381, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null), 0)))].join(""));
  }
  return new cljs.core.async.impl.buffers.RingBuffer(0, 0, 0, new Array(n));
};
cljs.core.async.impl.buffers.FixedBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length === self__.n;
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.FixedBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  self__.buf.unbounded_unshift(itm);
  return this$__$1;
};
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/FixedBuffer";
cljs.core.async.impl.buffers.FixedBuffer.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write.call(null, writer__4513__auto__, "cljs.core.async.impl.buffers/FixedBuffer");
};
cljs.core.async.impl.buffers.__GT_FixedBuffer = function __GT_FixedBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.FixedBuffer(buf, n);
};
cljs.core.async.impl.buffers.fixed_buffer = function fixed_buffer(n) {
  return new cljs.core.async.impl.buffers.FixedBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
cljs.core.async.impl.buffers.DroppingBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return false;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.buf.length === self__.n) {
  } else {
    self__.buf.unshift(itm);
  }
  return this$__$1;
};
cljs.core.async.impl.buffers.DroppingBuffer.prototype.cljs$core$async$impl$protocols$UnblockingBuffer$ = true;
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/DroppingBuffer";
cljs.core.async.impl.buffers.DroppingBuffer.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write.call(null, writer__4513__auto__, "cljs.core.async.impl.buffers/DroppingBuffer");
};
cljs.core.async.impl.buffers.__GT_DroppingBuffer = function __GT_DroppingBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(buf, n);
};
cljs.core.async.impl.buffers.dropping_buffer = function dropping_buffer(n) {
  return new cljs.core.async.impl.buffers.DroppingBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
cljs.core.async.impl.buffers.SlidingBuffer = function(buf, n) {
  this.buf = buf;
  this.n = n;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$ICounted$_count$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.length;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$ = true;
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$full_QMARK_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return false;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$remove_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  return self__.buf.pop();
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$Buffer$add_BANG__STAR_$arity$2 = function(this$, itm) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.buf.length === self__.n) {
    cljs.core.async.impl.protocols.remove_BANG_.call(null, this$__$1);
  } else {
  }
  self__.buf.unshift(itm);
  return this$__$1;
};
cljs.core.async.impl.buffers.SlidingBuffer.prototype.cljs$core$async$impl$protocols$UnblockingBuffer$ = true;
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$type = true;
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorStr = "cljs.core.async.impl.buffers/SlidingBuffer";
cljs.core.async.impl.buffers.SlidingBuffer.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write.call(null, writer__4513__auto__, "cljs.core.async.impl.buffers/SlidingBuffer");
};
cljs.core.async.impl.buffers.__GT_SlidingBuffer = function __GT_SlidingBuffer(buf, n) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(buf, n);
};
cljs.core.async.impl.buffers.sliding_buffer = function sliding_buffer(n) {
  return new cljs.core.async.impl.buffers.SlidingBuffer(cljs.core.async.impl.buffers.ring_buffer.call(null, n), n);
};
goog.provide("cljs.core.async.impl.dispatch");
goog.require("cljs.core");
goog.require("goog.async.nextTick");
goog.require("cljs.core.async.impl.buffers");
cljs.core.async.impl.dispatch.tasks = cljs.core.async.impl.buffers.ring_buffer.call(null, 32);
cljs.core.async.impl.dispatch.running_QMARK_ = false;
cljs.core.async.impl.dispatch.queued_QMARK_ = false;
cljs.core.async.impl.dispatch.TASK_BATCH_SIZE = 1024;
cljs.core.async.impl.dispatch.process_messages = function process_messages() {
  cljs.core.async.impl.dispatch.running_QMARK_ = true;
  cljs.core.async.impl.dispatch.queued_QMARK_ = false;
  var count_18976 = 0;
  while (true) {
    var m_18977 = cljs.core.async.impl.dispatch.tasks.pop();
    if (m_18977 == null) {
    } else {
      m_18977.call(null);
      if (count_18976 < cljs.core.async.impl.dispatch.TASK_BATCH_SIZE) {
        var G__18978 = count_18976 + 1;
        count_18976 = G__18978;
        continue;
      } else {
      }
    }
    break;
  }
  cljs.core.async.impl.dispatch.running_QMARK_ = false;
  if (cljs.core.async.impl.dispatch.tasks.length > 0) {
    return cljs.core.async.impl.dispatch.queue_dispatcher.call(null);
  } else {
    return null;
  }
};
cljs.core.async.impl.dispatch.queue_dispatcher = function queue_dispatcher() {
  if (cljs.core.truth_(function() {
    var and__3913__auto__ = cljs.core.async.impl.dispatch.queued_QMARK_;
    if (cljs.core.truth_(and__3913__auto__)) {
      return cljs.core.async.impl.dispatch.running_QMARK_;
    } else {
      return and__3913__auto__;
    }
  }())) {
    return null;
  } else {
    cljs.core.async.impl.dispatch.queued_QMARK_ = true;
    return goog.async.nextTick(cljs.core.async.impl.dispatch.process_messages);
  }
};
cljs.core.async.impl.dispatch.run = function run(f) {
  cljs.core.async.impl.dispatch.tasks.unbounded_unshift(f);
  return cljs.core.async.impl.dispatch.queue_dispatcher.call(null);
};
cljs.core.async.impl.dispatch.queue_delay = function queue_delay(f, delay) {
  return setTimeout(f, delay);
};
goog.provide("cljs.core.async.impl.channels");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.channels.box = function box(val) {
  if (typeof cljs.core.async.impl.channels.t18984 !== "undefined") {
  } else {
    cljs.core.async.impl.channels.t18984 = function(val, box, meta18985) {
      this.val = val;
      this.box = box;
      this.meta18985 = meta18985;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 425984;
    };
    cljs.core.async.impl.channels.t18984.prototype.cljs$core$IDeref$_deref$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.val;
    };
    cljs.core.async.impl.channels.t18984.prototype.cljs$core$IMeta$_meta$arity$1 = function(_18986) {
      var self__ = this;
      var _18986__$1 = this;
      return self__.meta18985;
    };
    cljs.core.async.impl.channels.t18984.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_18986, meta18985__$1) {
      var self__ = this;
      var _18986__$1 = this;
      return new cljs.core.async.impl.channels.t18984(self__.val, self__.box, meta18985__$1);
    };
    cljs.core.async.impl.channels.t18984.cljs$lang$type = true;
    cljs.core.async.impl.channels.t18984.cljs$lang$ctorStr = "cljs.core.async.impl.channels/t18984";
    cljs.core.async.impl.channels.t18984.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
      return cljs.core._write.call(null, writer__4513__auto__, "cljs.core.async.impl.channels/t18984");
    };
    cljs.core.async.impl.channels.__GT_t18984 = function __GT_t18984(val__$1, box__$1, meta18985) {
      return new cljs.core.async.impl.channels.t18984(val__$1, box__$1, meta18985);
    };
  }
  return new cljs.core.async.impl.channels.t18984(val, box, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.impl.channels.PutBox = function(handler, val) {
  this.handler = handler;
  this.val = val;
};
cljs.core.async.impl.channels.PutBox.cljs$lang$type = true;
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorStr = "cljs.core.async.impl.channels/PutBox";
cljs.core.async.impl.channels.PutBox.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write.call(null, writer__4513__auto__, "cljs.core.async.impl.channels/PutBox");
};
cljs.core.async.impl.channels.__GT_PutBox = function __GT_PutBox(handler, val) {
  return new cljs.core.async.impl.channels.PutBox(handler, val);
};
cljs.core.async.impl.channels.put_active_QMARK_ = function put_active_QMARK_(box) {
  return cljs.core.async.impl.protocols.active_QMARK_.call(null, box.handler);
};
cljs.core.async.impl.channels.MAX_DIRTY = 64;
cljs.core.async.impl.channels.MMC = function() {
  var obj18988 = {};
  return obj18988;
}();
cljs.core.async.impl.channels.abort = function abort(this$) {
  if (function() {
    var and__3913__auto__ = this$;
    if (and__3913__auto__) {
      return this$.cljs$core$async$impl$channels$MMC$abort$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return this$.cljs$core$async$impl$channels$MMC$abort$arity$1(this$);
  } else {
    var x__4569__auto__ = this$ == null ? null : this$;
    return function() {
      var or__3925__auto__ = cljs.core.async.impl.channels.abort[goog.typeOf(x__4569__auto__)];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core.async.impl.channels.abort["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "MMC.abort", this$);
        }
      }
    }().call(null, this$);
  }
};
cljs.core.async.impl.channels.ManyToManyChannel = function(takes, dirty_takes, puts, dirty_puts, buf, closed, add_BANG_) {
  this.takes = takes;
  this.dirty_takes = dirty_takes;
  this.puts = puts;
  this.dirty_puts = dirty_puts;
  this.buf = buf;
  this.closed = closed;
  this.add_BANG_ = add_BANG_;
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1 = function(_) {
  var self__ = this;
  var ___$1 = this;
  return self__.closed;
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  if (self__.closed) {
    return null;
  } else {
    self__.closed = true;
    if (cljs.core.truth_(function() {
      var and__3913__auto__ = self__.buf;
      if (cljs.core.truth_(and__3913__auto__)) {
        return self__.puts.length === 0;
      } else {
        return and__3913__auto__;
      }
    }())) {
      self__.add_BANG_.call(null, self__.buf);
    } else {
    }
    while (true) {
      var taker_18989 = self__.takes.pop();
      if (taker_18989 == null) {
      } else {
        if (cljs.core.async.impl.protocols.active_QMARK_.call(null, taker_18989)) {
          var take_cb_18990 = cljs.core.async.impl.protocols.commit.call(null, taker_18989);
          var val_18991 = cljs.core.truth_(function() {
            var and__3913__auto__ = self__.buf;
            if (cljs.core.truth_(and__3913__auto__)) {
              return cljs.core.count.call(null, self__.buf) > 0;
            } else {
              return and__3913__auto__;
            }
          }()) ? cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf) : null;
          cljs.core.async.impl.dispatch.run.call(null, function(take_cb_18990, val_18991, taker_18989, this$__$1) {
            return function() {
              return take_cb_18990.call(null, val_18991);
            };
          }(take_cb_18990, val_18991, taker_18989, this$__$1));
        } else {
        }
        continue;
      }
      break;
    }
    return null;
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(this$, handler) {
  var self__ = this;
  var this$__$1 = this;
  if (!cljs.core.async.impl.protocols.active_QMARK_.call(null, handler)) {
    return null;
  } else {
    if (!(self__.buf == null) && cljs.core.count.call(null, self__.buf) > 0) {
      var _ = cljs.core.async.impl.protocols.commit.call(null, handler);
      var retval = cljs.core.async.impl.channels.box.call(null, cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf));
      while (true) {
        if (cljs.core.truth_(cljs.core.async.impl.protocols.full_QMARK_.call(null, self__.buf))) {
        } else {
          var putter_18992 = self__.puts.pop();
          if (putter_18992 == null) {
          } else {
            var put_handler_18993 = putter_18992.handler;
            var val_18994 = putter_18992.val;
            if (cljs.core.async.impl.protocols.active_QMARK_.call(null, put_handler_18993)) {
              var put_cb_18995 = cljs.core.async.impl.protocols.commit.call(null, put_handler_18993);
              cljs.core.async.impl.protocols.commit.call(null, handler);
              cljs.core.async.impl.dispatch.run.call(null, function(put_cb_18995, put_handler_18993, val_18994, putter_18992, _, retval, this$__$1) {
                return function() {
                  return put_cb_18995.call(null, true);
                };
              }(put_cb_18995, put_handler_18993, val_18994, putter_18992, _, retval, this$__$1));
              if (cljs.core.reduced_QMARK_.call(null, self__.add_BANG_.call(null, self__.buf, val_18994))) {
                cljs.core.async.impl.channels.abort.call(null, this$__$1);
              } else {
              }
            } else {
            }
            continue;
          }
        }
        break;
      }
      return retval;
    } else {
      var putter = function() {
        while (true) {
          var putter = self__.puts.pop();
          if (cljs.core.truth_(putter)) {
            if (cljs.core.async.impl.protocols.active_QMARK_.call(null, putter.handler)) {
              return putter;
            } else {
              continue;
            }
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(putter)) {
        var put_cb = cljs.core.async.impl.protocols.commit.call(null, putter.handler);
        cljs.core.async.impl.protocols.commit.call(null, handler);
        cljs.core.async.impl.dispatch.run.call(null, function(put_cb, putter, this$__$1) {
          return function() {
            return put_cb.call(null, true);
          };
        }(put_cb, putter, this$__$1));
        return cljs.core.async.impl.channels.box.call(null, putter.val);
      } else {
        if (cljs.core.truth_(self__.closed)) {
          if (cljs.core.truth_(self__.buf)) {
            self__.add_BANG_.call(null, self__.buf);
          } else {
          }
          if (cljs.core.truth_(function() {
            var and__3913__auto__ = cljs.core.async.impl.protocols.active_QMARK_.call(null, handler);
            if (cljs.core.truth_(and__3913__auto__)) {
              return cljs.core.async.impl.protocols.commit.call(null, handler);
            } else {
              return and__3913__auto__;
            }
          }())) {
            var has_val = function() {
              var and__3913__auto__ = self__.buf;
              if (cljs.core.truth_(and__3913__auto__)) {
                return cljs.core.count.call(null, self__.buf) > 0;
              } else {
                return and__3913__auto__;
              }
            }();
            var val = cljs.core.truth_(has_val) ? cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf) : null;
            return cljs.core.async.impl.channels.box.call(null, val);
          } else {
            return null;
          }
        } else {
          if (self__.dirty_takes > cljs.core.async.impl.channels.MAX_DIRTY) {
            self__.dirty_takes = 0;
            self__.takes.cleanup(cljs.core.async.impl.protocols.active_QMARK_);
          } else {
            self__.dirty_takes = self__.dirty_takes + 1;
          }
          if (self__.takes.length < cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) {
          } else {
            throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("No more than "), cljs.core.str(cljs.core.async.impl.protocols.MAX_QUEUE_SIZE), cljs.core.str(" pending takes are allowed on a single channel.")].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3c", "\x3c", 993667236, null), cljs.core.list(new cljs.core.Symbol(null, ".-length", ".-length", -280799999, null), new cljs.core.Symbol(null, "takes", 
            "takes", 298247964, null)), new cljs.core.Symbol("impl", "MAX-QUEUE-SIZE", "impl/MAX-QUEUE-SIZE", 1508600732, null))))].join(""));
          }
          self__.takes.unbounded_unshift(handler);
          return null;
        }
      }
    }
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(this$, val, handler) {
  var self__ = this;
  var this$__$1 = this;
  if (!(val == null)) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("Can't put nil in on a channel"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "not", "not", 1044554643, null), cljs.core.list(new cljs.core.Symbol(null, "nil?", "nil?", 1612038930, null), new cljs.core.Symbol(null, "val", "val", 1769233139, null)))))].join(""));
  }
  var closed__$1 = self__.closed;
  if (closed__$1 || !cljs.core.async.impl.protocols.active_QMARK_.call(null, handler)) {
    return cljs.core.async.impl.channels.box.call(null, !closed__$1);
  } else {
    if (cljs.core.truth_(function() {
      var and__3913__auto__ = self__.buf;
      if (cljs.core.truth_(and__3913__auto__)) {
        return cljs.core.not.call(null, cljs.core.async.impl.protocols.full_QMARK_.call(null, self__.buf));
      } else {
        return and__3913__auto__;
      }
    }())) {
      cljs.core.async.impl.protocols.commit.call(null, handler);
      var done_QMARK_ = cljs.core.reduced_QMARK_.call(null, self__.add_BANG_.call(null, self__.buf, val));
      while (true) {
        if (self__.takes.length > 0 && cljs.core.count.call(null, self__.buf) > 0) {
          var taker_18996 = self__.takes.pop();
          if (cljs.core.async.impl.protocols.active_QMARK_.call(null, taker_18996)) {
            var take_cb_18997 = cljs.core.async.impl.protocols.commit.call(null, taker_18996);
            var val_18998__$1 = cljs.core.async.impl.protocols.remove_BANG_.call(null, self__.buf);
            cljs.core.async.impl.dispatch.run.call(null, function(take_cb_18997, val_18998__$1, taker_18996, done_QMARK_, closed__$1, this$__$1) {
              return function() {
                return take_cb_18997.call(null, val_18998__$1);
              };
            }(take_cb_18997, val_18998__$1, taker_18996, done_QMARK_, closed__$1, this$__$1));
          } else {
            continue;
          }
        } else {
        }
        break;
      }
      if (done_QMARK_) {
        cljs.core.async.impl.channels.abort.call(null, this$__$1);
      } else {
      }
      return cljs.core.async.impl.channels.box.call(null, true);
    } else {
      var taker = function() {
        while (true) {
          var taker = self__.takes.pop();
          if (cljs.core.truth_(taker)) {
            if (cljs.core.truth_(cljs.core.async.impl.protocols.active_QMARK_.call(null, taker))) {
              return taker;
            } else {
              continue;
            }
          } else {
            return null;
          }
          break;
        }
      }();
      if (cljs.core.truth_(taker)) {
        var take_cb = cljs.core.async.impl.protocols.commit.call(null, taker);
        cljs.core.async.impl.protocols.commit.call(null, handler);
        cljs.core.async.impl.dispatch.run.call(null, function(take_cb, taker, closed__$1, this$__$1) {
          return function() {
            return take_cb.call(null, val);
          };
        }(take_cb, taker, closed__$1, this$__$1));
        return cljs.core.async.impl.channels.box.call(null, true);
      } else {
        if (self__.dirty_puts > cljs.core.async.impl.channels.MAX_DIRTY) {
          self__.dirty_puts = 0;
          self__.puts.cleanup(cljs.core.async.impl.channels.put_active_QMARK_);
        } else {
          self__.dirty_puts = self__.dirty_puts + 1;
        }
        if (self__.puts.length < cljs.core.async.impl.protocols.MAX_QUEUE_SIZE) {
        } else {
          throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("No more than "), cljs.core.str(cljs.core.async.impl.protocols.MAX_QUEUE_SIZE), cljs.core.str(" pending puts are allowed on a single channel."), cljs.core.str(" Consider using a windowed buffer.")].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "\x3c", "\x3c", 993667236, null), cljs.core.list(new cljs.core.Symbol(null, ".-length", ".-length", 
          -280799999, null), new cljs.core.Symbol(null, "puts", "puts", -1883877054, null)), new cljs.core.Symbol("impl", "MAX-QUEUE-SIZE", "impl/MAX-QUEUE-SIZE", 1508600732, null))))].join(""));
        }
        self__.puts.unbounded_unshift(new cljs.core.async.impl.channels.PutBox(handler, val));
        return null;
      }
    }
  }
};
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$channels$MMC$ = true;
cljs.core.async.impl.channels.ManyToManyChannel.prototype.cljs$core$async$impl$channels$MMC$abort$arity$1 = function(this$) {
  var self__ = this;
  var this$__$1 = this;
  while (true) {
    var putter_18999 = self__.puts.pop();
    if (putter_18999 == null) {
    } else {
      var put_handler_19000 = putter_18999.handler;
      var val_19001 = putter_18999.val;
      if (cljs.core.async.impl.protocols.active_QMARK_.call(null, put_handler_19000)) {
        var put_cb_19002 = cljs.core.async.impl.protocols.commit.call(null, put_handler_19000);
        cljs.core.async.impl.dispatch.run.call(null, function(put_cb_19002, put_handler_19000, val_19001, putter_18999, this$__$1) {
          return function() {
            return put_cb_19002.call(null, true);
          };
        }(put_cb_19002, put_handler_19000, val_19001, putter_18999, this$__$1));
      } else {
        continue;
      }
    }
    break;
  }
  self__.puts.cleanup(cljs.core.constantly.call(null, false));
  return cljs.core.async.impl.protocols.close_BANG_.call(null, this$__$1);
};
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$type = true;
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorStr = "cljs.core.async.impl.channels/ManyToManyChannel";
cljs.core.async.impl.channels.ManyToManyChannel.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write.call(null, writer__4513__auto__, "cljs.core.async.impl.channels/ManyToManyChannel");
};
cljs.core.async.impl.channels.__GT_ManyToManyChannel = function __GT_ManyToManyChannel(takes, dirty_takes, puts, dirty_puts, buf, closed, add_BANG_) {
  return new cljs.core.async.impl.channels.ManyToManyChannel(takes, dirty_takes, puts, dirty_puts, buf, closed, add_BANG_);
};
cljs.core.async.impl.channels.ex_handler = function ex_handler(ex) {
  console.log(ex);
  return null;
};
cljs.core.async.impl.channels.handle = function handle(buf, exh, t) {
  var else$ = function() {
    var or__3925__auto__ = exh;
    if (cljs.core.truth_(or__3925__auto__)) {
      return or__3925__auto__;
    } else {
      return cljs.core.async.impl.channels.ex_handler;
    }
  }().call(null, t);
  if (else$ == null) {
    return buf;
  } else {
    return cljs.core.async.impl.protocols.add_BANG_.call(null, buf, else$);
  }
};
cljs.core.async.impl.channels.chan = function() {
  var chan = null;
  var chan__1 = function(buf) {
    return chan.call(null, buf, null);
  };
  var chan__2 = function(buf, xform) {
    return chan.call(null, buf, xform, null);
  };
  var chan__3 = function(buf, xform, exh) {
    return new cljs.core.async.impl.channels.ManyToManyChannel(cljs.core.async.impl.buffers.ring_buffer.call(null, 32), 0, cljs.core.async.impl.buffers.ring_buffer.call(null, 32), 0, buf, false, function() {
      var add_BANG_ = cljs.core.truth_(xform) ? xform.call(null, cljs.core.async.impl.protocols.add_BANG_) : cljs.core.async.impl.protocols.add_BANG_;
      return function(add_BANG_) {
        return function() {
          var G__19007 = null;
          var G__19007__1 = function(buf__$1) {
            try {
              return add_BANG_.call(null, buf__$1);
            } catch (e19005) {
              var t = e19005;
              return cljs.core.async.impl.channels.handle.call(null, buf__$1, exh, t);
            }
          };
          var G__19007__2 = function(buf__$1, val) {
            try {
              return add_BANG_.call(null, buf__$1, val);
            } catch (e19006) {
              var t = e19006;
              return cljs.core.async.impl.channels.handle.call(null, buf__$1, exh, t);
            }
          };
          G__19007 = function(buf__$1, val) {
            switch(arguments.length) {
              case 1:
                return G__19007__1.call(this, buf__$1);
              case 2:
                return G__19007__2.call(this, buf__$1, val);
            }
            throw new Error("Invalid arity: " + arguments.length);
          };
          G__19007.cljs$core$IFn$_invoke$arity$1 = G__19007__1;
          G__19007.cljs$core$IFn$_invoke$arity$2 = G__19007__2;
          return G__19007;
        }();
      }(add_BANG_);
    }());
  };
  chan = function(buf, xform, exh) {
    switch(arguments.length) {
      case 1:
        return chan__1.call(this, buf);
      case 2:
        return chan__2.call(this, buf, xform);
      case 3:
        return chan__3.call(this, buf, xform, exh);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chan.cljs$core$IFn$_invoke$arity$1 = chan__1;
  chan.cljs$core$IFn$_invoke$arity$2 = chan__2;
  chan.cljs$core$IFn$_invoke$arity$3 = chan__3;
  return chan;
}();
goog.provide("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.ioc_helpers.FN_IDX = 0;
cljs.core.async.impl.ioc_helpers.STATE_IDX = 1;
cljs.core.async.impl.ioc_helpers.VALUE_IDX = 2;
cljs.core.async.impl.ioc_helpers.BINDINGS_IDX = 3;
cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES = 4;
cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION = 5;
cljs.core.async.impl.ioc_helpers.USER_START_IDX = 6;
cljs.core.async.impl.ioc_helpers.aset_object = function aset_object(arr, idx, o) {
  return arr[idx][o];
};
cljs.core.async.impl.ioc_helpers.aget_object = function aget_object(arr, idx) {
  return arr[idx];
};
cljs.core.async.impl.ioc_helpers.finished_QMARK_ = function finished_QMARK_(state_array) {
  return cljs.core.keyword_identical_QMARK_.call(null, state_array[cljs.core.async.impl.ioc_helpers.STATE_IDX], new cljs.core.Keyword(null, "finished", "finished", -1018867731));
};
cljs.core.async.impl.ioc_helpers.fn_handler = function fn_handler(f) {
  if (typeof cljs.core.async.impl.ioc_helpers.t18916 !== "undefined") {
  } else {
    cljs.core.async.impl.ioc_helpers.t18916 = function(f, fn_handler, meta18917) {
      this.f = f;
      this.fn_handler = fn_handler;
      this.meta18917 = meta18917;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.impl.ioc_helpers.t18916.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.impl.ioc_helpers.t18916.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return true;
    };
    cljs.core.async.impl.ioc_helpers.t18916.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.f;
    };
    cljs.core.async.impl.ioc_helpers.t18916.prototype.cljs$core$IMeta$_meta$arity$1 = function(_18918) {
      var self__ = this;
      var _18918__$1 = this;
      return self__.meta18917;
    };
    cljs.core.async.impl.ioc_helpers.t18916.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_18918, meta18917__$1) {
      var self__ = this;
      var _18918__$1 = this;
      return new cljs.core.async.impl.ioc_helpers.t18916(self__.f, self__.fn_handler, meta18917__$1);
    };
    cljs.core.async.impl.ioc_helpers.t18916.cljs$lang$type = true;
    cljs.core.async.impl.ioc_helpers.t18916.cljs$lang$ctorStr = "cljs.core.async.impl.ioc-helpers/t18916";
    cljs.core.async.impl.ioc_helpers.t18916.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
      return cljs.core._write.call(null, writer__4513__auto__, "cljs.core.async.impl.ioc-helpers/t18916");
    };
    cljs.core.async.impl.ioc_helpers.__GT_t18916 = function __GT_t18916(f__$1, fn_handler__$1, meta18917) {
      return new cljs.core.async.impl.ioc_helpers.t18916(f__$1, fn_handler__$1, meta18917);
    };
  }
  return new cljs.core.async.impl.ioc_helpers.t18916(f, fn_handler, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.impl.ioc_helpers.run_state_machine = function run_state_machine(state) {
  return cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.FN_IDX).call(null, state);
};
cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped = function run_state_machine_wrapped(state) {
  try {
    return cljs.core.async.impl.ioc_helpers.run_state_machine.call(null, state);
  } catch (e18920) {
    if (e18920 instanceof Object) {
      var ex = e18920;
      cljs.core.async.impl.protocols.close_BANG_.call(null, cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.USER_START_IDX));
      throw ex;
    } else {
      throw e18920;
    }
  }
};
cljs.core.async.impl.ioc_helpers.take_BANG_ = function take_BANG_(state, blk, c) {
  var temp__4124__auto__ = cljs.core.async.impl.protocols.take_BANG_.call(null, c, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(x) {
    var statearr_18923_18925 = state;
    statearr_18923_18925[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = x;
    statearr_18923_18925[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
  }));
  if (cljs.core.truth_(temp__4124__auto__)) {
    var cb = temp__4124__auto__;
    var statearr_18924_18926 = state;
    statearr_18924_18926[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    statearr_18924_18926[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
  } else {
    return null;
  }
};
cljs.core.async.impl.ioc_helpers.put_BANG_ = function put_BANG_(state, blk, c, val) {
  var temp__4124__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, c, val, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(ret_val) {
    var statearr_18929_18931 = state;
    statearr_18929_18931[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = ret_val;
    statearr_18929_18931[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
  }));
  if (cljs.core.truth_(temp__4124__auto__)) {
    var cb = temp__4124__auto__;
    var statearr_18930_18932 = state;
    statearr_18930_18932[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
    statearr_18930_18932[cljs.core.async.impl.ioc_helpers.STATE_IDX] = blk;
    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
  } else {
    return null;
  }
};
cljs.core.async.impl.ioc_helpers.return_chan = function return_chan(state, value) {
  var c = state[cljs.core.async.impl.ioc_helpers.USER_START_IDX];
  if (value == null) {
  } else {
    cljs.core.async.impl.protocols.put_BANG_.call(null, c, value, cljs.core.async.impl.ioc_helpers.fn_handler.call(null, function(c) {
      return function() {
        return null;
      };
    }(c)));
  }
  cljs.core.async.impl.protocols.close_BANG_.call(null, c);
  return c;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame = function(catch_block, catch_exception, finally_block, continue_block, prev, __meta, __extmap, __hash) {
  this.catch_block = catch_block;
  this.catch_exception = catch_exception;
  this.finally_block = finally_block;
  this.continue_block = continue_block;
  this.prev = prev;
  this.__meta = __meta;
  this.__extmap = __extmap;
  this.__hash = __hash;
  this.cljs$lang$protocol_mask$partition0$ = 2229667594;
  this.cljs$lang$protocol_mask$partition1$ = 8192;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ILookup$_lookup$arity$2 = function(this__4528__auto__, k__4529__auto__) {
  var self__ = this;
  var this__4528__auto____$1 = this;
  return cljs.core._lookup.call(null, this__4528__auto____$1, k__4529__auto__, null);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ILookup$_lookup$arity$3 = function(this__4530__auto__, k18934, else__4531__auto__) {
  var self__ = this;
  var this__4530__auto____$1 = this;
  var G__18936 = k18934 instanceof cljs.core.Keyword ? k18934.fqn : null;
  switch(G__18936) {
    case "prev":
      return self__.prev;
      break;
    case "continue-block":
      return self__.continue_block;
      break;
    case "finally-block":
      return self__.finally_block;
      break;
    case "catch-exception":
      return self__.catch_exception;
      break;
    case "catch-block":
      return self__.catch_block;
      break;
    default:
      return cljs.core.get.call(null, self__.__extmap, k18934, else__4531__auto__);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(this__4542__auto__, writer__4543__auto__, opts__4544__auto__) {
  var self__ = this;
  var this__4542__auto____$1 = this;
  var pr_pair__4545__auto__ = function(this__4542__auto____$1) {
    return function(keyval__4546__auto__) {
      return cljs.core.pr_sequential_writer.call(null, writer__4543__auto__, cljs.core.pr_writer, "", " ", "", opts__4544__auto__, keyval__4546__auto__);
    };
  }(this__4542__auto____$1);
  return cljs.core.pr_sequential_writer.call(null, writer__4543__auto__, pr_pair__4545__auto__, "#cljs.core.async.impl.ioc-helpers.ExceptionFrame{", ", ", "}", opts__4544__auto__, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), self__.catch_block], null), new cljs.core.PersistentVector(null, 
  2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), self__.catch_exception], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), self__.finally_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), 
  self__.continue_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prev", "prev", -1597069226), self__.prev], null)], null), self__.__extmap));
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IMeta$_meta$arity$1 = function(this__4526__auto__) {
  var self__ = this;
  var this__4526__auto____$1 = this;
  return self__.__meta;
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICloneable$_clone$arity$1 = function(this__4522__auto__) {
  var self__ = this;
  var this__4522__auto____$1 = this;
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, self__.__hash);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICounted$_count$arity$1 = function(this__4532__auto__) {
  var self__ = this;
  var this__4532__auto____$1 = this;
  return 5 + cljs.core.count.call(null, self__.__extmap);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IHash$_hash$arity$1 = function(this__4523__auto__) {
  var self__ = this;
  var this__4523__auto____$1 = this;
  var h__4346__auto__ = self__.__hash;
  if (!(h__4346__auto__ == null)) {
    return h__4346__auto__;
  } else {
    var h__4346__auto____$1 = cljs.core.hash_imap.call(null, this__4523__auto____$1);
    self__.__hash = h__4346__auto____$1;
    return h__4346__auto____$1;
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IEquiv$_equiv$arity$2 = function(this__4524__auto__, other__4525__auto__) {
  var self__ = this;
  var this__4524__auto____$1 = this;
  if (cljs.core.truth_(function() {
    var and__3913__auto__ = other__4525__auto__;
    if (cljs.core.truth_(and__3913__auto__)) {
      return this__4524__auto____$1.constructor === other__4525__auto__.constructor && cljs.core.equiv_map.call(null, this__4524__auto____$1, other__4525__auto__);
    } else {
      return and__3913__auto__;
    }
  }())) {
    return true;
  } else {
    return false;
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IMap$_dissoc$arity$2 = function(this__4537__auto__, k__4538__auto__) {
  var self__ = this;
  var this__4537__auto____$1 = this;
  if (cljs.core.contains_QMARK_.call(null, new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), null, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), null, new cljs.core.Keyword(null, "prev", "prev", -1597069226), null, new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), 
  null], null), null), k__4538__auto__)) {
    return cljs.core.dissoc.call(null, cljs.core.with_meta.call(null, cljs.core.into.call(null, cljs.core.PersistentArrayMap.EMPTY, this__4537__auto____$1), self__.__meta), k__4538__auto__);
  } else {
    return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, cljs.core.not_empty.call(null, cljs.core.dissoc.call(null, self__.__extmap, k__4538__auto__)), null);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IAssociative$_assoc$arity$3 = function(this__4535__auto__, k__4536__auto__, G__18933) {
  var self__ = this;
  var this__4535__auto____$1 = this;
  var pred__18937 = cljs.core.keyword_identical_QMARK_;
  var expr__18938 = k__4536__auto__;
  if (cljs.core.truth_(pred__18937.call(null, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), expr__18938))) {
    return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(G__18933, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
  } else {
    if (cljs.core.truth_(pred__18937.call(null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), expr__18938))) {
      return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, G__18933, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
    } else {
      if (cljs.core.truth_(pred__18937.call(null, new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), expr__18938))) {
        return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, G__18933, self__.continue_block, self__.prev, self__.__meta, self__.__extmap, null);
      } else {
        if (cljs.core.truth_(pred__18937.call(null, new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), expr__18938))) {
          return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, G__18933, self__.prev, self__.__meta, self__.__extmap, null);
        } else {
          if (cljs.core.truth_(pred__18937.call(null, new cljs.core.Keyword(null, "prev", "prev", -1597069226), expr__18938))) {
            return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, G__18933, self__.__meta, self__.__extmap, null);
          } else {
            return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, self__.__meta, cljs.core.assoc.call(null, self__.__extmap, k__4536__auto__, G__18933), null);
          }
        }
      }
    }
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ISeqable$_seq$arity$1 = function(this__4540__auto__) {
  var self__ = this;
  var this__4540__auto____$1 = this;
  return cljs.core.seq.call(null, cljs.core.concat.call(null, new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), self__.catch_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), self__.catch_exception], 
  null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), self__.finally_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), self__.continue_block], null), new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "prev", 
  "prev", -1597069226), self__.prev], null)], null), self__.__extmap));
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(this__4527__auto__, G__18933) {
  var self__ = this;
  var this__4527__auto____$1 = this;
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(self__.catch_block, self__.catch_exception, self__.finally_block, self__.continue_block, self__.prev, G__18933, self__.__extmap, self__.__hash);
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.prototype.cljs$core$ICollection$_conj$arity$2 = function(this__4533__auto__, entry__4534__auto__) {
  var self__ = this;
  var this__4533__auto____$1 = this;
  if (cljs.core.vector_QMARK_.call(null, entry__4534__auto__)) {
    return cljs.core._assoc.call(null, this__4533__auto____$1, cljs.core._nth.call(null, entry__4534__auto__, 0), cljs.core._nth.call(null, entry__4534__auto__, 1));
  } else {
    return cljs.core.reduce.call(null, cljs.core._conj, this__4533__auto____$1, entry__4534__auto__);
  }
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$type = true;
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$ctorPrSeq = function(this__4562__auto__) {
  return cljs.core._conj.call(null, cljs.core.List.EMPTY, "cljs.core.async.impl.ioc-helpers/ExceptionFrame");
};
cljs.core.async.impl.ioc_helpers.ExceptionFrame.cljs$lang$ctorPrWriter = function(this__4562__auto__, writer__4563__auto__) {
  return cljs.core._write.call(null, writer__4563__auto__, "cljs.core.async.impl.ioc-helpers/ExceptionFrame");
};
cljs.core.async.impl.ioc_helpers.__GT_ExceptionFrame = function __GT_ExceptionFrame(catch_block, catch_exception, finally_block, continue_block, prev) {
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame(catch_block, catch_exception, finally_block, continue_block, prev, null, null, null);
};
cljs.core.async.impl.ioc_helpers.map__GT_ExceptionFrame = function map__GT_ExceptionFrame(G__18935) {
  return new cljs.core.async.impl.ioc_helpers.ExceptionFrame((new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748)).cljs$core$IFn$_invoke$arity$1(G__18935), (new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795)).cljs$core$IFn$_invoke$arity$1(G__18935), (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(G__18935), (new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850)).cljs$core$IFn$_invoke$arity$1(G__18935), 
  (new cljs.core.Keyword(null, "prev", "prev", -1597069226)).cljs$core$IFn$_invoke$arity$1(G__18935), null, cljs.core.dissoc.call(null, G__18935, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850), new cljs.core.Keyword(null, "prev", "prev", -1597069226)), 
  null);
};
cljs.core.async.impl.ioc_helpers.add_exception_frame = function add_exception_frame(state, catch_block, catch_exception, finally_block, continue_block) {
  var statearr_18942 = state;
  statearr_18942[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.async.impl.ioc_helpers.__GT_ExceptionFrame.call(null, catch_block, catch_exception, finally_block, continue_block, cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES));
  return statearr_18942;
};
cljs.core.async.impl.ioc_helpers.process_exception = function process_exception(state) {
  while (true) {
    var exception_frame = cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES);
    var catch_block = (new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748)).cljs$core$IFn$_invoke$arity$1(exception_frame);
    var catch_exception = (new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795)).cljs$core$IFn$_invoke$arity$1(exception_frame);
    var exception = cljs.core.async.impl.ioc_helpers.aget_object.call(null, state, cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION);
    if (cljs.core.truth_(function() {
      var and__3913__auto__ = exception;
      if (cljs.core.truth_(and__3913__auto__)) {
        return cljs.core.not.call(null, exception_frame);
      } else {
        return and__3913__auto__;
      }
    }())) {
      throw exception;
    } else {
      if (cljs.core.truth_(function() {
        var and__3913__auto__ = exception;
        if (cljs.core.truth_(and__3913__auto__)) {
          var and__3913__auto____$1 = catch_block;
          if (cljs.core.truth_(and__3913__auto____$1)) {
            return exception instanceof catch_exception;
          } else {
            return and__3913__auto____$1;
          }
        } else {
          return and__3913__auto__;
        }
      }())) {
        var statearr_18948 = state;
        statearr_18948[cljs.core.async.impl.ioc_helpers.STATE_IDX] = catch_block;
        statearr_18948[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = exception;
        statearr_18948[cljs.core.async.impl.ioc_helpers.CURRENT_EXCEPTION] = null;
        statearr_18948[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "catch-block", "catch-block", 1175212748), null, new cljs.core.Keyword(null, "catch-exception", "catch-exception", -1997306795), null);
        return statearr_18948;
      } else {
        if (cljs.core.truth_(function() {
          var and__3913__auto__ = exception;
          if (cljs.core.truth_(and__3913__auto__)) {
            return cljs.core.not.call(null, catch_block) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame));
          } else {
            return and__3913__auto__;
          }
        }())) {
          var statearr_18949_18953 = state;
          statearr_18949_18953[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = (new cljs.core.Keyword(null, "prev", "prev", -1597069226)).cljs$core$IFn$_invoke$arity$1(exception_frame);
          var G__18954 = state;
          state = G__18954;
          continue;
        } else {
          if (cljs.core.truth_(function() {
            var and__3913__auto__ = exception;
            if (cljs.core.truth_(and__3913__auto__)) {
              var and__3913__auto____$1 = cljs.core.not.call(null, catch_block);
              if (and__3913__auto____$1) {
                return(new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              } else {
                return and__3913__auto____$1;
              }
            } else {
              return and__3913__auto__;
            }
          }())) {
            var statearr_18950 = state;
            statearr_18950[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
            statearr_18950[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), null);
            return statearr_18950;
          } else {
            if (cljs.core.truth_(function() {
              var and__3913__auto__ = cljs.core.not.call(null, exception);
              if (and__3913__auto__) {
                return(new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              } else {
                return and__3913__auto__;
              }
            }())) {
              var statearr_18951 = state;
              statearr_18951[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame);
              statearr_18951[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = cljs.core.assoc.call(null, exception_frame, new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472), null);
              return statearr_18951;
            } else {
              if (cljs.core.not.call(null, exception) && cljs.core.not.call(null, (new cljs.core.Keyword(null, "finally-block", "finally-block", 832982472)).cljs$core$IFn$_invoke$arity$1(exception_frame))) {
                var statearr_18952 = state;
                statearr_18952[cljs.core.async.impl.ioc_helpers.STATE_IDX] = (new cljs.core.Keyword(null, "continue-block", "continue-block", -1852047850)).cljs$core$IFn$_invoke$arity$1(exception_frame);
                statearr_18952[cljs.core.async.impl.ioc_helpers.EXCEPTION_FRAMES] = (new cljs.core.Keyword(null, "prev", "prev", -1597069226)).cljs$core$IFn$_invoke$arity$1(exception_frame);
                return statearr_18952;
              } else {
                throw new Error("No matching clause");
              }
            }
          }
        }
      }
    }
    break;
  }
};
goog.provide("cljs.core.async.impl.timers");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.protocols");
cljs.core.async.impl.timers.MAX_LEVEL = 15;
cljs.core.async.impl.timers.P = 1 / 2;
cljs.core.async.impl.timers.random_level = function() {
  var random_level = null;
  var random_level__0 = function() {
    return random_level.call(null, 0);
  };
  var random_level__1 = function(level) {
    while (true) {
      if (Math.random() < cljs.core.async.impl.timers.P && level < cljs.core.async.impl.timers.MAX_LEVEL) {
        var G__18887 = level + 1;
        level = G__18887;
        continue;
      } else {
        return level;
      }
      break;
    }
  };
  random_level = function(level) {
    switch(arguments.length) {
      case 0:
        return random_level__0.call(this);
      case 1:
        return random_level__1.call(this, level);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  random_level.cljs$core$IFn$_invoke$arity$0 = random_level__0;
  random_level.cljs$core$IFn$_invoke$arity$1 = random_level__1;
  return random_level;
}();
cljs.core.async.impl.timers.SkipListNode = function(key, val, forward) {
  this.key = key;
  this.val = val;
  this.forward = forward;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256;
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "[", " ", "]", opts, coll__$1);
};
cljs.core.async.impl.timers.SkipListNode.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  return cljs.core._conj.call(null, cljs.core._conj.call(null, cljs.core.List.EMPTY, self__.val), self__.key);
};
cljs.core.async.impl.timers.SkipListNode.cljs$lang$type = true;
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipListNode";
cljs.core.async.impl.timers.SkipListNode.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write.call(null, writer__4513__auto__, "cljs.core.async.impl.timers/SkipListNode");
};
cljs.core.async.impl.timers.__GT_SkipListNode = function __GT_SkipListNode(key, val, forward) {
  return new cljs.core.async.impl.timers.SkipListNode(key, val, forward);
};
cljs.core.async.impl.timers.skip_list_node = function() {
  var skip_list_node = null;
  var skip_list_node__1 = function(level) {
    return skip_list_node.call(null, null, null, level);
  };
  var skip_list_node__3 = function(k, v, level) {
    var arr = new Array(level + 1);
    var i_18888 = 0;
    while (true) {
      if (i_18888 < arr.length) {
        arr[i_18888] = null;
        var G__18889 = i_18888 + 1;
        i_18888 = G__18889;
        continue;
      } else {
      }
      break;
    }
    return new cljs.core.async.impl.timers.SkipListNode(k, v, arr);
  };
  skip_list_node = function(k, v, level) {
    switch(arguments.length) {
      case 1:
        return skip_list_node__1.call(this, k);
      case 3:
        return skip_list_node__3.call(this, k, v, level);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  skip_list_node.cljs$core$IFn$_invoke$arity$1 = skip_list_node__1;
  skip_list_node.cljs$core$IFn$_invoke$arity$3 = skip_list_node__3;
  return skip_list_node;
}();
cljs.core.async.impl.timers.least_greater_node = function() {
  var least_greater_node = null;
  var least_greater_node__3 = function(x, k, level) {
    return least_greater_node.call(null, x, k, level, null);
  };
  var least_greater_node__4 = function(x, k, level, update) {
    while (true) {
      if (!(level < 0)) {
        var x__$1 = function() {
          var x__$1 = x;
          while (true) {
            var temp__4124__auto__ = x__$1.forward[level];
            if (cljs.core.truth_(temp__4124__auto__)) {
              var x_SINGLEQUOTE_ = temp__4124__auto__;
              if (x_SINGLEQUOTE_.key < k) {
                var G__18890 = x_SINGLEQUOTE_;
                x__$1 = G__18890;
                continue;
              } else {
                return x__$1;
              }
            } else {
              return x__$1;
            }
            break;
          }
        }();
        if (update == null) {
        } else {
          update[level] = x__$1;
        }
        var G__18891 = x__$1;
        var G__18892 = k;
        var G__18893 = level - 1;
        var G__18894 = update;
        x = G__18891;
        k = G__18892;
        level = G__18893;
        update = G__18894;
        continue;
      } else {
        return x;
      }
      break;
    }
  };
  least_greater_node = function(x, k, level, update) {
    switch(arguments.length) {
      case 3:
        return least_greater_node__3.call(this, x, k, level);
      case 4:
        return least_greater_node__4.call(this, x, k, level, update);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  least_greater_node.cljs$core$IFn$_invoke$arity$3 = least_greater_node__3;
  least_greater_node.cljs$core$IFn$_invoke$arity$4 = least_greater_node__4;
  return least_greater_node;
}();
cljs.core.async.impl.timers.SkipList = function(header, level) {
  this.header = header;
  this.level = level;
  this.cljs$lang$protocol_mask$partition1$ = 0;
  this.cljs$lang$protocol_mask$partition0$ = 2155872256;
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$IPrintWithWriter$_pr_writer$arity$3 = function(coll, writer, opts) {
  var self__ = this;
  var coll__$1 = this;
  var pr_pair = function(coll__$1) {
    return function(keyval) {
      return cljs.core.pr_sequential_writer.call(null, writer, cljs.core.pr_writer, "", " ", "", opts, keyval);
    };
  }(coll__$1);
  return cljs.core.pr_sequential_writer.call(null, writer, pr_pair, "{", ", ", "}", opts, coll__$1);
};
cljs.core.async.impl.timers.SkipList.prototype.cljs$core$ISeqable$_seq$arity$1 = function(coll) {
  var self__ = this;
  var coll__$1 = this;
  var iter = function(coll__$1) {
    return function iter(node) {
      return new cljs.core.LazySeq(null, function(coll__$1) {
        return function() {
          if (node == null) {
            return null;
          } else {
            return cljs.core.cons.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [node.key, node.val], null), iter.call(null, node.forward[0]));
          }
        };
      }(coll__$1), null, null);
    };
  }(coll__$1);
  return iter.call(null, self__.header.forward[0]);
};
cljs.core.async.impl.timers.SkipList.prototype.put = function(k, v) {
  var self__ = this;
  var coll = this;
  var update = new Array(cljs.core.async.impl.timers.MAX_LEVEL);
  var x = cljs.core.async.impl.timers.least_greater_node.call(null, self__.header, k, self__.level, update);
  var x__$1 = x.forward[0];
  if (!(x__$1 == null) && x__$1.key === k) {
    return x__$1.val = v;
  } else {
    var new_level = cljs.core.async.impl.timers.random_level.call(null);
    if (new_level > self__.level) {
      var i_18895 = self__.level + 1;
      while (true) {
        if (i_18895 <= new_level + 1) {
          update[i_18895] = self__.header;
          var G__18896 = i_18895 + 1;
          i_18895 = G__18896;
          continue;
        } else {
        }
        break;
      }
      self__.level = new_level;
    } else {
    }
    var x__$2 = cljs.core.async.impl.timers.skip_list_node.call(null, k, v, new Array(new_level));
    var i = 0;
    while (true) {
      if (i <= self__.level) {
        var links = update[i].forward;
        x__$2.forward[i] = links[i];
        return links[i] = x__$2;
      } else {
        return null;
      }
      break;
    }
  }
};
cljs.core.async.impl.timers.SkipList.prototype.remove = function(k) {
  var self__ = this;
  var coll = this;
  var update = new Array(cljs.core.async.impl.timers.MAX_LEVEL);
  var x = cljs.core.async.impl.timers.least_greater_node.call(null, self__.header, k, self__.level, update);
  var x__$1 = x.forward[0];
  if (!(x__$1 == null) && x__$1.key === k) {
    var i_18897 = 0;
    while (true) {
      if (i_18897 <= self__.level) {
        var links_18898 = update[i_18897].forward;
        if (links_18898[i_18897] === x__$1) {
          links_18898[i_18897] = x__$1.forward[i_18897];
          var G__18899 = i_18897 + 1;
          i_18897 = G__18899;
          continue;
        } else {
          var G__18900 = i_18897 + 1;
          i_18897 = G__18900;
          continue;
        }
      } else {
      }
      break;
    }
    while (true) {
      if (self__.level > 0 && self__.header.forward[self__.level] == null) {
        self__.level = self__.level - 1;
        continue;
      } else {
        return null;
      }
      break;
    }
  } else {
    return null;
  }
};
cljs.core.async.impl.timers.SkipList.prototype.ceilingEntry = function(k) {
  var self__ = this;
  var coll = this;
  var x = self__.header;
  var level__$1 = self__.level;
  while (true) {
    if (!(level__$1 < 0)) {
      var nx = function() {
        var x__$1 = x;
        while (true) {
          var x_SINGLEQUOTE_ = x__$1.forward[level__$1];
          if (x_SINGLEQUOTE_ == null) {
            return null;
          } else {
            if (x_SINGLEQUOTE_.key >= k) {
              return x_SINGLEQUOTE_;
            } else {
              var G__18901 = x_SINGLEQUOTE_;
              x__$1 = G__18901;
              continue;
            }
          }
          break;
        }
      }();
      if (!(nx == null)) {
        var G__18902 = nx;
        var G__18903 = level__$1 - 1;
        x = G__18902;
        level__$1 = G__18903;
        continue;
      } else {
        var G__18904 = x;
        var G__18905 = level__$1 - 1;
        x = G__18904;
        level__$1 = G__18905;
        continue;
      }
    } else {
      if (x === self__.header) {
        return null;
      } else {
        return x;
      }
    }
    break;
  }
};
cljs.core.async.impl.timers.SkipList.prototype.floorEntry = function(k) {
  var self__ = this;
  var coll = this;
  var x = self__.header;
  var level__$1 = self__.level;
  while (true) {
    if (!(level__$1 < 0)) {
      var nx = function() {
        var x__$1 = x;
        while (true) {
          var x_SINGLEQUOTE_ = x__$1.forward[level__$1];
          if (!(x_SINGLEQUOTE_ == null)) {
            if (x_SINGLEQUOTE_.key > k) {
              return x__$1;
            } else {
              var G__18906 = x_SINGLEQUOTE_;
              x__$1 = G__18906;
              continue;
            }
          } else {
            if (level__$1 === 0) {
              return x__$1;
            } else {
              return null;
            }
          }
          break;
        }
      }();
      if (cljs.core.truth_(nx)) {
        var G__18907 = nx;
        var G__18908 = level__$1 - 1;
        x = G__18907;
        level__$1 = G__18908;
        continue;
      } else {
        var G__18909 = x;
        var G__18910 = level__$1 - 1;
        x = G__18909;
        level__$1 = G__18910;
        continue;
      }
    } else {
      if (x === self__.header) {
        return null;
      } else {
        return x;
      }
    }
    break;
  }
};
cljs.core.async.impl.timers.SkipList.cljs$lang$type = true;
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorStr = "cljs.core.async.impl.timers/SkipList";
cljs.core.async.impl.timers.SkipList.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
  return cljs.core._write.call(null, writer__4513__auto__, "cljs.core.async.impl.timers/SkipList");
};
cljs.core.async.impl.timers.__GT_SkipList = function __GT_SkipList(header, level) {
  return new cljs.core.async.impl.timers.SkipList(header, level);
};
cljs.core.async.impl.timers.skip_list = function skip_list() {
  return new cljs.core.async.impl.timers.SkipList(cljs.core.async.impl.timers.skip_list_node.call(null, 0), 0);
};
cljs.core.async.impl.timers.timeouts_map = cljs.core.async.impl.timers.skip_list.call(null);
cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS = 10;
cljs.core.async.impl.timers.timeout = function timeout(msecs) {
  var timeout__$1 = (new Date).valueOf() + msecs;
  var me = cljs.core.async.impl.timers.timeouts_map.ceilingEntry(timeout__$1);
  var or__3925__auto__ = cljs.core.truth_(function() {
    var and__3913__auto__ = me;
    if (cljs.core.truth_(and__3913__auto__)) {
      return me.key < timeout__$1 + cljs.core.async.impl.timers.TIMEOUT_RESOLUTION_MS;
    } else {
      return and__3913__auto__;
    }
  }()) ? me.val : null;
  if (cljs.core.truth_(or__3925__auto__)) {
    return or__3925__auto__;
  } else {
    var timeout_channel = cljs.core.async.impl.channels.chan.call(null, null);
    cljs.core.async.impl.timers.timeouts_map.put(timeout__$1, timeout_channel);
    cljs.core.async.impl.dispatch.queue_delay.call(null, function(timeout_channel, or__3925__auto__, timeout__$1, me) {
      return function() {
        cljs.core.async.impl.timers.timeouts_map.remove(timeout__$1);
        return cljs.core.async.impl.protocols.close_BANG_.call(null, timeout_channel);
      };
    }(timeout_channel, or__3925__auto__, timeout__$1, me), msecs);
    return timeout_channel;
  }
};
goog.provide("cljs.core.async");
goog.require("cljs.core");
goog.require("cljs.core.async.impl.channels");
goog.require("cljs.core.async.impl.dispatch");
goog.require("cljs.core.async.impl.ioc_helpers");
goog.require("cljs.core.async.impl.protocols");
goog.require("cljs.core.async.impl.buffers");
goog.require("cljs.core.async.impl.timers");
cljs.core.async.fn_handler = function fn_handler(f) {
  if (typeof cljs.core.async.t15798 !== "undefined") {
  } else {
    cljs.core.async.t15798 = function(f, fn_handler, meta15799) {
      this.f = f;
      this.fn_handler = fn_handler;
      this.meta15799 = meta15799;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t15798.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t15798.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return true;
    };
    cljs.core.async.t15798.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return self__.f;
    };
    cljs.core.async.t15798.prototype.cljs$core$IMeta$_meta$arity$1 = function(_15800) {
      var self__ = this;
      var _15800__$1 = this;
      return self__.meta15799;
    };
    cljs.core.async.t15798.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_15800, meta15799__$1) {
      var self__ = this;
      var _15800__$1 = this;
      return new cljs.core.async.t15798(self__.f, self__.fn_handler, meta15799__$1);
    };
    cljs.core.async.t15798.cljs$lang$type = true;
    cljs.core.async.t15798.cljs$lang$ctorStr = "cljs.core.async/t15798";
    cljs.core.async.t15798.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
      return cljs.core._write.call(null, writer__4513__auto__, "cljs.core.async/t15798");
    };
    cljs.core.async.__GT_t15798 = function __GT_t15798(f__$1, fn_handler__$1, meta15799) {
      return new cljs.core.async.t15798(f__$1, fn_handler__$1, meta15799);
    };
  }
  return new cljs.core.async.t15798(f, fn_handler, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.buffer = function buffer(n) {
  return cljs.core.async.impl.buffers.fixed_buffer.call(null, n);
};
cljs.core.async.dropping_buffer = function dropping_buffer(n) {
  return cljs.core.async.impl.buffers.dropping_buffer.call(null, n);
};
cljs.core.async.sliding_buffer = function sliding_buffer(n) {
  return cljs.core.async.impl.buffers.sliding_buffer.call(null, n);
};
cljs.core.async.unblocking_buffer_QMARK_ = function unblocking_buffer_QMARK_(buff) {
  var G__15802 = buff;
  if (G__15802) {
    var bit__4606__auto__ = null;
    if (cljs.core.truth_(function() {
      var or__3925__auto__ = bit__4606__auto__;
      if (cljs.core.truth_(or__3925__auto__)) {
        return or__3925__auto__;
      } else {
        return G__15802.cljs$core$async$impl$protocols$UnblockingBuffer$;
      }
    }())) {
      return true;
    } else {
      if (!G__15802.cljs$lang$protocol_mask$partition$) {
        return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.async.impl.protocols.UnblockingBuffer, G__15802);
      } else {
        return false;
      }
    }
  } else {
    return cljs.core.native_satisfies_QMARK_.call(null, cljs.core.async.impl.protocols.UnblockingBuffer, G__15802);
  }
};
cljs.core.async.chan = function() {
  var chan = null;
  var chan__0 = function() {
    return chan.call(null, null);
  };
  var chan__1 = function(buf_or_n) {
    return chan.call(null, buf_or_n, null, null);
  };
  var chan__2 = function(buf_or_n, xform) {
    return chan.call(null, buf_or_n, xform, null);
  };
  var chan__3 = function(buf_or_n, xform, ex_handler) {
    var buf_or_n__$1 = cljs.core._EQ_.call(null, buf_or_n, 0) ? null : buf_or_n;
    if (cljs.core.truth_(xform)) {
      if (cljs.core.truth_(buf_or_n__$1)) {
      } else {
        throw new Error([cljs.core.str("Assert failed: "), cljs.core.str("buffer must be supplied when transducer is"), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, new cljs.core.Symbol(null, "buf-or-n", "buf-or-n", -1646815050, null)))].join(""));
      }
    } else {
    }
    return cljs.core.async.impl.channels.chan.call(null, typeof buf_or_n__$1 === "number" ? cljs.core.async.buffer.call(null, buf_or_n__$1) : buf_or_n__$1, xform, ex_handler);
  };
  chan = function(buf_or_n, xform, ex_handler) {
    switch(arguments.length) {
      case 0:
        return chan__0.call(this);
      case 1:
        return chan__1.call(this, buf_or_n);
      case 2:
        return chan__2.call(this, buf_or_n, xform);
      case 3:
        return chan__3.call(this, buf_or_n, xform, ex_handler);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  chan.cljs$core$IFn$_invoke$arity$0 = chan__0;
  chan.cljs$core$IFn$_invoke$arity$1 = chan__1;
  chan.cljs$core$IFn$_invoke$arity$2 = chan__2;
  chan.cljs$core$IFn$_invoke$arity$3 = chan__3;
  return chan;
}();
cljs.core.async.timeout = function timeout(msecs) {
  return cljs.core.async.impl.timers.timeout.call(null, msecs);
};
cljs.core.async._LT__BANG_ = function _LT__BANG_(port) {
  throw new Error("\x3c! used not in (go ...) block");
};
cljs.core.async.take_BANG_ = function() {
  var take_BANG_ = null;
  var take_BANG___2 = function(port, fn1) {
    return take_BANG_.call(null, port, fn1, true);
  };
  var take_BANG___3 = function(port, fn1, on_caller_QMARK_) {
    var ret = cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.fn_handler.call(null, fn1));
    if (cljs.core.truth_(ret)) {
      var val_15803 = cljs.core.deref.call(null, ret);
      if (cljs.core.truth_(on_caller_QMARK_)) {
        fn1.call(null, val_15803);
      } else {
        cljs.core.async.impl.dispatch.run.call(null, function(val_15803, ret) {
          return function() {
            return fn1.call(null, val_15803);
          };
        }(val_15803, ret));
      }
    } else {
    }
    return null;
  };
  take_BANG_ = function(port, fn1, on_caller_QMARK_) {
    switch(arguments.length) {
      case 2:
        return take_BANG___2.call(this, port, fn1);
      case 3:
        return take_BANG___3.call(this, port, fn1, on_caller_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take_BANG_.cljs$core$IFn$_invoke$arity$2 = take_BANG___2;
  take_BANG_.cljs$core$IFn$_invoke$arity$3 = take_BANG___3;
  return take_BANG_;
}();
cljs.core.async.nop = function nop(_) {
  return null;
};
cljs.core.async.fhnop = cljs.core.async.fn_handler.call(null, cljs.core.async.nop);
cljs.core.async._GT__BANG_ = function _GT__BANG_(port, val) {
  throw new Error("\x3e! used not in (go ...) block");
};
cljs.core.async.put_BANG_ = function() {
  var put_BANG_ = null;
  var put_BANG___2 = function(port, val) {
    var temp__4124__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, port, val, cljs.core.async.fhnop);
    if (cljs.core.truth_(temp__4124__auto__)) {
      var ret = temp__4124__auto__;
      return cljs.core.deref.call(null, ret);
    } else {
      return true;
    }
  };
  var put_BANG___3 = function(port, val, fn1) {
    return put_BANG_.call(null, port, val, fn1, true);
  };
  var put_BANG___4 = function(port, val, fn1, on_caller_QMARK_) {
    var temp__4124__auto__ = cljs.core.async.impl.protocols.put_BANG_.call(null, port, val, cljs.core.async.fn_handler.call(null, fn1));
    if (cljs.core.truth_(temp__4124__auto__)) {
      var retb = temp__4124__auto__;
      var ret = cljs.core.deref.call(null, retb);
      if (cljs.core.truth_(on_caller_QMARK_)) {
        fn1.call(null, ret);
      } else {
        cljs.core.async.impl.dispatch.run.call(null, function(ret, retb, temp__4124__auto__) {
          return function() {
            return fn1.call(null, ret);
          };
        }(ret, retb, temp__4124__auto__));
      }
      return ret;
    } else {
      return true;
    }
  };
  put_BANG_ = function(port, val, fn1, on_caller_QMARK_) {
    switch(arguments.length) {
      case 2:
        return put_BANG___2.call(this, port, val);
      case 3:
        return put_BANG___3.call(this, port, val, fn1);
      case 4:
        return put_BANG___4.call(this, port, val, fn1, on_caller_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  put_BANG_.cljs$core$IFn$_invoke$arity$2 = put_BANG___2;
  put_BANG_.cljs$core$IFn$_invoke$arity$3 = put_BANG___3;
  put_BANG_.cljs$core$IFn$_invoke$arity$4 = put_BANG___4;
  return put_BANG_;
}();
cljs.core.async.close_BANG_ = function close_BANG_(port) {
  return cljs.core.async.impl.protocols.close_BANG_.call(null, port);
};
cljs.core.async.random_array = function random_array(n) {
  var a = new Array(n);
  var n__4812__auto___15804 = n;
  var x_15805 = 0;
  while (true) {
    if (x_15805 < n__4812__auto___15804) {
      a[x_15805] = 0;
      var G__15806 = x_15805 + 1;
      x_15805 = G__15806;
      continue;
    } else {
    }
    break;
  }
  var i = 1;
  while (true) {
    if (cljs.core._EQ_.call(null, i, n)) {
      return a;
    } else {
      var j = cljs.core.rand_int.call(null, i);
      a[i] = a[j];
      a[j] = i;
      var G__15807 = i + 1;
      i = G__15807;
      continue;
    }
    break;
  }
};
cljs.core.async.alt_flag = function alt_flag() {
  var flag = cljs.core.atom.call(null, true);
  if (typeof cljs.core.async.t15811 !== "undefined") {
  } else {
    cljs.core.async.t15811 = function(flag, alt_flag, meta15812) {
      this.flag = flag;
      this.alt_flag = alt_flag;
      this.meta15812 = meta15812;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t15811.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t15811.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(flag) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        return cljs.core.deref.call(null, self__.flag);
      };
    }(flag);
    cljs.core.async.t15811.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(flag) {
      return function(_) {
        var self__ = this;
        var ___$1 = this;
        cljs.core.reset_BANG_.call(null, self__.flag, null);
        return true;
      };
    }(flag);
    cljs.core.async.t15811.prototype.cljs$core$IMeta$_meta$arity$1 = function(flag) {
      return function(_15813) {
        var self__ = this;
        var _15813__$1 = this;
        return self__.meta15812;
      };
    }(flag);
    cljs.core.async.t15811.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(flag) {
      return function(_15813, meta15812__$1) {
        var self__ = this;
        var _15813__$1 = this;
        return new cljs.core.async.t15811(self__.flag, self__.alt_flag, meta15812__$1);
      };
    }(flag);
    cljs.core.async.t15811.cljs$lang$type = true;
    cljs.core.async.t15811.cljs$lang$ctorStr = "cljs.core.async/t15811";
    cljs.core.async.t15811.cljs$lang$ctorPrWriter = function(flag) {
      return function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
        return cljs.core._write.call(null, writer__4513__auto__, "cljs.core.async/t15811");
      };
    }(flag);
    cljs.core.async.__GT_t15811 = function(flag) {
      return function __GT_t15811(flag__$1, alt_flag__$1, meta15812) {
        return new cljs.core.async.t15811(flag__$1, alt_flag__$1, meta15812);
      };
    }(flag);
  }
  return new cljs.core.async.t15811(flag, alt_flag, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.alt_handler = function alt_handler(flag, cb) {
  if (typeof cljs.core.async.t15817 !== "undefined") {
  } else {
    cljs.core.async.t15817 = function(cb, flag, alt_handler, meta15818) {
      this.cb = cb;
      this.flag = flag;
      this.alt_handler = alt_handler;
      this.meta15818 = meta15818;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t15817.prototype.cljs$core$async$impl$protocols$Handler$ = true;
    cljs.core.async.t15817.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.active_QMARK_.call(null, self__.flag);
    };
    cljs.core.async.t15817.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      cljs.core.async.impl.protocols.commit.call(null, self__.flag);
      return self__.cb;
    };
    cljs.core.async.t15817.prototype.cljs$core$IMeta$_meta$arity$1 = function(_15819) {
      var self__ = this;
      var _15819__$1 = this;
      return self__.meta15818;
    };
    cljs.core.async.t15817.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_15819, meta15818__$1) {
      var self__ = this;
      var _15819__$1 = this;
      return new cljs.core.async.t15817(self__.cb, self__.flag, self__.alt_handler, meta15818__$1);
    };
    cljs.core.async.t15817.cljs$lang$type = true;
    cljs.core.async.t15817.cljs$lang$ctorStr = "cljs.core.async/t15817";
    cljs.core.async.t15817.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
      return cljs.core._write.call(null, writer__4513__auto__, "cljs.core.async/t15817");
    };
    cljs.core.async.__GT_t15817 = function __GT_t15817(cb__$1, flag__$1, alt_handler__$1, meta15818) {
      return new cljs.core.async.t15817(cb__$1, flag__$1, alt_handler__$1, meta15818);
    };
  }
  return new cljs.core.async.t15817(cb, flag, alt_handler, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.do_alts = function do_alts(fret, ports, opts) {
  var flag = cljs.core.async.alt_flag.call(null);
  var n = cljs.core.count.call(null, ports);
  var idxs = cljs.core.async.random_array.call(null, n);
  var priority = (new cljs.core.Keyword(null, "priority", "priority", 1431093715)).cljs$core$IFn$_invoke$arity$1(opts);
  var ret = function() {
    var i = 0;
    while (true) {
      if (i < n) {
        var idx = cljs.core.truth_(priority) ? i : idxs[i];
        var port = cljs.core.nth.call(null, ports, idx);
        var wport = cljs.core.vector_QMARK_.call(null, port) ? port.call(null, 0) : null;
        var vbox = cljs.core.truth_(wport) ? function() {
          var val = port.call(null, 1);
          return cljs.core.async.impl.protocols.put_BANG_.call(null, wport, val, cljs.core.async.alt_handler.call(null, flag, function(i, val, idx, port, wport, flag, n, idxs, priority) {
            return function(p1__15820_SHARP_) {
              return fret.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__15820_SHARP_, wport], null));
            };
          }(i, val, idx, port, wport, flag, n, idxs, priority)));
        }() : cljs.core.async.impl.protocols.take_BANG_.call(null, port, cljs.core.async.alt_handler.call(null, flag, function(i, idx, port, wport, flag, n, idxs, priority) {
          return function(p1__15821_SHARP_) {
            return fret.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [p1__15821_SHARP_, port], null));
          };
        }(i, idx, port, wport, flag, n, idxs, priority)));
        if (cljs.core.truth_(vbox)) {
          return cljs.core.async.impl.channels.box.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.deref.call(null, vbox), function() {
            var or__3925__auto__ = wport;
            if (cljs.core.truth_(or__3925__auto__)) {
              return or__3925__auto__;
            } else {
              return port;
            }
          }()], null));
        } else {
          var G__15822 = i + 1;
          i = G__15822;
          continue;
        }
      } else {
        return null;
      }
      break;
    }
  }();
  var or__3925__auto__ = ret;
  if (cljs.core.truth_(or__3925__auto__)) {
    return or__3925__auto__;
  } else {
    if (cljs.core.contains_QMARK_.call(null, opts, new cljs.core.Keyword(null, "default", "default", -1987822328))) {
      var temp__4126__auto__ = function() {
        var and__3913__auto__ = cljs.core.async.impl.protocols.active_QMARK_.call(null, flag);
        if (cljs.core.truth_(and__3913__auto__)) {
          return cljs.core.async.impl.protocols.commit.call(null, flag);
        } else {
          return and__3913__auto__;
        }
      }();
      if (cljs.core.truth_(temp__4126__auto__)) {
        var got = temp__4126__auto__;
        return cljs.core.async.impl.channels.box.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [(new cljs.core.Keyword(null, "default", "default", -1987822328)).cljs$core$IFn$_invoke$arity$1(opts), new cljs.core.Keyword(null, "default", "default", -1987822328)], null));
      } else {
        return null;
      }
    } else {
      return null;
    }
  }
};
cljs.core.async.alts_BANG_ = function() {
  var alts_BANG___delegate = function(ports, p__15823) {
    var map__15825 = p__15823;
    var map__15825__$1 = cljs.core.seq_QMARK_.call(null, map__15825) ? cljs.core.apply.call(null, cljs.core.hash_map, map__15825) : map__15825;
    var opts = map__15825__$1;
    throw new Error("alts! used not in (go ...) block");
  };
  var alts_BANG_ = function(ports, var_args) {
    var p__15823 = null;
    if (arguments.length > 1) {
      var G__15826__i = 0, G__15826__a = new Array(arguments.length - 1);
      while (G__15826__i < G__15826__a.length) {
        G__15826__a[G__15826__i] = arguments[G__15826__i + 1];
        ++G__15826__i;
      }
      p__15823 = new cljs.core.IndexedSeq(G__15826__a, 0);
    }
    return alts_BANG___delegate.call(this, ports, p__15823);
  };
  alts_BANG_.cljs$lang$maxFixedArity = 1;
  alts_BANG_.cljs$lang$applyTo = function(arglist__15827) {
    var ports = cljs.core.first(arglist__15827);
    var p__15823 = cljs.core.rest(arglist__15827);
    return alts_BANG___delegate(ports, p__15823);
  };
  alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = alts_BANG___delegate;
  return alts_BANG_;
}();
cljs.core.async.pipe = function() {
  var pipe = null;
  var pipe__2 = function(from, to) {
    return pipe.call(null, from, to, true);
  };
  var pipe__3 = function(from, to, close_QMARK_) {
    var c__6703__auto___15922 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6703__auto___15922) {
      return function() {
        var f__6704__auto__ = function() {
          var switch__6647__auto__ = function(c__6703__auto___15922) {
            return function(state_15898) {
              var state_val_15899 = state_15898[1];
              if (state_val_15899 === 7) {
                var inst_15894 = state_15898[2];
                var state_15898__$1 = state_15898;
                var statearr_15900_15923 = state_15898__$1;
                statearr_15900_15923[2] = inst_15894;
                statearr_15900_15923[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_15899 === 1) {
                  var state_15898__$1 = state_15898;
                  var statearr_15901_15924 = state_15898__$1;
                  statearr_15901_15924[2] = null;
                  statearr_15901_15924[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_15899 === 4) {
                    var inst_15877 = state_15898[7];
                    var inst_15877__$1 = state_15898[2];
                    var inst_15878 = inst_15877__$1 == null;
                    var state_15898__$1 = function() {
                      var statearr_15902 = state_15898;
                      statearr_15902[7] = inst_15877__$1;
                      return statearr_15902;
                    }();
                    if (cljs.core.truth_(inst_15878)) {
                      var statearr_15903_15925 = state_15898__$1;
                      statearr_15903_15925[1] = 5;
                    } else {
                      var statearr_15904_15926 = state_15898__$1;
                      statearr_15904_15926[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_15899 === 13) {
                      var state_15898__$1 = state_15898;
                      var statearr_15905_15927 = state_15898__$1;
                      statearr_15905_15927[2] = null;
                      statearr_15905_15927[1] = 14;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_15899 === 6) {
                        var inst_15877 = state_15898[7];
                        var state_15898__$1 = state_15898;
                        return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_15898__$1, 11, to, inst_15877);
                      } else {
                        if (state_val_15899 === 3) {
                          var inst_15896 = state_15898[2];
                          var state_15898__$1 = state_15898;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_15898__$1, inst_15896);
                        } else {
                          if (state_val_15899 === 12) {
                            var state_15898__$1 = state_15898;
                            var statearr_15906_15928 = state_15898__$1;
                            statearr_15906_15928[2] = null;
                            statearr_15906_15928[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_15899 === 2) {
                              var state_15898__$1 = state_15898;
                              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_15898__$1, 4, from);
                            } else {
                              if (state_val_15899 === 11) {
                                var inst_15887 = state_15898[2];
                                var state_15898__$1 = state_15898;
                                if (cljs.core.truth_(inst_15887)) {
                                  var statearr_15907_15929 = state_15898__$1;
                                  statearr_15907_15929[1] = 12;
                                } else {
                                  var statearr_15908_15930 = state_15898__$1;
                                  statearr_15908_15930[1] = 13;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_15899 === 9) {
                                  var state_15898__$1 = state_15898;
                                  var statearr_15909_15931 = state_15898__$1;
                                  statearr_15909_15931[2] = null;
                                  statearr_15909_15931[1] = 10;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_15899 === 5) {
                                    var state_15898__$1 = state_15898;
                                    if (cljs.core.truth_(close_QMARK_)) {
                                      var statearr_15910_15932 = state_15898__$1;
                                      statearr_15910_15932[1] = 8;
                                    } else {
                                      var statearr_15911_15933 = state_15898__$1;
                                      statearr_15911_15933[1] = 9;
                                    }
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_15899 === 14) {
                                      var inst_15892 = state_15898[2];
                                      var state_15898__$1 = state_15898;
                                      var statearr_15912_15934 = state_15898__$1;
                                      statearr_15912_15934[2] = inst_15892;
                                      statearr_15912_15934[1] = 7;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_15899 === 10) {
                                        var inst_15884 = state_15898[2];
                                        var state_15898__$1 = state_15898;
                                        var statearr_15913_15935 = state_15898__$1;
                                        statearr_15913_15935[2] = inst_15884;
                                        statearr_15913_15935[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_15899 === 8) {
                                          var inst_15881 = cljs.core.async.close_BANG_.call(null, to);
                                          var state_15898__$1 = state_15898;
                                          var statearr_15914_15936 = state_15898__$1;
                                          statearr_15914_15936[2] = inst_15881;
                                          statearr_15914_15936[1] = 10;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          return null;
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6703__auto___15922);
          return function(switch__6647__auto__, c__6703__auto___15922) {
            return function() {
              var state_machine__6648__auto__ = null;
              var state_machine__6648__auto____0 = function() {
                var statearr_15918 = [null, null, null, null, null, null, null, null];
                statearr_15918[0] = state_machine__6648__auto__;
                statearr_15918[1] = 1;
                return statearr_15918;
              };
              var state_machine__6648__auto____1 = function(state_15898) {
                while (true) {
                  var ret_value__6649__auto__ = function() {
                    try {
                      while (true) {
                        var result__6650__auto__ = switch__6647__auto__.call(null, state_15898);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6650__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6650__auto__;
                        }
                        break;
                      }
                    } catch (e15919) {
                      if (e15919 instanceof Object) {
                        var ex__6651__auto__ = e15919;
                        var statearr_15920_15937 = state_15898;
                        statearr_15920_15937[5] = ex__6651__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_15898);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e15919;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6649__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__15938 = state_15898;
                    state_15898 = G__15938;
                    continue;
                  } else {
                    return ret_value__6649__auto__;
                  }
                  break;
                }
              };
              state_machine__6648__auto__ = function(state_15898) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6648__auto____0.call(this);
                  case 1:
                    return state_machine__6648__auto____1.call(this, state_15898);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6648__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6648__auto____0;
              state_machine__6648__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6648__auto____1;
              return state_machine__6648__auto__;
            }();
          }(switch__6647__auto__, c__6703__auto___15922);
        }();
        var state__6705__auto__ = function() {
          var statearr_15921 = f__6704__auto__.call(null);
          statearr_15921[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6703__auto___15922;
          return statearr_15921;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6705__auto__);
      };
    }(c__6703__auto___15922));
    return to;
  };
  pipe = function(from, to, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return pipe__2.call(this, from, to);
      case 3:
        return pipe__3.call(this, from, to, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pipe.cljs$core$IFn$_invoke$arity$2 = pipe__2;
  pipe.cljs$core$IFn$_invoke$arity$3 = pipe__3;
  return pipe;
}();
cljs.core.async.pipeline_STAR_ = function pipeline_STAR_(n, to, xf, from, close_QMARK_, ex_handler, type) {
  if (n > 0) {
  } else {
    throw new Error([cljs.core.str("Assert failed: "), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "pos?", "pos?", -244377722, null), new cljs.core.Symbol(null, "n", "n", -2092305744, null))))].join(""));
  }
  var jobs = cljs.core.async.chan.call(null, n);
  var results = cljs.core.async.chan.call(null, n);
  var process = function(jobs, results) {
    return function(p__16122) {
      var vec__16123 = p__16122;
      var v = cljs.core.nth.call(null, vec__16123, 0, null);
      var p = cljs.core.nth.call(null, vec__16123, 1, null);
      var job = vec__16123;
      if (job == null) {
        cljs.core.async.close_BANG_.call(null, results);
        return null;
      } else {
        var res = cljs.core.async.chan.call(null, 1, xf, ex_handler);
        var c__6703__auto___16305 = cljs.core.async.chan.call(null, 1);
        cljs.core.async.impl.dispatch.run.call(null, function(c__6703__auto___16305, res, vec__16123, v, p, job, jobs, results) {
          return function() {
            var f__6704__auto__ = function() {
              var switch__6647__auto__ = function(c__6703__auto___16305, res, vec__16123, v, p, job, jobs, results) {
                return function(state_16128) {
                  var state_val_16129 = state_16128[1];
                  if (state_val_16129 === 2) {
                    var inst_16125 = state_16128[2];
                    var inst_16126 = cljs.core.async.close_BANG_.call(null, res);
                    var state_16128__$1 = function() {
                      var statearr_16130 = state_16128;
                      statearr_16130[7] = inst_16125;
                      return statearr_16130;
                    }();
                    return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_16128__$1, inst_16126);
                  } else {
                    if (state_val_16129 === 1) {
                      var state_16128__$1 = state_16128;
                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_16128__$1, 2, res, v);
                    } else {
                      return null;
                    }
                  }
                };
              }(c__6703__auto___16305, res, vec__16123, v, p, job, jobs, results);
              return function(switch__6647__auto__, c__6703__auto___16305, res, vec__16123, v, p, job, jobs, results) {
                return function() {
                  var state_machine__6648__auto__ = null;
                  var state_machine__6648__auto____0 = function() {
                    var statearr_16134 = [null, null, null, null, null, null, null, null];
                    statearr_16134[0] = state_machine__6648__auto__;
                    statearr_16134[1] = 1;
                    return statearr_16134;
                  };
                  var state_machine__6648__auto____1 = function(state_16128) {
                    while (true) {
                      var ret_value__6649__auto__ = function() {
                        try {
                          while (true) {
                            var result__6650__auto__ = switch__6647__auto__.call(null, state_16128);
                            if (cljs.core.keyword_identical_QMARK_.call(null, result__6650__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                              continue;
                            } else {
                              return result__6650__auto__;
                            }
                            break;
                          }
                        } catch (e16135) {
                          if (e16135 instanceof Object) {
                            var ex__6651__auto__ = e16135;
                            var statearr_16136_16306 = state_16128;
                            statearr_16136_16306[5] = ex__6651__auto__;
                            cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_16128);
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            throw e16135;
                          }
                        }
                      }();
                      if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6649__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        var G__16307 = state_16128;
                        state_16128 = G__16307;
                        continue;
                      } else {
                        return ret_value__6649__auto__;
                      }
                      break;
                    }
                  };
                  state_machine__6648__auto__ = function(state_16128) {
                    switch(arguments.length) {
                      case 0:
                        return state_machine__6648__auto____0.call(this);
                      case 1:
                        return state_machine__6648__auto____1.call(this, state_16128);
                    }
                    throw new Error("Invalid arity: " + arguments.length);
                  };
                  state_machine__6648__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6648__auto____0;
                  state_machine__6648__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6648__auto____1;
                  return state_machine__6648__auto__;
                }();
              }(switch__6647__auto__, c__6703__auto___16305, res, vec__16123, v, p, job, jobs, results);
            }();
            var state__6705__auto__ = function() {
              var statearr_16137 = f__6704__auto__.call(null);
              statearr_16137[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6703__auto___16305;
              return statearr_16137;
            }();
            return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6705__auto__);
          };
        }(c__6703__auto___16305, res, vec__16123, v, p, job, jobs, results));
        cljs.core.async.put_BANG_.call(null, p, res);
        return true;
      }
    };
  }(jobs, results);
  var async = function(jobs, results, process) {
    return function(p__16138) {
      var vec__16139 = p__16138;
      var v = cljs.core.nth.call(null, vec__16139, 0, null);
      var p = cljs.core.nth.call(null, vec__16139, 1, null);
      var job = vec__16139;
      if (job == null) {
        cljs.core.async.close_BANG_.call(null, results);
        return null;
      } else {
        var res = cljs.core.async.chan.call(null, 1);
        xf.call(null, v, res);
        cljs.core.async.put_BANG_.call(null, p, res);
        return true;
      }
    };
  }(jobs, results, process);
  var n__4812__auto___16308 = n;
  var __16309 = 0;
  while (true) {
    if (__16309 < n__4812__auto___16308) {
      var G__16140_16310 = type instanceof cljs.core.Keyword ? type.fqn : null;
      switch(G__16140_16310) {
        case "async":
          var c__6703__auto___16312 = cljs.core.async.chan.call(null, 1);
          cljs.core.async.impl.dispatch.run.call(null, function(__16309, c__6703__auto___16312, G__16140_16310, n__4812__auto___16308, jobs, results, process, async) {
            return function() {
              var f__6704__auto__ = function() {
                var switch__6647__auto__ = function(__16309, c__6703__auto___16312, G__16140_16310, n__4812__auto___16308, jobs, results, process, async) {
                  return function(state_16153) {
                    var state_val_16154 = state_16153[1];
                    if (state_val_16154 === 7) {
                      var inst_16149 = state_16153[2];
                      var state_16153__$1 = state_16153;
                      var statearr_16155_16313 = state_16153__$1;
                      statearr_16155_16313[2] = inst_16149;
                      statearr_16155_16313[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_16154 === 6) {
                        var state_16153__$1 = state_16153;
                        var statearr_16156_16314 = state_16153__$1;
                        statearr_16156_16314[2] = null;
                        statearr_16156_16314[1] = 7;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_16154 === 5) {
                          var state_16153__$1 = state_16153;
                          var statearr_16157_16315 = state_16153__$1;
                          statearr_16157_16315[2] = null;
                          statearr_16157_16315[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_16154 === 4) {
                            var inst_16143 = state_16153[2];
                            var inst_16144 = async.call(null, inst_16143);
                            var state_16153__$1 = state_16153;
                            if (cljs.core.truth_(inst_16144)) {
                              var statearr_16158_16316 = state_16153__$1;
                              statearr_16158_16316[1] = 5;
                            } else {
                              var statearr_16159_16317 = state_16153__$1;
                              statearr_16159_16317[1] = 6;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_16154 === 3) {
                              var inst_16151 = state_16153[2];
                              var state_16153__$1 = state_16153;
                              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_16153__$1, inst_16151);
                            } else {
                              if (state_val_16154 === 2) {
                                var state_16153__$1 = state_16153;
                                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_16153__$1, 4, jobs);
                              } else {
                                if (state_val_16154 === 1) {
                                  var state_16153__$1 = state_16153;
                                  var statearr_16160_16318 = state_16153__$1;
                                  statearr_16160_16318[2] = null;
                                  statearr_16160_16318[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  };
                }(__16309, c__6703__auto___16312, G__16140_16310, n__4812__auto___16308, jobs, results, process, async);
                return function(__16309, switch__6647__auto__, c__6703__auto___16312, G__16140_16310, n__4812__auto___16308, jobs, results, process, async) {
                  return function() {
                    var state_machine__6648__auto__ = null;
                    var state_machine__6648__auto____0 = function() {
                      var statearr_16164 = [null, null, null, null, null, null, null];
                      statearr_16164[0] = state_machine__6648__auto__;
                      statearr_16164[1] = 1;
                      return statearr_16164;
                    };
                    var state_machine__6648__auto____1 = function(state_16153) {
                      while (true) {
                        var ret_value__6649__auto__ = function() {
                          try {
                            while (true) {
                              var result__6650__auto__ = switch__6647__auto__.call(null, state_16153);
                              if (cljs.core.keyword_identical_QMARK_.call(null, result__6650__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                                continue;
                              } else {
                                return result__6650__auto__;
                              }
                              break;
                            }
                          } catch (e16165) {
                            if (e16165 instanceof Object) {
                              var ex__6651__auto__ = e16165;
                              var statearr_16166_16319 = state_16153;
                              statearr_16166_16319[5] = ex__6651__auto__;
                              cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_16153);
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              throw e16165;
                            }
                          }
                        }();
                        if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6649__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          var G__16320 = state_16153;
                          state_16153 = G__16320;
                          continue;
                        } else {
                          return ret_value__6649__auto__;
                        }
                        break;
                      }
                    };
                    state_machine__6648__auto__ = function(state_16153) {
                      switch(arguments.length) {
                        case 0:
                          return state_machine__6648__auto____0.call(this);
                        case 1:
                          return state_machine__6648__auto____1.call(this, state_16153);
                      }
                      throw new Error("Invalid arity: " + arguments.length);
                    };
                    state_machine__6648__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6648__auto____0;
                    state_machine__6648__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6648__auto____1;
                    return state_machine__6648__auto__;
                  }();
                }(__16309, switch__6647__auto__, c__6703__auto___16312, G__16140_16310, n__4812__auto___16308, jobs, results, process, async);
              }();
              var state__6705__auto__ = function() {
                var statearr_16167 = f__6704__auto__.call(null);
                statearr_16167[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6703__auto___16312;
                return statearr_16167;
              }();
              return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6705__auto__);
            };
          }(__16309, c__6703__auto___16312, G__16140_16310, n__4812__auto___16308, jobs, results, process, async));
          break;
        case "compute":
          var c__6703__auto___16321 = cljs.core.async.chan.call(null, 1);
          cljs.core.async.impl.dispatch.run.call(null, function(__16309, c__6703__auto___16321, G__16140_16310, n__4812__auto___16308, jobs, results, process, async) {
            return function() {
              var f__6704__auto__ = function() {
                var switch__6647__auto__ = function(__16309, c__6703__auto___16321, G__16140_16310, n__4812__auto___16308, jobs, results, process, async) {
                  return function(state_16180) {
                    var state_val_16181 = state_16180[1];
                    if (state_val_16181 === 7) {
                      var inst_16176 = state_16180[2];
                      var state_16180__$1 = state_16180;
                      var statearr_16182_16322 = state_16180__$1;
                      statearr_16182_16322[2] = inst_16176;
                      statearr_16182_16322[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_16181 === 6) {
                        var state_16180__$1 = state_16180;
                        var statearr_16183_16323 = state_16180__$1;
                        statearr_16183_16323[2] = null;
                        statearr_16183_16323[1] = 7;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_16181 === 5) {
                          var state_16180__$1 = state_16180;
                          var statearr_16184_16324 = state_16180__$1;
                          statearr_16184_16324[2] = null;
                          statearr_16184_16324[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_16181 === 4) {
                            var inst_16170 = state_16180[2];
                            var inst_16171 = process.call(null, inst_16170);
                            var state_16180__$1 = state_16180;
                            if (cljs.core.truth_(inst_16171)) {
                              var statearr_16185_16325 = state_16180__$1;
                              statearr_16185_16325[1] = 5;
                            } else {
                              var statearr_16186_16326 = state_16180__$1;
                              statearr_16186_16326[1] = 6;
                            }
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_16181 === 3) {
                              var inst_16178 = state_16180[2];
                              var state_16180__$1 = state_16180;
                              return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_16180__$1, inst_16178);
                            } else {
                              if (state_val_16181 === 2) {
                                var state_16180__$1 = state_16180;
                                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_16180__$1, 4, jobs);
                              } else {
                                if (state_val_16181 === 1) {
                                  var state_16180__$1 = state_16180;
                                  var statearr_16187_16327 = state_16180__$1;
                                  statearr_16187_16327[2] = null;
                                  statearr_16187_16327[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  return null;
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  };
                }(__16309, c__6703__auto___16321, G__16140_16310, n__4812__auto___16308, jobs, results, process, async);
                return function(__16309, switch__6647__auto__, c__6703__auto___16321, G__16140_16310, n__4812__auto___16308, jobs, results, process, async) {
                  return function() {
                    var state_machine__6648__auto__ = null;
                    var state_machine__6648__auto____0 = function() {
                      var statearr_16191 = [null, null, null, null, null, null, null];
                      statearr_16191[0] = state_machine__6648__auto__;
                      statearr_16191[1] = 1;
                      return statearr_16191;
                    };
                    var state_machine__6648__auto____1 = function(state_16180) {
                      while (true) {
                        var ret_value__6649__auto__ = function() {
                          try {
                            while (true) {
                              var result__6650__auto__ = switch__6647__auto__.call(null, state_16180);
                              if (cljs.core.keyword_identical_QMARK_.call(null, result__6650__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                                continue;
                              } else {
                                return result__6650__auto__;
                              }
                              break;
                            }
                          } catch (e16192) {
                            if (e16192 instanceof Object) {
                              var ex__6651__auto__ = e16192;
                              var statearr_16193_16328 = state_16180;
                              statearr_16193_16328[5] = ex__6651__auto__;
                              cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_16180);
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              throw e16192;
                            }
                          }
                        }();
                        if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6649__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          var G__16329 = state_16180;
                          state_16180 = G__16329;
                          continue;
                        } else {
                          return ret_value__6649__auto__;
                        }
                        break;
                      }
                    };
                    state_machine__6648__auto__ = function(state_16180) {
                      switch(arguments.length) {
                        case 0:
                          return state_machine__6648__auto____0.call(this);
                        case 1:
                          return state_machine__6648__auto____1.call(this, state_16180);
                      }
                      throw new Error("Invalid arity: " + arguments.length);
                    };
                    state_machine__6648__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6648__auto____0;
                    state_machine__6648__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6648__auto____1;
                    return state_machine__6648__auto__;
                  }();
                }(__16309, switch__6647__auto__, c__6703__auto___16321, G__16140_16310, n__4812__auto___16308, jobs, results, process, async);
              }();
              var state__6705__auto__ = function() {
                var statearr_16194 = f__6704__auto__.call(null);
                statearr_16194[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6703__auto___16321;
                return statearr_16194;
              }();
              return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6705__auto__);
            };
          }(__16309, c__6703__auto___16321, G__16140_16310, n__4812__auto___16308, jobs, results, process, async));
          break;
        default:
          throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(type)].join(""));;
      }
      var G__16330 = __16309 + 1;
      __16309 = G__16330;
      continue;
    } else {
    }
    break;
  }
  var c__6703__auto___16331 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6703__auto___16331, jobs, results, process, async) {
    return function() {
      var f__6704__auto__ = function() {
        var switch__6647__auto__ = function(c__6703__auto___16331, jobs, results, process, async) {
          return function(state_16216) {
            var state_val_16217 = state_16216[1];
            if (state_val_16217 === 9) {
              var inst_16209 = state_16216[2];
              var state_16216__$1 = function() {
                var statearr_16218 = state_16216;
                statearr_16218[7] = inst_16209;
                return statearr_16218;
              }();
              var statearr_16219_16332 = state_16216__$1;
              statearr_16219_16332[2] = null;
              statearr_16219_16332[1] = 2;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_16217 === 8) {
                var inst_16202 = state_16216[8];
                var inst_16207 = state_16216[2];
                var state_16216__$1 = function() {
                  var statearr_16220 = state_16216;
                  statearr_16220[9] = inst_16207;
                  return statearr_16220;
                }();
                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_16216__$1, 9, results, inst_16202);
              } else {
                if (state_val_16217 === 7) {
                  var inst_16212 = state_16216[2];
                  var state_16216__$1 = state_16216;
                  var statearr_16221_16333 = state_16216__$1;
                  statearr_16221_16333[2] = inst_16212;
                  statearr_16221_16333[1] = 3;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_16217 === 6) {
                    var inst_16197 = state_16216[10];
                    var inst_16202 = state_16216[8];
                    var inst_16202__$1 = cljs.core.async.chan.call(null, 1);
                    var inst_16203 = cljs.core.PersistentVector.EMPTY_NODE;
                    var inst_16204 = [inst_16197, inst_16202__$1];
                    var inst_16205 = new cljs.core.PersistentVector(null, 2, 5, inst_16203, inst_16204, null);
                    var state_16216__$1 = function() {
                      var statearr_16222 = state_16216;
                      statearr_16222[8] = inst_16202__$1;
                      return statearr_16222;
                    }();
                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_16216__$1, 8, jobs, inst_16205);
                  } else {
                    if (state_val_16217 === 5) {
                      var inst_16200 = cljs.core.async.close_BANG_.call(null, jobs);
                      var state_16216__$1 = state_16216;
                      var statearr_16223_16334 = state_16216__$1;
                      statearr_16223_16334[2] = inst_16200;
                      statearr_16223_16334[1] = 7;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_16217 === 4) {
                        var inst_16197 = state_16216[10];
                        var inst_16197__$1 = state_16216[2];
                        var inst_16198 = inst_16197__$1 == null;
                        var state_16216__$1 = function() {
                          var statearr_16224 = state_16216;
                          statearr_16224[10] = inst_16197__$1;
                          return statearr_16224;
                        }();
                        if (cljs.core.truth_(inst_16198)) {
                          var statearr_16225_16335 = state_16216__$1;
                          statearr_16225_16335[1] = 5;
                        } else {
                          var statearr_16226_16336 = state_16216__$1;
                          statearr_16226_16336[1] = 6;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_16217 === 3) {
                          var inst_16214 = state_16216[2];
                          var state_16216__$1 = state_16216;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_16216__$1, inst_16214);
                        } else {
                          if (state_val_16217 === 2) {
                            var state_16216__$1 = state_16216;
                            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_16216__$1, 4, from);
                          } else {
                            if (state_val_16217 === 1) {
                              var state_16216__$1 = state_16216;
                              var statearr_16227_16337 = state_16216__$1;
                              statearr_16227_16337[2] = null;
                              statearr_16227_16337[1] = 2;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              return null;
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6703__auto___16331, jobs, results, process, async);
        return function(switch__6647__auto__, c__6703__auto___16331, jobs, results, process, async) {
          return function() {
            var state_machine__6648__auto__ = null;
            var state_machine__6648__auto____0 = function() {
              var statearr_16231 = [null, null, null, null, null, null, null, null, null, null, null];
              statearr_16231[0] = state_machine__6648__auto__;
              statearr_16231[1] = 1;
              return statearr_16231;
            };
            var state_machine__6648__auto____1 = function(state_16216) {
              while (true) {
                var ret_value__6649__auto__ = function() {
                  try {
                    while (true) {
                      var result__6650__auto__ = switch__6647__auto__.call(null, state_16216);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6650__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__6650__auto__;
                      }
                      break;
                    }
                  } catch (e16232) {
                    if (e16232 instanceof Object) {
                      var ex__6651__auto__ = e16232;
                      var statearr_16233_16338 = state_16216;
                      statearr_16233_16338[5] = ex__6651__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_16216);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e16232;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6649__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__16339 = state_16216;
                  state_16216 = G__16339;
                  continue;
                } else {
                  return ret_value__6649__auto__;
                }
                break;
              }
            };
            state_machine__6648__auto__ = function(state_16216) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6648__auto____0.call(this);
                case 1:
                  return state_machine__6648__auto____1.call(this, state_16216);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6648__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6648__auto____0;
            state_machine__6648__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6648__auto____1;
            return state_machine__6648__auto__;
          }();
        }(switch__6647__auto__, c__6703__auto___16331, jobs, results, process, async);
      }();
      var state__6705__auto__ = function() {
        var statearr_16234 = f__6704__auto__.call(null);
        statearr_16234[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6703__auto___16331;
        return statearr_16234;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6705__auto__);
    };
  }(c__6703__auto___16331, jobs, results, process, async));
  var c__6703__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6703__auto__, jobs, results, process, async) {
    return function() {
      var f__6704__auto__ = function() {
        var switch__6647__auto__ = function(c__6703__auto__, jobs, results, process, async) {
          return function(state_16272) {
            var state_val_16273 = state_16272[1];
            if (state_val_16273 === 7) {
              var inst_16268 = state_16272[2];
              var state_16272__$1 = state_16272;
              var statearr_16274_16340 = state_16272__$1;
              statearr_16274_16340[2] = inst_16268;
              statearr_16274_16340[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_16273 === 20) {
                var state_16272__$1 = state_16272;
                var statearr_16275_16341 = state_16272__$1;
                statearr_16275_16341[2] = null;
                statearr_16275_16341[1] = 21;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_16273 === 1) {
                  var state_16272__$1 = state_16272;
                  var statearr_16276_16342 = state_16272__$1;
                  statearr_16276_16342[2] = null;
                  statearr_16276_16342[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_16273 === 4) {
                    var inst_16237 = state_16272[7];
                    var inst_16237__$1 = state_16272[2];
                    var inst_16238 = inst_16237__$1 == null;
                    var state_16272__$1 = function() {
                      var statearr_16277 = state_16272;
                      statearr_16277[7] = inst_16237__$1;
                      return statearr_16277;
                    }();
                    if (cljs.core.truth_(inst_16238)) {
                      var statearr_16278_16343 = state_16272__$1;
                      statearr_16278_16343[1] = 5;
                    } else {
                      var statearr_16279_16344 = state_16272__$1;
                      statearr_16279_16344[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_16273 === 15) {
                      var inst_16250 = state_16272[8];
                      var state_16272__$1 = state_16272;
                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_16272__$1, 18, to, inst_16250);
                    } else {
                      if (state_val_16273 === 21) {
                        var inst_16263 = state_16272[2];
                        var state_16272__$1 = state_16272;
                        var statearr_16280_16345 = state_16272__$1;
                        statearr_16280_16345[2] = inst_16263;
                        statearr_16280_16345[1] = 13;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_16273 === 13) {
                          var inst_16265 = state_16272[2];
                          var state_16272__$1 = function() {
                            var statearr_16281 = state_16272;
                            statearr_16281[9] = inst_16265;
                            return statearr_16281;
                          }();
                          var statearr_16282_16346 = state_16272__$1;
                          statearr_16282_16346[2] = null;
                          statearr_16282_16346[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_16273 === 6) {
                            var inst_16237 = state_16272[7];
                            var state_16272__$1 = state_16272;
                            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_16272__$1, 11, inst_16237);
                          } else {
                            if (state_val_16273 === 17) {
                              var inst_16258 = state_16272[2];
                              var state_16272__$1 = state_16272;
                              if (cljs.core.truth_(inst_16258)) {
                                var statearr_16283_16347 = state_16272__$1;
                                statearr_16283_16347[1] = 19;
                              } else {
                                var statearr_16284_16348 = state_16272__$1;
                                statearr_16284_16348[1] = 20;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_16273 === 3) {
                                var inst_16270 = state_16272[2];
                                var state_16272__$1 = state_16272;
                                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_16272__$1, inst_16270);
                              } else {
                                if (state_val_16273 === 12) {
                                  var inst_16247 = state_16272[10];
                                  var state_16272__$1 = state_16272;
                                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_16272__$1, 14, inst_16247);
                                } else {
                                  if (state_val_16273 === 2) {
                                    var state_16272__$1 = state_16272;
                                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_16272__$1, 4, results);
                                  } else {
                                    if (state_val_16273 === 19) {
                                      var state_16272__$1 = state_16272;
                                      var statearr_16285_16349 = state_16272__$1;
                                      statearr_16285_16349[2] = null;
                                      statearr_16285_16349[1] = 12;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_16273 === 11) {
                                        var inst_16247 = state_16272[2];
                                        var state_16272__$1 = function() {
                                          var statearr_16286 = state_16272;
                                          statearr_16286[10] = inst_16247;
                                          return statearr_16286;
                                        }();
                                        var statearr_16287_16350 = state_16272__$1;
                                        statearr_16287_16350[2] = null;
                                        statearr_16287_16350[1] = 12;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_16273 === 9) {
                                          var state_16272__$1 = state_16272;
                                          var statearr_16288_16351 = state_16272__$1;
                                          statearr_16288_16351[2] = null;
                                          statearr_16288_16351[1] = 10;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_16273 === 5) {
                                            var state_16272__$1 = state_16272;
                                            if (cljs.core.truth_(close_QMARK_)) {
                                              var statearr_16289_16352 = state_16272__$1;
                                              statearr_16289_16352[1] = 8;
                                            } else {
                                              var statearr_16290_16353 = state_16272__$1;
                                              statearr_16290_16353[1] = 9;
                                            }
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_16273 === 14) {
                                              var inst_16252 = state_16272[11];
                                              var inst_16250 = state_16272[8];
                                              var inst_16250__$1 = state_16272[2];
                                              var inst_16251 = inst_16250__$1 == null;
                                              var inst_16252__$1 = cljs.core.not.call(null, inst_16251);
                                              var state_16272__$1 = function() {
                                                var statearr_16291 = state_16272;
                                                statearr_16291[11] = inst_16252__$1;
                                                statearr_16291[8] = inst_16250__$1;
                                                return statearr_16291;
                                              }();
                                              if (inst_16252__$1) {
                                                var statearr_16292_16354 = state_16272__$1;
                                                statearr_16292_16354[1] = 15;
                                              } else {
                                                var statearr_16293_16355 = state_16272__$1;
                                                statearr_16293_16355[1] = 16;
                                              }
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_16273 === 16) {
                                                var inst_16252 = state_16272[11];
                                                var state_16272__$1 = state_16272;
                                                var statearr_16294_16356 = state_16272__$1;
                                                statearr_16294_16356[2] = inst_16252;
                                                statearr_16294_16356[1] = 17;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_16273 === 10) {
                                                  var inst_16244 = state_16272[2];
                                                  var state_16272__$1 = state_16272;
                                                  var statearr_16295_16357 = state_16272__$1;
                                                  statearr_16295_16357[2] = inst_16244;
                                                  statearr_16295_16357[1] = 7;
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_16273 === 18) {
                                                    var inst_16255 = state_16272[2];
                                                    var state_16272__$1 = state_16272;
                                                    var statearr_16296_16358 = state_16272__$1;
                                                    statearr_16296_16358[2] = inst_16255;
                                                    statearr_16296_16358[1] = 17;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_16273 === 8) {
                                                      var inst_16241 = cljs.core.async.close_BANG_.call(null, to);
                                                      var state_16272__$1 = state_16272;
                                                      var statearr_16297_16359 = state_16272__$1;
                                                      statearr_16297_16359[2] = inst_16241;
                                                      statearr_16297_16359[1] = 10;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      return null;
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6703__auto__, jobs, results, process, async);
        return function(switch__6647__auto__, c__6703__auto__, jobs, results, process, async) {
          return function() {
            var state_machine__6648__auto__ = null;
            var state_machine__6648__auto____0 = function() {
              var statearr_16301 = [null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_16301[0] = state_machine__6648__auto__;
              statearr_16301[1] = 1;
              return statearr_16301;
            };
            var state_machine__6648__auto____1 = function(state_16272) {
              while (true) {
                var ret_value__6649__auto__ = function() {
                  try {
                    while (true) {
                      var result__6650__auto__ = switch__6647__auto__.call(null, state_16272);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6650__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__6650__auto__;
                      }
                      break;
                    }
                  } catch (e16302) {
                    if (e16302 instanceof Object) {
                      var ex__6651__auto__ = e16302;
                      var statearr_16303_16360 = state_16272;
                      statearr_16303_16360[5] = ex__6651__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_16272);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e16302;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6649__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__16361 = state_16272;
                  state_16272 = G__16361;
                  continue;
                } else {
                  return ret_value__6649__auto__;
                }
                break;
              }
            };
            state_machine__6648__auto__ = function(state_16272) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6648__auto____0.call(this);
                case 1:
                  return state_machine__6648__auto____1.call(this, state_16272);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6648__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6648__auto____0;
            state_machine__6648__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6648__auto____1;
            return state_machine__6648__auto__;
          }();
        }(switch__6647__auto__, c__6703__auto__, jobs, results, process, async);
      }();
      var state__6705__auto__ = function() {
        var statearr_16304 = f__6704__auto__.call(null);
        statearr_16304[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6703__auto__;
        return statearr_16304;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6705__auto__);
    };
  }(c__6703__auto__, jobs, results, process, async));
  return c__6703__auto__;
};
cljs.core.async.pipeline_async = function() {
  var pipeline_async = null;
  var pipeline_async__4 = function(n, to, af, from) {
    return pipeline_async.call(null, n, to, af, from, true);
  };
  var pipeline_async__5 = function(n, to, af, from, close_QMARK_) {
    return cljs.core.async.pipeline_STAR_.call(null, n, to, af, from, close_QMARK_, null, new cljs.core.Keyword(null, "async", "async", 1050769601));
  };
  pipeline_async = function(n, to, af, from, close_QMARK_) {
    switch(arguments.length) {
      case 4:
        return pipeline_async__4.call(this, n, to, af, from);
      case 5:
        return pipeline_async__5.call(this, n, to, af, from, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pipeline_async.cljs$core$IFn$_invoke$arity$4 = pipeline_async__4;
  pipeline_async.cljs$core$IFn$_invoke$arity$5 = pipeline_async__5;
  return pipeline_async;
}();
cljs.core.async.pipeline = function() {
  var pipeline = null;
  var pipeline__4 = function(n, to, xf, from) {
    return pipeline.call(null, n, to, xf, from, true);
  };
  var pipeline__5 = function(n, to, xf, from, close_QMARK_) {
    return pipeline.call(null, n, to, xf, from, close_QMARK_, null);
  };
  var pipeline__6 = function(n, to, xf, from, close_QMARK_, ex_handler) {
    return cljs.core.async.pipeline_STAR_.call(null, n, to, xf, from, close_QMARK_, ex_handler, new cljs.core.Keyword(null, "compute", "compute", 1555393130));
  };
  pipeline = function(n, to, xf, from, close_QMARK_, ex_handler) {
    switch(arguments.length) {
      case 4:
        return pipeline__4.call(this, n, to, xf, from);
      case 5:
        return pipeline__5.call(this, n, to, xf, from, close_QMARK_);
      case 6:
        return pipeline__6.call(this, n, to, xf, from, close_QMARK_, ex_handler);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pipeline.cljs$core$IFn$_invoke$arity$4 = pipeline__4;
  pipeline.cljs$core$IFn$_invoke$arity$5 = pipeline__5;
  pipeline.cljs$core$IFn$_invoke$arity$6 = pipeline__6;
  return pipeline;
}();
cljs.core.async.split = function() {
  var split = null;
  var split__2 = function(p, ch) {
    return split.call(null, p, ch, null, null);
  };
  var split__4 = function(p, ch, t_buf_or_n, f_buf_or_n) {
    var tc = cljs.core.async.chan.call(null, t_buf_or_n);
    var fc = cljs.core.async.chan.call(null, f_buf_or_n);
    var c__6703__auto___16462 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6703__auto___16462, tc, fc) {
      return function() {
        var f__6704__auto__ = function() {
          var switch__6647__auto__ = function(c__6703__auto___16462, tc, fc) {
            return function(state_16437) {
              var state_val_16438 = state_16437[1];
              if (state_val_16438 === 7) {
                var inst_16433 = state_16437[2];
                var state_16437__$1 = state_16437;
                var statearr_16439_16463 = state_16437__$1;
                statearr_16439_16463[2] = inst_16433;
                statearr_16439_16463[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_16438 === 1) {
                  var state_16437__$1 = state_16437;
                  var statearr_16440_16464 = state_16437__$1;
                  statearr_16440_16464[2] = null;
                  statearr_16440_16464[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_16438 === 4) {
                    var inst_16414 = state_16437[7];
                    var inst_16414__$1 = state_16437[2];
                    var inst_16415 = inst_16414__$1 == null;
                    var state_16437__$1 = function() {
                      var statearr_16441 = state_16437;
                      statearr_16441[7] = inst_16414__$1;
                      return statearr_16441;
                    }();
                    if (cljs.core.truth_(inst_16415)) {
                      var statearr_16442_16465 = state_16437__$1;
                      statearr_16442_16465[1] = 5;
                    } else {
                      var statearr_16443_16466 = state_16437__$1;
                      statearr_16443_16466[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_16438 === 13) {
                      var state_16437__$1 = state_16437;
                      var statearr_16444_16467 = state_16437__$1;
                      statearr_16444_16467[2] = null;
                      statearr_16444_16467[1] = 14;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_16438 === 6) {
                        var inst_16414 = state_16437[7];
                        var inst_16420 = p.call(null, inst_16414);
                        var state_16437__$1 = state_16437;
                        if (cljs.core.truth_(inst_16420)) {
                          var statearr_16445_16468 = state_16437__$1;
                          statearr_16445_16468[1] = 9;
                        } else {
                          var statearr_16446_16469 = state_16437__$1;
                          statearr_16446_16469[1] = 10;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_16438 === 3) {
                          var inst_16435 = state_16437[2];
                          var state_16437__$1 = state_16437;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_16437__$1, inst_16435);
                        } else {
                          if (state_val_16438 === 12) {
                            var state_16437__$1 = state_16437;
                            var statearr_16447_16470 = state_16437__$1;
                            statearr_16447_16470[2] = null;
                            statearr_16447_16470[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_16438 === 2) {
                              var state_16437__$1 = state_16437;
                              return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_16437__$1, 4, ch);
                            } else {
                              if (state_val_16438 === 11) {
                                var inst_16414 = state_16437[7];
                                var inst_16424 = state_16437[2];
                                var state_16437__$1 = state_16437;
                                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_16437__$1, 8, inst_16424, inst_16414);
                              } else {
                                if (state_val_16438 === 9) {
                                  var state_16437__$1 = state_16437;
                                  var statearr_16448_16471 = state_16437__$1;
                                  statearr_16448_16471[2] = tc;
                                  statearr_16448_16471[1] = 11;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_16438 === 5) {
                                    var inst_16417 = cljs.core.async.close_BANG_.call(null, tc);
                                    var inst_16418 = cljs.core.async.close_BANG_.call(null, fc);
                                    var state_16437__$1 = function() {
                                      var statearr_16449 = state_16437;
                                      statearr_16449[8] = inst_16417;
                                      return statearr_16449;
                                    }();
                                    var statearr_16450_16472 = state_16437__$1;
                                    statearr_16450_16472[2] = inst_16418;
                                    statearr_16450_16472[1] = 7;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_16438 === 14) {
                                      var inst_16431 = state_16437[2];
                                      var state_16437__$1 = state_16437;
                                      var statearr_16451_16473 = state_16437__$1;
                                      statearr_16451_16473[2] = inst_16431;
                                      statearr_16451_16473[1] = 7;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_16438 === 10) {
                                        var state_16437__$1 = state_16437;
                                        var statearr_16452_16474 = state_16437__$1;
                                        statearr_16452_16474[2] = fc;
                                        statearr_16452_16474[1] = 11;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_16438 === 8) {
                                          var inst_16426 = state_16437[2];
                                          var state_16437__$1 = state_16437;
                                          if (cljs.core.truth_(inst_16426)) {
                                            var statearr_16453_16475 = state_16437__$1;
                                            statearr_16453_16475[1] = 12;
                                          } else {
                                            var statearr_16454_16476 = state_16437__$1;
                                            statearr_16454_16476[1] = 13;
                                          }
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          return null;
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6703__auto___16462, tc, fc);
          return function(switch__6647__auto__, c__6703__auto___16462, tc, fc) {
            return function() {
              var state_machine__6648__auto__ = null;
              var state_machine__6648__auto____0 = function() {
                var statearr_16458 = [null, null, null, null, null, null, null, null, null];
                statearr_16458[0] = state_machine__6648__auto__;
                statearr_16458[1] = 1;
                return statearr_16458;
              };
              var state_machine__6648__auto____1 = function(state_16437) {
                while (true) {
                  var ret_value__6649__auto__ = function() {
                    try {
                      while (true) {
                        var result__6650__auto__ = switch__6647__auto__.call(null, state_16437);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6650__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6650__auto__;
                        }
                        break;
                      }
                    } catch (e16459) {
                      if (e16459 instanceof Object) {
                        var ex__6651__auto__ = e16459;
                        var statearr_16460_16477 = state_16437;
                        statearr_16460_16477[5] = ex__6651__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_16437);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e16459;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6649__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__16478 = state_16437;
                    state_16437 = G__16478;
                    continue;
                  } else {
                    return ret_value__6649__auto__;
                  }
                  break;
                }
              };
              state_machine__6648__auto__ = function(state_16437) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6648__auto____0.call(this);
                  case 1:
                    return state_machine__6648__auto____1.call(this, state_16437);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6648__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6648__auto____0;
              state_machine__6648__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6648__auto____1;
              return state_machine__6648__auto__;
            }();
          }(switch__6647__auto__, c__6703__auto___16462, tc, fc);
        }();
        var state__6705__auto__ = function() {
          var statearr_16461 = f__6704__auto__.call(null);
          statearr_16461[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6703__auto___16462;
          return statearr_16461;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6705__auto__);
      };
    }(c__6703__auto___16462, tc, fc));
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [tc, fc], null);
  };
  split = function(p, ch, t_buf_or_n, f_buf_or_n) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, p, ch);
      case 4:
        return split__4.call(this, p, ch, t_buf_or_n, f_buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  split.cljs$core$IFn$_invoke$arity$2 = split__2;
  split.cljs$core$IFn$_invoke$arity$4 = split__4;
  return split;
}();
cljs.core.async.reduce = function reduce(f, init, ch) {
  var c__6703__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6703__auto__) {
    return function() {
      var f__6704__auto__ = function() {
        var switch__6647__auto__ = function(c__6703__auto__) {
          return function(state_16525) {
            var state_val_16526 = state_16525[1];
            if (state_val_16526 === 7) {
              var inst_16521 = state_16525[2];
              var state_16525__$1 = state_16525;
              var statearr_16527_16543 = state_16525__$1;
              statearr_16527_16543[2] = inst_16521;
              statearr_16527_16543[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_16526 === 6) {
                var inst_16514 = state_16525[7];
                var inst_16511 = state_16525[8];
                var inst_16518 = f.call(null, inst_16511, inst_16514);
                var inst_16511__$1 = inst_16518;
                var state_16525__$1 = function() {
                  var statearr_16528 = state_16525;
                  statearr_16528[8] = inst_16511__$1;
                  return statearr_16528;
                }();
                var statearr_16529_16544 = state_16525__$1;
                statearr_16529_16544[2] = null;
                statearr_16529_16544[1] = 2;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_16526 === 5) {
                  var inst_16511 = state_16525[8];
                  var state_16525__$1 = state_16525;
                  var statearr_16530_16545 = state_16525__$1;
                  statearr_16530_16545[2] = inst_16511;
                  statearr_16530_16545[1] = 7;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_16526 === 4) {
                    var inst_16514 = state_16525[7];
                    var inst_16514__$1 = state_16525[2];
                    var inst_16515 = inst_16514__$1 == null;
                    var state_16525__$1 = function() {
                      var statearr_16531 = state_16525;
                      statearr_16531[7] = inst_16514__$1;
                      return statearr_16531;
                    }();
                    if (cljs.core.truth_(inst_16515)) {
                      var statearr_16532_16546 = state_16525__$1;
                      statearr_16532_16546[1] = 5;
                    } else {
                      var statearr_16533_16547 = state_16525__$1;
                      statearr_16533_16547[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_16526 === 3) {
                      var inst_16523 = state_16525[2];
                      var state_16525__$1 = state_16525;
                      return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_16525__$1, inst_16523);
                    } else {
                      if (state_val_16526 === 2) {
                        var state_16525__$1 = state_16525;
                        return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_16525__$1, 4, ch);
                      } else {
                        if (state_val_16526 === 1) {
                          var inst_16511 = init;
                          var state_16525__$1 = function() {
                            var statearr_16534 = state_16525;
                            statearr_16534[8] = inst_16511;
                            return statearr_16534;
                          }();
                          var statearr_16535_16548 = state_16525__$1;
                          statearr_16535_16548[2] = null;
                          statearr_16535_16548[1] = 2;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          return null;
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6703__auto__);
        return function(switch__6647__auto__, c__6703__auto__) {
          return function() {
            var state_machine__6648__auto__ = null;
            var state_machine__6648__auto____0 = function() {
              var statearr_16539 = [null, null, null, null, null, null, null, null, null];
              statearr_16539[0] = state_machine__6648__auto__;
              statearr_16539[1] = 1;
              return statearr_16539;
            };
            var state_machine__6648__auto____1 = function(state_16525) {
              while (true) {
                var ret_value__6649__auto__ = function() {
                  try {
                    while (true) {
                      var result__6650__auto__ = switch__6647__auto__.call(null, state_16525);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6650__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__6650__auto__;
                      }
                      break;
                    }
                  } catch (e16540) {
                    if (e16540 instanceof Object) {
                      var ex__6651__auto__ = e16540;
                      var statearr_16541_16549 = state_16525;
                      statearr_16541_16549[5] = ex__6651__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_16525);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e16540;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6649__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__16550 = state_16525;
                  state_16525 = G__16550;
                  continue;
                } else {
                  return ret_value__6649__auto__;
                }
                break;
              }
            };
            state_machine__6648__auto__ = function(state_16525) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6648__auto____0.call(this);
                case 1:
                  return state_machine__6648__auto____1.call(this, state_16525);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6648__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6648__auto____0;
            state_machine__6648__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6648__auto____1;
            return state_machine__6648__auto__;
          }();
        }(switch__6647__auto__, c__6703__auto__);
      }();
      var state__6705__auto__ = function() {
        var statearr_16542 = f__6704__auto__.call(null);
        statearr_16542[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6703__auto__;
        return statearr_16542;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6705__auto__);
    };
  }(c__6703__auto__));
  return c__6703__auto__;
};
cljs.core.async.onto_chan = function() {
  var onto_chan = null;
  var onto_chan__2 = function(ch, coll) {
    return onto_chan.call(null, ch, coll, true);
  };
  var onto_chan__3 = function(ch, coll, close_QMARK_) {
    var c__6703__auto__ = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6703__auto__) {
      return function() {
        var f__6704__auto__ = function() {
          var switch__6647__auto__ = function(c__6703__auto__) {
            return function(state_16624) {
              var state_val_16625 = state_16624[1];
              if (state_val_16625 === 7) {
                var inst_16606 = state_16624[2];
                var state_16624__$1 = state_16624;
                var statearr_16626_16649 = state_16624__$1;
                statearr_16626_16649[2] = inst_16606;
                statearr_16626_16649[1] = 6;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_16625 === 1) {
                  var inst_16600 = cljs.core.seq.call(null, coll);
                  var inst_16601 = inst_16600;
                  var state_16624__$1 = function() {
                    var statearr_16627 = state_16624;
                    statearr_16627[7] = inst_16601;
                    return statearr_16627;
                  }();
                  var statearr_16628_16650 = state_16624__$1;
                  statearr_16628_16650[2] = null;
                  statearr_16628_16650[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_16625 === 4) {
                    var inst_16601 = state_16624[7];
                    var inst_16604 = cljs.core.first.call(null, inst_16601);
                    var state_16624__$1 = state_16624;
                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_16624__$1, 7, ch, inst_16604);
                  } else {
                    if (state_val_16625 === 13) {
                      var inst_16618 = state_16624[2];
                      var state_16624__$1 = state_16624;
                      var statearr_16629_16651 = state_16624__$1;
                      statearr_16629_16651[2] = inst_16618;
                      statearr_16629_16651[1] = 10;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_16625 === 6) {
                        var inst_16609 = state_16624[2];
                        var state_16624__$1 = state_16624;
                        if (cljs.core.truth_(inst_16609)) {
                          var statearr_16630_16652 = state_16624__$1;
                          statearr_16630_16652[1] = 8;
                        } else {
                          var statearr_16631_16653 = state_16624__$1;
                          statearr_16631_16653[1] = 9;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_16625 === 3) {
                          var inst_16622 = state_16624[2];
                          var state_16624__$1 = state_16624;
                          return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_16624__$1, inst_16622);
                        } else {
                          if (state_val_16625 === 12) {
                            var state_16624__$1 = state_16624;
                            var statearr_16632_16654 = state_16624__$1;
                            statearr_16632_16654[2] = null;
                            statearr_16632_16654[1] = 13;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_16625 === 2) {
                              var inst_16601 = state_16624[7];
                              var state_16624__$1 = state_16624;
                              if (cljs.core.truth_(inst_16601)) {
                                var statearr_16633_16655 = state_16624__$1;
                                statearr_16633_16655[1] = 4;
                              } else {
                                var statearr_16634_16656 = state_16624__$1;
                                statearr_16634_16656[1] = 5;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_16625 === 11) {
                                var inst_16615 = cljs.core.async.close_BANG_.call(null, ch);
                                var state_16624__$1 = state_16624;
                                var statearr_16635_16657 = state_16624__$1;
                                statearr_16635_16657[2] = inst_16615;
                                statearr_16635_16657[1] = 13;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_16625 === 9) {
                                  var state_16624__$1 = state_16624;
                                  if (cljs.core.truth_(close_QMARK_)) {
                                    var statearr_16636_16658 = state_16624__$1;
                                    statearr_16636_16658[1] = 11;
                                  } else {
                                    var statearr_16637_16659 = state_16624__$1;
                                    statearr_16637_16659[1] = 12;
                                  }
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_16625 === 5) {
                                    var inst_16601 = state_16624[7];
                                    var state_16624__$1 = state_16624;
                                    var statearr_16638_16660 = state_16624__$1;
                                    statearr_16638_16660[2] = inst_16601;
                                    statearr_16638_16660[1] = 6;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_16625 === 10) {
                                      var inst_16620 = state_16624[2];
                                      var state_16624__$1 = state_16624;
                                      var statearr_16639_16661 = state_16624__$1;
                                      statearr_16639_16661[2] = inst_16620;
                                      statearr_16639_16661[1] = 3;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_16625 === 8) {
                                        var inst_16601 = state_16624[7];
                                        var inst_16611 = cljs.core.next.call(null, inst_16601);
                                        var inst_16601__$1 = inst_16611;
                                        var state_16624__$1 = function() {
                                          var statearr_16640 = state_16624;
                                          statearr_16640[7] = inst_16601__$1;
                                          return statearr_16640;
                                        }();
                                        var statearr_16641_16662 = state_16624__$1;
                                        statearr_16641_16662[2] = null;
                                        statearr_16641_16662[1] = 2;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        return null;
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6703__auto__);
          return function(switch__6647__auto__, c__6703__auto__) {
            return function() {
              var state_machine__6648__auto__ = null;
              var state_machine__6648__auto____0 = function() {
                var statearr_16645 = [null, null, null, null, null, null, null, null];
                statearr_16645[0] = state_machine__6648__auto__;
                statearr_16645[1] = 1;
                return statearr_16645;
              };
              var state_machine__6648__auto____1 = function(state_16624) {
                while (true) {
                  var ret_value__6649__auto__ = function() {
                    try {
                      while (true) {
                        var result__6650__auto__ = switch__6647__auto__.call(null, state_16624);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6650__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6650__auto__;
                        }
                        break;
                      }
                    } catch (e16646) {
                      if (e16646 instanceof Object) {
                        var ex__6651__auto__ = e16646;
                        var statearr_16647_16663 = state_16624;
                        statearr_16647_16663[5] = ex__6651__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_16624);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e16646;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6649__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__16664 = state_16624;
                    state_16624 = G__16664;
                    continue;
                  } else {
                    return ret_value__6649__auto__;
                  }
                  break;
                }
              };
              state_machine__6648__auto__ = function(state_16624) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6648__auto____0.call(this);
                  case 1:
                    return state_machine__6648__auto____1.call(this, state_16624);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6648__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6648__auto____0;
              state_machine__6648__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6648__auto____1;
              return state_machine__6648__auto__;
            }();
          }(switch__6647__auto__, c__6703__auto__);
        }();
        var state__6705__auto__ = function() {
          var statearr_16648 = f__6704__auto__.call(null);
          statearr_16648[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6703__auto__;
          return statearr_16648;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6705__auto__);
      };
    }(c__6703__auto__));
    return c__6703__auto__;
  };
  onto_chan = function(ch, coll, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return onto_chan__2.call(this, ch, coll);
      case 3:
        return onto_chan__3.call(this, ch, coll, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  onto_chan.cljs$core$IFn$_invoke$arity$2 = onto_chan__2;
  onto_chan.cljs$core$IFn$_invoke$arity$3 = onto_chan__3;
  return onto_chan;
}();
cljs.core.async.to_chan = function to_chan(coll) {
  var ch = cljs.core.async.chan.call(null, cljs.core.bounded_count.call(null, 100, coll));
  cljs.core.async.onto_chan.call(null, ch, coll);
  return ch;
};
cljs.core.async.Mux = function() {
  var obj16666 = {};
  return obj16666;
}();
cljs.core.async.muxch_STAR_ = function muxch_STAR_(_) {
  if (function() {
    var and__3913__auto__ = _;
    if (and__3913__auto__) {
      return _.cljs$core$async$Mux$muxch_STAR_$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return _.cljs$core$async$Mux$muxch_STAR_$arity$1(_);
  } else {
    var x__4569__auto__ = _ == null ? null : _;
    return function() {
      var or__3925__auto__ = cljs.core.async.muxch_STAR_[goog.typeOf(x__4569__auto__)];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core.async.muxch_STAR_["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mux.muxch*", _);
        }
      }
    }().call(null, _);
  }
};
cljs.core.async.Mult = function() {
  var obj16668 = {};
  return obj16668;
}();
cljs.core.async.tap_STAR_ = function tap_STAR_(m, ch, close_QMARK_) {
  if (function() {
    var and__3913__auto__ = m;
    if (and__3913__auto__) {
      return m.cljs$core$async$Mult$tap_STAR_$arity$3;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return m.cljs$core$async$Mult$tap_STAR_$arity$3(m, ch, close_QMARK_);
  } else {
    var x__4569__auto__ = m == null ? null : m;
    return function() {
      var or__3925__auto__ = cljs.core.async.tap_STAR_[goog.typeOf(x__4569__auto__)];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core.async.tap_STAR_["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mult.tap*", m);
        }
      }
    }().call(null, m, ch, close_QMARK_);
  }
};
cljs.core.async.untap_STAR_ = function untap_STAR_(m, ch) {
  if (function() {
    var and__3913__auto__ = m;
    if (and__3913__auto__) {
      return m.cljs$core$async$Mult$untap_STAR_$arity$2;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return m.cljs$core$async$Mult$untap_STAR_$arity$2(m, ch);
  } else {
    var x__4569__auto__ = m == null ? null : m;
    return function() {
      var or__3925__auto__ = cljs.core.async.untap_STAR_[goog.typeOf(x__4569__auto__)];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core.async.untap_STAR_["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mult.untap*", m);
        }
      }
    }().call(null, m, ch);
  }
};
cljs.core.async.untap_all_STAR_ = function untap_all_STAR_(m) {
  if (function() {
    var and__3913__auto__ = m;
    if (and__3913__auto__) {
      return m.cljs$core$async$Mult$untap_all_STAR_$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return m.cljs$core$async$Mult$untap_all_STAR_$arity$1(m);
  } else {
    var x__4569__auto__ = m == null ? null : m;
    return function() {
      var or__3925__auto__ = cljs.core.async.untap_all_STAR_[goog.typeOf(x__4569__auto__)];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core.async.untap_all_STAR_["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mult.untap-all*", m);
        }
      }
    }().call(null, m);
  }
};
cljs.core.async.mult = function mult(ch) {
  var cs = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var m = function() {
    if (typeof cljs.core.async.t16890 !== "undefined") {
    } else {
      cljs.core.async.t16890 = function(cs, ch, mult, meta16891) {
        this.cs = cs;
        this.ch = ch;
        this.mult = mult;
        this.meta16891 = meta16891;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
      };
      cljs.core.async.t16890.prototype.cljs$core$async$Mult$ = true;
      cljs.core.async.t16890.prototype.cljs$core$async$Mult$tap_STAR_$arity$3 = function(cs) {
        return function(_, ch__$1, close_QMARK_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.assoc, ch__$1, close_QMARK_);
          return null;
        };
      }(cs);
      cljs.core.async.t16890.prototype.cljs$core$async$Mult$untap_STAR_$arity$2 = function(cs) {
        return function(_, ch__$1) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.dissoc, ch__$1);
          return null;
        };
      }(cs);
      cljs.core.async.t16890.prototype.cljs$core$async$Mult$untap_all_STAR_$arity$1 = function(cs) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.reset_BANG_.call(null, self__.cs, cljs.core.PersistentArrayMap.EMPTY);
          return null;
        };
      }(cs);
      cljs.core.async.t16890.prototype.cljs$core$async$Mux$ = true;
      cljs.core.async.t16890.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(cs) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.ch;
        };
      }(cs);
      cljs.core.async.t16890.prototype.cljs$core$IMeta$_meta$arity$1 = function(cs) {
        return function(_16892) {
          var self__ = this;
          var _16892__$1 = this;
          return self__.meta16891;
        };
      }(cs);
      cljs.core.async.t16890.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(cs) {
        return function(_16892, meta16891__$1) {
          var self__ = this;
          var _16892__$1 = this;
          return new cljs.core.async.t16890(self__.cs, self__.ch, self__.mult, meta16891__$1);
        };
      }(cs);
      cljs.core.async.t16890.cljs$lang$type = true;
      cljs.core.async.t16890.cljs$lang$ctorStr = "cljs.core.async/t16890";
      cljs.core.async.t16890.cljs$lang$ctorPrWriter = function(cs) {
        return function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
          return cljs.core._write.call(null, writer__4513__auto__, "cljs.core.async/t16890");
        };
      }(cs);
      cljs.core.async.__GT_t16890 = function(cs) {
        return function __GT_t16890(cs__$1, ch__$1, mult__$1, meta16891) {
          return new cljs.core.async.t16890(cs__$1, ch__$1, mult__$1, meta16891);
        };
      }(cs);
    }
    return new cljs.core.async.t16890(cs, ch, mult, cljs.core.PersistentArrayMap.EMPTY);
  }();
  var dchan = cljs.core.async.chan.call(null, 1);
  var dctr = cljs.core.atom.call(null, null);
  var done = function(cs, m, dchan, dctr) {
    return function(_) {
      if (cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec) === 0) {
        return cljs.core.async.put_BANG_.call(null, dchan, true);
      } else {
        return null;
      }
    };
  }(cs, m, dchan, dctr);
  var c__6703__auto___17111 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6703__auto___17111, cs, m, dchan, dctr, done) {
    return function() {
      var f__6704__auto__ = function() {
        var switch__6647__auto__ = function(c__6703__auto___17111, cs, m, dchan, dctr, done) {
          return function(state_17023) {
            var state_val_17024 = state_17023[1];
            if (state_val_17024 === 7) {
              var inst_17019 = state_17023[2];
              var state_17023__$1 = state_17023;
              var statearr_17025_17112 = state_17023__$1;
              statearr_17025_17112[2] = inst_17019;
              statearr_17025_17112[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_17024 === 20) {
                var inst_16924 = state_17023[7];
                var inst_16934 = cljs.core.first.call(null, inst_16924);
                var inst_16935 = cljs.core.nth.call(null, inst_16934, 0, null);
                var inst_16936 = cljs.core.nth.call(null, inst_16934, 1, null);
                var state_17023__$1 = function() {
                  var statearr_17026 = state_17023;
                  statearr_17026[8] = inst_16935;
                  return statearr_17026;
                }();
                if (cljs.core.truth_(inst_16936)) {
                  var statearr_17027_17113 = state_17023__$1;
                  statearr_17027_17113[1] = 22;
                } else {
                  var statearr_17028_17114 = state_17023__$1;
                  statearr_17028_17114[1] = 23;
                }
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_17024 === 27) {
                  var inst_16966 = state_17023[9];
                  var inst_16964 = state_17023[10];
                  var inst_16971 = state_17023[11];
                  var inst_16895 = state_17023[12];
                  var inst_16971__$1 = cljs.core._nth.call(null, inst_16964, inst_16966);
                  var inst_16972 = cljs.core.async.put_BANG_.call(null, inst_16971__$1, inst_16895, done);
                  var state_17023__$1 = function() {
                    var statearr_17029 = state_17023;
                    statearr_17029[11] = inst_16971__$1;
                    return statearr_17029;
                  }();
                  if (cljs.core.truth_(inst_16972)) {
                    var statearr_17030_17115 = state_17023__$1;
                    statearr_17030_17115[1] = 30;
                  } else {
                    var statearr_17031_17116 = state_17023__$1;
                    statearr_17031_17116[1] = 31;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_17024 === 1) {
                    var state_17023__$1 = state_17023;
                    var statearr_17032_17117 = state_17023__$1;
                    statearr_17032_17117[2] = null;
                    statearr_17032_17117[1] = 2;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_17024 === 24) {
                      var inst_16924 = state_17023[7];
                      var inst_16941 = state_17023[2];
                      var inst_16942 = cljs.core.next.call(null, inst_16924);
                      var inst_16904 = inst_16942;
                      var inst_16905 = null;
                      var inst_16906 = 0;
                      var inst_16907 = 0;
                      var state_17023__$1 = function() {
                        var statearr_17033 = state_17023;
                        statearr_17033[13] = inst_16907;
                        statearr_17033[14] = inst_16906;
                        statearr_17033[15] = inst_16941;
                        statearr_17033[16] = inst_16905;
                        statearr_17033[17] = inst_16904;
                        return statearr_17033;
                      }();
                      var statearr_17034_17118 = state_17023__$1;
                      statearr_17034_17118[2] = null;
                      statearr_17034_17118[1] = 8;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_17024 === 39) {
                        var state_17023__$1 = state_17023;
                        var statearr_17038_17119 = state_17023__$1;
                        statearr_17038_17119[2] = null;
                        statearr_17038_17119[1] = 41;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_17024 === 4) {
                          var inst_16895 = state_17023[12];
                          var inst_16895__$1 = state_17023[2];
                          var inst_16896 = inst_16895__$1 == null;
                          var state_17023__$1 = function() {
                            var statearr_17039 = state_17023;
                            statearr_17039[12] = inst_16895__$1;
                            return statearr_17039;
                          }();
                          if (cljs.core.truth_(inst_16896)) {
                            var statearr_17040_17120 = state_17023__$1;
                            statearr_17040_17120[1] = 5;
                          } else {
                            var statearr_17041_17121 = state_17023__$1;
                            statearr_17041_17121[1] = 6;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_17024 === 15) {
                            var inst_16907 = state_17023[13];
                            var inst_16906 = state_17023[14];
                            var inst_16905 = state_17023[16];
                            var inst_16904 = state_17023[17];
                            var inst_16920 = state_17023[2];
                            var inst_16921 = inst_16907 + 1;
                            var tmp17035 = inst_16906;
                            var tmp17036 = inst_16905;
                            var tmp17037 = inst_16904;
                            var inst_16904__$1 = tmp17037;
                            var inst_16905__$1 = tmp17036;
                            var inst_16906__$1 = tmp17035;
                            var inst_16907__$1 = inst_16921;
                            var state_17023__$1 = function() {
                              var statearr_17042 = state_17023;
                              statearr_17042[13] = inst_16907__$1;
                              statearr_17042[14] = inst_16906__$1;
                              statearr_17042[16] = inst_16905__$1;
                              statearr_17042[17] = inst_16904__$1;
                              statearr_17042[18] = inst_16920;
                              return statearr_17042;
                            }();
                            var statearr_17043_17122 = state_17023__$1;
                            statearr_17043_17122[2] = null;
                            statearr_17043_17122[1] = 8;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_17024 === 21) {
                              var inst_16945 = state_17023[2];
                              var state_17023__$1 = state_17023;
                              var statearr_17047_17123 = state_17023__$1;
                              statearr_17047_17123[2] = inst_16945;
                              statearr_17047_17123[1] = 18;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_17024 === 31) {
                                var inst_16971 = state_17023[11];
                                var inst_16975 = done.call(null, null);
                                var inst_16976 = cljs.core.async.untap_STAR_.call(null, m, inst_16971);
                                var state_17023__$1 = function() {
                                  var statearr_17048 = state_17023;
                                  statearr_17048[19] = inst_16975;
                                  return statearr_17048;
                                }();
                                var statearr_17049_17124 = state_17023__$1;
                                statearr_17049_17124[2] = inst_16976;
                                statearr_17049_17124[1] = 32;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_17024 === 32) {
                                  var inst_16965 = state_17023[20];
                                  var inst_16963 = state_17023[21];
                                  var inst_16966 = state_17023[9];
                                  var inst_16964 = state_17023[10];
                                  var inst_16978 = state_17023[2];
                                  var inst_16979 = inst_16966 + 1;
                                  var tmp17044 = inst_16965;
                                  var tmp17045 = inst_16963;
                                  var tmp17046 = inst_16964;
                                  var inst_16963__$1 = tmp17045;
                                  var inst_16964__$1 = tmp17046;
                                  var inst_16965__$1 = tmp17044;
                                  var inst_16966__$1 = inst_16979;
                                  var state_17023__$1 = function() {
                                    var statearr_17050 = state_17023;
                                    statearr_17050[20] = inst_16965__$1;
                                    statearr_17050[21] = inst_16963__$1;
                                    statearr_17050[22] = inst_16978;
                                    statearr_17050[9] = inst_16966__$1;
                                    statearr_17050[10] = inst_16964__$1;
                                    return statearr_17050;
                                  }();
                                  var statearr_17051_17125 = state_17023__$1;
                                  statearr_17051_17125[2] = null;
                                  statearr_17051_17125[1] = 25;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_17024 === 40) {
                                    var inst_16991 = state_17023[23];
                                    var inst_16995 = done.call(null, null);
                                    var inst_16996 = cljs.core.async.untap_STAR_.call(null, m, inst_16991);
                                    var state_17023__$1 = function() {
                                      var statearr_17052 = state_17023;
                                      statearr_17052[24] = inst_16995;
                                      return statearr_17052;
                                    }();
                                    var statearr_17053_17126 = state_17023__$1;
                                    statearr_17053_17126[2] = inst_16996;
                                    statearr_17053_17126[1] = 41;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_17024 === 33) {
                                      var inst_16982 = state_17023[25];
                                      var inst_16984 = cljs.core.chunked_seq_QMARK_.call(null, inst_16982);
                                      var state_17023__$1 = state_17023;
                                      if (inst_16984) {
                                        var statearr_17054_17127 = state_17023__$1;
                                        statearr_17054_17127[1] = 36;
                                      } else {
                                        var statearr_17055_17128 = state_17023__$1;
                                        statearr_17055_17128[1] = 37;
                                      }
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_17024 === 13) {
                                        var inst_16914 = state_17023[26];
                                        var inst_16917 = cljs.core.async.close_BANG_.call(null, inst_16914);
                                        var state_17023__$1 = state_17023;
                                        var statearr_17056_17129 = state_17023__$1;
                                        statearr_17056_17129[2] = inst_16917;
                                        statearr_17056_17129[1] = 15;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_17024 === 22) {
                                          var inst_16935 = state_17023[8];
                                          var inst_16938 = cljs.core.async.close_BANG_.call(null, inst_16935);
                                          var state_17023__$1 = state_17023;
                                          var statearr_17057_17130 = state_17023__$1;
                                          statearr_17057_17130[2] = inst_16938;
                                          statearr_17057_17130[1] = 24;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_17024 === 36) {
                                            var inst_16982 = state_17023[25];
                                            var inst_16986 = cljs.core.chunk_first.call(null, inst_16982);
                                            var inst_16987 = cljs.core.chunk_rest.call(null, inst_16982);
                                            var inst_16988 = cljs.core.count.call(null, inst_16986);
                                            var inst_16963 = inst_16987;
                                            var inst_16964 = inst_16986;
                                            var inst_16965 = inst_16988;
                                            var inst_16966 = 0;
                                            var state_17023__$1 = function() {
                                              var statearr_17058 = state_17023;
                                              statearr_17058[20] = inst_16965;
                                              statearr_17058[21] = inst_16963;
                                              statearr_17058[9] = inst_16966;
                                              statearr_17058[10] = inst_16964;
                                              return statearr_17058;
                                            }();
                                            var statearr_17059_17131 = state_17023__$1;
                                            statearr_17059_17131[2] = null;
                                            statearr_17059_17131[1] = 25;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_17024 === 41) {
                                              var inst_16982 = state_17023[25];
                                              var inst_16998 = state_17023[2];
                                              var inst_16999 = cljs.core.next.call(null, inst_16982);
                                              var inst_16963 = inst_16999;
                                              var inst_16964 = null;
                                              var inst_16965 = 0;
                                              var inst_16966 = 0;
                                              var state_17023__$1 = function() {
                                                var statearr_17060 = state_17023;
                                                statearr_17060[20] = inst_16965;
                                                statearr_17060[27] = inst_16998;
                                                statearr_17060[21] = inst_16963;
                                                statearr_17060[9] = inst_16966;
                                                statearr_17060[10] = inst_16964;
                                                return statearr_17060;
                                              }();
                                              var statearr_17061_17132 = state_17023__$1;
                                              statearr_17061_17132[2] = null;
                                              statearr_17061_17132[1] = 25;
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_17024 === 43) {
                                                var state_17023__$1 = state_17023;
                                                var statearr_17062_17133 = state_17023__$1;
                                                statearr_17062_17133[2] = null;
                                                statearr_17062_17133[1] = 44;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_17024 === 29) {
                                                  var inst_17007 = state_17023[2];
                                                  var state_17023__$1 = state_17023;
                                                  var statearr_17063_17134 = state_17023__$1;
                                                  statearr_17063_17134[2] = inst_17007;
                                                  statearr_17063_17134[1] = 26;
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_17024 === 44) {
                                                    var inst_17016 = state_17023[2];
                                                    var state_17023__$1 = function() {
                                                      var statearr_17064 = state_17023;
                                                      statearr_17064[28] = inst_17016;
                                                      return statearr_17064;
                                                    }();
                                                    var statearr_17065_17135 = state_17023__$1;
                                                    statearr_17065_17135[2] = null;
                                                    statearr_17065_17135[1] = 2;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_17024 === 6) {
                                                      var inst_16955 = state_17023[29];
                                                      var inst_16954 = cljs.core.deref.call(null, cs);
                                                      var inst_16955__$1 = cljs.core.keys.call(null, inst_16954);
                                                      var inst_16956 = cljs.core.count.call(null, inst_16955__$1);
                                                      var inst_16957 = cljs.core.reset_BANG_.call(null, dctr, inst_16956);
                                                      var inst_16962 = cljs.core.seq.call(null, inst_16955__$1);
                                                      var inst_16963 = inst_16962;
                                                      var inst_16964 = null;
                                                      var inst_16965 = 0;
                                                      var inst_16966 = 0;
                                                      var state_17023__$1 = function() {
                                                        var statearr_17066 = state_17023;
                                                        statearr_17066[29] = inst_16955__$1;
                                                        statearr_17066[20] = inst_16965;
                                                        statearr_17066[21] = inst_16963;
                                                        statearr_17066[9] = inst_16966;
                                                        statearr_17066[10] = inst_16964;
                                                        statearr_17066[30] = inst_16957;
                                                        return statearr_17066;
                                                      }();
                                                      var statearr_17067_17136 = state_17023__$1;
                                                      statearr_17067_17136[2] = null;
                                                      statearr_17067_17136[1] = 25;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      if (state_val_17024 === 28) {
                                                        var inst_16963 = state_17023[21];
                                                        var inst_16982 = state_17023[25];
                                                        var inst_16982__$1 = cljs.core.seq.call(null, inst_16963);
                                                        var state_17023__$1 = function() {
                                                          var statearr_17068 = state_17023;
                                                          statearr_17068[25] = inst_16982__$1;
                                                          return statearr_17068;
                                                        }();
                                                        if (inst_16982__$1) {
                                                          var statearr_17069_17137 = state_17023__$1;
                                                          statearr_17069_17137[1] = 33;
                                                        } else {
                                                          var statearr_17070_17138 = state_17023__$1;
                                                          statearr_17070_17138[1] = 34;
                                                        }
                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                      } else {
                                                        if (state_val_17024 === 25) {
                                                          var inst_16965 = state_17023[20];
                                                          var inst_16966 = state_17023[9];
                                                          var inst_16968 = inst_16966 < inst_16965;
                                                          var inst_16969 = inst_16968;
                                                          var state_17023__$1 = state_17023;
                                                          if (cljs.core.truth_(inst_16969)) {
                                                            var statearr_17071_17139 = state_17023__$1;
                                                            statearr_17071_17139[1] = 27;
                                                          } else {
                                                            var statearr_17072_17140 = state_17023__$1;
                                                            statearr_17072_17140[1] = 28;
                                                          }
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          if (state_val_17024 === 34) {
                                                            var state_17023__$1 = state_17023;
                                                            var statearr_17073_17141 = state_17023__$1;
                                                            statearr_17073_17141[2] = null;
                                                            statearr_17073_17141[1] = 35;
                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                          } else {
                                                            if (state_val_17024 === 17) {
                                                              var state_17023__$1 = state_17023;
                                                              var statearr_17074_17142 = state_17023__$1;
                                                              statearr_17074_17142[2] = null;
                                                              statearr_17074_17142[1] = 18;
                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                            } else {
                                                              if (state_val_17024 === 3) {
                                                                var inst_17021 = state_17023[2];
                                                                var state_17023__$1 = state_17023;
                                                                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_17023__$1, inst_17021);
                                                              } else {
                                                                if (state_val_17024 === 12) {
                                                                  var inst_16950 = state_17023[2];
                                                                  var state_17023__$1 = state_17023;
                                                                  var statearr_17075_17143 = state_17023__$1;
                                                                  statearr_17075_17143[2] = inst_16950;
                                                                  statearr_17075_17143[1] = 9;
                                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                } else {
                                                                  if (state_val_17024 === 2) {
                                                                    var state_17023__$1 = state_17023;
                                                                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_17023__$1, 4, ch);
                                                                  } else {
                                                                    if (state_val_17024 === 23) {
                                                                      var state_17023__$1 = state_17023;
                                                                      var statearr_17076_17144 = state_17023__$1;
                                                                      statearr_17076_17144[2] = null;
                                                                      statearr_17076_17144[1] = 24;
                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                    } else {
                                                                      if (state_val_17024 === 35) {
                                                                        var inst_17005 = state_17023[2];
                                                                        var state_17023__$1 = state_17023;
                                                                        var statearr_17077_17145 = state_17023__$1;
                                                                        statearr_17077_17145[2] = inst_17005;
                                                                        statearr_17077_17145[1] = 29;
                                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                      } else {
                                                                        if (state_val_17024 === 19) {
                                                                          var inst_16924 = state_17023[7];
                                                                          var inst_16928 = cljs.core.chunk_first.call(null, inst_16924);
                                                                          var inst_16929 = cljs.core.chunk_rest.call(null, inst_16924);
                                                                          var inst_16930 = cljs.core.count.call(null, inst_16928);
                                                                          var inst_16904 = inst_16929;
                                                                          var inst_16905 = inst_16928;
                                                                          var inst_16906 = inst_16930;
                                                                          var inst_16907 = 0;
                                                                          var state_17023__$1 = function() {
                                                                            var statearr_17078 = state_17023;
                                                                            statearr_17078[13] = inst_16907;
                                                                            statearr_17078[14] = inst_16906;
                                                                            statearr_17078[16] = inst_16905;
                                                                            statearr_17078[17] = inst_16904;
                                                                            return statearr_17078;
                                                                          }();
                                                                          var statearr_17079_17146 = state_17023__$1;
                                                                          statearr_17079_17146[2] = null;
                                                                          statearr_17079_17146[1] = 8;
                                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                        } else {
                                                                          if (state_val_17024 === 11) {
                                                                            var inst_16924 = state_17023[7];
                                                                            var inst_16904 = state_17023[17];
                                                                            var inst_16924__$1 = cljs.core.seq.call(null, inst_16904);
                                                                            var state_17023__$1 = function() {
                                                                              var statearr_17080 = state_17023;
                                                                              statearr_17080[7] = inst_16924__$1;
                                                                              return statearr_17080;
                                                                            }();
                                                                            if (inst_16924__$1) {
                                                                              var statearr_17081_17147 = state_17023__$1;
                                                                              statearr_17081_17147[1] = 16;
                                                                            } else {
                                                                              var statearr_17082_17148 = state_17023__$1;
                                                                              statearr_17082_17148[1] = 17;
                                                                            }
                                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                          } else {
                                                                            if (state_val_17024 === 9) {
                                                                              var inst_16952 = state_17023[2];
                                                                              var state_17023__$1 = state_17023;
                                                                              var statearr_17083_17149 = state_17023__$1;
                                                                              statearr_17083_17149[2] = inst_16952;
                                                                              statearr_17083_17149[1] = 7;
                                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                            } else {
                                                                              if (state_val_17024 === 5) {
                                                                                var inst_16902 = cljs.core.deref.call(null, cs);
                                                                                var inst_16903 = cljs.core.seq.call(null, inst_16902);
                                                                                var inst_16904 = inst_16903;
                                                                                var inst_16905 = null;
                                                                                var inst_16906 = 0;
                                                                                var inst_16907 = 0;
                                                                                var state_17023__$1 = function() {
                                                                                  var statearr_17084 = state_17023;
                                                                                  statearr_17084[13] = inst_16907;
                                                                                  statearr_17084[14] = inst_16906;
                                                                                  statearr_17084[16] = inst_16905;
                                                                                  statearr_17084[17] = inst_16904;
                                                                                  return statearr_17084;
                                                                                }();
                                                                                var statearr_17085_17150 = state_17023__$1;
                                                                                statearr_17085_17150[2] = null;
                                                                                statearr_17085_17150[1] = 8;
                                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                              } else {
                                                                                if (state_val_17024 === 14) {
                                                                                  var state_17023__$1 = state_17023;
                                                                                  var statearr_17086_17151 = state_17023__$1;
                                                                                  statearr_17086_17151[2] = null;
                                                                                  statearr_17086_17151[1] = 15;
                                                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                } else {
                                                                                  if (state_val_17024 === 45) {
                                                                                    var inst_17013 = state_17023[2];
                                                                                    var state_17023__$1 = state_17023;
                                                                                    var statearr_17087_17152 = state_17023__$1;
                                                                                    statearr_17087_17152[2] = inst_17013;
                                                                                    statearr_17087_17152[1] = 44;
                                                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                  } else {
                                                                                    if (state_val_17024 === 26) {
                                                                                      var inst_16955 = state_17023[29];
                                                                                      var inst_17009 = state_17023[2];
                                                                                      var inst_17010 = cljs.core.seq.call(null, inst_16955);
                                                                                      var state_17023__$1 = function() {
                                                                                        var statearr_17088 = state_17023;
                                                                                        statearr_17088[31] = inst_17009;
                                                                                        return statearr_17088;
                                                                                      }();
                                                                                      if (inst_17010) {
                                                                                        var statearr_17089_17153 = state_17023__$1;
                                                                                        statearr_17089_17153[1] = 42;
                                                                                      } else {
                                                                                        var statearr_17090_17154 = state_17023__$1;
                                                                                        statearr_17090_17154[1] = 43;
                                                                                      }
                                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                    } else {
                                                                                      if (state_val_17024 === 16) {
                                                                                        var inst_16924 = state_17023[7];
                                                                                        var inst_16926 = cljs.core.chunked_seq_QMARK_.call(null, inst_16924);
                                                                                        var state_17023__$1 = state_17023;
                                                                                        if (inst_16926) {
                                                                                          var statearr_17091_17155 = state_17023__$1;
                                                                                          statearr_17091_17155[1] = 19;
                                                                                        } else {
                                                                                          var statearr_17092_17156 = state_17023__$1;
                                                                                          statearr_17092_17156[1] = 20;
                                                                                        }
                                                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                      } else {
                                                                                        if (state_val_17024 === 38) {
                                                                                          var inst_17002 = state_17023[2];
                                                                                          var state_17023__$1 = state_17023;
                                                                                          var statearr_17093_17157 = state_17023__$1;
                                                                                          statearr_17093_17157[2] = inst_17002;
                                                                                          statearr_17093_17157[1] = 35;
                                                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                        } else {
                                                                                          if (state_val_17024 === 30) {
                                                                                            var state_17023__$1 = state_17023;
                                                                                            var statearr_17094_17158 = state_17023__$1;
                                                                                            statearr_17094_17158[2] = null;
                                                                                            statearr_17094_17158[1] = 32;
                                                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                          } else {
                                                                                            if (state_val_17024 === 10) {
                                                                                              var inst_16907 = state_17023[13];
                                                                                              var inst_16905 = state_17023[16];
                                                                                              var inst_16913 = cljs.core._nth.call(null, inst_16905, inst_16907);
                                                                                              var inst_16914 = cljs.core.nth.call(null, inst_16913, 0, null);
                                                                                              var inst_16915 = cljs.core.nth.call(null, inst_16913, 1, null);
                                                                                              var state_17023__$1 = function() {
                                                                                                var statearr_17095 = state_17023;
                                                                                                statearr_17095[26] = inst_16914;
                                                                                                return statearr_17095;
                                                                                              }();
                                                                                              if (cljs.core.truth_(inst_16915)) {
                                                                                                var statearr_17096_17159 = state_17023__$1;
                                                                                                statearr_17096_17159[1] = 13;
                                                                                              } else {
                                                                                                var statearr_17097_17160 = state_17023__$1;
                                                                                                statearr_17097_17160[1] = 14;
                                                                                              }
                                                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                            } else {
                                                                                              if (state_val_17024 === 18) {
                                                                                                var inst_16948 = state_17023[2];
                                                                                                var state_17023__$1 = state_17023;
                                                                                                var statearr_17098_17161 = state_17023__$1;
                                                                                                statearr_17098_17161[2] = inst_16948;
                                                                                                statearr_17098_17161[1] = 12;
                                                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                              } else {
                                                                                                if (state_val_17024 === 42) {
                                                                                                  var state_17023__$1 = state_17023;
                                                                                                  return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_17023__$1, 45, dchan);
                                                                                                } else {
                                                                                                  if (state_val_17024 === 37) {
                                                                                                    var inst_16982 = state_17023[25];
                                                                                                    var inst_16895 = state_17023[12];
                                                                                                    var inst_16991 = state_17023[23];
                                                                                                    var inst_16991__$1 = cljs.core.first.call(null, inst_16982);
                                                                                                    var inst_16992 = cljs.core.async.put_BANG_.call(null, inst_16991__$1, inst_16895, done);
                                                                                                    var state_17023__$1 = function() {
                                                                                                      var statearr_17099 = state_17023;
                                                                                                      statearr_17099[23] = inst_16991__$1;
                                                                                                      return statearr_17099;
                                                                                                    }();
                                                                                                    if (cljs.core.truth_(inst_16992)) {
                                                                                                      var statearr_17100_17162 = state_17023__$1;
                                                                                                      statearr_17100_17162[1] = 39;
                                                                                                    } else {
                                                                                                      var statearr_17101_17163 = state_17023__$1;
                                                                                                      statearr_17101_17163[1] = 40;
                                                                                                    }
                                                                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                                  } else {
                                                                                                    if (state_val_17024 === 8) {
                                                                                                      var inst_16907 = state_17023[13];
                                                                                                      var inst_16906 = state_17023[14];
                                                                                                      var inst_16909 = inst_16907 < inst_16906;
                                                                                                      var inst_16910 = inst_16909;
                                                                                                      var state_17023__$1 = state_17023;
                                                                                                      if (cljs.core.truth_(inst_16910)) {
                                                                                                        var statearr_17102_17164 = state_17023__$1;
                                                                                                        statearr_17102_17164[1] = 10;
                                                                                                      } else {
                                                                                                        var statearr_17103_17165 = state_17023__$1;
                                                                                                        statearr_17103_17165[1] = 11;
                                                                                                      }
                                                                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                                                                    } else {
                                                                                                      return null;
                                                                                                    }
                                                                                                  }
                                                                                                }
                                                                                              }
                                                                                            }
                                                                                          }
                                                                                        }
                                                                                      }
                                                                                    }
                                                                                  }
                                                                                }
                                                                              }
                                                                            }
                                                                          }
                                                                        }
                                                                      }
                                                                    }
                                                                  }
                                                                }
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6703__auto___17111, cs, m, dchan, dctr, done);
        return function(switch__6647__auto__, c__6703__auto___17111, cs, m, dchan, dctr, done) {
          return function() {
            var state_machine__6648__auto__ = null;
            var state_machine__6648__auto____0 = function() {
              var statearr_17107 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_17107[0] = state_machine__6648__auto__;
              statearr_17107[1] = 1;
              return statearr_17107;
            };
            var state_machine__6648__auto____1 = function(state_17023) {
              while (true) {
                var ret_value__6649__auto__ = function() {
                  try {
                    while (true) {
                      var result__6650__auto__ = switch__6647__auto__.call(null, state_17023);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6650__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__6650__auto__;
                      }
                      break;
                    }
                  } catch (e17108) {
                    if (e17108 instanceof Object) {
                      var ex__6651__auto__ = e17108;
                      var statearr_17109_17166 = state_17023;
                      statearr_17109_17166[5] = ex__6651__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_17023);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e17108;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6649__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__17167 = state_17023;
                  state_17023 = G__17167;
                  continue;
                } else {
                  return ret_value__6649__auto__;
                }
                break;
              }
            };
            state_machine__6648__auto__ = function(state_17023) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6648__auto____0.call(this);
                case 1:
                  return state_machine__6648__auto____1.call(this, state_17023);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6648__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6648__auto____0;
            state_machine__6648__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6648__auto____1;
            return state_machine__6648__auto__;
          }();
        }(switch__6647__auto__, c__6703__auto___17111, cs, m, dchan, dctr, done);
      }();
      var state__6705__auto__ = function() {
        var statearr_17110 = f__6704__auto__.call(null);
        statearr_17110[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6703__auto___17111;
        return statearr_17110;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6705__auto__);
    };
  }(c__6703__auto___17111, cs, m, dchan, dctr, done));
  return m;
};
cljs.core.async.tap = function() {
  var tap = null;
  var tap__2 = function(mult, ch) {
    return tap.call(null, mult, ch, true);
  };
  var tap__3 = function(mult, ch, close_QMARK_) {
    cljs.core.async.tap_STAR_.call(null, mult, ch, close_QMARK_);
    return ch;
  };
  tap = function(mult, ch, close_QMARK_) {
    switch(arguments.length) {
      case 2:
        return tap__2.call(this, mult, ch);
      case 3:
        return tap__3.call(this, mult, ch, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  tap.cljs$core$IFn$_invoke$arity$2 = tap__2;
  tap.cljs$core$IFn$_invoke$arity$3 = tap__3;
  return tap;
}();
cljs.core.async.untap = function untap(mult, ch) {
  return cljs.core.async.untap_STAR_.call(null, mult, ch);
};
cljs.core.async.untap_all = function untap_all(mult) {
  return cljs.core.async.untap_all_STAR_.call(null, mult);
};
cljs.core.async.Mix = function() {
  var obj17169 = {};
  return obj17169;
}();
cljs.core.async.admix_STAR_ = function admix_STAR_(m, ch) {
  if (function() {
    var and__3913__auto__ = m;
    if (and__3913__auto__) {
      return m.cljs$core$async$Mix$admix_STAR_$arity$2;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$admix_STAR_$arity$2(m, ch);
  } else {
    var x__4569__auto__ = m == null ? null : m;
    return function() {
      var or__3925__auto__ = cljs.core.async.admix_STAR_[goog.typeOf(x__4569__auto__)];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core.async.admix_STAR_["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.admix*", m);
        }
      }
    }().call(null, m, ch);
  }
};
cljs.core.async.unmix_STAR_ = function unmix_STAR_(m, ch) {
  if (function() {
    var and__3913__auto__ = m;
    if (and__3913__auto__) {
      return m.cljs$core$async$Mix$unmix_STAR_$arity$2;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$unmix_STAR_$arity$2(m, ch);
  } else {
    var x__4569__auto__ = m == null ? null : m;
    return function() {
      var or__3925__auto__ = cljs.core.async.unmix_STAR_[goog.typeOf(x__4569__auto__)];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core.async.unmix_STAR_["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.unmix*", m);
        }
      }
    }().call(null, m, ch);
  }
};
cljs.core.async.unmix_all_STAR_ = function unmix_all_STAR_(m) {
  if (function() {
    var and__3913__auto__ = m;
    if (and__3913__auto__) {
      return m.cljs$core$async$Mix$unmix_all_STAR_$arity$1;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$unmix_all_STAR_$arity$1(m);
  } else {
    var x__4569__auto__ = m == null ? null : m;
    return function() {
      var or__3925__auto__ = cljs.core.async.unmix_all_STAR_[goog.typeOf(x__4569__auto__)];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core.async.unmix_all_STAR_["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.unmix-all*", m);
        }
      }
    }().call(null, m);
  }
};
cljs.core.async.toggle_STAR_ = function toggle_STAR_(m, state_map) {
  if (function() {
    var and__3913__auto__ = m;
    if (and__3913__auto__) {
      return m.cljs$core$async$Mix$toggle_STAR_$arity$2;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$toggle_STAR_$arity$2(m, state_map);
  } else {
    var x__4569__auto__ = m == null ? null : m;
    return function() {
      var or__3925__auto__ = cljs.core.async.toggle_STAR_[goog.typeOf(x__4569__auto__)];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core.async.toggle_STAR_["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.toggle*", m);
        }
      }
    }().call(null, m, state_map);
  }
};
cljs.core.async.solo_mode_STAR_ = function solo_mode_STAR_(m, mode) {
  if (function() {
    var and__3913__auto__ = m;
    if (and__3913__auto__) {
      return m.cljs$core$async$Mix$solo_mode_STAR_$arity$2;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return m.cljs$core$async$Mix$solo_mode_STAR_$arity$2(m, mode);
  } else {
    var x__4569__auto__ = m == null ? null : m;
    return function() {
      var or__3925__auto__ = cljs.core.async.solo_mode_STAR_[goog.typeOf(x__4569__auto__)];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core.async.solo_mode_STAR_["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Mix.solo-mode*", m);
        }
      }
    }().call(null, m, mode);
  }
};
cljs.core.async.ioc_alts_BANG_ = function() {
  var ioc_alts_BANG___delegate = function(state, cont_block, ports, p__17170) {
    var map__17175 = p__17170;
    var map__17175__$1 = cljs.core.seq_QMARK_.call(null, map__17175) ? cljs.core.apply.call(null, cljs.core.hash_map, map__17175) : map__17175;
    var opts = map__17175__$1;
    var statearr_17176_17179 = state;
    statearr_17176_17179[cljs.core.async.impl.ioc_helpers.STATE_IDX] = cont_block;
    var temp__4126__auto__ = cljs.core.async.do_alts.call(null, function(map__17175, map__17175__$1, opts) {
      return function(val) {
        var statearr_17177_17180 = state;
        statearr_17177_17180[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = val;
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state);
      };
    }(map__17175, map__17175__$1, opts), ports, opts);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var cb = temp__4126__auto__;
      var statearr_17178_17181 = state;
      statearr_17178_17181[cljs.core.async.impl.ioc_helpers.VALUE_IDX] = cljs.core.deref.call(null, cb);
      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
    } else {
      return null;
    }
  };
  var ioc_alts_BANG_ = function(state, cont_block, ports, var_args) {
    var p__17170 = null;
    if (arguments.length > 3) {
      var G__17182__i = 0, G__17182__a = new Array(arguments.length - 3);
      while (G__17182__i < G__17182__a.length) {
        G__17182__a[G__17182__i] = arguments[G__17182__i + 3];
        ++G__17182__i;
      }
      p__17170 = new cljs.core.IndexedSeq(G__17182__a, 0);
    }
    return ioc_alts_BANG___delegate.call(this, state, cont_block, ports, p__17170);
  };
  ioc_alts_BANG_.cljs$lang$maxFixedArity = 3;
  ioc_alts_BANG_.cljs$lang$applyTo = function(arglist__17183) {
    var state = cljs.core.first(arglist__17183);
    arglist__17183 = cljs.core.next(arglist__17183);
    var cont_block = cljs.core.first(arglist__17183);
    arglist__17183 = cljs.core.next(arglist__17183);
    var ports = cljs.core.first(arglist__17183);
    var p__17170 = cljs.core.rest(arglist__17183);
    return ioc_alts_BANG___delegate(state, cont_block, ports, p__17170);
  };
  ioc_alts_BANG_.cljs$core$IFn$_invoke$arity$variadic = ioc_alts_BANG___delegate;
  return ioc_alts_BANG_;
}();
cljs.core.async.mix = function mix(out) {
  var cs = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
  var solo_modes = new cljs.core.PersistentHashSet(null, new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "pause", "pause", -2095325672), null, new cljs.core.Keyword(null, "mute", "mute", 1151223646), null], null), null);
  var attrs = cljs.core.conj.call(null, solo_modes, new cljs.core.Keyword(null, "solo", "solo", -316350075));
  var solo_mode = cljs.core.atom.call(null, new cljs.core.Keyword(null, "mute", "mute", 1151223646));
  var change = cljs.core.async.chan.call(null);
  var changed = function(cs, solo_modes, attrs, solo_mode, change) {
    return function() {
      return cljs.core.async.put_BANG_.call(null, change, true);
    };
  }(cs, solo_modes, attrs, solo_mode, change);
  var pick = function(cs, solo_modes, attrs, solo_mode, change, changed) {
    return function(attr, chs) {
      return cljs.core.reduce_kv.call(null, function(cs, solo_modes, attrs, solo_mode, change, changed) {
        return function(ret, c, v) {
          if (cljs.core.truth_(attr.call(null, v))) {
            return cljs.core.conj.call(null, ret, c);
          } else {
            return ret;
          }
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed), cljs.core.PersistentHashSet.EMPTY, chs);
    };
  }(cs, solo_modes, attrs, solo_mode, change, changed);
  var calc_state = function(cs, solo_modes, attrs, solo_mode, change, changed, pick) {
    return function() {
      var chs = cljs.core.deref.call(null, cs);
      var mode = cljs.core.deref.call(null, solo_mode);
      var solos = pick.call(null, new cljs.core.Keyword(null, "solo", "solo", -316350075), chs);
      var pauses = pick.call(null, new cljs.core.Keyword(null, "pause", "pause", -2095325672), chs);
      return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "solos", "solos", 1441458643), solos, new cljs.core.Keyword(null, "mutes", "mutes", 1068806309), pick.call(null, new cljs.core.Keyword(null, "mute", "mute", 1151223646), chs), new cljs.core.Keyword(null, "reads", "reads", -1215067361), cljs.core.conj.call(null, cljs.core._EQ_.call(null, mode, new cljs.core.Keyword(null, "pause", "pause", -2095325672)) && !cljs.core.empty_QMARK_.call(null, solos) ? cljs.core.vec.call(null, 
      solos) : cljs.core.vec.call(null, cljs.core.remove.call(null, pauses, cljs.core.keys.call(null, chs))), change)], null);
    };
  }(cs, solo_modes, attrs, solo_mode, change, changed, pick);
  var m = function() {
    if (typeof cljs.core.async.t17303 !== "undefined") {
    } else {
      cljs.core.async.t17303 = function(change, mix, solo_mode, pick, cs, calc_state, out, changed, solo_modes, attrs, meta17304) {
        this.change = change;
        this.mix = mix;
        this.solo_mode = solo_mode;
        this.pick = pick;
        this.cs = cs;
        this.calc_state = calc_state;
        this.out = out;
        this.changed = changed;
        this.solo_modes = solo_modes;
        this.attrs = attrs;
        this.meta17304 = meta17304;
        this.cljs$lang$protocol_mask$partition1$ = 0;
        this.cljs$lang$protocol_mask$partition0$ = 393216;
      };
      cljs.core.async.t17303.prototype.cljs$core$async$Mix$ = true;
      cljs.core.async.t17303.prototype.cljs$core$async$Mix$admix_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, ch) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.assoc, ch, cljs.core.PersistentArrayMap.EMPTY);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t17303.prototype.cljs$core$async$Mix$unmix_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, ch) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.dissoc, ch);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t17303.prototype.cljs$core$async$Mix$unmix_all_STAR_$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.reset_BANG_.call(null, self__.cs, cljs.core.PersistentArrayMap.EMPTY);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t17303.prototype.cljs$core$async$Mix$toggle_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, state_map) {
          var self__ = this;
          var ___$1 = this;
          cljs.core.swap_BANG_.call(null, self__.cs, cljs.core.partial.call(null, cljs.core.merge_with, cljs.core.merge), state_map);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t17303.prototype.cljs$core$async$Mix$solo_mode_STAR_$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_, mode) {
          var self__ = this;
          var ___$1 = this;
          if (cljs.core.truth_(self__.solo_modes.call(null, mode))) {
          } else {
            throw new Error([cljs.core.str("Assert failed: "), cljs.core.str([cljs.core.str("mode must be one of: "), cljs.core.str(self__.solo_modes)].join("")), cljs.core.str("\n"), cljs.core.str(cljs.core.pr_str.call(null, cljs.core.list(new cljs.core.Symbol(null, "solo-modes", "solo-modes", 882180540, null), new cljs.core.Symbol(null, "mode", "mode", -2000032078, null))))].join(""));
          }
          cljs.core.reset_BANG_.call(null, self__.solo_mode, mode);
          return self__.changed.call(null);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t17303.prototype.cljs$core$async$Mux$ = true;
      cljs.core.async.t17303.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_) {
          var self__ = this;
          var ___$1 = this;
          return self__.out;
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t17303.prototype.cljs$core$IMeta$_meta$arity$1 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_17305) {
          var self__ = this;
          var _17305__$1 = this;
          return self__.meta17304;
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t17303.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(_17305, meta17304__$1) {
          var self__ = this;
          var _17305__$1 = this;
          return new cljs.core.async.t17303(self__.change, self__.mix, self__.solo_mode, self__.pick, self__.cs, self__.calc_state, self__.out, self__.changed, self__.solo_modes, self__.attrs, meta17304__$1);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.t17303.cljs$lang$type = true;
      cljs.core.async.t17303.cljs$lang$ctorStr = "cljs.core.async/t17303";
      cljs.core.async.t17303.cljs$lang$ctorPrWriter = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
          return cljs.core._write.call(null, writer__4513__auto__, "cljs.core.async/t17303");
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
      cljs.core.async.__GT_t17303 = function(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state) {
        return function __GT_t17303(change__$1, mix__$1, solo_mode__$1, pick__$1, cs__$1, calc_state__$1, out__$1, changed__$1, solo_modes__$1, attrs__$1, meta17304) {
          return new cljs.core.async.t17303(change__$1, mix__$1, solo_mode__$1, pick__$1, cs__$1, calc_state__$1, out__$1, changed__$1, solo_modes__$1, attrs__$1, meta17304);
        };
      }(cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state);
    }
    return new cljs.core.async.t17303(change, mix, solo_mode, pick, cs, calc_state, out, changed, solo_modes, attrs, cljs.core.PersistentArrayMap.EMPTY);
  }();
  var c__6703__auto___17422 = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6703__auto___17422, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
    return function() {
      var f__6704__auto__ = function() {
        var switch__6647__auto__ = function(c__6703__auto___17422, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
          return function(state_17375) {
            var state_val_17376 = state_17375[1];
            if (state_val_17376 === 7) {
              var inst_17319 = state_17375[7];
              var inst_17324 = cljs.core.apply.call(null, cljs.core.hash_map, inst_17319);
              var state_17375__$1 = state_17375;
              var statearr_17377_17423 = state_17375__$1;
              statearr_17377_17423[2] = inst_17324;
              statearr_17377_17423[1] = 9;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_17376 === 20) {
                var inst_17334 = state_17375[8];
                var state_17375__$1 = state_17375;
                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_17375__$1, 23, out, inst_17334);
              } else {
                if (state_val_17376 === 1) {
                  var inst_17309 = state_17375[9];
                  var inst_17309__$1 = calc_state.call(null);
                  var inst_17310 = cljs.core.seq_QMARK_.call(null, inst_17309__$1);
                  var state_17375__$1 = function() {
                    var statearr_17378 = state_17375;
                    statearr_17378[9] = inst_17309__$1;
                    return statearr_17378;
                  }();
                  if (inst_17310) {
                    var statearr_17379_17424 = state_17375__$1;
                    statearr_17379_17424[1] = 2;
                  } else {
                    var statearr_17380_17425 = state_17375__$1;
                    statearr_17380_17425[1] = 3;
                  }
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_17376 === 24) {
                    var inst_17327 = state_17375[10];
                    var inst_17319 = inst_17327;
                    var state_17375__$1 = function() {
                      var statearr_17381 = state_17375;
                      statearr_17381[7] = inst_17319;
                      return statearr_17381;
                    }();
                    var statearr_17382_17426 = state_17375__$1;
                    statearr_17382_17426[2] = null;
                    statearr_17382_17426[1] = 5;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_17376 === 4) {
                      var inst_17309 = state_17375[9];
                      var inst_17315 = state_17375[2];
                      var inst_17316 = cljs.core.get.call(null, inst_17315, new cljs.core.Keyword(null, "reads", "reads", -1215067361));
                      var inst_17317 = cljs.core.get.call(null, inst_17315, new cljs.core.Keyword(null, "mutes", "mutes", 1068806309));
                      var inst_17318 = cljs.core.get.call(null, inst_17315, new cljs.core.Keyword(null, "solos", "solos", 1441458643));
                      var inst_17319 = inst_17309;
                      var state_17375__$1 = function() {
                        var statearr_17383 = state_17375;
                        statearr_17383[7] = inst_17319;
                        statearr_17383[11] = inst_17318;
                        statearr_17383[12] = inst_17317;
                        statearr_17383[13] = inst_17316;
                        return statearr_17383;
                      }();
                      var statearr_17384_17427 = state_17375__$1;
                      statearr_17384_17427[2] = null;
                      statearr_17384_17427[1] = 5;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_17376 === 15) {
                        var state_17375__$1 = state_17375;
                        var statearr_17385_17428 = state_17375__$1;
                        statearr_17385_17428[2] = null;
                        statearr_17385_17428[1] = 16;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_17376 === 21) {
                          var inst_17327 = state_17375[10];
                          var inst_17319 = inst_17327;
                          var state_17375__$1 = function() {
                            var statearr_17386 = state_17375;
                            statearr_17386[7] = inst_17319;
                            return statearr_17386;
                          }();
                          var statearr_17387_17429 = state_17375__$1;
                          statearr_17387_17429[2] = null;
                          statearr_17387_17429[1] = 5;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_17376 === 13) {
                            var inst_17371 = state_17375[2];
                            var state_17375__$1 = state_17375;
                            var statearr_17388_17430 = state_17375__$1;
                            statearr_17388_17430[2] = inst_17371;
                            statearr_17388_17430[1] = 6;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_17376 === 22) {
                              var inst_17369 = state_17375[2];
                              var state_17375__$1 = state_17375;
                              var statearr_17389_17431 = state_17375__$1;
                              statearr_17389_17431[2] = inst_17369;
                              statearr_17389_17431[1] = 13;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_17376 === 6) {
                                var inst_17373 = state_17375[2];
                                var state_17375__$1 = state_17375;
                                return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_17375__$1, inst_17373);
                              } else {
                                if (state_val_17376 === 25) {
                                  var state_17375__$1 = state_17375;
                                  var statearr_17390_17432 = state_17375__$1;
                                  statearr_17390_17432[2] = null;
                                  statearr_17390_17432[1] = 26;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_17376 === 17) {
                                    var inst_17349 = state_17375[14];
                                    var state_17375__$1 = state_17375;
                                    var statearr_17391_17433 = state_17375__$1;
                                    statearr_17391_17433[2] = inst_17349;
                                    statearr_17391_17433[1] = 19;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_17376 === 3) {
                                      var inst_17309 = state_17375[9];
                                      var state_17375__$1 = state_17375;
                                      var statearr_17392_17434 = state_17375__$1;
                                      statearr_17392_17434[2] = inst_17309;
                                      statearr_17392_17434[1] = 4;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_17376 === 12) {
                                        var inst_17335 = state_17375[15];
                                        var inst_17349 = state_17375[14];
                                        var inst_17330 = state_17375[16];
                                        var inst_17349__$1 = inst_17330.call(null, inst_17335);
                                        var state_17375__$1 = function() {
                                          var statearr_17393 = state_17375;
                                          statearr_17393[14] = inst_17349__$1;
                                          return statearr_17393;
                                        }();
                                        if (cljs.core.truth_(inst_17349__$1)) {
                                          var statearr_17394_17435 = state_17375__$1;
                                          statearr_17394_17435[1] = 17;
                                        } else {
                                          var statearr_17395_17436 = state_17375__$1;
                                          statearr_17395_17436[1] = 18;
                                        }
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_17376 === 2) {
                                          var inst_17309 = state_17375[9];
                                          var inst_17312 = cljs.core.apply.call(null, cljs.core.hash_map, inst_17309);
                                          var state_17375__$1 = state_17375;
                                          var statearr_17396_17437 = state_17375__$1;
                                          statearr_17396_17437[2] = inst_17312;
                                          statearr_17396_17437[1] = 4;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_17376 === 23) {
                                            var inst_17360 = state_17375[2];
                                            var state_17375__$1 = state_17375;
                                            if (cljs.core.truth_(inst_17360)) {
                                              var statearr_17397_17438 = state_17375__$1;
                                              statearr_17397_17438[1] = 24;
                                            } else {
                                              var statearr_17398_17439 = state_17375__$1;
                                              statearr_17398_17439[1] = 25;
                                            }
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_17376 === 19) {
                                              var inst_17357 = state_17375[2];
                                              var state_17375__$1 = state_17375;
                                              if (cljs.core.truth_(inst_17357)) {
                                                var statearr_17399_17440 = state_17375__$1;
                                                statearr_17399_17440[1] = 20;
                                              } else {
                                                var statearr_17400_17441 = state_17375__$1;
                                                statearr_17400_17441[1] = 21;
                                              }
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_17376 === 11) {
                                                var inst_17334 = state_17375[8];
                                                var inst_17340 = inst_17334 == null;
                                                var state_17375__$1 = state_17375;
                                                if (cljs.core.truth_(inst_17340)) {
                                                  var statearr_17401_17442 = state_17375__$1;
                                                  statearr_17401_17442[1] = 14;
                                                } else {
                                                  var statearr_17402_17443 = state_17375__$1;
                                                  statearr_17402_17443[1] = 15;
                                                }
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_17376 === 9) {
                                                  var inst_17327 = state_17375[10];
                                                  var inst_17327__$1 = state_17375[2];
                                                  var inst_17328 = cljs.core.get.call(null, inst_17327__$1, new cljs.core.Keyword(null, "reads", "reads", -1215067361));
                                                  var inst_17329 = cljs.core.get.call(null, inst_17327__$1, new cljs.core.Keyword(null, "mutes", "mutes", 1068806309));
                                                  var inst_17330 = cljs.core.get.call(null, inst_17327__$1, new cljs.core.Keyword(null, "solos", "solos", 1441458643));
                                                  var state_17375__$1 = function() {
                                                    var statearr_17403 = state_17375;
                                                    statearr_17403[17] = inst_17329;
                                                    statearr_17403[10] = inst_17327__$1;
                                                    statearr_17403[16] = inst_17330;
                                                    return statearr_17403;
                                                  }();
                                                  return cljs.core.async.ioc_alts_BANG_.call(null, state_17375__$1, 10, inst_17328);
                                                } else {
                                                  if (state_val_17376 === 5) {
                                                    var inst_17319 = state_17375[7];
                                                    var inst_17322 = cljs.core.seq_QMARK_.call(null, inst_17319);
                                                    var state_17375__$1 = state_17375;
                                                    if (inst_17322) {
                                                      var statearr_17404_17444 = state_17375__$1;
                                                      statearr_17404_17444[1] = 7;
                                                    } else {
                                                      var statearr_17405_17445 = state_17375__$1;
                                                      statearr_17405_17445[1] = 8;
                                                    }
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_17376 === 14) {
                                                      var inst_17335 = state_17375[15];
                                                      var inst_17342 = cljs.core.swap_BANG_.call(null, cs, cljs.core.dissoc, inst_17335);
                                                      var state_17375__$1 = state_17375;
                                                      var statearr_17406_17446 = state_17375__$1;
                                                      statearr_17406_17446[2] = inst_17342;
                                                      statearr_17406_17446[1] = 16;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      if (state_val_17376 === 26) {
                                                        var inst_17365 = state_17375[2];
                                                        var state_17375__$1 = state_17375;
                                                        var statearr_17407_17447 = state_17375__$1;
                                                        statearr_17407_17447[2] = inst_17365;
                                                        statearr_17407_17447[1] = 22;
                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                      } else {
                                                        if (state_val_17376 === 16) {
                                                          var inst_17345 = state_17375[2];
                                                          var inst_17346 = calc_state.call(null);
                                                          var inst_17319 = inst_17346;
                                                          var state_17375__$1 = function() {
                                                            var statearr_17408 = state_17375;
                                                            statearr_17408[7] = inst_17319;
                                                            statearr_17408[18] = inst_17345;
                                                            return statearr_17408;
                                                          }();
                                                          var statearr_17409_17448 = state_17375__$1;
                                                          statearr_17409_17448[2] = null;
                                                          statearr_17409_17448[1] = 5;
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          if (state_val_17376 === 10) {
                                                            var inst_17335 = state_17375[15];
                                                            var inst_17334 = state_17375[8];
                                                            var inst_17333 = state_17375[2];
                                                            var inst_17334__$1 = cljs.core.nth.call(null, inst_17333, 0, null);
                                                            var inst_17335__$1 = cljs.core.nth.call(null, inst_17333, 1, null);
                                                            var inst_17336 = inst_17334__$1 == null;
                                                            var inst_17337 = cljs.core._EQ_.call(null, inst_17335__$1, change);
                                                            var inst_17338 = inst_17336 || inst_17337;
                                                            var state_17375__$1 = function() {
                                                              var statearr_17410 = state_17375;
                                                              statearr_17410[15] = inst_17335__$1;
                                                              statearr_17410[8] = inst_17334__$1;
                                                              return statearr_17410;
                                                            }();
                                                            if (cljs.core.truth_(inst_17338)) {
                                                              var statearr_17411_17449 = state_17375__$1;
                                                              statearr_17411_17449[1] = 11;
                                                            } else {
                                                              var statearr_17412_17450 = state_17375__$1;
                                                              statearr_17412_17450[1] = 12;
                                                            }
                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                          } else {
                                                            if (state_val_17376 === 18) {
                                                              var inst_17329 = state_17375[17];
                                                              var inst_17335 = state_17375[15];
                                                              var inst_17330 = state_17375[16];
                                                              var inst_17352 = cljs.core.empty_QMARK_.call(null, inst_17330);
                                                              var inst_17353 = inst_17329.call(null, inst_17335);
                                                              var inst_17354 = cljs.core.not.call(null, inst_17353);
                                                              var inst_17355 = inst_17352 && inst_17354;
                                                              var state_17375__$1 = state_17375;
                                                              var statearr_17413_17451 = state_17375__$1;
                                                              statearr_17413_17451[2] = inst_17355;
                                                              statearr_17413_17451[1] = 19;
                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                            } else {
                                                              if (state_val_17376 === 8) {
                                                                var inst_17319 = state_17375[7];
                                                                var state_17375__$1 = state_17375;
                                                                var statearr_17414_17452 = state_17375__$1;
                                                                statearr_17414_17452[2] = inst_17319;
                                                                statearr_17414_17452[1] = 9;
                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                              } else {
                                                                return null;
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6703__auto___17422, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m);
        return function(switch__6647__auto__, c__6703__auto___17422, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m) {
          return function() {
            var state_machine__6648__auto__ = null;
            var state_machine__6648__auto____0 = function() {
              var statearr_17418 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_17418[0] = state_machine__6648__auto__;
              statearr_17418[1] = 1;
              return statearr_17418;
            };
            var state_machine__6648__auto____1 = function(state_17375) {
              while (true) {
                var ret_value__6649__auto__ = function() {
                  try {
                    while (true) {
                      var result__6650__auto__ = switch__6647__auto__.call(null, state_17375);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6650__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__6650__auto__;
                      }
                      break;
                    }
                  } catch (e17419) {
                    if (e17419 instanceof Object) {
                      var ex__6651__auto__ = e17419;
                      var statearr_17420_17453 = state_17375;
                      statearr_17420_17453[5] = ex__6651__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_17375);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e17419;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6649__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__17454 = state_17375;
                  state_17375 = G__17454;
                  continue;
                } else {
                  return ret_value__6649__auto__;
                }
                break;
              }
            };
            state_machine__6648__auto__ = function(state_17375) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6648__auto____0.call(this);
                case 1:
                  return state_machine__6648__auto____1.call(this, state_17375);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6648__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6648__auto____0;
            state_machine__6648__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6648__auto____1;
            return state_machine__6648__auto__;
          }();
        }(switch__6647__auto__, c__6703__auto___17422, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m);
      }();
      var state__6705__auto__ = function() {
        var statearr_17421 = f__6704__auto__.call(null);
        statearr_17421[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6703__auto___17422;
        return statearr_17421;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6705__auto__);
    };
  }(c__6703__auto___17422, cs, solo_modes, attrs, solo_mode, change, changed, pick, calc_state, m));
  return m;
};
cljs.core.async.admix = function admix(mix, ch) {
  return cljs.core.async.admix_STAR_.call(null, mix, ch);
};
cljs.core.async.unmix = function unmix(mix, ch) {
  return cljs.core.async.unmix_STAR_.call(null, mix, ch);
};
cljs.core.async.unmix_all = function unmix_all(mix) {
  return cljs.core.async.unmix_all_STAR_.call(null, mix);
};
cljs.core.async.toggle = function toggle(mix, state_map) {
  return cljs.core.async.toggle_STAR_.call(null, mix, state_map);
};
cljs.core.async.solo_mode = function solo_mode(mix, mode) {
  return cljs.core.async.solo_mode_STAR_.call(null, mix, mode);
};
cljs.core.async.Pub = function() {
  var obj17456 = {};
  return obj17456;
}();
cljs.core.async.sub_STAR_ = function sub_STAR_(p, v, ch, close_QMARK_) {
  if (function() {
    var and__3913__auto__ = p;
    if (and__3913__auto__) {
      return p.cljs$core$async$Pub$sub_STAR_$arity$4;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return p.cljs$core$async$Pub$sub_STAR_$arity$4(p, v, ch, close_QMARK_);
  } else {
    var x__4569__auto__ = p == null ? null : p;
    return function() {
      var or__3925__auto__ = cljs.core.async.sub_STAR_[goog.typeOf(x__4569__auto__)];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core.async.sub_STAR_["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Pub.sub*", p);
        }
      }
    }().call(null, p, v, ch, close_QMARK_);
  }
};
cljs.core.async.unsub_STAR_ = function unsub_STAR_(p, v, ch) {
  if (function() {
    var and__3913__auto__ = p;
    if (and__3913__auto__) {
      return p.cljs$core$async$Pub$unsub_STAR_$arity$3;
    } else {
      return and__3913__auto__;
    }
  }()) {
    return p.cljs$core$async$Pub$unsub_STAR_$arity$3(p, v, ch);
  } else {
    var x__4569__auto__ = p == null ? null : p;
    return function() {
      var or__3925__auto__ = cljs.core.async.unsub_STAR_[goog.typeOf(x__4569__auto__)];
      if (or__3925__auto__) {
        return or__3925__auto__;
      } else {
        var or__3925__auto____$1 = cljs.core.async.unsub_STAR_["_"];
        if (or__3925__auto____$1) {
          return or__3925__auto____$1;
        } else {
          throw cljs.core.missing_protocol.call(null, "Pub.unsub*", p);
        }
      }
    }().call(null, p, v, ch);
  }
};
cljs.core.async.unsub_all_STAR_ = function() {
  var unsub_all_STAR_ = null;
  var unsub_all_STAR___1 = function(p) {
    if (function() {
      var and__3913__auto__ = p;
      if (and__3913__auto__) {
        return p.cljs$core$async$Pub$unsub_all_STAR_$arity$1;
      } else {
        return and__3913__auto__;
      }
    }()) {
      return p.cljs$core$async$Pub$unsub_all_STAR_$arity$1(p);
    } else {
      var x__4569__auto__ = p == null ? null : p;
      return function() {
        var or__3925__auto__ = cljs.core.async.unsub_all_STAR_[goog.typeOf(x__4569__auto__)];
        if (or__3925__auto__) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = cljs.core.async.unsub_all_STAR_["_"];
          if (or__3925__auto____$1) {
            return or__3925__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "Pub.unsub-all*", p);
          }
        }
      }().call(null, p);
    }
  };
  var unsub_all_STAR___2 = function(p, v) {
    if (function() {
      var and__3913__auto__ = p;
      if (and__3913__auto__) {
        return p.cljs$core$async$Pub$unsub_all_STAR_$arity$2;
      } else {
        return and__3913__auto__;
      }
    }()) {
      return p.cljs$core$async$Pub$unsub_all_STAR_$arity$2(p, v);
    } else {
      var x__4569__auto__ = p == null ? null : p;
      return function() {
        var or__3925__auto__ = cljs.core.async.unsub_all_STAR_[goog.typeOf(x__4569__auto__)];
        if (or__3925__auto__) {
          return or__3925__auto__;
        } else {
          var or__3925__auto____$1 = cljs.core.async.unsub_all_STAR_["_"];
          if (or__3925__auto____$1) {
            return or__3925__auto____$1;
          } else {
            throw cljs.core.missing_protocol.call(null, "Pub.unsub-all*", p);
          }
        }
      }().call(null, p, v);
    }
  };
  unsub_all_STAR_ = function(p, v) {
    switch(arguments.length) {
      case 1:
        return unsub_all_STAR___1.call(this, p);
      case 2:
        return unsub_all_STAR___2.call(this, p, v);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unsub_all_STAR_.cljs$core$IFn$_invoke$arity$1 = unsub_all_STAR___1;
  unsub_all_STAR_.cljs$core$IFn$_invoke$arity$2 = unsub_all_STAR___2;
  return unsub_all_STAR_;
}();
cljs.core.async.pub = function() {
  var pub = null;
  var pub__2 = function(ch, topic_fn) {
    return pub.call(null, ch, topic_fn, cljs.core.constantly.call(null, null));
  };
  var pub__3 = function(ch, topic_fn, buf_fn) {
    var mults = cljs.core.atom.call(null, cljs.core.PersistentArrayMap.EMPTY);
    var ensure_mult = function(mults) {
      return function(topic) {
        var or__3925__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, mults), topic);
        if (cljs.core.truth_(or__3925__auto__)) {
          return or__3925__auto__;
        } else {
          return cljs.core.get.call(null, cljs.core.swap_BANG_.call(null, mults, function(or__3925__auto__, mults) {
            return function(p1__17457_SHARP_) {
              if (cljs.core.truth_(p1__17457_SHARP_.call(null, topic))) {
                return p1__17457_SHARP_;
              } else {
                return cljs.core.assoc.call(null, p1__17457_SHARP_, topic, cljs.core.async.mult.call(null, cljs.core.async.chan.call(null, buf_fn.call(null, topic))));
              }
            };
          }(or__3925__auto__, mults)), topic);
        }
      };
    }(mults);
    var p = function() {
      if (typeof cljs.core.async.t17580 !== "undefined") {
      } else {
        cljs.core.async.t17580 = function(ensure_mult, mults, buf_fn, topic_fn, ch, pub, meta17581) {
          this.ensure_mult = ensure_mult;
          this.mults = mults;
          this.buf_fn = buf_fn;
          this.topic_fn = topic_fn;
          this.ch = ch;
          this.pub = pub;
          this.meta17581 = meta17581;
          this.cljs$lang$protocol_mask$partition1$ = 0;
          this.cljs$lang$protocol_mask$partition0$ = 393216;
        };
        cljs.core.async.t17580.prototype.cljs$core$async$Pub$ = true;
        cljs.core.async.t17580.prototype.cljs$core$async$Pub$sub_STAR_$arity$4 = function(mults, ensure_mult) {
          return function(p, topic, ch__$1, close_QMARK_) {
            var self__ = this;
            var p__$1 = this;
            var m = self__.ensure_mult.call(null, topic);
            return cljs.core.async.tap.call(null, m, ch__$1, close_QMARK_);
          };
        }(mults, ensure_mult);
        cljs.core.async.t17580.prototype.cljs$core$async$Pub$unsub_STAR_$arity$3 = function(mults, ensure_mult) {
          return function(p, topic, ch__$1) {
            var self__ = this;
            var p__$1 = this;
            var temp__4126__auto__ = cljs.core.get.call(null, cljs.core.deref.call(null, self__.mults), topic);
            if (cljs.core.truth_(temp__4126__auto__)) {
              var m = temp__4126__auto__;
              return cljs.core.async.untap.call(null, m, ch__$1);
            } else {
              return null;
            }
          };
        }(mults, ensure_mult);
        cljs.core.async.t17580.prototype.cljs$core$async$Pub$unsub_all_STAR_$arity$1 = function(mults, ensure_mult) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return cljs.core.reset_BANG_.call(null, self__.mults, cljs.core.PersistentArrayMap.EMPTY);
          };
        }(mults, ensure_mult);
        cljs.core.async.t17580.prototype.cljs$core$async$Pub$unsub_all_STAR_$arity$2 = function(mults, ensure_mult) {
          return function(_, topic) {
            var self__ = this;
            var ___$1 = this;
            return cljs.core.swap_BANG_.call(null, self__.mults, cljs.core.dissoc, topic);
          };
        }(mults, ensure_mult);
        cljs.core.async.t17580.prototype.cljs$core$async$Mux$ = true;
        cljs.core.async.t17580.prototype.cljs$core$async$Mux$muxch_STAR_$arity$1 = function(mults, ensure_mult) {
          return function(_) {
            var self__ = this;
            var ___$1 = this;
            return self__.ch;
          };
        }(mults, ensure_mult);
        cljs.core.async.t17580.prototype.cljs$core$IMeta$_meta$arity$1 = function(mults, ensure_mult) {
          return function(_17582) {
            var self__ = this;
            var _17582__$1 = this;
            return self__.meta17581;
          };
        }(mults, ensure_mult);
        cljs.core.async.t17580.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(mults, ensure_mult) {
          return function(_17582, meta17581__$1) {
            var self__ = this;
            var _17582__$1 = this;
            return new cljs.core.async.t17580(self__.ensure_mult, self__.mults, self__.buf_fn, self__.topic_fn, self__.ch, self__.pub, meta17581__$1);
          };
        }(mults, ensure_mult);
        cljs.core.async.t17580.cljs$lang$type = true;
        cljs.core.async.t17580.cljs$lang$ctorStr = "cljs.core.async/t17580";
        cljs.core.async.t17580.cljs$lang$ctorPrWriter = function(mults, ensure_mult) {
          return function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
            return cljs.core._write.call(null, writer__4513__auto__, "cljs.core.async/t17580");
          };
        }(mults, ensure_mult);
        cljs.core.async.__GT_t17580 = function(mults, ensure_mult) {
          return function __GT_t17580(ensure_mult__$1, mults__$1, buf_fn__$1, topic_fn__$1, ch__$1, pub__$1, meta17581) {
            return new cljs.core.async.t17580(ensure_mult__$1, mults__$1, buf_fn__$1, topic_fn__$1, ch__$1, pub__$1, meta17581);
          };
        }(mults, ensure_mult);
      }
      return new cljs.core.async.t17580(ensure_mult, mults, buf_fn, topic_fn, ch, pub, cljs.core.PersistentArrayMap.EMPTY);
    }();
    var c__6703__auto___17702 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6703__auto___17702, mults, ensure_mult, p) {
      return function() {
        var f__6704__auto__ = function() {
          var switch__6647__auto__ = function(c__6703__auto___17702, mults, ensure_mult, p) {
            return function(state_17654) {
              var state_val_17655 = state_17654[1];
              if (state_val_17655 === 7) {
                var inst_17650 = state_17654[2];
                var state_17654__$1 = state_17654;
                var statearr_17656_17703 = state_17654__$1;
                statearr_17656_17703[2] = inst_17650;
                statearr_17656_17703[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_17655 === 20) {
                  var state_17654__$1 = state_17654;
                  var statearr_17657_17704 = state_17654__$1;
                  statearr_17657_17704[2] = null;
                  statearr_17657_17704[1] = 21;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_17655 === 1) {
                    var state_17654__$1 = state_17654;
                    var statearr_17658_17705 = state_17654__$1;
                    statearr_17658_17705[2] = null;
                    statearr_17658_17705[1] = 2;
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_17655 === 24) {
                      var inst_17633 = state_17654[7];
                      var inst_17642 = cljs.core.swap_BANG_.call(null, mults, cljs.core.dissoc, inst_17633);
                      var state_17654__$1 = state_17654;
                      var statearr_17659_17706 = state_17654__$1;
                      statearr_17659_17706[2] = inst_17642;
                      statearr_17659_17706[1] = 25;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_17655 === 4) {
                        var inst_17585 = state_17654[8];
                        var inst_17585__$1 = state_17654[2];
                        var inst_17586 = inst_17585__$1 == null;
                        var state_17654__$1 = function() {
                          var statearr_17660 = state_17654;
                          statearr_17660[8] = inst_17585__$1;
                          return statearr_17660;
                        }();
                        if (cljs.core.truth_(inst_17586)) {
                          var statearr_17661_17707 = state_17654__$1;
                          statearr_17661_17707[1] = 5;
                        } else {
                          var statearr_17662_17708 = state_17654__$1;
                          statearr_17662_17708[1] = 6;
                        }
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_17655 === 15) {
                          var inst_17627 = state_17654[2];
                          var state_17654__$1 = state_17654;
                          var statearr_17663_17709 = state_17654__$1;
                          statearr_17663_17709[2] = inst_17627;
                          statearr_17663_17709[1] = 12;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_17655 === 21) {
                            var inst_17647 = state_17654[2];
                            var state_17654__$1 = function() {
                              var statearr_17664 = state_17654;
                              statearr_17664[9] = inst_17647;
                              return statearr_17664;
                            }();
                            var statearr_17665_17710 = state_17654__$1;
                            statearr_17665_17710[2] = null;
                            statearr_17665_17710[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_17655 === 13) {
                              var inst_17609 = state_17654[10];
                              var inst_17611 = cljs.core.chunked_seq_QMARK_.call(null, inst_17609);
                              var state_17654__$1 = state_17654;
                              if (inst_17611) {
                                var statearr_17666_17711 = state_17654__$1;
                                statearr_17666_17711[1] = 16;
                              } else {
                                var statearr_17667_17712 = state_17654__$1;
                                statearr_17667_17712[1] = 17;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_17655 === 22) {
                                var inst_17639 = state_17654[2];
                                var state_17654__$1 = state_17654;
                                if (cljs.core.truth_(inst_17639)) {
                                  var statearr_17668_17713 = state_17654__$1;
                                  statearr_17668_17713[1] = 23;
                                } else {
                                  var statearr_17669_17714 = state_17654__$1;
                                  statearr_17669_17714[1] = 24;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_17655 === 6) {
                                  var inst_17633 = state_17654[7];
                                  var inst_17585 = state_17654[8];
                                  var inst_17635 = state_17654[11];
                                  var inst_17633__$1 = topic_fn.call(null, inst_17585);
                                  var inst_17634 = cljs.core.deref.call(null, mults);
                                  var inst_17635__$1 = cljs.core.get.call(null, inst_17634, inst_17633__$1);
                                  var state_17654__$1 = function() {
                                    var statearr_17670 = state_17654;
                                    statearr_17670[7] = inst_17633__$1;
                                    statearr_17670[11] = inst_17635__$1;
                                    return statearr_17670;
                                  }();
                                  if (cljs.core.truth_(inst_17635__$1)) {
                                    var statearr_17671_17715 = state_17654__$1;
                                    statearr_17671_17715[1] = 19;
                                  } else {
                                    var statearr_17672_17716 = state_17654__$1;
                                    statearr_17672_17716[1] = 20;
                                  }
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_17655 === 25) {
                                    var inst_17644 = state_17654[2];
                                    var state_17654__$1 = state_17654;
                                    var statearr_17673_17717 = state_17654__$1;
                                    statearr_17673_17717[2] = inst_17644;
                                    statearr_17673_17717[1] = 21;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_17655 === 17) {
                                      var inst_17609 = state_17654[10];
                                      var inst_17618 = cljs.core.first.call(null, inst_17609);
                                      var inst_17619 = cljs.core.async.muxch_STAR_.call(null, inst_17618);
                                      var inst_17620 = cljs.core.async.close_BANG_.call(null, inst_17619);
                                      var inst_17621 = cljs.core.next.call(null, inst_17609);
                                      var inst_17595 = inst_17621;
                                      var inst_17596 = null;
                                      var inst_17597 = 0;
                                      var inst_17598 = 0;
                                      var state_17654__$1 = function() {
                                        var statearr_17674 = state_17654;
                                        statearr_17674[12] = inst_17596;
                                        statearr_17674[13] = inst_17598;
                                        statearr_17674[14] = inst_17595;
                                        statearr_17674[15] = inst_17620;
                                        statearr_17674[16] = inst_17597;
                                        return statearr_17674;
                                      }();
                                      var statearr_17675_17718 = state_17654__$1;
                                      statearr_17675_17718[2] = null;
                                      statearr_17675_17718[1] = 8;
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_17655 === 3) {
                                        var inst_17652 = state_17654[2];
                                        var state_17654__$1 = state_17654;
                                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_17654__$1, inst_17652);
                                      } else {
                                        if (state_val_17655 === 12) {
                                          var inst_17629 = state_17654[2];
                                          var state_17654__$1 = state_17654;
                                          var statearr_17676_17719 = state_17654__$1;
                                          statearr_17676_17719[2] = inst_17629;
                                          statearr_17676_17719[1] = 9;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_17655 === 2) {
                                            var state_17654__$1 = state_17654;
                                            return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_17654__$1, 4, ch);
                                          } else {
                                            if (state_val_17655 === 23) {
                                              var state_17654__$1 = state_17654;
                                              var statearr_17677_17720 = state_17654__$1;
                                              statearr_17677_17720[2] = null;
                                              statearr_17677_17720[1] = 25;
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_17655 === 19) {
                                                var inst_17585 = state_17654[8];
                                                var inst_17635 = state_17654[11];
                                                var inst_17637 = cljs.core.async.muxch_STAR_.call(null, inst_17635);
                                                var state_17654__$1 = state_17654;
                                                return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_17654__$1, 22, inst_17637, inst_17585);
                                              } else {
                                                if (state_val_17655 === 11) {
                                                  var inst_17595 = state_17654[14];
                                                  var inst_17609 = state_17654[10];
                                                  var inst_17609__$1 = cljs.core.seq.call(null, inst_17595);
                                                  var state_17654__$1 = function() {
                                                    var statearr_17678 = state_17654;
                                                    statearr_17678[10] = inst_17609__$1;
                                                    return statearr_17678;
                                                  }();
                                                  if (inst_17609__$1) {
                                                    var statearr_17679_17721 = state_17654__$1;
                                                    statearr_17679_17721[1] = 13;
                                                  } else {
                                                    var statearr_17680_17722 = state_17654__$1;
                                                    statearr_17680_17722[1] = 14;
                                                  }
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_17655 === 9) {
                                                    var inst_17631 = state_17654[2];
                                                    var state_17654__$1 = state_17654;
                                                    var statearr_17681_17723 = state_17654__$1;
                                                    statearr_17681_17723[2] = inst_17631;
                                                    statearr_17681_17723[1] = 7;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_17655 === 5) {
                                                      var inst_17592 = cljs.core.deref.call(null, mults);
                                                      var inst_17593 = cljs.core.vals.call(null, inst_17592);
                                                      var inst_17594 = cljs.core.seq.call(null, inst_17593);
                                                      var inst_17595 = inst_17594;
                                                      var inst_17596 = null;
                                                      var inst_17597 = 0;
                                                      var inst_17598 = 0;
                                                      var state_17654__$1 = function() {
                                                        var statearr_17682 = state_17654;
                                                        statearr_17682[12] = inst_17596;
                                                        statearr_17682[13] = inst_17598;
                                                        statearr_17682[14] = inst_17595;
                                                        statearr_17682[16] = inst_17597;
                                                        return statearr_17682;
                                                      }();
                                                      var statearr_17683_17724 = state_17654__$1;
                                                      statearr_17683_17724[2] = null;
                                                      statearr_17683_17724[1] = 8;
                                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                    } else {
                                                      if (state_val_17655 === 14) {
                                                        var state_17654__$1 = state_17654;
                                                        var statearr_17687_17725 = state_17654__$1;
                                                        statearr_17687_17725[2] = null;
                                                        statearr_17687_17725[1] = 15;
                                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                      } else {
                                                        if (state_val_17655 === 16) {
                                                          var inst_17609 = state_17654[10];
                                                          var inst_17613 = cljs.core.chunk_first.call(null, inst_17609);
                                                          var inst_17614 = cljs.core.chunk_rest.call(null, inst_17609);
                                                          var inst_17615 = cljs.core.count.call(null, inst_17613);
                                                          var inst_17595 = inst_17614;
                                                          var inst_17596 = inst_17613;
                                                          var inst_17597 = inst_17615;
                                                          var inst_17598 = 0;
                                                          var state_17654__$1 = function() {
                                                            var statearr_17688 = state_17654;
                                                            statearr_17688[12] = inst_17596;
                                                            statearr_17688[13] = inst_17598;
                                                            statearr_17688[14] = inst_17595;
                                                            statearr_17688[16] = inst_17597;
                                                            return statearr_17688;
                                                          }();
                                                          var statearr_17689_17726 = state_17654__$1;
                                                          statearr_17689_17726[2] = null;
                                                          statearr_17689_17726[1] = 8;
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          if (state_val_17655 === 10) {
                                                            var inst_17596 = state_17654[12];
                                                            var inst_17598 = state_17654[13];
                                                            var inst_17595 = state_17654[14];
                                                            var inst_17597 = state_17654[16];
                                                            var inst_17603 = cljs.core._nth.call(null, inst_17596, inst_17598);
                                                            var inst_17604 = cljs.core.async.muxch_STAR_.call(null, inst_17603);
                                                            var inst_17605 = cljs.core.async.close_BANG_.call(null, inst_17604);
                                                            var inst_17606 = inst_17598 + 1;
                                                            var tmp17684 = inst_17596;
                                                            var tmp17685 = inst_17595;
                                                            var tmp17686 = inst_17597;
                                                            var inst_17595__$1 = tmp17685;
                                                            var inst_17596__$1 = tmp17684;
                                                            var inst_17597__$1 = tmp17686;
                                                            var inst_17598__$1 = inst_17606;
                                                            var state_17654__$1 = function() {
                                                              var statearr_17690 = state_17654;
                                                              statearr_17690[17] = inst_17605;
                                                              statearr_17690[12] = inst_17596__$1;
                                                              statearr_17690[13] = inst_17598__$1;
                                                              statearr_17690[14] = inst_17595__$1;
                                                              statearr_17690[16] = inst_17597__$1;
                                                              return statearr_17690;
                                                            }();
                                                            var statearr_17691_17727 = state_17654__$1;
                                                            statearr_17691_17727[2] = null;
                                                            statearr_17691_17727[1] = 8;
                                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                          } else {
                                                            if (state_val_17655 === 18) {
                                                              var inst_17624 = state_17654[2];
                                                              var state_17654__$1 = state_17654;
                                                              var statearr_17692_17728 = state_17654__$1;
                                                              statearr_17692_17728[2] = inst_17624;
                                                              statearr_17692_17728[1] = 15;
                                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                            } else {
                                                              if (state_val_17655 === 8) {
                                                                var inst_17598 = state_17654[13];
                                                                var inst_17597 = state_17654[16];
                                                                var inst_17600 = inst_17598 < inst_17597;
                                                                var inst_17601 = inst_17600;
                                                                var state_17654__$1 = state_17654;
                                                                if (cljs.core.truth_(inst_17601)) {
                                                                  var statearr_17693_17729 = state_17654__$1;
                                                                  statearr_17693_17729[1] = 10;
                                                                } else {
                                                                  var statearr_17694_17730 = state_17654__$1;
                                                                  statearr_17694_17730[1] = 11;
                                                                }
                                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                              } else {
                                                                return null;
                                                              }
                                                            }
                                                          }
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6703__auto___17702, mults, ensure_mult, p);
          return function(switch__6647__auto__, c__6703__auto___17702, mults, ensure_mult, p) {
            return function() {
              var state_machine__6648__auto__ = null;
              var state_machine__6648__auto____0 = function() {
                var statearr_17698 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_17698[0] = state_machine__6648__auto__;
                statearr_17698[1] = 1;
                return statearr_17698;
              };
              var state_machine__6648__auto____1 = function(state_17654) {
                while (true) {
                  var ret_value__6649__auto__ = function() {
                    try {
                      while (true) {
                        var result__6650__auto__ = switch__6647__auto__.call(null, state_17654);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6650__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6650__auto__;
                        }
                        break;
                      }
                    } catch (e17699) {
                      if (e17699 instanceof Object) {
                        var ex__6651__auto__ = e17699;
                        var statearr_17700_17731 = state_17654;
                        statearr_17700_17731[5] = ex__6651__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_17654);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e17699;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6649__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__17732 = state_17654;
                    state_17654 = G__17732;
                    continue;
                  } else {
                    return ret_value__6649__auto__;
                  }
                  break;
                }
              };
              state_machine__6648__auto__ = function(state_17654) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6648__auto____0.call(this);
                  case 1:
                    return state_machine__6648__auto____1.call(this, state_17654);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6648__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6648__auto____0;
              state_machine__6648__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6648__auto____1;
              return state_machine__6648__auto__;
            }();
          }(switch__6647__auto__, c__6703__auto___17702, mults, ensure_mult, p);
        }();
        var state__6705__auto__ = function() {
          var statearr_17701 = f__6704__auto__.call(null);
          statearr_17701[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6703__auto___17702;
          return statearr_17701;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6705__auto__);
      };
    }(c__6703__auto___17702, mults, ensure_mult, p));
    return p;
  };
  pub = function(ch, topic_fn, buf_fn) {
    switch(arguments.length) {
      case 2:
        return pub__2.call(this, ch, topic_fn);
      case 3:
        return pub__3.call(this, ch, topic_fn, buf_fn);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  pub.cljs$core$IFn$_invoke$arity$2 = pub__2;
  pub.cljs$core$IFn$_invoke$arity$3 = pub__3;
  return pub;
}();
cljs.core.async.sub = function() {
  var sub = null;
  var sub__3 = function(p, topic, ch) {
    return sub.call(null, p, topic, ch, true);
  };
  var sub__4 = function(p, topic, ch, close_QMARK_) {
    return cljs.core.async.sub_STAR_.call(null, p, topic, ch, close_QMARK_);
  };
  sub = function(p, topic, ch, close_QMARK_) {
    switch(arguments.length) {
      case 3:
        return sub__3.call(this, p, topic, ch);
      case 4:
        return sub__4.call(this, p, topic, ch, close_QMARK_);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  sub.cljs$core$IFn$_invoke$arity$3 = sub__3;
  sub.cljs$core$IFn$_invoke$arity$4 = sub__4;
  return sub;
}();
cljs.core.async.unsub = function unsub(p, topic, ch) {
  return cljs.core.async.unsub_STAR_.call(null, p, topic, ch);
};
cljs.core.async.unsub_all = function() {
  var unsub_all = null;
  var unsub_all__1 = function(p) {
    return cljs.core.async.unsub_all_STAR_.call(null, p);
  };
  var unsub_all__2 = function(p, topic) {
    return cljs.core.async.unsub_all_STAR_.call(null, p, topic);
  };
  unsub_all = function(p, topic) {
    switch(arguments.length) {
      case 1:
        return unsub_all__1.call(this, p);
      case 2:
        return unsub_all__2.call(this, p, topic);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unsub_all.cljs$core$IFn$_invoke$arity$1 = unsub_all__1;
  unsub_all.cljs$core$IFn$_invoke$arity$2 = unsub_all__2;
  return unsub_all;
}();
cljs.core.async.map = function() {
  var map = null;
  var map__2 = function(f, chs) {
    return map.call(null, f, chs, null);
  };
  var map__3 = function(f, chs, buf_or_n) {
    var chs__$1 = cljs.core.vec.call(null, chs);
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var cnt = cljs.core.count.call(null, chs__$1);
    var rets = cljs.core.object_array.call(null, cnt);
    var dchan = cljs.core.async.chan.call(null, 1);
    var dctr = cljs.core.atom.call(null, null);
    var done = cljs.core.mapv.call(null, function(chs__$1, out, cnt, rets, dchan, dctr) {
      return function(i) {
        return function(chs__$1, out, cnt, rets, dchan, dctr) {
          return function(ret) {
            rets[i] = ret;
            if (cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec) === 0) {
              return cljs.core.async.put_BANG_.call(null, dchan, rets.slice(0));
            } else {
              return null;
            }
          };
        }(chs__$1, out, cnt, rets, dchan, dctr);
      };
    }(chs__$1, out, cnt, rets, dchan, dctr), cljs.core.range.call(null, cnt));
    var c__6703__auto___17869 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6703__auto___17869, chs__$1, out, cnt, rets, dchan, dctr, done) {
      return function() {
        var f__6704__auto__ = function() {
          var switch__6647__auto__ = function(c__6703__auto___17869, chs__$1, out, cnt, rets, dchan, dctr, done) {
            return function(state_17839) {
              var state_val_17840 = state_17839[1];
              if (state_val_17840 === 7) {
                var state_17839__$1 = state_17839;
                var statearr_17841_17870 = state_17839__$1;
                statearr_17841_17870[2] = null;
                statearr_17841_17870[1] = 8;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_17840 === 1) {
                  var state_17839__$1 = state_17839;
                  var statearr_17842_17871 = state_17839__$1;
                  statearr_17842_17871[2] = null;
                  statearr_17842_17871[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_17840 === 4) {
                    var inst_17803 = state_17839[7];
                    var inst_17805 = inst_17803 < cnt;
                    var state_17839__$1 = state_17839;
                    if (cljs.core.truth_(inst_17805)) {
                      var statearr_17843_17872 = state_17839__$1;
                      statearr_17843_17872[1] = 6;
                    } else {
                      var statearr_17844_17873 = state_17839__$1;
                      statearr_17844_17873[1] = 7;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_17840 === 15) {
                      var inst_17835 = state_17839[2];
                      var state_17839__$1 = state_17839;
                      var statearr_17845_17874 = state_17839__$1;
                      statearr_17845_17874[2] = inst_17835;
                      statearr_17845_17874[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_17840 === 13) {
                        var inst_17828 = cljs.core.async.close_BANG_.call(null, out);
                        var state_17839__$1 = state_17839;
                        var statearr_17846_17875 = state_17839__$1;
                        statearr_17846_17875[2] = inst_17828;
                        statearr_17846_17875[1] = 15;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_17840 === 6) {
                          var state_17839__$1 = state_17839;
                          var statearr_17847_17876 = state_17839__$1;
                          statearr_17847_17876[2] = null;
                          statearr_17847_17876[1] = 11;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_17840 === 3) {
                            var inst_17837 = state_17839[2];
                            var state_17839__$1 = state_17839;
                            return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_17839__$1, inst_17837);
                          } else {
                            if (state_val_17840 === 12) {
                              var inst_17825 = state_17839[8];
                              var inst_17825__$1 = state_17839[2];
                              var inst_17826 = cljs.core.some.call(null, cljs.core.nil_QMARK_, inst_17825__$1);
                              var state_17839__$1 = function() {
                                var statearr_17848 = state_17839;
                                statearr_17848[8] = inst_17825__$1;
                                return statearr_17848;
                              }();
                              if (cljs.core.truth_(inst_17826)) {
                                var statearr_17849_17877 = state_17839__$1;
                                statearr_17849_17877[1] = 13;
                              } else {
                                var statearr_17850_17878 = state_17839__$1;
                                statearr_17850_17878[1] = 14;
                              }
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_17840 === 2) {
                                var inst_17802 = cljs.core.reset_BANG_.call(null, dctr, cnt);
                                var inst_17803 = 0;
                                var state_17839__$1 = function() {
                                  var statearr_17851 = state_17839;
                                  statearr_17851[7] = inst_17803;
                                  statearr_17851[9] = inst_17802;
                                  return statearr_17851;
                                }();
                                var statearr_17852_17879 = state_17839__$1;
                                statearr_17852_17879[2] = null;
                                statearr_17852_17879[1] = 4;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_17840 === 11) {
                                  var inst_17803 = state_17839[7];
                                  var _ = cljs.core.async.impl.ioc_helpers.add_exception_frame.call(null, state_17839, 10, Object, null, 9);
                                  var inst_17812 = chs__$1.call(null, inst_17803);
                                  var inst_17813 = done.call(null, inst_17803);
                                  var inst_17814 = cljs.core.async.take_BANG_.call(null, inst_17812, inst_17813);
                                  var state_17839__$1 = state_17839;
                                  var statearr_17853_17880 = state_17839__$1;
                                  statearr_17853_17880[2] = inst_17814;
                                  cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_17839__$1);
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_17840 === 9) {
                                    var inst_17803 = state_17839[7];
                                    var inst_17816 = state_17839[2];
                                    var inst_17817 = inst_17803 + 1;
                                    var inst_17803__$1 = inst_17817;
                                    var state_17839__$1 = function() {
                                      var statearr_17854 = state_17839;
                                      statearr_17854[7] = inst_17803__$1;
                                      statearr_17854[10] = inst_17816;
                                      return statearr_17854;
                                    }();
                                    var statearr_17855_17881 = state_17839__$1;
                                    statearr_17855_17881[2] = null;
                                    statearr_17855_17881[1] = 4;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_17840 === 5) {
                                      var inst_17823 = state_17839[2];
                                      var state_17839__$1 = function() {
                                        var statearr_17856 = state_17839;
                                        statearr_17856[11] = inst_17823;
                                        return statearr_17856;
                                      }();
                                      return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_17839__$1, 12, dchan);
                                    } else {
                                      if (state_val_17840 === 14) {
                                        var inst_17825 = state_17839[8];
                                        var inst_17830 = cljs.core.apply.call(null, f, inst_17825);
                                        var state_17839__$1 = state_17839;
                                        return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_17839__$1, 16, out, inst_17830);
                                      } else {
                                        if (state_val_17840 === 16) {
                                          var inst_17832 = state_17839[2];
                                          var state_17839__$1 = function() {
                                            var statearr_17857 = state_17839;
                                            statearr_17857[12] = inst_17832;
                                            return statearr_17857;
                                          }();
                                          var statearr_17858_17882 = state_17839__$1;
                                          statearr_17858_17882[2] = null;
                                          statearr_17858_17882[1] = 2;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_17840 === 10) {
                                            var inst_17807 = state_17839[2];
                                            var inst_17808 = cljs.core.swap_BANG_.call(null, dctr, cljs.core.dec);
                                            var state_17839__$1 = function() {
                                              var statearr_17859 = state_17839;
                                              statearr_17859[13] = inst_17807;
                                              return statearr_17859;
                                            }();
                                            var statearr_17860_17883 = state_17839__$1;
                                            statearr_17860_17883[2] = inst_17808;
                                            cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_17839__$1);
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_17840 === 8) {
                                              var inst_17821 = state_17839[2];
                                              var state_17839__$1 = state_17839;
                                              var statearr_17861_17884 = state_17839__$1;
                                              statearr_17861_17884[2] = inst_17821;
                                              statearr_17861_17884[1] = 5;
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              return null;
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6703__auto___17869, chs__$1, out, cnt, rets, dchan, dctr, done);
          return function(switch__6647__auto__, c__6703__auto___17869, chs__$1, out, cnt, rets, dchan, dctr, done) {
            return function() {
              var state_machine__6648__auto__ = null;
              var state_machine__6648__auto____0 = function() {
                var statearr_17865 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_17865[0] = state_machine__6648__auto__;
                statearr_17865[1] = 1;
                return statearr_17865;
              };
              var state_machine__6648__auto____1 = function(state_17839) {
                while (true) {
                  var ret_value__6649__auto__ = function() {
                    try {
                      while (true) {
                        var result__6650__auto__ = switch__6647__auto__.call(null, state_17839);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6650__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6650__auto__;
                        }
                        break;
                      }
                    } catch (e17866) {
                      if (e17866 instanceof Object) {
                        var ex__6651__auto__ = e17866;
                        var statearr_17867_17885 = state_17839;
                        statearr_17867_17885[5] = ex__6651__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_17839);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e17866;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6649__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__17886 = state_17839;
                    state_17839 = G__17886;
                    continue;
                  } else {
                    return ret_value__6649__auto__;
                  }
                  break;
                }
              };
              state_machine__6648__auto__ = function(state_17839) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6648__auto____0.call(this);
                  case 1:
                    return state_machine__6648__auto____1.call(this, state_17839);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6648__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6648__auto____0;
              state_machine__6648__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6648__auto____1;
              return state_machine__6648__auto__;
            }();
          }(switch__6647__auto__, c__6703__auto___17869, chs__$1, out, cnt, rets, dchan, dctr, done);
        }();
        var state__6705__auto__ = function() {
          var statearr_17868 = f__6704__auto__.call(null);
          statearr_17868[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6703__auto___17869;
          return statearr_17868;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6705__auto__);
      };
    }(c__6703__auto___17869, chs__$1, out, cnt, rets, dchan, dctr, done));
    return out;
  };
  map = function(f, chs, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return map__2.call(this, f, chs);
      case 3:
        return map__3.call(this, f, chs, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  map.cljs$core$IFn$_invoke$arity$2 = map__2;
  map.cljs$core$IFn$_invoke$arity$3 = map__3;
  return map;
}();
cljs.core.async.merge = function() {
  var merge = null;
  var merge__1 = function(chs) {
    return merge.call(null, chs, null);
  };
  var merge__2 = function(chs, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6703__auto___17994 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6703__auto___17994, out) {
      return function() {
        var f__6704__auto__ = function() {
          var switch__6647__auto__ = function(c__6703__auto___17994, out) {
            return function(state_17970) {
              var state_val_17971 = state_17970[1];
              if (state_val_17971 === 7) {
                var inst_17950 = state_17970[7];
                var inst_17949 = state_17970[8];
                var inst_17949__$1 = state_17970[2];
                var inst_17950__$1 = cljs.core.nth.call(null, inst_17949__$1, 0, null);
                var inst_17951 = cljs.core.nth.call(null, inst_17949__$1, 1, null);
                var inst_17952 = inst_17950__$1 == null;
                var state_17970__$1 = function() {
                  var statearr_17972 = state_17970;
                  statearr_17972[7] = inst_17950__$1;
                  statearr_17972[8] = inst_17949__$1;
                  statearr_17972[9] = inst_17951;
                  return statearr_17972;
                }();
                if (cljs.core.truth_(inst_17952)) {
                  var statearr_17973_17995 = state_17970__$1;
                  statearr_17973_17995[1] = 8;
                } else {
                  var statearr_17974_17996 = state_17970__$1;
                  statearr_17974_17996[1] = 9;
                }
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_17971 === 1) {
                  var inst_17941 = cljs.core.vec.call(null, chs);
                  var inst_17942 = inst_17941;
                  var state_17970__$1 = function() {
                    var statearr_17975 = state_17970;
                    statearr_17975[10] = inst_17942;
                    return statearr_17975;
                  }();
                  var statearr_17976_17997 = state_17970__$1;
                  statearr_17976_17997[2] = null;
                  statearr_17976_17997[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_17971 === 4) {
                    var inst_17942 = state_17970[10];
                    var state_17970__$1 = state_17970;
                    return cljs.core.async.ioc_alts_BANG_.call(null, state_17970__$1, 7, inst_17942);
                  } else {
                    if (state_val_17971 === 6) {
                      var inst_17966 = state_17970[2];
                      var state_17970__$1 = state_17970;
                      var statearr_17977_17998 = state_17970__$1;
                      statearr_17977_17998[2] = inst_17966;
                      statearr_17977_17998[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_17971 === 3) {
                        var inst_17968 = state_17970[2];
                        var state_17970__$1 = state_17970;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_17970__$1, inst_17968);
                      } else {
                        if (state_val_17971 === 2) {
                          var inst_17942 = state_17970[10];
                          var inst_17944 = cljs.core.count.call(null, inst_17942);
                          var inst_17945 = inst_17944 > 0;
                          var state_17970__$1 = state_17970;
                          if (cljs.core.truth_(inst_17945)) {
                            var statearr_17979_17999 = state_17970__$1;
                            statearr_17979_17999[1] = 4;
                          } else {
                            var statearr_17980_18000 = state_17970__$1;
                            statearr_17980_18000[1] = 5;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_17971 === 11) {
                            var inst_17942 = state_17970[10];
                            var inst_17959 = state_17970[2];
                            var tmp17978 = inst_17942;
                            var inst_17942__$1 = tmp17978;
                            var state_17970__$1 = function() {
                              var statearr_17981 = state_17970;
                              statearr_17981[11] = inst_17959;
                              statearr_17981[10] = inst_17942__$1;
                              return statearr_17981;
                            }();
                            var statearr_17982_18001 = state_17970__$1;
                            statearr_17982_18001[2] = null;
                            statearr_17982_18001[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_17971 === 9) {
                              var inst_17950 = state_17970[7];
                              var state_17970__$1 = state_17970;
                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_17970__$1, 11, out, inst_17950);
                            } else {
                              if (state_val_17971 === 5) {
                                var inst_17964 = cljs.core.async.close_BANG_.call(null, out);
                                var state_17970__$1 = state_17970;
                                var statearr_17983_18002 = state_17970__$1;
                                statearr_17983_18002[2] = inst_17964;
                                statearr_17983_18002[1] = 6;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_17971 === 10) {
                                  var inst_17962 = state_17970[2];
                                  var state_17970__$1 = state_17970;
                                  var statearr_17984_18003 = state_17970__$1;
                                  statearr_17984_18003[2] = inst_17962;
                                  statearr_17984_18003[1] = 6;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_17971 === 8) {
                                    var inst_17950 = state_17970[7];
                                    var inst_17949 = state_17970[8];
                                    var inst_17942 = state_17970[10];
                                    var inst_17951 = state_17970[9];
                                    var inst_17954 = function() {
                                      var c = inst_17951;
                                      var v = inst_17950;
                                      var vec__17947 = inst_17949;
                                      var cs = inst_17942;
                                      return function(c, v, vec__17947, cs, inst_17950, inst_17949, inst_17942, inst_17951, state_val_17971, c__6703__auto___17994, out) {
                                        return function(p1__17887_SHARP_) {
                                          return cljs.core.not_EQ_.call(null, c, p1__17887_SHARP_);
                                        };
                                      }(c, v, vec__17947, cs, inst_17950, inst_17949, inst_17942, inst_17951, state_val_17971, c__6703__auto___17994, out);
                                    }();
                                    var inst_17955 = cljs.core.filterv.call(null, inst_17954, inst_17942);
                                    var inst_17942__$1 = inst_17955;
                                    var state_17970__$1 = function() {
                                      var statearr_17985 = state_17970;
                                      statearr_17985[10] = inst_17942__$1;
                                      return statearr_17985;
                                    }();
                                    var statearr_17986_18004 = state_17970__$1;
                                    statearr_17986_18004[2] = null;
                                    statearr_17986_18004[1] = 2;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6703__auto___17994, out);
          return function(switch__6647__auto__, c__6703__auto___17994, out) {
            return function() {
              var state_machine__6648__auto__ = null;
              var state_machine__6648__auto____0 = function() {
                var statearr_17990 = [null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_17990[0] = state_machine__6648__auto__;
                statearr_17990[1] = 1;
                return statearr_17990;
              };
              var state_machine__6648__auto____1 = function(state_17970) {
                while (true) {
                  var ret_value__6649__auto__ = function() {
                    try {
                      while (true) {
                        var result__6650__auto__ = switch__6647__auto__.call(null, state_17970);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6650__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6650__auto__;
                        }
                        break;
                      }
                    } catch (e17991) {
                      if (e17991 instanceof Object) {
                        var ex__6651__auto__ = e17991;
                        var statearr_17992_18005 = state_17970;
                        statearr_17992_18005[5] = ex__6651__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_17970);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e17991;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6649__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__18006 = state_17970;
                    state_17970 = G__18006;
                    continue;
                  } else {
                    return ret_value__6649__auto__;
                  }
                  break;
                }
              };
              state_machine__6648__auto__ = function(state_17970) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6648__auto____0.call(this);
                  case 1:
                    return state_machine__6648__auto____1.call(this, state_17970);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6648__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6648__auto____0;
              state_machine__6648__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6648__auto____1;
              return state_machine__6648__auto__;
            }();
          }(switch__6647__auto__, c__6703__auto___17994, out);
        }();
        var state__6705__auto__ = function() {
          var statearr_17993 = f__6704__auto__.call(null);
          statearr_17993[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6703__auto___17994;
          return statearr_17993;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6705__auto__);
      };
    }(c__6703__auto___17994, out));
    return out;
  };
  merge = function(chs, buf_or_n) {
    switch(arguments.length) {
      case 1:
        return merge__1.call(this, chs);
      case 2:
        return merge__2.call(this, chs, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  merge.cljs$core$IFn$_invoke$arity$1 = merge__1;
  merge.cljs$core$IFn$_invoke$arity$2 = merge__2;
  return merge;
}();
cljs.core.async.into = function into(coll, ch) {
  return cljs.core.async.reduce.call(null, cljs.core.conj, coll, ch);
};
cljs.core.async.take = function() {
  var take = null;
  var take__2 = function(n, ch) {
    return take.call(null, n, ch, null);
  };
  var take__3 = function(n, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6703__auto___18099 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6703__auto___18099, out) {
      return function() {
        var f__6704__auto__ = function() {
          var switch__6647__auto__ = function(c__6703__auto___18099, out) {
            return function(state_18076) {
              var state_val_18077 = state_18076[1];
              if (state_val_18077 === 7) {
                var inst_18058 = state_18076[7];
                var inst_18058__$1 = state_18076[2];
                var inst_18059 = inst_18058__$1 == null;
                var inst_18060 = cljs.core.not.call(null, inst_18059);
                var state_18076__$1 = function() {
                  var statearr_18078 = state_18076;
                  statearr_18078[7] = inst_18058__$1;
                  return statearr_18078;
                }();
                if (inst_18060) {
                  var statearr_18079_18100 = state_18076__$1;
                  statearr_18079_18100[1] = 8;
                } else {
                  var statearr_18080_18101 = state_18076__$1;
                  statearr_18080_18101[1] = 9;
                }
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_18077 === 1) {
                  var inst_18053 = 0;
                  var state_18076__$1 = function() {
                    var statearr_18081 = state_18076;
                    statearr_18081[8] = inst_18053;
                    return statearr_18081;
                  }();
                  var statearr_18082_18102 = state_18076__$1;
                  statearr_18082_18102[2] = null;
                  statearr_18082_18102[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_18077 === 4) {
                    var state_18076__$1 = state_18076;
                    return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_18076__$1, 7, ch);
                  } else {
                    if (state_val_18077 === 6) {
                      var inst_18071 = state_18076[2];
                      var state_18076__$1 = state_18076;
                      var statearr_18083_18103 = state_18076__$1;
                      statearr_18083_18103[2] = inst_18071;
                      statearr_18083_18103[1] = 3;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_18077 === 3) {
                        var inst_18073 = state_18076[2];
                        var inst_18074 = cljs.core.async.close_BANG_.call(null, out);
                        var state_18076__$1 = function() {
                          var statearr_18084 = state_18076;
                          statearr_18084[9] = inst_18073;
                          return statearr_18084;
                        }();
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_18076__$1, inst_18074);
                      } else {
                        if (state_val_18077 === 2) {
                          var inst_18053 = state_18076[8];
                          var inst_18055 = inst_18053 < n;
                          var state_18076__$1 = state_18076;
                          if (cljs.core.truth_(inst_18055)) {
                            var statearr_18085_18104 = state_18076__$1;
                            statearr_18085_18104[1] = 4;
                          } else {
                            var statearr_18086_18105 = state_18076__$1;
                            statearr_18086_18105[1] = 5;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_18077 === 11) {
                            var inst_18053 = state_18076[8];
                            var inst_18063 = state_18076[2];
                            var inst_18064 = inst_18053 + 1;
                            var inst_18053__$1 = inst_18064;
                            var state_18076__$1 = function() {
                              var statearr_18087 = state_18076;
                              statearr_18087[10] = inst_18063;
                              statearr_18087[8] = inst_18053__$1;
                              return statearr_18087;
                            }();
                            var statearr_18088_18106 = state_18076__$1;
                            statearr_18088_18106[2] = null;
                            statearr_18088_18106[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_18077 === 9) {
                              var state_18076__$1 = state_18076;
                              var statearr_18089_18107 = state_18076__$1;
                              statearr_18089_18107[2] = null;
                              statearr_18089_18107[1] = 10;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_18077 === 5) {
                                var state_18076__$1 = state_18076;
                                var statearr_18090_18108 = state_18076__$1;
                                statearr_18090_18108[2] = null;
                                statearr_18090_18108[1] = 6;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_18077 === 10) {
                                  var inst_18068 = state_18076[2];
                                  var state_18076__$1 = state_18076;
                                  var statearr_18091_18109 = state_18076__$1;
                                  statearr_18091_18109[2] = inst_18068;
                                  statearr_18091_18109[1] = 6;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_18077 === 8) {
                                    var inst_18058 = state_18076[7];
                                    var state_18076__$1 = state_18076;
                                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_18076__$1, 11, out, inst_18058);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6703__auto___18099, out);
          return function(switch__6647__auto__, c__6703__auto___18099, out) {
            return function() {
              var state_machine__6648__auto__ = null;
              var state_machine__6648__auto____0 = function() {
                var statearr_18095 = [null, null, null, null, null, null, null, null, null, null, null];
                statearr_18095[0] = state_machine__6648__auto__;
                statearr_18095[1] = 1;
                return statearr_18095;
              };
              var state_machine__6648__auto____1 = function(state_18076) {
                while (true) {
                  var ret_value__6649__auto__ = function() {
                    try {
                      while (true) {
                        var result__6650__auto__ = switch__6647__auto__.call(null, state_18076);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6650__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6650__auto__;
                        }
                        break;
                      }
                    } catch (e18096) {
                      if (e18096 instanceof Object) {
                        var ex__6651__auto__ = e18096;
                        var statearr_18097_18110 = state_18076;
                        statearr_18097_18110[5] = ex__6651__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_18076);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e18096;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6649__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__18111 = state_18076;
                    state_18076 = G__18111;
                    continue;
                  } else {
                    return ret_value__6649__auto__;
                  }
                  break;
                }
              };
              state_machine__6648__auto__ = function(state_18076) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6648__auto____0.call(this);
                  case 1:
                    return state_machine__6648__auto____1.call(this, state_18076);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6648__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6648__auto____0;
              state_machine__6648__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6648__auto____1;
              return state_machine__6648__auto__;
            }();
          }(switch__6647__auto__, c__6703__auto___18099, out);
        }();
        var state__6705__auto__ = function() {
          var statearr_18098 = f__6704__auto__.call(null);
          statearr_18098[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6703__auto___18099;
          return statearr_18098;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6705__auto__);
      };
    }(c__6703__auto___18099, out));
    return out;
  };
  take = function(n, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return take__2.call(this, n, ch);
      case 3:
        return take__3.call(this, n, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  take.cljs$core$IFn$_invoke$arity$2 = take__2;
  take.cljs$core$IFn$_invoke$arity$3 = take__3;
  return take;
}();
cljs.core.async.map_LT_ = function map_LT_(f, ch) {
  if (typeof cljs.core.async.t18119 !== "undefined") {
  } else {
    cljs.core.async.t18119 = function(ch, f, map_LT_, meta18120) {
      this.ch = ch;
      this.f = f;
      this.map_LT_ = map_LT_;
      this.meta18120 = meta18120;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t18119.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t18119.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, val, fn1);
    };
    cljs.core.async.t18119.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t18119.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      var ret = cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, function() {
        if (typeof cljs.core.async.t18122 !== "undefined") {
        } else {
          cljs.core.async.t18122 = function(fn1, _, meta18120, map_LT_, f, ch, meta18123) {
            this.fn1 = fn1;
            this._ = _;
            this.meta18120 = meta18120;
            this.map_LT_ = map_LT_;
            this.f = f;
            this.ch = ch;
            this.meta18123 = meta18123;
            this.cljs$lang$protocol_mask$partition1$ = 0;
            this.cljs$lang$protocol_mask$partition0$ = 393216;
          };
          cljs.core.async.t18122.prototype.cljs$core$async$impl$protocols$Handler$ = true;
          cljs.core.async.t18122.prototype.cljs$core$async$impl$protocols$Handler$active_QMARK_$arity$1 = function(___$1) {
            return function(___$1) {
              var self__ = this;
              var ___$2 = this;
              return cljs.core.async.impl.protocols.active_QMARK_.call(null, self__.fn1);
            };
          }(___$1);
          cljs.core.async.t18122.prototype.cljs$core$async$impl$protocols$Handler$commit$arity$1 = function(___$1) {
            return function(___$1) {
              var self__ = this;
              var ___$2 = this;
              var f1 = cljs.core.async.impl.protocols.commit.call(null, self__.fn1);
              return function(f1, ___$2, ___$1) {
                return function(p1__18112_SHARP_) {
                  return f1.call(null, p1__18112_SHARP_ == null ? null : self__.f.call(null, p1__18112_SHARP_));
                };
              }(f1, ___$2, ___$1);
            };
          }(___$1);
          cljs.core.async.t18122.prototype.cljs$core$IMeta$_meta$arity$1 = function(___$1) {
            return function(_18124) {
              var self__ = this;
              var _18124__$1 = this;
              return self__.meta18123;
            };
          }(___$1);
          cljs.core.async.t18122.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(___$1) {
            return function(_18124, meta18123__$1) {
              var self__ = this;
              var _18124__$1 = this;
              return new cljs.core.async.t18122(self__.fn1, self__._, self__.meta18120, self__.map_LT_, self__.f, self__.ch, meta18123__$1);
            };
          }(___$1);
          cljs.core.async.t18122.cljs$lang$type = true;
          cljs.core.async.t18122.cljs$lang$ctorStr = "cljs.core.async/t18122";
          cljs.core.async.t18122.cljs$lang$ctorPrWriter = function(___$1) {
            return function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
              return cljs.core._write.call(null, writer__4513__auto__, "cljs.core.async/t18122");
            };
          }(___$1);
          cljs.core.async.__GT_t18122 = function(___$1) {
            return function __GT_t18122(fn1__$1, ___$2, meta18120__$1, map_LT___$1, f__$1, ch__$1, meta18123) {
              return new cljs.core.async.t18122(fn1__$1, ___$2, meta18120__$1, map_LT___$1, f__$1, ch__$1, meta18123);
            };
          }(___$1);
        }
        return new cljs.core.async.t18122(fn1, ___$1, self__.meta18120, self__.map_LT_, self__.f, self__.ch, cljs.core.PersistentArrayMap.EMPTY);
      }());
      if (cljs.core.truth_(function() {
        var and__3913__auto__ = ret;
        if (cljs.core.truth_(and__3913__auto__)) {
          return!(cljs.core.deref.call(null, ret) == null);
        } else {
          return and__3913__auto__;
        }
      }())) {
        return cljs.core.async.impl.channels.box.call(null, self__.f.call(null, cljs.core.deref.call(null, ret)));
      } else {
        return ret;
      }
    };
    cljs.core.async.t18119.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t18119.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t18119.prototype.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.closed_QMARK_.call(null, self__.ch);
    };
    cljs.core.async.t18119.prototype.cljs$core$IMeta$_meta$arity$1 = function(_18121) {
      var self__ = this;
      var _18121__$1 = this;
      return self__.meta18120;
    };
    cljs.core.async.t18119.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_18121, meta18120__$1) {
      var self__ = this;
      var _18121__$1 = this;
      return new cljs.core.async.t18119(self__.ch, self__.f, self__.map_LT_, meta18120__$1);
    };
    cljs.core.async.t18119.cljs$lang$type = true;
    cljs.core.async.t18119.cljs$lang$ctorStr = "cljs.core.async/t18119";
    cljs.core.async.t18119.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
      return cljs.core._write.call(null, writer__4513__auto__, "cljs.core.async/t18119");
    };
    cljs.core.async.__GT_t18119 = function __GT_t18119(ch__$1, f__$1, map_LT___$1, meta18120) {
      return new cljs.core.async.t18119(ch__$1, f__$1, map_LT___$1, meta18120);
    };
  }
  return new cljs.core.async.t18119(ch, f, map_LT_, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.map_GT_ = function map_GT_(f, ch) {
  if (typeof cljs.core.async.t18128 !== "undefined") {
  } else {
    cljs.core.async.t18128 = function(ch, f, map_GT_, meta18129) {
      this.ch = ch;
      this.f = f;
      this.map_GT_ = map_GT_;
      this.meta18129 = meta18129;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t18128.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t18128.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, self__.f.call(null, val), fn1);
    };
    cljs.core.async.t18128.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t18128.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, fn1);
    };
    cljs.core.async.t18128.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t18128.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t18128.prototype.cljs$core$IMeta$_meta$arity$1 = function(_18130) {
      var self__ = this;
      var _18130__$1 = this;
      return self__.meta18129;
    };
    cljs.core.async.t18128.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_18130, meta18129__$1) {
      var self__ = this;
      var _18130__$1 = this;
      return new cljs.core.async.t18128(self__.ch, self__.f, self__.map_GT_, meta18129__$1);
    };
    cljs.core.async.t18128.cljs$lang$type = true;
    cljs.core.async.t18128.cljs$lang$ctorStr = "cljs.core.async/t18128";
    cljs.core.async.t18128.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
      return cljs.core._write.call(null, writer__4513__auto__, "cljs.core.async/t18128");
    };
    cljs.core.async.__GT_t18128 = function __GT_t18128(ch__$1, f__$1, map_GT___$1, meta18129) {
      return new cljs.core.async.t18128(ch__$1, f__$1, map_GT___$1, meta18129);
    };
  }
  return new cljs.core.async.t18128(ch, f, map_GT_, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.filter_GT_ = function filter_GT_(p, ch) {
  if (typeof cljs.core.async.t18134 !== "undefined") {
  } else {
    cljs.core.async.t18134 = function(ch, p, filter_GT_, meta18135) {
      this.ch = ch;
      this.p = p;
      this.filter_GT_ = filter_GT_;
      this.meta18135 = meta18135;
      this.cljs$lang$protocol_mask$partition1$ = 0;
      this.cljs$lang$protocol_mask$partition0$ = 393216;
    };
    cljs.core.async.t18134.prototype.cljs$core$async$impl$protocols$WritePort$ = true;
    cljs.core.async.t18134.prototype.cljs$core$async$impl$protocols$WritePort$put_BANG_$arity$3 = function(_, val, fn1) {
      var self__ = this;
      var ___$1 = this;
      if (cljs.core.truth_(self__.p.call(null, val))) {
        return cljs.core.async.impl.protocols.put_BANG_.call(null, self__.ch, val, fn1);
      } else {
        return cljs.core.async.impl.channels.box.call(null, cljs.core.not.call(null, cljs.core.async.impl.protocols.closed_QMARK_.call(null, self__.ch)));
      }
    };
    cljs.core.async.t18134.prototype.cljs$core$async$impl$protocols$ReadPort$ = true;
    cljs.core.async.t18134.prototype.cljs$core$async$impl$protocols$ReadPort$take_BANG_$arity$2 = function(_, fn1) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.take_BANG_.call(null, self__.ch, fn1);
    };
    cljs.core.async.t18134.prototype.cljs$core$async$impl$protocols$Channel$ = true;
    cljs.core.async.t18134.prototype.cljs$core$async$impl$protocols$Channel$close_BANG_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.close_BANG_.call(null, self__.ch);
    };
    cljs.core.async.t18134.prototype.cljs$core$async$impl$protocols$Channel$closed_QMARK_$arity$1 = function(_) {
      var self__ = this;
      var ___$1 = this;
      return cljs.core.async.impl.protocols.closed_QMARK_.call(null, self__.ch);
    };
    cljs.core.async.t18134.prototype.cljs$core$IMeta$_meta$arity$1 = function(_18136) {
      var self__ = this;
      var _18136__$1 = this;
      return self__.meta18135;
    };
    cljs.core.async.t18134.prototype.cljs$core$IWithMeta$_with_meta$arity$2 = function(_18136, meta18135__$1) {
      var self__ = this;
      var _18136__$1 = this;
      return new cljs.core.async.t18134(self__.ch, self__.p, self__.filter_GT_, meta18135__$1);
    };
    cljs.core.async.t18134.cljs$lang$type = true;
    cljs.core.async.t18134.cljs$lang$ctorStr = "cljs.core.async/t18134";
    cljs.core.async.t18134.cljs$lang$ctorPrWriter = function(this__4512__auto__, writer__4513__auto__, opt__4514__auto__) {
      return cljs.core._write.call(null, writer__4513__auto__, "cljs.core.async/t18134");
    };
    cljs.core.async.__GT_t18134 = function __GT_t18134(ch__$1, p__$1, filter_GT___$1, meta18135) {
      return new cljs.core.async.t18134(ch__$1, p__$1, filter_GT___$1, meta18135);
    };
  }
  return new cljs.core.async.t18134(ch, p, filter_GT_, cljs.core.PersistentArrayMap.EMPTY);
};
cljs.core.async.remove_GT_ = function remove_GT_(p, ch) {
  return cljs.core.async.filter_GT_.call(null, cljs.core.complement.call(null, p), ch);
};
cljs.core.async.filter_LT_ = function() {
  var filter_LT_ = null;
  var filter_LT___2 = function(p, ch) {
    return filter_LT_.call(null, p, ch, null);
  };
  var filter_LT___3 = function(p, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6703__auto___18219 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6703__auto___18219, out) {
      return function() {
        var f__6704__auto__ = function() {
          var switch__6647__auto__ = function(c__6703__auto___18219, out) {
            return function(state_18198) {
              var state_val_18199 = state_18198[1];
              if (state_val_18199 === 7) {
                var inst_18194 = state_18198[2];
                var state_18198__$1 = state_18198;
                var statearr_18200_18220 = state_18198__$1;
                statearr_18200_18220[2] = inst_18194;
                statearr_18200_18220[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_18199 === 1) {
                  var state_18198__$1 = state_18198;
                  var statearr_18201_18221 = state_18198__$1;
                  statearr_18201_18221[2] = null;
                  statearr_18201_18221[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_18199 === 4) {
                    var inst_18180 = state_18198[7];
                    var inst_18180__$1 = state_18198[2];
                    var inst_18181 = inst_18180__$1 == null;
                    var state_18198__$1 = function() {
                      var statearr_18202 = state_18198;
                      statearr_18202[7] = inst_18180__$1;
                      return statearr_18202;
                    }();
                    if (cljs.core.truth_(inst_18181)) {
                      var statearr_18203_18222 = state_18198__$1;
                      statearr_18203_18222[1] = 5;
                    } else {
                      var statearr_18204_18223 = state_18198__$1;
                      statearr_18204_18223[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_18199 === 6) {
                      var inst_18180 = state_18198[7];
                      var inst_18185 = p.call(null, inst_18180);
                      var state_18198__$1 = state_18198;
                      if (cljs.core.truth_(inst_18185)) {
                        var statearr_18205_18224 = state_18198__$1;
                        statearr_18205_18224[1] = 8;
                      } else {
                        var statearr_18206_18225 = state_18198__$1;
                        statearr_18206_18225[1] = 9;
                      }
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_18199 === 3) {
                        var inst_18196 = state_18198[2];
                        var state_18198__$1 = state_18198;
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_18198__$1, inst_18196);
                      } else {
                        if (state_val_18199 === 2) {
                          var state_18198__$1 = state_18198;
                          return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_18198__$1, 4, ch);
                        } else {
                          if (state_val_18199 === 11) {
                            var inst_18188 = state_18198[2];
                            var state_18198__$1 = state_18198;
                            var statearr_18207_18226 = state_18198__$1;
                            statearr_18207_18226[2] = inst_18188;
                            statearr_18207_18226[1] = 10;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_18199 === 9) {
                              var state_18198__$1 = state_18198;
                              var statearr_18208_18227 = state_18198__$1;
                              statearr_18208_18227[2] = null;
                              statearr_18208_18227[1] = 10;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_18199 === 5) {
                                var inst_18183 = cljs.core.async.close_BANG_.call(null, out);
                                var state_18198__$1 = state_18198;
                                var statearr_18209_18228 = state_18198__$1;
                                statearr_18209_18228[2] = inst_18183;
                                statearr_18209_18228[1] = 7;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_18199 === 10) {
                                  var inst_18191 = state_18198[2];
                                  var state_18198__$1 = function() {
                                    var statearr_18210 = state_18198;
                                    statearr_18210[8] = inst_18191;
                                    return statearr_18210;
                                  }();
                                  var statearr_18211_18229 = state_18198__$1;
                                  statearr_18211_18229[2] = null;
                                  statearr_18211_18229[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_18199 === 8) {
                                    var inst_18180 = state_18198[7];
                                    var state_18198__$1 = state_18198;
                                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_18198__$1, 11, out, inst_18180);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6703__auto___18219, out);
          return function(switch__6647__auto__, c__6703__auto___18219, out) {
            return function() {
              var state_machine__6648__auto__ = null;
              var state_machine__6648__auto____0 = function() {
                var statearr_18215 = [null, null, null, null, null, null, null, null, null];
                statearr_18215[0] = state_machine__6648__auto__;
                statearr_18215[1] = 1;
                return statearr_18215;
              };
              var state_machine__6648__auto____1 = function(state_18198) {
                while (true) {
                  var ret_value__6649__auto__ = function() {
                    try {
                      while (true) {
                        var result__6650__auto__ = switch__6647__auto__.call(null, state_18198);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6650__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6650__auto__;
                        }
                        break;
                      }
                    } catch (e18216) {
                      if (e18216 instanceof Object) {
                        var ex__6651__auto__ = e18216;
                        var statearr_18217_18230 = state_18198;
                        statearr_18217_18230[5] = ex__6651__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_18198);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e18216;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6649__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__18231 = state_18198;
                    state_18198 = G__18231;
                    continue;
                  } else {
                    return ret_value__6649__auto__;
                  }
                  break;
                }
              };
              state_machine__6648__auto__ = function(state_18198) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6648__auto____0.call(this);
                  case 1:
                    return state_machine__6648__auto____1.call(this, state_18198);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6648__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6648__auto____0;
              state_machine__6648__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6648__auto____1;
              return state_machine__6648__auto__;
            }();
          }(switch__6647__auto__, c__6703__auto___18219, out);
        }();
        var state__6705__auto__ = function() {
          var statearr_18218 = f__6704__auto__.call(null);
          statearr_18218[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6703__auto___18219;
          return statearr_18218;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6705__auto__);
      };
    }(c__6703__auto___18219, out));
    return out;
  };
  filter_LT_ = function(p, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return filter_LT___2.call(this, p, ch);
      case 3:
        return filter_LT___3.call(this, p, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  filter_LT_.cljs$core$IFn$_invoke$arity$2 = filter_LT___2;
  filter_LT_.cljs$core$IFn$_invoke$arity$3 = filter_LT___3;
  return filter_LT_;
}();
cljs.core.async.remove_LT_ = function() {
  var remove_LT_ = null;
  var remove_LT___2 = function(p, ch) {
    return remove_LT_.call(null, p, ch, null);
  };
  var remove_LT___3 = function(p, ch, buf_or_n) {
    return cljs.core.async.filter_LT_.call(null, cljs.core.complement.call(null, p), ch, buf_or_n);
  };
  remove_LT_ = function(p, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return remove_LT___2.call(this, p, ch);
      case 3:
        return remove_LT___3.call(this, p, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  remove_LT_.cljs$core$IFn$_invoke$arity$2 = remove_LT___2;
  remove_LT_.cljs$core$IFn$_invoke$arity$3 = remove_LT___3;
  return remove_LT_;
}();
cljs.core.async.mapcat_STAR_ = function mapcat_STAR_(f, in$, out) {
  var c__6703__auto__ = cljs.core.async.chan.call(null, 1);
  cljs.core.async.impl.dispatch.run.call(null, function(c__6703__auto__) {
    return function() {
      var f__6704__auto__ = function() {
        var switch__6647__auto__ = function(c__6703__auto__) {
          return function(state_18397) {
            var state_val_18398 = state_18397[1];
            if (state_val_18398 === 7) {
              var inst_18393 = state_18397[2];
              var state_18397__$1 = state_18397;
              var statearr_18399_18440 = state_18397__$1;
              statearr_18399_18440[2] = inst_18393;
              statearr_18399_18440[1] = 3;
              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
            } else {
              if (state_val_18398 === 20) {
                var inst_18363 = state_18397[7];
                var inst_18374 = state_18397[2];
                var inst_18375 = cljs.core.next.call(null, inst_18363);
                var inst_18349 = inst_18375;
                var inst_18350 = null;
                var inst_18351 = 0;
                var inst_18352 = 0;
                var state_18397__$1 = function() {
                  var statearr_18400 = state_18397;
                  statearr_18400[8] = inst_18350;
                  statearr_18400[9] = inst_18351;
                  statearr_18400[10] = inst_18374;
                  statearr_18400[11] = inst_18352;
                  statearr_18400[12] = inst_18349;
                  return statearr_18400;
                }();
                var statearr_18401_18441 = state_18397__$1;
                statearr_18401_18441[2] = null;
                statearr_18401_18441[1] = 8;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_18398 === 1) {
                  var state_18397__$1 = state_18397;
                  var statearr_18402_18442 = state_18397__$1;
                  statearr_18402_18442[2] = null;
                  statearr_18402_18442[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_18398 === 4) {
                    var inst_18338 = state_18397[13];
                    var inst_18338__$1 = state_18397[2];
                    var inst_18339 = inst_18338__$1 == null;
                    var state_18397__$1 = function() {
                      var statearr_18403 = state_18397;
                      statearr_18403[13] = inst_18338__$1;
                      return statearr_18403;
                    }();
                    if (cljs.core.truth_(inst_18339)) {
                      var statearr_18404_18443 = state_18397__$1;
                      statearr_18404_18443[1] = 5;
                    } else {
                      var statearr_18405_18444 = state_18397__$1;
                      statearr_18405_18444[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_18398 === 15) {
                      var state_18397__$1 = state_18397;
                      var statearr_18409_18445 = state_18397__$1;
                      statearr_18409_18445[2] = null;
                      statearr_18409_18445[1] = 16;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_18398 === 21) {
                        var state_18397__$1 = state_18397;
                        var statearr_18410_18446 = state_18397__$1;
                        statearr_18410_18446[2] = null;
                        statearr_18410_18446[1] = 23;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_18398 === 13) {
                          var inst_18350 = state_18397[8];
                          var inst_18351 = state_18397[9];
                          var inst_18352 = state_18397[11];
                          var inst_18349 = state_18397[12];
                          var inst_18359 = state_18397[2];
                          var inst_18360 = inst_18352 + 1;
                          var tmp18406 = inst_18350;
                          var tmp18407 = inst_18351;
                          var tmp18408 = inst_18349;
                          var inst_18349__$1 = tmp18408;
                          var inst_18350__$1 = tmp18406;
                          var inst_18351__$1 = tmp18407;
                          var inst_18352__$1 = inst_18360;
                          var state_18397__$1 = function() {
                            var statearr_18411 = state_18397;
                            statearr_18411[14] = inst_18359;
                            statearr_18411[8] = inst_18350__$1;
                            statearr_18411[9] = inst_18351__$1;
                            statearr_18411[11] = inst_18352__$1;
                            statearr_18411[12] = inst_18349__$1;
                            return statearr_18411;
                          }();
                          var statearr_18412_18447 = state_18397__$1;
                          statearr_18412_18447[2] = null;
                          statearr_18412_18447[1] = 8;
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_18398 === 22) {
                            var state_18397__$1 = state_18397;
                            var statearr_18413_18448 = state_18397__$1;
                            statearr_18413_18448[2] = null;
                            statearr_18413_18448[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_18398 === 6) {
                              var inst_18338 = state_18397[13];
                              var inst_18347 = f.call(null, inst_18338);
                              var inst_18348 = cljs.core.seq.call(null, inst_18347);
                              var inst_18349 = inst_18348;
                              var inst_18350 = null;
                              var inst_18351 = 0;
                              var inst_18352 = 0;
                              var state_18397__$1 = function() {
                                var statearr_18414 = state_18397;
                                statearr_18414[8] = inst_18350;
                                statearr_18414[9] = inst_18351;
                                statearr_18414[11] = inst_18352;
                                statearr_18414[12] = inst_18349;
                                return statearr_18414;
                              }();
                              var statearr_18415_18449 = state_18397__$1;
                              statearr_18415_18449[2] = null;
                              statearr_18415_18449[1] = 8;
                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                            } else {
                              if (state_val_18398 === 17) {
                                var inst_18363 = state_18397[7];
                                var inst_18367 = cljs.core.chunk_first.call(null, inst_18363);
                                var inst_18368 = cljs.core.chunk_rest.call(null, inst_18363);
                                var inst_18369 = cljs.core.count.call(null, inst_18367);
                                var inst_18349 = inst_18368;
                                var inst_18350 = inst_18367;
                                var inst_18351 = inst_18369;
                                var inst_18352 = 0;
                                var state_18397__$1 = function() {
                                  var statearr_18416 = state_18397;
                                  statearr_18416[8] = inst_18350;
                                  statearr_18416[9] = inst_18351;
                                  statearr_18416[11] = inst_18352;
                                  statearr_18416[12] = inst_18349;
                                  return statearr_18416;
                                }();
                                var statearr_18417_18450 = state_18397__$1;
                                statearr_18417_18450[2] = null;
                                statearr_18417_18450[1] = 8;
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_18398 === 3) {
                                  var inst_18395 = state_18397[2];
                                  var state_18397__$1 = state_18397;
                                  return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_18397__$1, inst_18395);
                                } else {
                                  if (state_val_18398 === 12) {
                                    var inst_18383 = state_18397[2];
                                    var state_18397__$1 = state_18397;
                                    var statearr_18418_18451 = state_18397__$1;
                                    statearr_18418_18451[2] = inst_18383;
                                    statearr_18418_18451[1] = 9;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    if (state_val_18398 === 2) {
                                      var state_18397__$1 = state_18397;
                                      return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_18397__$1, 4, in$);
                                    } else {
                                      if (state_val_18398 === 23) {
                                        var inst_18391 = state_18397[2];
                                        var state_18397__$1 = state_18397;
                                        var statearr_18419_18452 = state_18397__$1;
                                        statearr_18419_18452[2] = inst_18391;
                                        statearr_18419_18452[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_18398 === 19) {
                                          var inst_18378 = state_18397[2];
                                          var state_18397__$1 = state_18397;
                                          var statearr_18420_18453 = state_18397__$1;
                                          statearr_18420_18453[2] = inst_18378;
                                          statearr_18420_18453[1] = 16;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_18398 === 11) {
                                            var inst_18363 = state_18397[7];
                                            var inst_18349 = state_18397[12];
                                            var inst_18363__$1 = cljs.core.seq.call(null, inst_18349);
                                            var state_18397__$1 = function() {
                                              var statearr_18421 = state_18397;
                                              statearr_18421[7] = inst_18363__$1;
                                              return statearr_18421;
                                            }();
                                            if (inst_18363__$1) {
                                              var statearr_18422_18454 = state_18397__$1;
                                              statearr_18422_18454[1] = 14;
                                            } else {
                                              var statearr_18423_18455 = state_18397__$1;
                                              statearr_18423_18455[1] = 15;
                                            }
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            if (state_val_18398 === 9) {
                                              var inst_18385 = state_18397[2];
                                              var inst_18386 = cljs.core.async.impl.protocols.closed_QMARK_.call(null, out);
                                              var state_18397__$1 = function() {
                                                var statearr_18424 = state_18397;
                                                statearr_18424[15] = inst_18385;
                                                return statearr_18424;
                                              }();
                                              if (cljs.core.truth_(inst_18386)) {
                                                var statearr_18425_18456 = state_18397__$1;
                                                statearr_18425_18456[1] = 21;
                                              } else {
                                                var statearr_18426_18457 = state_18397__$1;
                                                statearr_18426_18457[1] = 22;
                                              }
                                              return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                            } else {
                                              if (state_val_18398 === 5) {
                                                var inst_18341 = cljs.core.async.close_BANG_.call(null, out);
                                                var state_18397__$1 = state_18397;
                                                var statearr_18427_18458 = state_18397__$1;
                                                statearr_18427_18458[2] = inst_18341;
                                                statearr_18427_18458[1] = 7;
                                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                              } else {
                                                if (state_val_18398 === 14) {
                                                  var inst_18363 = state_18397[7];
                                                  var inst_18365 = cljs.core.chunked_seq_QMARK_.call(null, inst_18363);
                                                  var state_18397__$1 = state_18397;
                                                  if (inst_18365) {
                                                    var statearr_18428_18459 = state_18397__$1;
                                                    statearr_18428_18459[1] = 17;
                                                  } else {
                                                    var statearr_18429_18460 = state_18397__$1;
                                                    statearr_18429_18460[1] = 18;
                                                  }
                                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                } else {
                                                  if (state_val_18398 === 16) {
                                                    var inst_18381 = state_18397[2];
                                                    var state_18397__$1 = state_18397;
                                                    var statearr_18430_18461 = state_18397__$1;
                                                    statearr_18430_18461[2] = inst_18381;
                                                    statearr_18430_18461[1] = 12;
                                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                  } else {
                                                    if (state_val_18398 === 10) {
                                                      var inst_18350 = state_18397[8];
                                                      var inst_18352 = state_18397[11];
                                                      var inst_18357 = cljs.core._nth.call(null, inst_18350, inst_18352);
                                                      var state_18397__$1 = state_18397;
                                                      return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_18397__$1, 13, out, inst_18357);
                                                    } else {
                                                      if (state_val_18398 === 18) {
                                                        var inst_18363 = state_18397[7];
                                                        var inst_18372 = cljs.core.first.call(null, inst_18363);
                                                        var state_18397__$1 = state_18397;
                                                        return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_18397__$1, 20, out, inst_18372);
                                                      } else {
                                                        if (state_val_18398 === 8) {
                                                          var inst_18351 = state_18397[9];
                                                          var inst_18352 = state_18397[11];
                                                          var inst_18354 = inst_18352 < inst_18351;
                                                          var inst_18355 = inst_18354;
                                                          var state_18397__$1 = state_18397;
                                                          if (cljs.core.truth_(inst_18355)) {
                                                            var statearr_18431_18462 = state_18397__$1;
                                                            statearr_18431_18462[1] = 10;
                                                          } else {
                                                            var statearr_18432_18463 = state_18397__$1;
                                                            statearr_18432_18463[1] = 11;
                                                          }
                                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                                        } else {
                                                          return null;
                                                        }
                                                      }
                                                    }
                                                  }
                                                }
                                              }
                                            }
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            }
          };
        }(c__6703__auto__);
        return function(switch__6647__auto__, c__6703__auto__) {
          return function() {
            var state_machine__6648__auto__ = null;
            var state_machine__6648__auto____0 = function() {
              var statearr_18436 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
              statearr_18436[0] = state_machine__6648__auto__;
              statearr_18436[1] = 1;
              return statearr_18436;
            };
            var state_machine__6648__auto____1 = function(state_18397) {
              while (true) {
                var ret_value__6649__auto__ = function() {
                  try {
                    while (true) {
                      var result__6650__auto__ = switch__6647__auto__.call(null, state_18397);
                      if (cljs.core.keyword_identical_QMARK_.call(null, result__6650__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                        continue;
                      } else {
                        return result__6650__auto__;
                      }
                      break;
                    }
                  } catch (e18437) {
                    if (e18437 instanceof Object) {
                      var ex__6651__auto__ = e18437;
                      var statearr_18438_18464 = state_18397;
                      statearr_18438_18464[5] = ex__6651__auto__;
                      cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_18397);
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      throw e18437;
                    }
                  }
                }();
                if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6649__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                  var G__18465 = state_18397;
                  state_18397 = G__18465;
                  continue;
                } else {
                  return ret_value__6649__auto__;
                }
                break;
              }
            };
            state_machine__6648__auto__ = function(state_18397) {
              switch(arguments.length) {
                case 0:
                  return state_machine__6648__auto____0.call(this);
                case 1:
                  return state_machine__6648__auto____1.call(this, state_18397);
              }
              throw new Error("Invalid arity: " + arguments.length);
            };
            state_machine__6648__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6648__auto____0;
            state_machine__6648__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6648__auto____1;
            return state_machine__6648__auto__;
          }();
        }(switch__6647__auto__, c__6703__auto__);
      }();
      var state__6705__auto__ = function() {
        var statearr_18439 = f__6704__auto__.call(null);
        statearr_18439[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6703__auto__;
        return statearr_18439;
      }();
      return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6705__auto__);
    };
  }(c__6703__auto__));
  return c__6703__auto__;
};
cljs.core.async.mapcat_LT_ = function() {
  var mapcat_LT_ = null;
  var mapcat_LT___2 = function(f, in$) {
    return mapcat_LT_.call(null, f, in$, null);
  };
  var mapcat_LT___3 = function(f, in$, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    cljs.core.async.mapcat_STAR_.call(null, f, in$, out);
    return out;
  };
  mapcat_LT_ = function(f, in$, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return mapcat_LT___2.call(this, f, in$);
      case 3:
        return mapcat_LT___3.call(this, f, in$, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat_LT_.cljs$core$IFn$_invoke$arity$2 = mapcat_LT___2;
  mapcat_LT_.cljs$core$IFn$_invoke$arity$3 = mapcat_LT___3;
  return mapcat_LT_;
}();
cljs.core.async.mapcat_GT_ = function() {
  var mapcat_GT_ = null;
  var mapcat_GT___2 = function(f, out) {
    return mapcat_GT_.call(null, f, out, null);
  };
  var mapcat_GT___3 = function(f, out, buf_or_n) {
    var in$ = cljs.core.async.chan.call(null, buf_or_n);
    cljs.core.async.mapcat_STAR_.call(null, f, in$, out);
    return in$;
  };
  mapcat_GT_ = function(f, out, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return mapcat_GT___2.call(this, f, out);
      case 3:
        return mapcat_GT___3.call(this, f, out, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  mapcat_GT_.cljs$core$IFn$_invoke$arity$2 = mapcat_GT___2;
  mapcat_GT_.cljs$core$IFn$_invoke$arity$3 = mapcat_GT___3;
  return mapcat_GT_;
}();
cljs.core.async.unique = function() {
  var unique = null;
  var unique__1 = function(ch) {
    return unique.call(null, ch, null);
  };
  var unique__2 = function(ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6703__auto___18562 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6703__auto___18562, out) {
      return function() {
        var f__6704__auto__ = function() {
          var switch__6647__auto__ = function(c__6703__auto___18562, out) {
            return function(state_18537) {
              var state_val_18538 = state_18537[1];
              if (state_val_18538 === 7) {
                var inst_18532 = state_18537[2];
                var state_18537__$1 = state_18537;
                var statearr_18539_18563 = state_18537__$1;
                statearr_18539_18563[2] = inst_18532;
                statearr_18539_18563[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_18538 === 1) {
                  var inst_18514 = null;
                  var state_18537__$1 = function() {
                    var statearr_18540 = state_18537;
                    statearr_18540[7] = inst_18514;
                    return statearr_18540;
                  }();
                  var statearr_18541_18564 = state_18537__$1;
                  statearr_18541_18564[2] = null;
                  statearr_18541_18564[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_18538 === 4) {
                    var inst_18517 = state_18537[8];
                    var inst_18517__$1 = state_18537[2];
                    var inst_18518 = inst_18517__$1 == null;
                    var inst_18519 = cljs.core.not.call(null, inst_18518);
                    var state_18537__$1 = function() {
                      var statearr_18542 = state_18537;
                      statearr_18542[8] = inst_18517__$1;
                      return statearr_18542;
                    }();
                    if (inst_18519) {
                      var statearr_18543_18565 = state_18537__$1;
                      statearr_18543_18565[1] = 5;
                    } else {
                      var statearr_18544_18566 = state_18537__$1;
                      statearr_18544_18566[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_18538 === 6) {
                      var state_18537__$1 = state_18537;
                      var statearr_18545_18567 = state_18537__$1;
                      statearr_18545_18567[2] = null;
                      statearr_18545_18567[1] = 7;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_18538 === 3) {
                        var inst_18534 = state_18537[2];
                        var inst_18535 = cljs.core.async.close_BANG_.call(null, out);
                        var state_18537__$1 = function() {
                          var statearr_18546 = state_18537;
                          statearr_18546[9] = inst_18534;
                          return statearr_18546;
                        }();
                        return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_18537__$1, inst_18535);
                      } else {
                        if (state_val_18538 === 2) {
                          var state_18537__$1 = state_18537;
                          return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_18537__$1, 4, ch);
                        } else {
                          if (state_val_18538 === 11) {
                            var inst_18517 = state_18537[8];
                            var inst_18526 = state_18537[2];
                            var inst_18514 = inst_18517;
                            var state_18537__$1 = function() {
                              var statearr_18547 = state_18537;
                              statearr_18547[7] = inst_18514;
                              statearr_18547[10] = inst_18526;
                              return statearr_18547;
                            }();
                            var statearr_18548_18568 = state_18537__$1;
                            statearr_18548_18568[2] = null;
                            statearr_18548_18568[1] = 2;
                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                          } else {
                            if (state_val_18538 === 9) {
                              var inst_18517 = state_18537[8];
                              var state_18537__$1 = state_18537;
                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_18537__$1, 11, out, inst_18517);
                            } else {
                              if (state_val_18538 === 5) {
                                var inst_18514 = state_18537[7];
                                var inst_18517 = state_18537[8];
                                var inst_18521 = cljs.core._EQ_.call(null, inst_18517, inst_18514);
                                var state_18537__$1 = state_18537;
                                if (inst_18521) {
                                  var statearr_18550_18569 = state_18537__$1;
                                  statearr_18550_18569[1] = 8;
                                } else {
                                  var statearr_18551_18570 = state_18537__$1;
                                  statearr_18551_18570[1] = 9;
                                }
                                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                              } else {
                                if (state_val_18538 === 10) {
                                  var inst_18529 = state_18537[2];
                                  var state_18537__$1 = state_18537;
                                  var statearr_18552_18571 = state_18537__$1;
                                  statearr_18552_18571[2] = inst_18529;
                                  statearr_18552_18571[1] = 7;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_18538 === 8) {
                                    var inst_18514 = state_18537[7];
                                    var tmp18549 = inst_18514;
                                    var inst_18514__$1 = tmp18549;
                                    var state_18537__$1 = function() {
                                      var statearr_18553 = state_18537;
                                      statearr_18553[7] = inst_18514__$1;
                                      return statearr_18553;
                                    }();
                                    var statearr_18554_18572 = state_18537__$1;
                                    statearr_18554_18572[2] = null;
                                    statearr_18554_18572[1] = 2;
                                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                  } else {
                                    return null;
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6703__auto___18562, out);
          return function(switch__6647__auto__, c__6703__auto___18562, out) {
            return function() {
              var state_machine__6648__auto__ = null;
              var state_machine__6648__auto____0 = function() {
                var statearr_18558 = [null, null, null, null, null, null, null, null, null, null, null];
                statearr_18558[0] = state_machine__6648__auto__;
                statearr_18558[1] = 1;
                return statearr_18558;
              };
              var state_machine__6648__auto____1 = function(state_18537) {
                while (true) {
                  var ret_value__6649__auto__ = function() {
                    try {
                      while (true) {
                        var result__6650__auto__ = switch__6647__auto__.call(null, state_18537);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6650__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6650__auto__;
                        }
                        break;
                      }
                    } catch (e18559) {
                      if (e18559 instanceof Object) {
                        var ex__6651__auto__ = e18559;
                        var statearr_18560_18573 = state_18537;
                        statearr_18560_18573[5] = ex__6651__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_18537);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e18559;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6649__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__18574 = state_18537;
                    state_18537 = G__18574;
                    continue;
                  } else {
                    return ret_value__6649__auto__;
                  }
                  break;
                }
              };
              state_machine__6648__auto__ = function(state_18537) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6648__auto____0.call(this);
                  case 1:
                    return state_machine__6648__auto____1.call(this, state_18537);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6648__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6648__auto____0;
              state_machine__6648__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6648__auto____1;
              return state_machine__6648__auto__;
            }();
          }(switch__6647__auto__, c__6703__auto___18562, out);
        }();
        var state__6705__auto__ = function() {
          var statearr_18561 = f__6704__auto__.call(null);
          statearr_18561[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6703__auto___18562;
          return statearr_18561;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6705__auto__);
      };
    }(c__6703__auto___18562, out));
    return out;
  };
  unique = function(ch, buf_or_n) {
    switch(arguments.length) {
      case 1:
        return unique__1.call(this, ch);
      case 2:
        return unique__2.call(this, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  unique.cljs$core$IFn$_invoke$arity$1 = unique__1;
  unique.cljs$core$IFn$_invoke$arity$2 = unique__2;
  return unique;
}();
cljs.core.async.partition = function() {
  var partition = null;
  var partition__2 = function(n, ch) {
    return partition.call(null, n, ch, null);
  };
  var partition__3 = function(n, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6703__auto___18709 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6703__auto___18709, out) {
      return function() {
        var f__6704__auto__ = function() {
          var switch__6647__auto__ = function(c__6703__auto___18709, out) {
            return function(state_18679) {
              var state_val_18680 = state_18679[1];
              if (state_val_18680 === 7) {
                var inst_18675 = state_18679[2];
                var state_18679__$1 = state_18679;
                var statearr_18681_18710 = state_18679__$1;
                statearr_18681_18710[2] = inst_18675;
                statearr_18681_18710[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_18680 === 1) {
                  var inst_18642 = new Array(n);
                  var inst_18643 = inst_18642;
                  var inst_18644 = 0;
                  var state_18679__$1 = function() {
                    var statearr_18682 = state_18679;
                    statearr_18682[7] = inst_18644;
                    statearr_18682[8] = inst_18643;
                    return statearr_18682;
                  }();
                  var statearr_18683_18711 = state_18679__$1;
                  statearr_18683_18711[2] = null;
                  statearr_18683_18711[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_18680 === 4) {
                    var inst_18647 = state_18679[9];
                    var inst_18647__$1 = state_18679[2];
                    var inst_18648 = inst_18647__$1 == null;
                    var inst_18649 = cljs.core.not.call(null, inst_18648);
                    var state_18679__$1 = function() {
                      var statearr_18684 = state_18679;
                      statearr_18684[9] = inst_18647__$1;
                      return statearr_18684;
                    }();
                    if (inst_18649) {
                      var statearr_18685_18712 = state_18679__$1;
                      statearr_18685_18712[1] = 5;
                    } else {
                      var statearr_18686_18713 = state_18679__$1;
                      statearr_18686_18713[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_18680 === 15) {
                      var inst_18669 = state_18679[2];
                      var state_18679__$1 = state_18679;
                      var statearr_18687_18714 = state_18679__$1;
                      statearr_18687_18714[2] = inst_18669;
                      statearr_18687_18714[1] = 14;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_18680 === 13) {
                        var state_18679__$1 = state_18679;
                        var statearr_18688_18715 = state_18679__$1;
                        statearr_18688_18715[2] = null;
                        statearr_18688_18715[1] = 14;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_18680 === 6) {
                          var inst_18644 = state_18679[7];
                          var inst_18665 = inst_18644 > 0;
                          var state_18679__$1 = state_18679;
                          if (cljs.core.truth_(inst_18665)) {
                            var statearr_18689_18716 = state_18679__$1;
                            statearr_18689_18716[1] = 12;
                          } else {
                            var statearr_18690_18717 = state_18679__$1;
                            statearr_18690_18717[1] = 13;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_18680 === 3) {
                            var inst_18677 = state_18679[2];
                            var state_18679__$1 = state_18679;
                            return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_18679__$1, inst_18677);
                          } else {
                            if (state_val_18680 === 12) {
                              var inst_18643 = state_18679[8];
                              var inst_18667 = cljs.core.vec.call(null, inst_18643);
                              var state_18679__$1 = state_18679;
                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_18679__$1, 15, out, inst_18667);
                            } else {
                              if (state_val_18680 === 2) {
                                var state_18679__$1 = state_18679;
                                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_18679__$1, 4, ch);
                              } else {
                                if (state_val_18680 === 11) {
                                  var inst_18659 = state_18679[2];
                                  var inst_18660 = new Array(n);
                                  var inst_18643 = inst_18660;
                                  var inst_18644 = 0;
                                  var state_18679__$1 = function() {
                                    var statearr_18691 = state_18679;
                                    statearr_18691[7] = inst_18644;
                                    statearr_18691[8] = inst_18643;
                                    statearr_18691[10] = inst_18659;
                                    return statearr_18691;
                                  }();
                                  var statearr_18692_18718 = state_18679__$1;
                                  statearr_18692_18718[2] = null;
                                  statearr_18692_18718[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_18680 === 9) {
                                    var inst_18643 = state_18679[8];
                                    var inst_18657 = cljs.core.vec.call(null, inst_18643);
                                    var state_18679__$1 = state_18679;
                                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_18679__$1, 11, out, inst_18657);
                                  } else {
                                    if (state_val_18680 === 5) {
                                      var inst_18644 = state_18679[7];
                                      var inst_18652 = state_18679[11];
                                      var inst_18643 = state_18679[8];
                                      var inst_18647 = state_18679[9];
                                      var inst_18651 = inst_18643[inst_18644] = inst_18647;
                                      var inst_18652__$1 = inst_18644 + 1;
                                      var inst_18653 = inst_18652__$1 < n;
                                      var state_18679__$1 = function() {
                                        var statearr_18693 = state_18679;
                                        statearr_18693[11] = inst_18652__$1;
                                        statearr_18693[12] = inst_18651;
                                        return statearr_18693;
                                      }();
                                      if (cljs.core.truth_(inst_18653)) {
                                        var statearr_18694_18719 = state_18679__$1;
                                        statearr_18694_18719[1] = 8;
                                      } else {
                                        var statearr_18695_18720 = state_18679__$1;
                                        statearr_18695_18720[1] = 9;
                                      }
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_18680 === 14) {
                                        var inst_18672 = state_18679[2];
                                        var inst_18673 = cljs.core.async.close_BANG_.call(null, out);
                                        var state_18679__$1 = function() {
                                          var statearr_18697 = state_18679;
                                          statearr_18697[13] = inst_18672;
                                          return statearr_18697;
                                        }();
                                        var statearr_18698_18721 = state_18679__$1;
                                        statearr_18698_18721[2] = inst_18673;
                                        statearr_18698_18721[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_18680 === 10) {
                                          var inst_18663 = state_18679[2];
                                          var state_18679__$1 = state_18679;
                                          var statearr_18699_18722 = state_18679__$1;
                                          statearr_18699_18722[2] = inst_18663;
                                          statearr_18699_18722[1] = 7;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_18680 === 8) {
                                            var inst_18652 = state_18679[11];
                                            var inst_18643 = state_18679[8];
                                            var tmp18696 = inst_18643;
                                            var inst_18643__$1 = tmp18696;
                                            var inst_18644 = inst_18652;
                                            var state_18679__$1 = function() {
                                              var statearr_18700 = state_18679;
                                              statearr_18700[7] = inst_18644;
                                              statearr_18700[8] = inst_18643__$1;
                                              return statearr_18700;
                                            }();
                                            var statearr_18701_18723 = state_18679__$1;
                                            statearr_18701_18723[2] = null;
                                            statearr_18701_18723[1] = 2;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            return null;
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6703__auto___18709, out);
          return function(switch__6647__auto__, c__6703__auto___18709, out) {
            return function() {
              var state_machine__6648__auto__ = null;
              var state_machine__6648__auto____0 = function() {
                var statearr_18705 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_18705[0] = state_machine__6648__auto__;
                statearr_18705[1] = 1;
                return statearr_18705;
              };
              var state_machine__6648__auto____1 = function(state_18679) {
                while (true) {
                  var ret_value__6649__auto__ = function() {
                    try {
                      while (true) {
                        var result__6650__auto__ = switch__6647__auto__.call(null, state_18679);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6650__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6650__auto__;
                        }
                        break;
                      }
                    } catch (e18706) {
                      if (e18706 instanceof Object) {
                        var ex__6651__auto__ = e18706;
                        var statearr_18707_18724 = state_18679;
                        statearr_18707_18724[5] = ex__6651__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_18679);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e18706;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6649__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__18725 = state_18679;
                    state_18679 = G__18725;
                    continue;
                  } else {
                    return ret_value__6649__auto__;
                  }
                  break;
                }
              };
              state_machine__6648__auto__ = function(state_18679) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6648__auto____0.call(this);
                  case 1:
                    return state_machine__6648__auto____1.call(this, state_18679);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6648__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6648__auto____0;
              state_machine__6648__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6648__auto____1;
              return state_machine__6648__auto__;
            }();
          }(switch__6647__auto__, c__6703__auto___18709, out);
        }();
        var state__6705__auto__ = function() {
          var statearr_18708 = f__6704__auto__.call(null);
          statearr_18708[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6703__auto___18709;
          return statearr_18708;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6705__auto__);
      };
    }(c__6703__auto___18709, out));
    return out;
  };
  partition = function(n, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return partition__2.call(this, n, ch);
      case 3:
        return partition__3.call(this, n, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition.cljs$core$IFn$_invoke$arity$2 = partition__2;
  partition.cljs$core$IFn$_invoke$arity$3 = partition__3;
  return partition;
}();
cljs.core.async.partition_by = function() {
  var partition_by = null;
  var partition_by__2 = function(f, ch) {
    return partition_by.call(null, f, ch, null);
  };
  var partition_by__3 = function(f, ch, buf_or_n) {
    var out = cljs.core.async.chan.call(null, buf_or_n);
    var c__6703__auto___18868 = cljs.core.async.chan.call(null, 1);
    cljs.core.async.impl.dispatch.run.call(null, function(c__6703__auto___18868, out) {
      return function() {
        var f__6704__auto__ = function() {
          var switch__6647__auto__ = function(c__6703__auto___18868, out) {
            return function(state_18838) {
              var state_val_18839 = state_18838[1];
              if (state_val_18839 === 7) {
                var inst_18834 = state_18838[2];
                var state_18838__$1 = state_18838;
                var statearr_18840_18869 = state_18838__$1;
                statearr_18840_18869[2] = inst_18834;
                statearr_18840_18869[1] = 3;
                return new cljs.core.Keyword(null, "recur", "recur", -437573268);
              } else {
                if (state_val_18839 === 1) {
                  var inst_18797 = [];
                  var inst_18798 = inst_18797;
                  var inst_18799 = new cljs.core.Keyword("cljs.core.async", "nothing", "cljs.core.async/nothing", -69252123);
                  var state_18838__$1 = function() {
                    var statearr_18841 = state_18838;
                    statearr_18841[7] = inst_18798;
                    statearr_18841[8] = inst_18799;
                    return statearr_18841;
                  }();
                  var statearr_18842_18870 = state_18838__$1;
                  statearr_18842_18870[2] = null;
                  statearr_18842_18870[1] = 2;
                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                } else {
                  if (state_val_18839 === 4) {
                    var inst_18802 = state_18838[9];
                    var inst_18802__$1 = state_18838[2];
                    var inst_18803 = inst_18802__$1 == null;
                    var inst_18804 = cljs.core.not.call(null, inst_18803);
                    var state_18838__$1 = function() {
                      var statearr_18843 = state_18838;
                      statearr_18843[9] = inst_18802__$1;
                      return statearr_18843;
                    }();
                    if (inst_18804) {
                      var statearr_18844_18871 = state_18838__$1;
                      statearr_18844_18871[1] = 5;
                    } else {
                      var statearr_18845_18872 = state_18838__$1;
                      statearr_18845_18872[1] = 6;
                    }
                    return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                  } else {
                    if (state_val_18839 === 15) {
                      var inst_18828 = state_18838[2];
                      var state_18838__$1 = state_18838;
                      var statearr_18846_18873 = state_18838__$1;
                      statearr_18846_18873[2] = inst_18828;
                      statearr_18846_18873[1] = 14;
                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                    } else {
                      if (state_val_18839 === 13) {
                        var state_18838__$1 = state_18838;
                        var statearr_18847_18874 = state_18838__$1;
                        statearr_18847_18874[2] = null;
                        statearr_18847_18874[1] = 14;
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        if (state_val_18839 === 6) {
                          var inst_18798 = state_18838[7];
                          var inst_18823 = inst_18798.length;
                          var inst_18824 = inst_18823 > 0;
                          var state_18838__$1 = state_18838;
                          if (cljs.core.truth_(inst_18824)) {
                            var statearr_18848_18875 = state_18838__$1;
                            statearr_18848_18875[1] = 12;
                          } else {
                            var statearr_18849_18876 = state_18838__$1;
                            statearr_18849_18876[1] = 13;
                          }
                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                        } else {
                          if (state_val_18839 === 3) {
                            var inst_18836 = state_18838[2];
                            var state_18838__$1 = state_18838;
                            return cljs.core.async.impl.ioc_helpers.return_chan.call(null, state_18838__$1, inst_18836);
                          } else {
                            if (state_val_18839 === 12) {
                              var inst_18798 = state_18838[7];
                              var inst_18826 = cljs.core.vec.call(null, inst_18798);
                              var state_18838__$1 = state_18838;
                              return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_18838__$1, 15, out, inst_18826);
                            } else {
                              if (state_val_18839 === 2) {
                                var state_18838__$1 = state_18838;
                                return cljs.core.async.impl.ioc_helpers.take_BANG_.call(null, state_18838__$1, 4, ch);
                              } else {
                                if (state_val_18839 === 11) {
                                  var inst_18802 = state_18838[9];
                                  var inst_18806 = state_18838[10];
                                  var inst_18816 = state_18838[2];
                                  var inst_18817 = [];
                                  var inst_18818 = inst_18817.push(inst_18802);
                                  var inst_18798 = inst_18817;
                                  var inst_18799 = inst_18806;
                                  var state_18838__$1 = function() {
                                    var statearr_18850 = state_18838;
                                    statearr_18850[11] = inst_18816;
                                    statearr_18850[12] = inst_18818;
                                    statearr_18850[7] = inst_18798;
                                    statearr_18850[8] = inst_18799;
                                    return statearr_18850;
                                  }();
                                  var statearr_18851_18877 = state_18838__$1;
                                  statearr_18851_18877[2] = null;
                                  statearr_18851_18877[1] = 2;
                                  return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                } else {
                                  if (state_val_18839 === 9) {
                                    var inst_18798 = state_18838[7];
                                    var inst_18814 = cljs.core.vec.call(null, inst_18798);
                                    var state_18838__$1 = state_18838;
                                    return cljs.core.async.impl.ioc_helpers.put_BANG_.call(null, state_18838__$1, 11, out, inst_18814);
                                  } else {
                                    if (state_val_18839 === 5) {
                                      var inst_18802 = state_18838[9];
                                      var inst_18806 = state_18838[10];
                                      var inst_18799 = state_18838[8];
                                      var inst_18806__$1 = f.call(null, inst_18802);
                                      var inst_18807 = cljs.core._EQ_.call(null, inst_18806__$1, inst_18799);
                                      var inst_18808 = cljs.core.keyword_identical_QMARK_.call(null, inst_18799, new cljs.core.Keyword("cljs.core.async", "nothing", "cljs.core.async/nothing", -69252123));
                                      var inst_18809 = inst_18807 || inst_18808;
                                      var state_18838__$1 = function() {
                                        var statearr_18852 = state_18838;
                                        statearr_18852[10] = inst_18806__$1;
                                        return statearr_18852;
                                      }();
                                      if (cljs.core.truth_(inst_18809)) {
                                        var statearr_18853_18878 = state_18838__$1;
                                        statearr_18853_18878[1] = 8;
                                      } else {
                                        var statearr_18854_18879 = state_18838__$1;
                                        statearr_18854_18879[1] = 9;
                                      }
                                      return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                    } else {
                                      if (state_val_18839 === 14) {
                                        var inst_18831 = state_18838[2];
                                        var inst_18832 = cljs.core.async.close_BANG_.call(null, out);
                                        var state_18838__$1 = function() {
                                          var statearr_18856 = state_18838;
                                          statearr_18856[13] = inst_18831;
                                          return statearr_18856;
                                        }();
                                        var statearr_18857_18880 = state_18838__$1;
                                        statearr_18857_18880[2] = inst_18832;
                                        statearr_18857_18880[1] = 7;
                                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                      } else {
                                        if (state_val_18839 === 10) {
                                          var inst_18821 = state_18838[2];
                                          var state_18838__$1 = state_18838;
                                          var statearr_18858_18881 = state_18838__$1;
                                          statearr_18858_18881[2] = inst_18821;
                                          statearr_18858_18881[1] = 7;
                                          return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                        } else {
                                          if (state_val_18839 === 8) {
                                            var inst_18802 = state_18838[9];
                                            var inst_18806 = state_18838[10];
                                            var inst_18798 = state_18838[7];
                                            var inst_18811 = inst_18798.push(inst_18802);
                                            var tmp18855 = inst_18798;
                                            var inst_18798__$1 = tmp18855;
                                            var inst_18799 = inst_18806;
                                            var state_18838__$1 = function() {
                                              var statearr_18859 = state_18838;
                                              statearr_18859[7] = inst_18798__$1;
                                              statearr_18859[14] = inst_18811;
                                              statearr_18859[8] = inst_18799;
                                              return statearr_18859;
                                            }();
                                            var statearr_18860_18882 = state_18838__$1;
                                            statearr_18860_18882[2] = null;
                                            statearr_18860_18882[1] = 2;
                                            return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                                          } else {
                                            return null;
                                          }
                                        }
                                      }
                                    }
                                  }
                                }
                              }
                            }
                          }
                        }
                      }
                    }
                  }
                }
              }
            };
          }(c__6703__auto___18868, out);
          return function(switch__6647__auto__, c__6703__auto___18868, out) {
            return function() {
              var state_machine__6648__auto__ = null;
              var state_machine__6648__auto____0 = function() {
                var statearr_18864 = [null, null, null, null, null, null, null, null, null, null, null, null, null, null, null];
                statearr_18864[0] = state_machine__6648__auto__;
                statearr_18864[1] = 1;
                return statearr_18864;
              };
              var state_machine__6648__auto____1 = function(state_18838) {
                while (true) {
                  var ret_value__6649__auto__ = function() {
                    try {
                      while (true) {
                        var result__6650__auto__ = switch__6647__auto__.call(null, state_18838);
                        if (cljs.core.keyword_identical_QMARK_.call(null, result__6650__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                          continue;
                        } else {
                          return result__6650__auto__;
                        }
                        break;
                      }
                    } catch (e18865) {
                      if (e18865 instanceof Object) {
                        var ex__6651__auto__ = e18865;
                        var statearr_18866_18883 = state_18838;
                        statearr_18866_18883[5] = ex__6651__auto__;
                        cljs.core.async.impl.ioc_helpers.process_exception.call(null, state_18838);
                        return new cljs.core.Keyword(null, "recur", "recur", -437573268);
                      } else {
                        throw e18865;
                      }
                    }
                  }();
                  if (cljs.core.keyword_identical_QMARK_.call(null, ret_value__6649__auto__, new cljs.core.Keyword(null, "recur", "recur", -437573268))) {
                    var G__18884 = state_18838;
                    state_18838 = G__18884;
                    continue;
                  } else {
                    return ret_value__6649__auto__;
                  }
                  break;
                }
              };
              state_machine__6648__auto__ = function(state_18838) {
                switch(arguments.length) {
                  case 0:
                    return state_machine__6648__auto____0.call(this);
                  case 1:
                    return state_machine__6648__auto____1.call(this, state_18838);
                }
                throw new Error("Invalid arity: " + arguments.length);
              };
              state_machine__6648__auto__.cljs$core$IFn$_invoke$arity$0 = state_machine__6648__auto____0;
              state_machine__6648__auto__.cljs$core$IFn$_invoke$arity$1 = state_machine__6648__auto____1;
              return state_machine__6648__auto__;
            }();
          }(switch__6647__auto__, c__6703__auto___18868, out);
        }();
        var state__6705__auto__ = function() {
          var statearr_18867 = f__6704__auto__.call(null);
          statearr_18867[cljs.core.async.impl.ioc_helpers.USER_START_IDX] = c__6703__auto___18868;
          return statearr_18867;
        }();
        return cljs.core.async.impl.ioc_helpers.run_state_machine_wrapped.call(null, state__6705__auto__);
      };
    }(c__6703__auto___18868, out));
    return out;
  };
  partition_by = function(f, ch, buf_or_n) {
    switch(arguments.length) {
      case 2:
        return partition_by__2.call(this, f, ch);
      case 3:
        return partition_by__3.call(this, f, ch, buf_or_n);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  partition_by.cljs$core$IFn$_invoke$arity$2 = partition_by__2;
  partition_by.cljs$core$IFn$_invoke$arity$3 = partition_by__3;
  return partition_by;
}();
goog.provide("clojure.string");
goog.require("cljs.core");
goog.require("goog.string.StringBuffer");
goog.require("goog.string");
clojure.string.seq_reverse = function seq_reverse(coll) {
  return cljs.core.reduce.call(null, cljs.core.conj, cljs.core.List.EMPTY, coll);
};
clojure.string.re_surrogate_pair = new RegExp("([\\uD800-\\uDBFF])([\\uDC00-\\uDFFF])", "g");
clojure.string.reverse = function reverse(s) {
  return s.replace(clojure.string.re_surrogate_pair, "$2$1").split("").reverse().join("");
};
clojure.string.replace = function replace(s, match, replacement) {
  if (typeof match === "string") {
    return s.replace(new RegExp(goog.string.regExpEscape(match), "g"), replacement);
  } else {
    if (cljs.core.truth_(match.hasOwnProperty("source"))) {
      return s.replace(new RegExp(match.source, "g"), replacement);
    } else {
      throw[cljs.core.str("Invalid match arg: "), cljs.core.str(match)].join("");
    }
  }
};
clojure.string.replace_first = function replace_first(s, match, replacement) {
  return s.replace(match, replacement);
};
clojure.string.join = function() {
  var join = null;
  var join__1 = function(coll) {
    var sb = new goog.string.StringBuffer;
    var coll__$1 = cljs.core.seq.call(null, coll);
    while (true) {
      if (coll__$1) {
        var G__19010 = sb.append([cljs.core.str(cljs.core.first.call(null, coll__$1))].join(""));
        var G__19011 = cljs.core.next.call(null, coll__$1);
        sb = G__19010;
        coll__$1 = G__19011;
        continue;
      } else {
        return sb.toString();
      }
      break;
    }
  };
  var join__2 = function(separator, coll) {
    var sb = new goog.string.StringBuffer;
    var coll__$1 = cljs.core.seq.call(null, coll);
    while (true) {
      if (coll__$1) {
        sb.append([cljs.core.str(cljs.core.first.call(null, coll__$1))].join(""));
        var coll__$2 = cljs.core.next.call(null, coll__$1);
        if (coll__$2 == null) {
        } else {
          sb.append(separator);
        }
        var G__19012 = sb;
        var G__19013 = coll__$2;
        sb = G__19012;
        coll__$1 = G__19013;
        continue;
      } else {
        return sb.toString();
      }
      break;
    }
  };
  join = function(separator, coll) {
    switch(arguments.length) {
      case 1:
        return join__1.call(this, separator);
      case 2:
        return join__2.call(this, separator, coll);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  join.cljs$core$IFn$_invoke$arity$1 = join__1;
  join.cljs$core$IFn$_invoke$arity$2 = join__2;
  return join;
}();
clojure.string.upper_case = function upper_case(s) {
  return s.toUpperCase();
};
clojure.string.lower_case = function lower_case(s) {
  return s.toLowerCase();
};
clojure.string.capitalize = function capitalize(s) {
  if (cljs.core.count.call(null, s) < 2) {
    return clojure.string.upper_case.call(null, s);
  } else {
    return[cljs.core.str(clojure.string.upper_case.call(null, cljs.core.subs.call(null, s, 0, 1))), cljs.core.str(clojure.string.lower_case.call(null, cljs.core.subs.call(null, s, 1)))].join("");
  }
};
clojure.string.pop_last_while_empty = function pop_last_while_empty(v) {
  var v__$1 = v;
  while (true) {
    if (cljs.core._EQ_.call(null, "", cljs.core.peek.call(null, v__$1))) {
      var G__19014 = cljs.core.pop.call(null, v__$1);
      v__$1 = G__19014;
      continue;
    } else {
      return v__$1;
    }
    break;
  }
};
clojure.string.discard_trailing_if_needed = function discard_trailing_if_needed(limit, v) {
  if (cljs.core._EQ_.call(null, 0, limit)) {
    return clojure.string.pop_last_while_empty.call(null, v);
  } else {
    return v;
  }
};
clojure.string.split_with_empty_regex = function split_with_empty_regex(s, limit) {
  if (limit <= 0 || limit >= 2 + cljs.core.count.call(null, s)) {
    return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s)))), "");
  } else {
    var pred__19018 = cljs.core._EQ_;
    var expr__19019 = limit;
    if (cljs.core.truth_(pred__19018.call(null, 1, expr__19019))) {
      return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [s], null);
    } else {
      if (cljs.core.truth_(pred__19018.call(null, 2, expr__19019))) {
        return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, ["", s], null);
      } else {
        var c = limit - 2;
        return cljs.core.conj.call(null, cljs.core.vec.call(null, cljs.core.cons.call(null, "", cljs.core.subvec.call(null, cljs.core.vec.call(null, cljs.core.map.call(null, cljs.core.str, cljs.core.seq.call(null, s))), 0, c))), cljs.core.subs.call(null, s, c));
      }
    }
  }
};
clojure.string.split = function() {
  var split = null;
  var split__2 = function(s, re) {
    return split.call(null, s, re, 0);
  };
  var split__3 = function(s, re, limit) {
    return clojure.string.discard_trailing_if_needed.call(null, limit, cljs.core._EQ_.call(null, [cljs.core.str(re)].join(""), "/(?:)/") ? clojure.string.split_with_empty_regex.call(null, s, limit) : limit < 1 ? cljs.core.vec.call(null, [cljs.core.str(s)].join("").split(re)) : function() {
      var s__$1 = s;
      var limit__$1 = limit;
      var parts = cljs.core.PersistentVector.EMPTY;
      while (true) {
        if (cljs.core._EQ_.call(null, limit__$1, 1)) {
          return cljs.core.conj.call(null, parts, s__$1);
        } else {
          var temp__4124__auto__ = cljs.core.re_find.call(null, re, s__$1);
          if (cljs.core.truth_(temp__4124__auto__)) {
            var m = temp__4124__auto__;
            var index = s__$1.indexOf(m);
            var G__19021 = s__$1.substring(index + cljs.core.count.call(null, m));
            var G__19022 = limit__$1 - 1;
            var G__19023 = cljs.core.conj.call(null, parts, s__$1.substring(0, index));
            s__$1 = G__19021;
            limit__$1 = G__19022;
            parts = G__19023;
            continue;
          } else {
            return cljs.core.conj.call(null, parts, s__$1);
          }
        }
        break;
      }
    }());
  };
  split = function(s, re, limit) {
    switch(arguments.length) {
      case 2:
        return split__2.call(this, s, re);
      case 3:
        return split__3.call(this, s, re, limit);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  split.cljs$core$IFn$_invoke$arity$2 = split__2;
  split.cljs$core$IFn$_invoke$arity$3 = split__3;
  return split;
}();
clojure.string.split_lines = function split_lines(s) {
  return clojure.string.split.call(null, s, /\n|\r\n/);
};
clojure.string.trim = function trim(s) {
  return goog.string.trim(s);
};
clojure.string.triml = function triml(s) {
  return goog.string.trimLeft(s);
};
clojure.string.trimr = function trimr(s) {
  return goog.string.trimRight(s);
};
clojure.string.trim_newline = function trim_newline(s) {
  var index = s.length;
  while (true) {
    if (index === 0) {
      return "";
    } else {
      var ch = cljs.core.get.call(null, s, index - 1);
      if (cljs.core._EQ_.call(null, ch, "\n") || cljs.core._EQ_.call(null, ch, "\r")) {
        var G__19024 = index - 1;
        index = G__19024;
        continue;
      } else {
        return s.substring(0, index);
      }
    }
    break;
  }
};
clojure.string.blank_QMARK_ = function blank_QMARK_(s) {
  return goog.string.isEmptySafe(s);
};
clojure.string.escape = function escape__$1(s, cmap) {
  var buffer = new goog.string.StringBuffer;
  var length = s.length;
  var index = 0;
  while (true) {
    if (cljs.core._EQ_.call(null, length, index)) {
      return buffer.toString();
    } else {
      var ch = s.charAt(index);
      var temp__4124__auto___19025 = cljs.core.get.call(null, cmap, ch);
      if (cljs.core.truth_(temp__4124__auto___19025)) {
        var replacement_19026 = temp__4124__auto___19025;
        buffer.append([cljs.core.str(replacement_19026)].join(""));
      } else {
        buffer.append(ch);
      }
      var G__19027 = index + 1;
      index = G__19027;
      continue;
    }
    break;
  }
};
goog.provide("cljs_demo.lib");
goog.require("cljs.core");
goog.require("clojure.string");
goog.require("cljs.core.async");
goog.require("goog.Uri");
goog.require("goog.net.Jsonp");
cljs_demo.lib.dom_atom = function dom_atom(atom) {
  if (atom instanceof cljs.core.Keyword) {
    return document.createElement(cljs.core.name.call(null, atom));
  } else {
    return document.createTextNode(atom);
  }
};
cljs_demo.lib.set_attr = function set_attr(node, attr_name, value) {
  if (cljs.core.map_QMARK_.call(null, value)) {
    var seq__9556 = cljs.core.seq.call(null, value);
    var chunk__9557 = null;
    var count__9558 = 0;
    var i__9559 = 0;
    while (true) {
      if (i__9559 < count__9558) {
        var vec__9560 = cljs.core._nth.call(null, chunk__9557, i__9559);
        var nname = cljs.core.nth.call(null, vec__9560, 0, null);
        var nvalue = cljs.core.nth.call(null, vec__9560, 1, null);
        node[attr_name][cljs.core.name.call(null, nname)] = nvalue;
        var G__9562 = seq__9556;
        var G__9563 = chunk__9557;
        var G__9564 = count__9558;
        var G__9565 = i__9559 + 1;
        seq__9556 = G__9562;
        chunk__9557 = G__9563;
        count__9558 = G__9564;
        i__9559 = G__9565;
        continue;
      } else {
        var temp__4126__auto__ = cljs.core.seq.call(null, seq__9556);
        if (temp__4126__auto__) {
          var seq__9556__$1 = temp__4126__auto__;
          if (cljs.core.chunked_seq_QMARK_.call(null, seq__9556__$1)) {
            var c__4712__auto__ = cljs.core.chunk_first.call(null, seq__9556__$1);
            var G__9566 = cljs.core.chunk_rest.call(null, seq__9556__$1);
            var G__9567 = c__4712__auto__;
            var G__9568 = cljs.core.count.call(null, c__4712__auto__);
            var G__9569 = 0;
            seq__9556 = G__9566;
            chunk__9557 = G__9567;
            count__9558 = G__9568;
            i__9559 = G__9569;
            continue;
          } else {
            var vec__9561 = cljs.core.first.call(null, seq__9556__$1);
            var nname = cljs.core.nth.call(null, vec__9561, 0, null);
            var nvalue = cljs.core.nth.call(null, vec__9561, 1, null);
            node[attr_name][cljs.core.name.call(null, nname)] = nvalue;
            var G__9570 = cljs.core.next.call(null, seq__9556__$1);
            var G__9571 = null;
            var G__9572 = 0;
            var G__9573 = 0;
            seq__9556 = G__9570;
            chunk__9557 = G__9571;
            count__9558 = G__9572;
            i__9559 = G__9573;
            continue;
          }
        } else {
          return null;
        }
      }
      break;
    }
  } else {
    if (cljs.core._EQ_.call(null, "on-", cljs.core.subs.call(null, attr_name, 0, 3))) {
      var evn = cljs.core.subs.call(null, attr_name, 3);
      return node.addEventListener(evn, value);
    } else {
      if (cljs.core._EQ_.call(null, "class", attr_name)) {
        return node["className"] = value;
      } else {
        return node[attr_name] = value;
      }
    }
  }
};
cljs_demo.lib.set_attrs = function set_attrs(node, attrMap) {
  var seq__9580 = cljs.core.seq.call(null, attrMap);
  var chunk__9581 = null;
  var count__9582 = 0;
  var i__9583 = 0;
  while (true) {
    if (i__9583 < count__9582) {
      var vec__9584 = cljs.core._nth.call(null, chunk__9581, i__9583);
      var key_name = cljs.core.nth.call(null, vec__9584, 0, null);
      var value = cljs.core.nth.call(null, vec__9584, 1, null);
      cljs_demo.lib.set_attr.call(null, node, cljs.core.name.call(null, key_name), value);
      var G__9586 = seq__9580;
      var G__9587 = chunk__9581;
      var G__9588 = count__9582;
      var G__9589 = i__9583 + 1;
      seq__9580 = G__9586;
      chunk__9581 = G__9587;
      count__9582 = G__9588;
      i__9583 = G__9589;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__9580);
      if (temp__4126__auto__) {
        var seq__9580__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__9580__$1)) {
          var c__4712__auto__ = cljs.core.chunk_first.call(null, seq__9580__$1);
          var G__9590 = cljs.core.chunk_rest.call(null, seq__9580__$1);
          var G__9591 = c__4712__auto__;
          var G__9592 = cljs.core.count.call(null, c__4712__auto__);
          var G__9593 = 0;
          seq__9580 = G__9590;
          chunk__9581 = G__9591;
          count__9582 = G__9592;
          i__9583 = G__9593;
          continue;
        } else {
          var vec__9585 = cljs.core.first.call(null, seq__9580__$1);
          var key_name = cljs.core.nth.call(null, vec__9585, 0, null);
          var value = cljs.core.nth.call(null, vec__9585, 1, null);
          cljs_demo.lib.set_attr.call(null, node, cljs.core.name.call(null, key_name), value);
          var G__9594 = cljs.core.next.call(null, seq__9580__$1);
          var G__9595 = null;
          var G__9596 = 0;
          var G__9597 = 0;
          seq__9580 = G__9594;
          chunk__9581 = G__9595;
          count__9582 = G__9596;
          i__9583 = G__9597;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
cljs_demo.lib.get_tag_attr = function get_tag_attr(keyword_elem) {
  var splits = clojure.string.split.call(null, cljs.core.name.call(null, keyword_elem), /\./);
  var classes = cljs.core.rest.call(null, splits);
  var cls_str = clojure.string.join.call(null, " ", classes);
  var init_map = cljs.core.truth_(clojure.string.blank_QMARK_.call(null, cls_str)) ? cljs.core.PersistentArrayMap.EMPTY : new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "class", "class", -2030961996), cls_str], null);
  var tag_id = clojure.string.split.call(null, cljs.core.first.call(null, splits), /#/);
  if (cljs.core._EQ_.call(null, 2, cljs.core.count.call(null, tag_id))) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, tag_id), cljs.core.assoc.call(null, init_map, new cljs.core.Keyword(null, "id", "id", -1388402092), cljs.core.last.call(null, tag_id))], null);
  } else {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs.core.first.call(null, splits), init_map], null);
  }
};
cljs_demo.lib.dom = function dom(spec) {
  if (cljs.core.sequential_QMARK_.call(null, spec)) {
    var temp__4126__auto__ = cljs.core.first.call(null, spec);
    if (cljs.core.truth_(temp__4126__auto__)) {
      var head = temp__4126__auto__;
      if (head instanceof cljs.core.Keyword) {
        var vec__9603 = cljs_demo.lib.get_tag_attr.call(null, head);
        var tag = cljs.core.nth.call(null, vec__9603, 0, null);
        var init_attr = cljs.core.nth.call(null, vec__9603, 1, null);
        var node = document.createElement(tag);
        var attr = cljs.core.map_QMARK_.call(null, cljs.core.first.call(null, cljs.core.rest.call(null, spec))) ? cljs.core.first.call(null, cljs.core.rest.call(null, spec)) : null;
        var tail = cljs.core.truth_(attr) ? cljs.core.rest.call(null, cljs.core.rest.call(null, spec)) : cljs.core.rest.call(null, spec);
        if (cljs.core.truth_(function() {
          var or__3925__auto__ = attr;
          if (cljs.core.truth_(or__3925__auto__)) {
            return or__3925__auto__;
          } else {
            return init_attr;
          }
        }())) {
          cljs_demo.lib.set_attrs.call(null, node, cljs.core.merge.call(null, init_attr, attr));
        } else {
        }
        var seq__9604_9608 = cljs.core.seq.call(null, cljs.core.mapcat.call(null, dom, tail));
        var chunk__9605_9609 = null;
        var count__9606_9610 = 0;
        var i__9607_9611 = 0;
        while (true) {
          if (i__9607_9611 < count__9606_9610) {
            var child_element_9612 = cljs.core._nth.call(null, chunk__9605_9609, i__9607_9611);
            node.appendChild(child_element_9612);
            var G__9613 = seq__9604_9608;
            var G__9614 = chunk__9605_9609;
            var G__9615 = count__9606_9610;
            var G__9616 = i__9607_9611 + 1;
            seq__9604_9608 = G__9613;
            chunk__9605_9609 = G__9614;
            count__9606_9610 = G__9615;
            i__9607_9611 = G__9616;
            continue;
          } else {
            var temp__4126__auto___9617__$1 = cljs.core.seq.call(null, seq__9604_9608);
            if (temp__4126__auto___9617__$1) {
              var seq__9604_9618__$1 = temp__4126__auto___9617__$1;
              if (cljs.core.chunked_seq_QMARK_.call(null, seq__9604_9618__$1)) {
                var c__4712__auto___9619 = cljs.core.chunk_first.call(null, seq__9604_9618__$1);
                var G__9620 = cljs.core.chunk_rest.call(null, seq__9604_9618__$1);
                var G__9621 = c__4712__auto___9619;
                var G__9622 = cljs.core.count.call(null, c__4712__auto___9619);
                var G__9623 = 0;
                seq__9604_9608 = G__9620;
                chunk__9605_9609 = G__9621;
                count__9606_9610 = G__9622;
                i__9607_9611 = G__9623;
                continue;
              } else {
                var child_element_9624 = cljs.core.first.call(null, seq__9604_9618__$1);
                node.appendChild(child_element_9624);
                var G__9625 = cljs.core.next.call(null, seq__9604_9618__$1);
                var G__9626 = null;
                var G__9627 = 0;
                var G__9628 = 0;
                seq__9604_9608 = G__9625;
                chunk__9605_9609 = G__9626;
                count__9606_9610 = G__9627;
                i__9607_9611 = G__9628;
                continue;
              }
            } else {
            }
          }
          break;
        }
        return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [node], null);
      } else {
        var headElem = dom.call(null, head);
        var tailElems = cljs.core.apply.call(null, cljs.core.concat, cljs.core.map.call(null, dom, cljs.core.rest.call(null, spec)));
        if (cljs.core.sequential_QMARK_.call(null, headElem)) {
          return cljs.core.concat.call(null, headElem, tailElems);
        } else {
          return cljs.core.cons.call(null, headElem, tailElems);
        }
      }
    } else {
      return null;
    }
  } else {
    return new cljs.core.PersistentVector(null, 1, 5, cljs.core.PersistentVector.EMPTY_NODE, [cljs_demo.lib.dom_atom.call(null, spec)], null);
  }
};
cljs_demo.lib.jsonp = function() {
  var jsonp = null;
  var jsonp__1 = function(uri) {
    return jsonp.call(null, cljs.core.async.chan.call(null), uri);
  };
  var jsonp__2 = function(c, uri) {
    var gjsonp = new goog.net.Jsonp(new goog.Uri(uri));
    gjsonp.send(null, function(gjsonp) {
      return function(p1__9629_SHARP_) {
        return cljs.core.async.put_BANG_.call(null, c, p1__9629_SHARP_);
      };
    }(gjsonp));
    return c;
  };
  jsonp = function(c, uri) {
    switch(arguments.length) {
      case 1:
        return jsonp__1.call(this, c);
      case 2:
        return jsonp__2.call(this, c, uri);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  jsonp.cljs$core$IFn$_invoke$arity$1 = jsonp__1;
  jsonp.cljs$core$IFn$_invoke$arity$2 = jsonp__2;
  return jsonp;
}();
cljs_demo.lib.by_id = function by_id(id) {
  return document.getElementById(id);
};
cljs_demo.lib.replace_dom = function replace_dom(id, elements) {
  var elem = function() {
    var temp__4124__auto__ = cljs.core.name.call(null, id);
    if (cljs.core.truth_(temp__4124__auto__)) {
      var k__9473__auto__ = temp__4124__auto__;
      var pred__9637 = cljs.core._EQ_;
      var expr__9638 = cljs.core.first.call(null, cljs.core.seq.call(null, k__9473__auto__));
      if (cljs.core.truth_(pred__9637.call(null, "#", expr__9638))) {
        return document.getElementById(cljs.core.subs.call(null, k__9473__auto__, 1));
      } else {
        if (cljs.core.truth_(pred__9637.call(null, ".", expr__9638))) {
          return document.getElementsByClassName(cljs.core.subs.call(null, k__9473__auto__, 1));
        } else {
          throw new Error([cljs.core.str("No matching clause: "), cljs.core.str(expr__9638)].join(""));
        }
      }
    } else {
      return null;
    }
  }();
  var temp__4124__auto___9644 = elem["children"];
  if (cljs.core.truth_(temp__4124__auto___9644)) {
    var oldChildren_9645 = temp__4124__auto___9644;
    var oldChild_9646 = elem["children"][0];
    while (true) {
      if (cljs.core.truth_(oldChild_9646)) {
        elem.removeChild(oldChild_9646);
        var G__9647 = elem["children"][0];
        oldChild_9646 = G__9647;
        continue;
      } else {
      }
      break;
    }
  } else {
  }
  var seq__9640 = cljs.core.seq.call(null, elements);
  var chunk__9641 = null;
  var count__9642 = 0;
  var i__9643 = 0;
  while (true) {
    if (i__9643 < count__9642) {
      var child = cljs.core._nth.call(null, chunk__9641, i__9643);
      elem.appendChild(child);
      var G__9648 = seq__9640;
      var G__9649 = chunk__9641;
      var G__9650 = count__9642;
      var G__9651 = i__9643 + 1;
      seq__9640 = G__9648;
      chunk__9641 = G__9649;
      count__9642 = G__9650;
      i__9643 = G__9651;
      continue;
    } else {
      var temp__4126__auto__ = cljs.core.seq.call(null, seq__9640);
      if (temp__4126__auto__) {
        var seq__9640__$1 = temp__4126__auto__;
        if (cljs.core.chunked_seq_QMARK_.call(null, seq__9640__$1)) {
          var c__4712__auto__ = cljs.core.chunk_first.call(null, seq__9640__$1);
          var G__9652 = cljs.core.chunk_rest.call(null, seq__9640__$1);
          var G__9653 = c__4712__auto__;
          var G__9654 = cljs.core.count.call(null, c__4712__auto__);
          var G__9655 = 0;
          seq__9640 = G__9652;
          chunk__9641 = G__9653;
          count__9642 = G__9654;
          i__9643 = G__9655;
          continue;
        } else {
          var child = cljs.core.first.call(null, seq__9640__$1);
          elem.appendChild(child);
          var G__9656 = cljs.core.next.call(null, seq__9640__$1);
          var G__9657 = null;
          var G__9658 = 0;
          var G__9659 = 0;
          seq__9640 = G__9656;
          chunk__9641 = G__9657;
          count__9642 = G__9658;
          i__9643 = G__9659;
          continue;
        }
      } else {
        return null;
      }
    }
    break;
  }
};
goog.provide("cljs_demo.core");
goog.require("cljs.core");
goog.require("cljs_demo.lib");
cljs_demo.core.state_atom = cljs.core.atom.call(null, new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "quotes", "quotes", -844987790), new cljs.core.PersistentVector(null, 4, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "id", "id", -1388402092), 1, new cljs.core.Keyword(null, "name", "name", 1843675177), "First Quote", new cljs.core.Keyword(null, "status", "status", -1997798413), "New"], null), new cljs.core.PersistentArrayMap(null, 
3, [new cljs.core.Keyword(null, "id", "id", -1388402092), 2, new cljs.core.Keyword(null, "name", "name", 1843675177), "Second Quote", new cljs.core.Keyword(null, "status", "status", -1997798413), "New"], null), new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "id", "id", -1388402092), 3, new cljs.core.Keyword(null, "name", "name", 1843675177), "Third Quote", new cljs.core.Keyword(null, "status", "status", -1997798413), "New"], null), new cljs.core.PersistentArrayMap(null, 3, 
[new cljs.core.Keyword(null, "id", "id", -1388402092), 4, new cljs.core.Keyword(null, "name", "name", 1843675177), "Forth Quote", new cljs.core.Keyword(null, "status", "status", -1997798413), "New"], null)], null)], null));
cljs_demo.core.history = cljs.core.atom.call(null, null);
cljs_demo.core.transact_BANG_ = function transact_BANG_(state_fn) {
  var old_state = cljs.core.deref.call(null, cljs_demo.core.state_atom);
  cljs.core.swap_BANG_.call(null, cljs_demo.core.history, function(old_state) {
    return function(old_history) {
      return cljs.core.cons.call(null, cljs.core.deref.call(null, cljs_demo.core.state_atom), old_history);
    };
  }(old_state));
  cljs.core.swap_BANG_.call(null, cljs_demo.core.state_atom, state_fn);
  return cljs_demo.core.render.call(null, cljs.core.deref.call(null, cljs_demo.core.state_atom));
};
cljs_demo.core.undo_BANG_ = function undo_BANG_() {
  var temp__4124__auto__ = cljs.core.first.call(null, cljs.core.deref.call(null, cljs_demo.core.history));
  if (cljs.core.truth_(temp__4124__auto__)) {
    var prev_state = temp__4124__auto__;
    cljs.core.swap_BANG_.call(null, cljs_demo.core.history, function(prev_state, temp__4124__auto__) {
      return function(old_hist) {
        return cljs.core.rest.call(null, old_hist);
      };
    }(prev_state, temp__4124__auto__));
    cljs.core.swap_BANG_.call(null, cljs_demo.core.state_atom, function(prev_state, temp__4124__auto__) {
      return function(_) {
        return prev_state;
      };
    }(prev_state, temp__4124__auto__));
    return cljs_demo.core.render.call(null, cljs.core.deref.call(null, cljs_demo.core.state_atom));
  } else {
    return window.alert("No history to undo");
  }
};
cljs_demo.core.read_state = function read_state(js_state) {
  return cljs_demo.core.transact_BANG_.call(null, function(_) {
    return cljs.core.js__GT_clj.call(null, js_state, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252), true);
  });
};
cljs_demo.core.snapshot = function snapshot() {
  var js_state = cljs.core.clj__GT_js.call(null, cljs.core.deref.call(null, cljs_demo.core.state_atom));
  var state_str = JSON.stringify(js_state);
  return window.localStorage["snapshot"] = state_str;
};
cljs_demo.core.restore_snapshot = function restore_snapshot() {
  var temp__4126__auto__ = window.localStorage["snapshot"];
  if (cljs.core.truth_(temp__4126__auto__)) {
    var snapshot_str = temp__4126__auto__;
    var snapshot = JSON.parse(snapshot_str);
    return cljs_demo.core.transact_BANG_.call(null, function(snapshot, snapshot_str, temp__4126__auto__) {
      return function(_) {
        return cljs.core.js__GT_clj.call(null, snapshot, new cljs.core.Keyword(null, "keywordize-keys", "keywordize-keys", 1310784252), true);
      };
    }(snapshot, snapshot_str, temp__4126__auto__));
  } else {
    return null;
  }
};
cljs_demo.core.clear_snapshot = function clear_snapshot() {
  return window.localStorage.removeItem("snapshot");
};
cljs_demo.core.isX = function isX(x, status) {
  return cljs.core._EQ_.call(null, x, status);
};
cljs_demo.core.isNew = cljs.core.partial.call(null, cljs_demo.core.isX, "New");
cljs_demo.core.isSent = cljs.core.partial.call(null, cljs_demo.core.isX, "Sent");
cljs_demo.core.isClosed = cljs.core.partial.call(null, cljs_demo.core.isX, "Closed");
cljs_demo.core.get_status_summary = function get_status_summary(quotes) {
  return new cljs.core.PersistentArrayMap(null, 3, [new cljs.core.Keyword(null, "newCount", "newCount", 253903917), cljs.core.count.call(null, cljs.core.filter.call(null, function(p1__10162_SHARP_) {
    return cljs_demo.core.isNew.call(null, (new cljs.core.Keyword(null, "status", "status", -1997798413)).cljs$core$IFn$_invoke$arity$1(p1__10162_SHARP_));
  }, quotes)), new cljs.core.Keyword(null, "sentCount", "sentCount", 447976836), cljs.core.count.call(null, cljs.core.filter.call(null, function(p1__10163_SHARP_) {
    return cljs_demo.core.isSent.call(null, (new cljs.core.Keyword(null, "status", "status", -1997798413)).cljs$core$IFn$_invoke$arity$1(p1__10163_SHARP_));
  }, quotes)), new cljs.core.Keyword(null, "closedCount", "closedCount", -887787208), cljs.core.count.call(null, cljs.core.filter.call(null, function(p1__10164_SHARP_) {
    return cljs_demo.core.isClosed.call(null, (new cljs.core.Keyword(null, "status", "status", -1997798413)).cljs$core$IFn$_invoke$arity$1(p1__10164_SHARP_));
  }, quotes))], null);
};
cljs_demo.core.nextStatus = function nextStatus(status) {
  var pred__10168 = cljs.core._EQ_;
  var expr__10169 = status;
  if (cljs.core.truth_(pred__10168.call(null, "New", expr__10169))) {
    return "Sent";
  } else {
    if (cljs.core.truth_(pred__10168.call(null, "Sent", expr__10169))) {
      return "Closed";
    } else {
      return "";
    }
  }
};
cljs_demo.core.nextAction = function nextAction(status) {
  var pred__10174 = cljs.core._EQ_;
  var expr__10175 = status;
  if (cljs.core.truth_(pred__10174.call(null, "New", expr__10175))) {
    return "Send";
  } else {
    if (cljs.core.truth_(pred__10174.call(null, "Sent", expr__10175))) {
      return "Close";
    } else {
      return "";
    }
  }
};
cljs_demo.core.link_button_style = new cljs.core.PersistentArrayMap(null, 5, [new cljs.core.Keyword(null, "color", "color", 1011675173), "rgb(45, 107, 158)", new cljs.core.Keyword(null, "float", "float", -1732389368), "right", new cljs.core.Keyword(null, "cursor", "cursor", 1011937484), "pointer", new cljs.core.Keyword(null, "border", "border", 1444987323), "none", new cljs.core.Keyword(null, "background", "background", -863952629), "none"], null);
cljs_demo.core.linkButton = function() {
  var linkButton = null;
  var linkButton__1 = function(elem) {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "button", "button", 1456579943), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "style", "style", -496642736), cljs_demo.core.link_button_style], null), elem], null);
  };
  var linkButton__2 = function(elem, onclick) {
    return new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "button", "button", 1456579943), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "style", "style", -496642736), cljs_demo.core.link_button_style, new cljs.core.Keyword(null, "on-click", "on-click", 1632826543), onclick], null), elem], null);
  };
  linkButton = function(elem, onclick) {
    switch(arguments.length) {
      case 1:
        return linkButton__1.call(this, elem);
      case 2:
        return linkButton__2.call(this, elem, onclick);
    }
    throw new Error("Invalid arity: " + arguments.length);
  };
  linkButton.cljs$core$IFn$_invoke$arity$1 = linkButton__1;
  linkButton.cljs$core$IFn$_invoke$arity$2 = linkButton__2;
  return linkButton;
}();
cljs_demo.core.quote = function quote(quote__$1) {
  return new cljs.core.PersistentVector(null, 5, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "li", "li", 723558921), (new cljs.core.Keyword(null, "name", "name", 1843675177)).cljs$core$IFn$_invoke$arity$1(quote__$1), " \u2014 ", new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "small", "small", 2133478704), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "id", "id", -1388402092), (new cljs.core.Keyword(null, 
  "id", "id", -1388402092)).cljs$core$IFn$_invoke$arity$1(quote__$1)], null), (new cljs.core.Keyword(null, "status", "status", -1997798413)).cljs$core$IFn$_invoke$arity$1(quote__$1)], null), cljs_demo.core.linkButton.call(null, new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "span", "span", 1394872991), cljs_demo.core.nextAction.call(null, (new cljs.core.Keyword(null, "status", "status", -1997798413)).cljs$core$IFn$_invoke$arity$1(quote__$1))], 
  null), function(_) {
    return cljs_demo.core.transact_BANG_.call(null, function(state) {
      return cljs.core.assoc.call(null, state, new cljs.core.Keyword(null, "quotes", "quotes", -844987790), cljs.core.replace.call(null, new cljs.core.PersistentArrayMap.fromArray([quote__$1, cljs.core.assoc.call(null, quote__$1, new cljs.core.Keyword(null, "status", "status", -1997798413), cljs_demo.core.nextStatus.call(null, (new cljs.core.Keyword(null, "status", "status", -1997798413)).cljs$core$IFn$_invoke$arity$1(quote__$1)))], true, false), (new cljs.core.Keyword(null, "quotes", "quotes", -844987790)).cljs$core$IFn$_invoke$arity$1(state)));
    });
  })], null);
};
cljs_demo.core.quote_list = function quote_list(quote_list__$1) {
  if (cljs.core.empty_QMARK_.call(null, quote_list__$1)) {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "h2", "h2", -372662728), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "style", "style", -496642736), new cljs.core.PersistentArrayMap(null, 2, [new cljs.core.Keyword(null, "color", "color", 1011675173), "#c0c0c0", new cljs.core.Keyword(null, 
    "text-align", "text-align", 1786091845), "center"], null)], null), "Nothing is here?"], null)], null);
  } else {
    return new cljs.core.PersistentVector(null, 2, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "ul", "ul", -1349521403), cljs.core.map.call(null, cljs_demo.core.quote, quote_list__$1)], null);
  }
};
cljs_demo.core.close_quote = function close_quote(quote) {
  return cljs.core.assoc.call(null, quote, new cljs.core.Keyword(null, "status", "status", -1997798413), "Closed");
};
cljs_demo.core.close_all_quotes = function close_all_quotes(state) {
  return cljs.core.assoc.call(null, state, new cljs.core.Keyword(null, "quotes", "quotes", -844987790), cljs.core.map.call(null, cljs_demo.core.close_quote, (new cljs.core.Keyword(null, "quotes", "quotes", -844987790)).cljs$core$IFn$_invoke$arity$1(state)));
};
cljs_demo.core.summary = function summary(quotes) {
  var status_summary = cljs_demo.core.get_status_summary.call(null, quotes);
  return new cljs.core.PersistentVector(null, 9, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), new cljs.core.PersistentArrayMap(null, 1, [new cljs.core.Keyword(null, "style", "style", -496642736), new cljs.core.PersistentArrayMap(null, 7, [new cljs.core.Keyword(null, "border", "border", 1444987323), "1px solid #bbb", new cljs.core.Keyword(null, "padding-top", "padding-top", 1929675955), "20px", new cljs.core.Keyword(null, "padding-bottom", "padding-bottom", 
  -1899795591), "20px", new cljs.core.Keyword(null, "padding-left", "padding-left", -1180879053), "12px", new cljs.core.Keyword(null, "padding-right", "padding-right", -1250249681), "12px", new cljs.core.Keyword(null, "fontSize", "fontSize", 919623033), "12px", new cljs.core.Keyword(null, "backgroundColor", "backgroundColor", 1738438491), "#eee"], null)], null), (new cljs.core.Keyword(null, "newCount", "newCount", 253903917)).cljs$core$IFn$_invoke$arity$1(status_summary), " New Quotes, ", (new cljs.core.Keyword(null, 
  "sentCount", "sentCount", 447976836)).cljs$core$IFn$_invoke$arity$1(status_summary), " Sent Quotes, and ", (new cljs.core.Keyword(null, "closedCount", "closedCount", -887787208)).cljs$core$IFn$_invoke$arity$1(status_summary), " Closed Quotes", cljs_demo.core.linkButton.call(null, "Close All", function(status_summary) {
    return function(_) {
      return cljs_demo.core.transact_BANG_.call(null, cljs_demo.core.close_all_quotes);
    };
  }(status_summary))], null);
};
cljs_demo.core.app_view = function app_view(state) {
  return cljs_demo.lib.dom.call(null, new cljs.core.PersistentVector(null, 3, 5, cljs.core.PersistentVector.EMPTY_NODE, [new cljs.core.Keyword(null, "div", "div", 1057191632), cljs_demo.core.summary.call(null, (new cljs.core.Keyword(null, "quotes", "quotes", -844987790)).cljs$core$IFn$_invoke$arity$1(state)), cljs_demo.core.quote_list.call(null, (new cljs.core.Keyword(null, "quotes", "quotes", -844987790)).cljs$core$IFn$_invoke$arity$1(state))], null));
};
cljs_demo.core.render = function render(state) {
  return cljs_demo.lib.replace_dom.call(null, new cljs.core.Keyword(null, "#app-root", "#app-root", 1813789094), cljs_demo.core.app_view.call(null, state));
};
cljs_demo.core.render.call(null, cljs.core.deref.call(null, cljs_demo.core.state_atom));
